# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: Cache
      uses: actions/cache@v4.2.0
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: 
        # An explicit key for restoring and saving the cache
        key: 
        # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
        restore-keys: # optional
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: # optional
        # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
        enableCrossOsArchive: # optional, default is false
        # Fail the workflow if cache entry is not found
        fail-on-cache-miss: # optional, default is false
        # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
        lookup-only: # optional, default is false
        # Run the post step to save the cache even if another step before fails
        save-always: # optional, default is false
    - run: npm test
