{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{resource}"
        ],
        "parameters": [
          {
            "id": "fef6044f-2de2-4697-b1f7-fac1df72c29b",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "5fea96dc-607c-450d-bc2e-ecb0756dc169",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 8
          },
          {
            "id": "9b289ad1-7eaa-411d-b2b0-43c69cf5aa14",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "value": {
              "durationMs": 43200000
            },
            "label": "Time Range"
          },
          {
            "id": "9d866cc4-c583-4876-8213-6193548cbca1",
            "version": "KqlParameterItem/1.0",
            "name": "HostName",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let T = (Syslog | distinct HostName );\r\nlet T_has_records = toscalar(Syslog | summarize count() > 0);\r\nunion \r\n(T | where T_has_records == true), (datatable(HostName:string)['HostName'] | where T_has_records == false)\r\n| distinct HostName",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}",
            "label": "Node"
          },
          {
            "id": "1119cb83-4bd5-4b22-a20e-f54383f0e240",
            "version": "KqlParameterItem/1.0",
            "name": "Facility",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "timeContextFromParameter": "timeRange",
            "quote": "'",
            "delimiter": ",",
            "query": "let T = (Syslog | distinct Facility );\r\nlet T_has_records = toscalar(Syslog | summarize count() > 0);\r\nunion \r\n(T | where T_has_records == true), (datatable(Facility:string)['Facility'] | where T_has_records == false)\r\n| distinct Facility",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "e73d71c1-435b-4916-a2c8-25dabbdefa45",
            "version": "KqlParameterItem/1.0",
            "name": "SeverityLevel",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "timeContextFromParameter": "timeRange",
            "quote": "'",
            "delimiter": ",",
            "query": "let T = (Syslog | distinct SeverityLevel );\r\nlet T_has_records = toscalar(Syslog | summarize count() > 0);\r\nunion \r\n(T | where T_has_records == true), (datatable(SeverityLevel:string)['SeverityLevel'] | where T_has_records == false)\r\n| distinct SeverityLevel",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "name": "Parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "# Syslog\r\n\r\n\r\n\r\n"
      },
      "name": "Title text"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in ({HostName}) or '*' in ({HostName})\r\n| where Facility in ({Facility}) or '*' in ({Facility})\r\n| where SeverityLevel in ({SeverityLevel}) or '*' in ({SeverityLevel})\r\n| summarize count(SeverityLevel) by SeverityLevel \r\n| extend jkey = 1\r\n| join (Syslog\r\n| where HostName in ({HostName}) or '*' in ({HostName})\r\n| where Facility in ({Facility}) or '*' in ({Facility})\r\n| where SeverityLevel in ({SeverityLevel}) or '*' in ({SeverityLevel})\r\n  | make-series Trend = count(SeverityLevel) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by SeverityLevel) on SeverityLevel",
        "size": 4,
        "title": "Summary by Severity Level",
        "noDataMessage": "No results returned - Enable Syslog or extend time-range",
        "noDataMessageStyle": 5,
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "SeverityLevel",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "debug",
                  "representation": "uninitialized",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "notice",
                  "representation": "Normal",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "info",
                  "representation": "1",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "warning",
                  "representation": "warning",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "error",
                  "representation": "4",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "alert",
                  "representation": "2",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "emergency",
                  "representation": "4",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "critical",
                  "representation": "critical",
                  "text": "{0}{1}"
                },
                {
                  "operator": "Default",
                  "thresholdValue": "",
                  "representation": "info",
                  "text": "{0}{1}"
                }
              ]
            }
          },
          "leftContent": {
            "columnMatch": "count_SeverityLevel",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 21,
            "formatOptions": {
              "min": 0,
              "max": 5000,
              "palette": "green"
            }
          },
          "showBorder": false,
          "sortCriteriaField": "count_SeverityLevel",
          "sortOrderField": 2
        }
      },
      "name": "Syslog Facility tiles"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| project-rename Node = HostName\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| summarize SyslogCount=count(SeverityLevel) by Facility, Node\r\n| extend jkey = 1\r\n| join (Syslog\r\n        | where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n        | project-rename Node = HostName\r\n        | where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n        | where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n        | make-series SyslogTimeLine = count(SeverityLevel) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Facility) on Facility\r\n| project-away jkey, Facility1, TimeGenerated\r\n",
        "size": 0,
        "title": "Message counts by node and facility",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "Facility",
              "formatter": 5
            },
            {
              "columnMatch": "Node",
              "formatter": 5
            },
            {
              "columnMatch": "SyslogCount",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "SyslogTimeLine",
              "formatter": 21,
              "formatOptions": {
                "min": 0,
                "max": 1000,
                "palette": "green"
              }
            },
            {
              "columnMatch": "EventTimeLine",
              "formatter": 21,
              "formatOptions": {
                "min": 0,
                "max": 500,
                "palette": "green"
              }
            }
          ],
          "rowLimit": 50,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Node"
            ],
            "expandTopLevel": true,
            "finalBy": "Facility"
          }
        }
      },
      "customWidth": "65",
      "name": "Syslog message counts by node and facility"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| summarize count() by SyslogMessage\r\n",
        "size": 0,
        "title": "Message count by Error message",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "35",
      "name": "Syslog messages of events"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| summarize count() by Facility, ProcessName\r\n| project Process = strcat(ProcessName, ' (', Facility, ')'), Count = count_ ",
        "size": 0,
        "title": "Message count by Process name",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "33",
      "name": "Process names of events"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| summarize count() by Facility, SeverityLevel",
        "size": 0,
        "title": "Message count by facility name",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "33",
      "name": "Event distribution, by facility"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| summarize count() by Facility, SeverityLevel\r\n| project Process = strcat(SeverityLevel, ' (', Facility, ')'), Count = count_  ",
        "size": 0,
        "title": "Message count by Facility (SeverityLevel)",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "visualization": "categoricalbar"
      },
      "customWidth": "33",
      "name": "Severity levels by facility"
    },
    {
      "type": 1,
      "content": {
        "json": "## Raw syslog records\r\n\r\nNote: Raw records are not filtered by workbook parameters\r\n\r\nTable below only shows the 500 most recent records. Access complete data from the Syslog table in Log Analytics.  See sample access steps and sample queries here: https://aka.ms/CISyslog#how-to-access-syslog-data"
      },
      "name": "Raw recrods - Section header "
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Syslog\r\n| where HostName in~ ({HostName}) or '*' in~ ({HostName})\r\n| where Facility in~ ({Facility}) or '*' in~ ({Facility})\r\n| where SeverityLevel in~ ({SeverityLevel}) or '*' in~ ({SeverityLevel})\r\n| extend Pack=pack_all()\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago') \r\n| project-rename Node = HostName\r\n| project [\"Time\"]=strcat('🕒', TimeAgo), Node, SeverityLevel, Facility, SyslogMessage, ProcessName, [\"Details\"]=Pack\r\n",
        "size": 2,
        "showAnalytics": true,
        "title": "Raw syslog records",
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "{resourceType}",
        "crossComponentResources": [
          "{resource}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "SeverityLevel",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "debug",
                    "representation": "question",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "emergency",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "critical",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "error",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "warning",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "notice",
                    "representation": "Normal",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "info",
                    "representation": "info",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "alert",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "info",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "🔍 View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 500,
          "filter": true
        }
      },
      "name": "Raw Syslog Records"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
