{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7aa94d19-4c5b-40e2-b14f-e29736a8f90c",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1"
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "resourceParameter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{resource}/providers/Microsoft.Insights/dataCollectionRuleAssociations?api-version=2021-04-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.dataCollectionRuleId\",\"columnid\":\"Id\",\"columnType\":\"string\"}]}}]}",
        "size": 0,
        "queryType": 12
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "dcrAssociations"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n    | where type == \"microsoft.insights/datacollectionrules\"\r\n    | extend extensions = properties.dataSources.extensions\r\n    | extend flows = properties.dataFlows\r\n    | mv-expand extensions\r\n    | where extensions.name contains \"ContainerInsightsExtension\"\r\n    | extend extensionStreams = extensions.streams\r\n    | where extensionStreams !contains \"Microsoft-ContainerInsights-Group-Default\" and extensionStreams !contains \"Microsoft-InsightsMetrics\"\r\n    | project id",
        "size": 0,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "dcrsFromARG"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7f395a97-9643-4cb4-8825-7277b7441cc6",
            "version": "KqlParameterItem/1.0",
            "name": "parsedDCRInfo",
            "type": 1,
            "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\",\"mergeType\":\"innerunique\",\"leftTable\":\"dcrAssociations\",\"rightTable\":\"dcrsFromARG\",\"leftColumn\":\"Id\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[dcrAssociations].Id\",\"mergedName\":\"Id\",\"fromId\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\"},{\"originalName\":\"[dcrsFromARG].id\",\"mergedName\":\"id\",\"fromId\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\"}]}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 7
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "parsedDCRInfo"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Insights data is not available with custom data collection. To view this workbook, set \"Collected data\" to “All” in Monitoring Settings or use Log Analytics to query logs.",
              "style": "info"
            },
            "name": "Cost Settings Banner"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "9e26bb9c-0a13-4754-9e40-daa7d0c4f86e",
                  "cellValue": "OpenBlade",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "Configure Monitoring Settings",
                  "style": "primary",
                  "linkIsContextBlade": true,
                  "bladeOpenContext": {
                    "bladeName": "OnboardMonitorInsights.ReactView",
                    "extensionName": "Microsoft_Azure_ContainerInsightsExt",
                    "bladeParameters": [
                      {
                        "name": "clusterResourceId",
                        "source": "parameter",
                        "value": "resource"
                      },
                      {
                        "name": "initiator",
                        "source": "static",
                        "value": "Workbooks:NodeKubelet"
                      }
                    ]
                  }
                }
              ]
            },
            "name": "Configure Monitoring Settings"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "parsedDCRInfo",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "name": "Custom Cost Settings",
      "styleSettings": {
        "padding": "20"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{resource}"
              ],
              "parameters": [
                {
                  "id": "6548df2b-011e-4652-8f50-a53d9a07cd02",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "description": "Filter data by time range",
                  "isRequired": true,
                  "value": {
                    "durationMs": 21600000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "f0b13110-7cd2-465c-af9f-b78035329eea",
                  "version": "KqlParameterItem/1.0",
                  "name": "resource",
                  "type": 5,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1"
                },
                {
                  "id": "7c51b213-be0f-459e-86a9-138f72629bbc",
                  "version": "KqlParameterItem/1.0",
                  "name": "resourceType",
                  "type": 7,
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourceType}\\\"\",\"transformers\":null}",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1",
                  "queryType": 8
                },
                {
                  "id": "ec037105-58cc-4386-81c8-e5c5f26a7358",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterId",
                  "type": 1,
                  "isHiddenWhenLocked": true
                },
                {
                  "id": "c780f08f-ebb6-4fbb-ad6e-ba21cf9b288e",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterIdWhereClause",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "resourceType",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.operationalinsights/workspaces",
                        "resultValType": "static",
                        "resultVal": "| where ClusterID =~ '{clusterId}'"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where 'a' == 'a'"
                      }
                    }
                  ]
                },
                {
                  "id": "634f054b-c813-467d-af61-2e00eeadf88d",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedNodes1",
                  "label": "Node",
                  "type": 2,
                  "description": "Filter by node",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| sort by HostName asc\r\n\r\n",
                  "crossComponentResources": [
                    "{resource}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 21600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "{resourceType}"
                },
                {
                  "id": "3dd04449-6ef7-45a9-bfb6-8e994907efcb",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedOperationTypes1",
                  "label": "Operation Type",
                  "type": 2,
                  "description": "Filter by operation type",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type'])\r\n| distinct OperationType\r\n| order by OperationType asc\r\n\r\n\r\n",
                  "crossComponentResources": [
                    "{resource}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 21600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "{resourceType}"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "{resourceType}"
            },
            "name": "dropdowns"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "487f875d-328e-458c-9a3f-380664f3e022",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "34403df0-8c0a-4043-b19d-fb9cff8ea722",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Operations",
                  "subTarget": "Operations",
                  "style": "link"
                },
                {
                  "id": "29b8616e-37d9-4f88-8d90-7f19bf80aa80",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Performance",
                  "subTarget": "Performance",
                  "style": "link"
                }
              ]
            },
            "name": "Tabs"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "_Select a tile below to switch between detailed views_"
                  },
                  "name": "tool tip"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\ndata | union TrendData\r\n| serialize \r\n| extend Total1 = case(isnotnull(Total),Total,prev(Total))\r\n| extend Series1 = case(isnotnull(Series),Series, prev(Series))\r\n| where isnotnull(Total1) == true\r\n| where isnotnull(Series1) == true\r\n| project Total1,Series1, Title = \"kubelet_running_pod_count\", Tag = \"metrics\"",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Running Pods",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Title",
                        "parameterName": "View",
                        "parameterType": 1,
                        "defaultValue": "kubelet_running_pod_count"
                      },
                      {
                        "fieldName": "Tag",
                        "parameterName": "Tag",
                        "parameterType": 1,
                        "defaultValue": "metrics"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total1",
                        "formatter": 12
                      },
                      "secondaryContent": {
                        "columnMatch": "Series1",
                        "formatter": 9,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Running Pods Tile"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet Desireddata = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"desired_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Desired = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\nlet jdata1 = data | union Desireddata\r\n| serialize\r\n| extend Total1= case(isnotnull(Total),Total, prev(Total)) \r\n| extend Desired1= case(isnotnull(Desired),Desired, prev(Desired))\r\n| extend Thresh = case(Desired1 == Total1, true, false)\r\n| where isnotnull(Desired1) and isnotnull(Total1)\r\n| project Total1, Desired1, Thresh;\r\njdata1 | union TrendData\r\n| serialize \r\n| extend Total = case(isnotnull(Total1), Total1, prev(Total1))\r\n| extend Desired = case(isnotnull(Desired1), Desired1, prev(Desired1))\r\n| extend Thresh1 = case(isnotnull(Thresh), Thresh, prev(Thresh))\r\n| extend Series1 = case(isnotnull(Series), Series, prev(Series))\r\n| where isnotnull(Total) and isnotnull(Desired) and isnotnull(Thresh1) and isnotnull(Series1)\r\n| project Total, Thresh1, Series1,Title = \"volume_manager_total_volumes\", Tag = \"actual_state__of_world\"",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Storage Volume (Actual)",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Title",
                        "parameterName": "View",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Tag",
                        "parameterName": "Tag",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Thresh1",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "contains",
                              "thresholdValue": "false",
                              "representation": "2",
                              "text": ""
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Series1",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Storage Volume Tile"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\ndata | union TrendData\r\n| serialize \r\n| extend Total1 = case(isnotnull(Total),Total,prev(Total))\r\n| extend Series1 = case(isnotnull(Series),Series, prev(Series))\r\n| where isnotnull(Total1) == true\r\n| where isnotnull(Series1) == true\r\n| project Total1,Series1, Title = \"kubelet_node_config_error\", Tag = \"metric\"",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Config Errors",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Title",
                        "parameterName": "View",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Tag",
                        "parameterName": "Tag",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Total1",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "success",
                              "text": ""
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "2",
                              "text": ""
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total1",
                        "formatter": 12
                      },
                      "secondaryContent": {
                        "columnMatch": "Series1",
                        "formatter": 9,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Config Errors Tile"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata | join kind = inner (TrendData) on Computer\r\n| project Computer, Val, Trend",
                    "size": 0,
                    "title": "Detailed View (Running Pods)",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Computer"
                        },
                        {
                          "columnId": "Val",
                          "label": "Running Pods"
                        },
                        {
                          "columnId": "Trend",
                          "label": "Pods over Time"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "View",
                    "comparison": "isEqualTo",
                    "value": "kubelet_running_pod_count"
                  },
                  "name": "Running Pods Grid"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| project ['Actual'] = Val, Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\nlet DesiredData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| project ['Desired'] = Val, Computer;\r\nlet DesiredTrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series DesiredTrend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata \r\n| join kind = inner (TrendData) on Computer\r\n| join kind = inner (DesiredData) on Computer\r\n| join kind = inner (DesiredTrendData) on Computer\r\n| extend Thresh = case(Actual == Desired, true, false) \r\n| project Computer, Thresh, Actual, Trend, Desired, DesiredTrend",
                    "size": 0,
                    "title": "Detailed View (Storage Volume)",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Thresh",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "2",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "DesiredTrend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Computer"
                        },
                        {
                          "columnId": "Thresh",
                          "label": "Status"
                        },
                        {
                          "columnId": "Actual"
                        },
                        {
                          "columnId": "Trend",
                          "label": "Actual Volume over Time"
                        },
                        {
                          "columnId": "Desired"
                        },
                        {
                          "columnId": "DesiredTrend",
                          "label": "Desired Volume over Time"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "View",
                    "comparison": "isEqualTo",
                    "value": "volume_manager_total_volumes"
                  },
                  "name": "Storage Volume Grid"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata | join kind = inner (TrendData) on Computer\r\n| project Computer, Val, Trend",
                    "size": 0,
                    "title": "Detailed View (Config Errors)",
                    "timeContext": {
                      "durationMs": 21600000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Val",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Computer"
                        },
                        {
                          "columnId": "Val",
                          "label": "Config Errors"
                        },
                        {
                          "columnId": "Trend",
                          "label": "Errors over Time"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "View",
                    "comparison": "isEqualTo",
                    "value": "kubelet_node_config_error"
                  },
                  "name": "Config Errors Grid"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "Overview Tab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<h3>Overview By Node</h3>"
                  },
                  "customWidth": "50",
                  "name": "text - 7"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h3>Overview By Operation Type</h3>"
                  },
                  "customWidth": "50",
                  "name": "text - 7 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| where Name in ('kubelet_runtime_operations_total', 'kubelet_runtime_operations_errors_total')\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type']), HostName = tostring(Tags.hostName)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedOperationTypes1}) or OperationType in ({selectedOperationTypes1})\r\n| extend partitionKey = strcat(HostName, '/' , Name, '/', OperationType)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, Name, HostName, Rate;\r\nlet operationData = data\r\n| where Name in ('kubelet_runtime_operations_total');\r\nlet totalOperationsByNode = operationData\r\n| summarize Rate = sum(Rate) by HostName\r\n| project HostName, TotalOperations = Rate;\r\nlet totalOperationsByNodeSeries = operationData\r\n| make-series TotalOperationsSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by HostName\r\n| project-away TimeGenerated;\r\nlet errorData = data\r\n| where Name in ('kubelet_runtime_operations_errors_total');\r\nlet totalErrorsByNode = errorData\r\n| summarize Rate = sum(Rate) by HostName\r\n| project HostName, TotalErrors = Rate;\r\nlet totalErrorsByNodeSeries = errorData\r\n| make-series TotalErrorsSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by HostName\r\n| project-away TimeGenerated;\r\ntotalOperationsByNode\r\n| join kind = leftouter (\r\n    totalErrorsByNode\r\n) on HostName\r\n| join kind = leftouter (\r\n    totalOperationsByNodeSeries\r\n) on HostName\r\n| join kind = leftouter (\r\n    totalErrorsByNodeSeries\r\n) on HostName\r\n| extend TotalErrors = iif(isempty(TotalErrors), 0.0, TotalErrors)\r\n| extend SeriesOfEqualLength = range(1, array_length(TotalOperationsSeries), 1)\r\n| extend SeriesOfZeroes = series_multiply(SeriesOfEqualLength, 0)\r\n| extend TotalErrorsSeries = iif(isempty(TotalErrorsSeries), SeriesOfZeroes, TotalErrorsSeries)\r\n| project-away HostName1, HostName2, HostName3\r\n| extend TotalSuccessfulOperationsSeries = series_subtract(TotalOperationsSeries, TotalErrorsSeries)\r\n| extend IsNegativeTotalSuccessfulOperationsSeries = series_less(TotalSuccessfulOperationsSeries, SeriesOfZeroes)\r\n| extend TotalSuccessfulOperationsSeries = array_iif(IsNegativeTotalSuccessfulOperationsSeries, SeriesOfZeroes, TotalSuccessfulOperationsSeries)\r\n| extend SuccessPercentage = round(iif(TotalOperations == 0, 1.0, iif(TotalErrors > TotalOperations, 0.0, 1 - (TotalErrors / TotalOperations))), 4), SuccessPercentageSeries = series_divide(TotalSuccessfulOperationsSeries, TotalOperationsSeries)\r\n| extend SeriesOfOneHundo = series_multiply(series_divide(SeriesOfEqualLength, SeriesOfEqualLength), 100)\r\n| extend SuccessfulOperationsEqualsTotalOperationsSeries = series_equals(TotalSuccessfulOperationsSeries, TotalOperationsSeries)\r\n| extend SuccessPercentageSeries = array_iff(SuccessfulOperationsEqualsTotalOperationsSeries, SeriesOfOneHundo, SuccessPercentageSeries)\r\n| project HostName, TotalOperations, TotalErrors, SuccessPercentage, SuccessPercentageSeries\r\n| order by SuccessPercentage asc, HostName asc\r\n| project-rename Node = HostName, ['Total Operations'] = TotalOperations, ['Total Errors'] = TotalErrors, ['Success %'] = SuccessPercentage, ['Success % Trend'] = SuccessPercentageSeries",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Success %",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "redGreen",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "percent",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Success % Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "redGreen",
                            "showIcon": true
                          }
                        }
                      ],
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "overview-by-node-grid"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| where Name in ('kubelet_runtime_operations_total', 'kubelet_runtime_operations_errors_total')\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type']), HostName = tostring(Tags.hostName)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedOperationTypes1}) or OperationType in ({selectedOperationTypes1})\r\n| extend partitionKey = strcat(HostName, '/' , Name, '/', OperationType)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, Name, OperationType, Rate;\r\nlet operationData = data\r\n| where Name in ('kubelet_runtime_operations_total');\r\nlet totalOperationsByType = operationData\r\n| summarize Rate = sum(Rate) by OperationType\r\n| project OperationType, TotalOperations = Rate;\r\nlet totalOperationsByTypeSeries = operationData\r\n| make-series TotalOperationsByTypeSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by OperationType\r\n| project-away TimeGenerated;\r\nlet errorsData = data\r\n| where Name in ('kubelet_runtime_operations_errors_total');\r\nlet totalErrorsByType = errorsData\r\n| summarize Rate = sum(Rate) by OperationType\r\n| project OperationType, TotalErrors = Rate;\r\nlet totalErrorsByTypeSeries = errorsData\r\n| make-series TotalErrorsByTypeSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by OperationType\r\n| project-away TimeGenerated;\r\nlet seriesLength = toscalar(   totalOperationsByTypeSeries\r\n| extend ArrayLength = array_length(TotalOperationsByTypeSeries)\r\n| summarize Array_Length = max(ArrayLength)  );\r\ntotalOperationsByType\r\n| join kind = leftouter (\r\n    totalErrorsByType\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend TotalErrors = iif(isempty(TotalErrors), 0.0, TotalErrors)\r\n| join kind = leftouter (\r\n    totalErrorsByTypeSeries\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend SeriesOfEqualLength = range(1, seriesLength, 1)\r\n| extend SeriesOfZeroes = series_subtract(SeriesOfEqualLength, SeriesOfEqualLength)\r\n| extend SeriesOfOneHundo = series_multiply(series_divide(SeriesOfEqualLength, SeriesOfEqualLength), 100)\r\n| extend TotalErrorsByTypeSeries = iif(isempty(TotalErrorsByTypeSeries), SeriesOfZeroes, TotalErrorsByTypeSeries)\r\n| join kind=leftouter (\r\n    totalOperationsByTypeSeries\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend TotalSuccessfulOperationsByTypeSeries = series_subtract(TotalOperationsByTypeSeries, TotalErrorsByTypeSeries)\r\n| extend IsNegativeTotalSuccessfulOperationsByTypeSeries = series_less(TotalSuccessfulOperationsByTypeSeries, SeriesOfZeroes)\r\n| extend TotalSuccessfulOperationsByTypeSeries = array_iif(IsNegativeTotalSuccessfulOperationsByTypeSeries, SeriesOfZeroes, TotalSuccessfulOperationsByTypeSeries) \r\n| extend SuccessPercentage = round(iif(TotalOperations == 0, 1.0, iif(TotalErrors > TotalOperations, 0.0, 1 - (TotalErrors / TotalOperations))), 4), SuccessPercentageSeries = series_divide(TotalSuccessfulOperationsByTypeSeries, TotalOperationsByTypeSeries)\r\n| extend SuccessfulOperationsEqualsTotalOperationsSeries = series_equals(TotalSuccessfulOperationsByTypeSeries, TotalOperationsByTypeSeries)\r\n| extend SuccessPercentageSeries = array_iff(SuccessfulOperationsEqualsTotalOperationsSeries, SeriesOfOneHundo, SuccessPercentageSeries)\r\n| project OperationType, TotalOperations, TotalErrors, SuccessPercentage, SuccessPercentageSeries\r\n| order by SuccessPercentage asc, OperationType asc\r\n| project-rename ['Operation Type'] = OperationType, ['Total Operations'] = TotalOperations, ['Total Errors'] = TotalErrors, ['Success %'] = SuccessPercentage, ['Success % Trend'] = SuccessPercentageSeries",
                    "size": 0,
                    "showAnalytics": true,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Success %",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "redGreen",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "percent",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Success % Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "redGreen",
                            "showIcon": true
                          }
                        }
                      ],
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "overview-by-operation-type-grid"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Operations"
            },
            "name": "Operations Tab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\r\n| where Name == \"process_cpu_seconds_total\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(null))\r\n| where isnull(Value) == false\r\n//| make-series Trend = avg(Val*0.001) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer\r\n| extend QueryRate = Value / (({timeRange:end} - {timeRange:start}) / 1s)\r\n| make-series avg(QueryRate) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "CPU (in seconds)",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 31,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 1
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "CPU Chart"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\r\n| where Name == \"process_resident_memory_bytes\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val*0.000001) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "Memory (in MB)",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Memory Chart"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Performance"
            },
            "name": "Performance Tab"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "parsedDCRInfo",
        "comparison": "isEqualTo",
        "value": ""
      },
      "name": "Workbook Content"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
