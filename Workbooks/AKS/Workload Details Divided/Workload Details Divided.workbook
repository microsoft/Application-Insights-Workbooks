{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e2b5cd30-7276-477f-a6bb-07da25ba5e5f",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Filter data by time range",
            "isRequired": true,
            "value": {
              "durationMs": 21600000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "7aa94d19-4c5b-40e2-b14f-e29736a8f90c",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1"
          },
          {
            "id": "3a3fdabe-6173-4e2b-8658-38c0195fd7e2",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 8
          },
          {
            "id": "9767de49-ba31-4847-9ffc-714c02e7523c",
            "version": "KqlParameterItem/1.0",
            "name": "clusterId",
            "type": 1,
            "description": "Filter workspace by cluster id",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "cba109cf-db6e-4261-8d3a-fe038593622d",
            "version": "KqlParameterItem/1.0",
            "name": "clusterIdWhereClause",
            "type": 1,
            "description": "Add to queries to filter by cluster id",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "resourceType",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "microsoft.operationalinsights/workspaces",
                  "resultValType": "static",
                  "resultVal": "| where ClusterId =~ '{clusterId}'"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "ee080bd8-83dc-4fa0-b688-b2f16b956b92",
            "version": "KqlParameterItem/1.0",
            "name": "workloadType",
            "label": "Workload Type",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct ControllerKind\r\n| where isempty(ControllerKind) == false\r\n| order by ControllerKind asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "cf611d4b-aa93-4949-a7a1-c1d174af29ca",
            "version": "KqlParameterItem/1.0",
            "name": "workloadKindWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (workloadType is not empty ), result = '| where ControllerKind in ({workloadType})'",
                "criteriaContext": {
                  "leftOperand": "workloadType",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where ControllerKind in ({workloadType})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "034caae5-bee3-4b66-8f80-c120a2a25c77",
            "version": "KqlParameterItem/1.0",
            "name": "namespace",
            "label": "Namespace",
            "type": 2,
            "description": "Filter the workbook by namespace",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct Namespace\r\n| where isnotempty(Namespace)\r\n| order by Namespace asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "faeee248-e4c3-4fae-b435-ef5fb6dabe3b",
            "version": "KqlParameterItem/1.0",
            "name": "namespaceWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (namespace is not empty ), result = '| where Namespace in ({namespace})'",
                "criteriaContext": {
                  "leftOperand": "namespace",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where Namespace in ({namespace})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "8943e259-1dde-44cd-a00b-e815eea9de34",
            "version": "KqlParameterItem/1.0",
            "name": "workloadName",
            "label": "Workload Name",
            "type": 2,
            "description": "Filter the data for a particular workload",
            "isRequired": true,
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{namespaceWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct ControllerName\r\n| where isnotempty(ControllerName)\r\n| order by ControllerName asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "00a9be6c-ab0b-400b-b195-9775a47ecddd",
            "version": "KqlParameterItem/1.0",
            "name": "podStatus",
            "label": "Pod Status",
            "type": 2,
            "description": "Filter by Pod status like Pending/Running/Failed etc.",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| distinct PodStatus\r\n| where isnotempty(PodStatus)\r\n| order by PodStatus asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "388ea6aa-12d8-485a-8e80-b4d7b8994bd8",
            "version": "KqlParameterItem/1.0",
            "name": "podStatusWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "podStatus",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where PodStatus in ({podStatus})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 2592000000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "64de23e6-96b5-4105-b65d-36e40f73f4ec",
            "version": "KqlParameterItem/1.0",
            "name": "podName",
            "label": "Pod Name",
            "type": 2,
            "description": "Filter by pod name ",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName:value}'\r\n{podStatusWhereClause}\r\n| summarize arg_max(TimeGenerated, PodStatus) by Name\r\n| project Name\r\n| where isempty(Name) == false\r\n| order by Name asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "4f7059c2-ebd7-4fc2-86c4-c51e66703582",
            "version": "KqlParameterItem/1.0",
            "name": "podNameWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (podName is not empty ), result = '| where PodName in ({podName})'",
                "criteriaContext": {
                  "leftOperand": "podName",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where PodName in ({podName})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "e60298ff-36da-485e-acea-73c0692b8446",
            "version": "KqlParameterItem/1.0",
            "name": "workloadNamespaceText",
            "type": 1,
            "description": "For displaying name space of the selected workload",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| summarize Namespaces=make_set(Namespace)\r\n| extend Namespaces = strcat_array(Namespaces, ', ')",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "9f8d0d65-d7bc-42c9-bc5c-b394288b5216",
            "version": "KqlParameterItem/1.0",
            "name": "workloadTypeText",
            "type": 1,
            "description": "For displaying workload type of the selected workload",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| summarize ControllerKinds=make_set(ControllerKind)\r\n| extend ControllerKinds = strcat_array(ControllerKinds, ', ')",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "name": "pills"
    },
    {
      "type": 1,
      "content": {
        "json": "Workload: {workloadName} "
      },
      "conditionalVisibility": {
        "parameterName": "workloadName",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "workload-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Workload Type: {workloadTypeText} "
      },
      "conditionalVisibility": {
        "parameterName": "workloadTypeText",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "workload-type-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Namespace: {workloadNamespaceText}"
      },
      "conditionalVisibility": {
        "parameterName": "workloadNamespaceText",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "namespace-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "d1c4f545-a8ab-4677-bb83-f44f2e4277d7",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "29da903c-be66-4e13-90e8-8b5f6abcd2d1",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Pod/Container Status",
            "subTarget": "Status",
            "style": "link"
          },
          {
            "id": "4dd8babb-5d13-49da-b57a-abfd6517ba55",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Kubernetes Events",
            "subTarget": "Events",
            "style": "link"
          },
          {
            "id": "e8e115e7-9a2e-4557-9886-b73bbd5429c8",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Persistent Volumes",
            "subTarget": "PV",
            "style": "link"
          }
        ]
      },
      "name": "tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/AKS/Workload Details Pod-Container Status Tab",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Status"
      },
      "name": "pod-container-status-tab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'cpuLimitNanoCores';\r\nlet usageCounterName = 'cpuUsageNanoCores';\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in  (controllerName)\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue, limitA=100\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, limit=100, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project  ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue \r\n| summarize AggregatedValue=max(UsagePercent) by bin(TimeGenerated, trendBinSize), ContainerName",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Max CPU Usage by Pods",
              "timeContext": {
                "durationMs": 21600000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "unit": 1,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "pods-max-cpu-usage-chart",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'memoryLimitBytes';\r\nlet usageCounterName = 'memoryWorkingSetBytes';\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName == controllerName\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName=Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project Computer, ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\r\n| summarize AggregatedValue = max(UsagePercent) by bin(TimeGenerated, trendBinSize) , ContainerName\r\n",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Max Memory Usage ( Working Set ) by Pods",
              "timeContext": {
                "durationMs": 21600000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "unit": 1,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "pods-max-memory-usage-chart",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "overview-tab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/AKS/Workload Details K8s Events Tab",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Events"
      },
      "name": "kubernetes-events-tab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/AKS/Workload Details Persistent Volumes Tab",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "PV"
      },
      "name": "pv-tab"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}