{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7aa94d19-4c5b-40e2-b14f-e29736a8f90c",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1"
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "resourceParameter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{resource}/providers/Microsoft.Insights/dataCollectionRuleAssociations?api-version=2021-04-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.dataCollectionRuleId\",\"columnid\":\"Id\",\"columnType\":\"string\"}]}}]}",
        "size": 0,
        "queryType": 12
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "dcrAssociations"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n    | where type == \"microsoft.insights/datacollectionrules\"\r\n    | extend extensions = properties.dataSources.extensions\r\n    | extend flows = properties.dataFlows\r\n    | mv-expand extensions\r\n    | where extensions.name contains \"ContainerInsightsExtension\"\r\n    | extend extensionStreams = extensions.streams\r\n    | where extensionStreams !contains \"Microsoft-ContainerInsights-Group-Default\" and (extensionStreams !contains \"Microsoft-InsightsMetrics\" or extensionStreams !contains \"Microsoft-KubePodInventory\" or extensionStreams !contains \"Microsoft-KubeNodeInventory\") \r\n    | project id",
        "size": 0,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "dcrsFromARG"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7f395a97-9643-4cb4-8825-7277b7441cc6",
            "version": "KqlParameterItem/1.0",
            "name": "parsedDCRInfo",
            "type": 1,
            "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\",\"mergeType\":\"innerunique\",\"leftTable\":\"dcrAssociations\",\"rightTable\":\"dcrsFromARG\",\"leftColumn\":\"Id\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[dcrAssociations].Id\",\"mergedName\":\"Id\",\"fromId\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\"},{\"originalName\":\"[dcrsFromARG].id\",\"mergedName\":\"id\",\"fromId\":\"60f80c2a-b820-4cc6-bcf2-7d0f5ebcc862\"}]}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 7
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "a",
        "comparison": "isEqualTo",
        "value": "a"
      },
      "name": "parsedDCRInfo"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Insights data is not available with custom data collection. To view this workbook, set \"Collected data\" to “All” in Monitoring Settings or use Log Analytics to query logs.",
              "style": "info"
            },
            "name": "Cost Settings Banner"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "9e26bb9c-0a13-4754-9e40-daa7d0c4f86e",
                  "cellValue": "OpenBlade",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "Configure Monitoring Settings",
                  "style": "primary",
                  "linkIsContextBlade": true,
                  "bladeOpenContext": {
                    "bladeName": "OnboardMonitorInsights.ReactView",
                    "extensionName": "Microsoft_Azure_ContainerInsightsExt",
                    "bladeParameters": [
                      {
                        "name": "clusterResourceId",
                        "source": "parameter",
                        "value": "resource"
                      },
                      {
                        "name": "initiator",
                        "source": "static",
                        "value": "Workbooks:NodeGPU"
                      }
                    ]
                  }
                }
              ]
            },
            "name": "Configure Monitoring Settings"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "parsedDCRInfo",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "name": "Custom Cost Settings",
      "styleSettings": {
        "padding": "20"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "5de17819-f869-4a42-9c3d-27cf8f9085f0",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "description": "Filter data by time range",
                  "isRequired": true,
                  "value": {
                    "durationMs": 21600000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "bc0f6a37-c7c0-4001-b39b-dd0b1d620b4e",
                  "version": "KqlParameterItem/1.0",
                  "name": "Resource",
                  "type": 5,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1"
                },
                {
                  "id": "6dab12e6-26f4-4471-b214-85f624b5f64c",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceType",
                  "type": 7,
                  "isRequired": true,
                  "query": "project '{Resource:resourcetype}'\r\n| take 1",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "e57ba893-b9ba-47b9-95d5-38bc7be4a455",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterId",
                  "type": 1,
                  "description": "Filter the selected workspace by cluster id",
                  "isHiddenWhenLocked": true
                },
                {
                  "id": "51f0a81e-6eef-4129-b8a4-dc7dd4114aff",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterIdWhereClause",
                  "type": 1,
                  "description": "use this to filter by clusterid ",
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "ResourceType",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "Microsoft.operationalinsights/workspaces",
                        "resultValType": "static",
                        "resultVal": "| where clusterId =~ \"{clusterId}\""
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where \"a\" == \"a\""
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 21600000
                  },
                  "timeContextFromParameter": "timeRange"
                },
                {
                  "id": "bb8ed6dc-807e-4566-be76-26ac6ee7f90f",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedNodes",
                  "label": "GPU Node",
                  "type": 2,
                  "description": "Filter by GPU node",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "InsightsMetrics \r\n| where Name == \"nodeGpuCapacity\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where Val > 0\r\n| distinct Computer",
                  "crossComponentResources": [
                    "{Resource}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "{ResourceType}"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "{ResourceType}"
            },
            "name": "pills"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "5c20ad89-4167-418b-ba12-5aa6fc298614",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "45f8e6cb-8638-41b9-9304-7abfcf4ef129",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "GPU",
                  "subTarget": "GPU",
                  "style": "link"
                }
              ]
            },
            "name": "links - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "As per the Kubernetes [upstream announcement](https://kubernetes.io/blog/2020/12/16/third-party-device-metrics-reaches-ga/#nvidia-gpu-metrics-deprecated), Kubernetes is deprecating GPU metrics that are being reported by the kubelet, for Kubernetes ver. 1.20+. This means Container Insights will no longer be able to collect the following metrics out of the box:\r\n* containerGpuDutyCycle\r\n* containerGpumemoryTotalBytes\r\n* containerGpumemoryUsedBytes\r\n\r\nTo continue collecting GPU metrics through Container Insights, please migrate by December 31, 2022 to your GPU vendor specific metrics exporter and configure [Prometheus scraping](https://docs.microsoft.com/azure/azure-monitor/containers/container-insights-prometheus-integration) to scrape metrics from the deployed vendor specific exporter.\r\n\r\nAs a temporary hotfix, for AKS, upgrade your GPU Node pool to the latest version or \\*-2022.06.08 or higher. For Arc enabled Kubernetes, enable feature gate DisableAcceleratorUsageMetrics=false in Kubelet configuration of the node and restart the Kubelet. Once the upstream changes reach GA, this fix will not longer work, make plans to migrate to using your GPU vendor specific metrics exporter by December 31, 2022.\r\n\r\nFor additional information visit [GPU monitoring](https://docs.microsoft.com/azure/azure-monitor/containers/container-insights-gpu-monitoring) in Container Insights.\r\n",
                    "style": "warning"
                  },
                  "name": "text - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "union\r\n(InsightsMetrics \r\n| where Name == \"nodeGpuCapacity\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where Val > 0\r\n//add cluster filter\r\n| summarize GPUsPerComputer=arg_max(Val,*) by Computer, bin(TimeGenerated, {timeRange:grain})\r\n| make-series ['Total GPUs'] = toint(sum(GPUsPerComputer)) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} \r\n),\r\n(\r\nInsightsMetrics \r\n| where Name == \"containerGpuDutyCycle\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where Val > 0\r\n| extend gpuId = tostring(Tags.gpuId)\r\n| summarize count() by bin(TimeGenerated, {timeRange:grain}), gpuId\r\n| make-series ['Busy GPUs'] = count() default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} \r\n)",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Usage",
                    "color": "turquoise",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "linechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "gpuVendor",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "gpuCount",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "gpuVendor",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "gpuCount",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Busy Gpus",
                          "color": "redBright"
                        }
                      ],
                      "xSettings": {
                        "unit": 17,
                        "min": null,
                        "max": null
                      },
                      "ySettings": {
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-Usage",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "union\r\n(InsightsMetrics \r\n| where Name == \"containerGpumemoryTotalBytes\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n//| extend tags=parse_json(Tags) \r\n| extend gpuVendor=tostring(Tags.gpuVendor)\r\n| extend gpuId = tostring(Tags.gpuId)\r\n| extend gpuModel = tostring(Tags.gpuModel)\r\n| extend gpu=strcat(gpuVendor, \"/\", gpuModel)\r\n| summarize GpuMemoryBytes=max(Val) by bin(TimeGenerated,  {timeRange:grain}), gpu, gpuId, Computer//, metricname\r\n| make-series ['Total-GPUMemory'] = sum(GpuMemoryBytes) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} //by status\r\n),\r\n(InsightsMetrics \r\n| where Name == \"containerGpumemoryUsedBytes\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend gpuVendor=tostring(Tags.gpuVendor)\r\n| extend gpuId = tostring(Tags.gpuId)\r\n| extend gpuModel = tostring(Tags.gpuModel)\r\n| extend gpu=strcat(gpuVendor, \"/\", gpuModel)\r\n| summarize maxused=max(Val) by bin(TimeGenerated, {timeRange:grain}), gpu, gpuId, Computer\r\n| make-series ['Max-Used'] = sum(maxused) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain}\r\n),\r\n(InsightsMetrics \r\n| where Name == \"containerGpumemoryUsedBytes\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend gpuVendor=tostring(Tags.gpuVendor)\r\n| extend gpuId = tostring(Tags.gpuId)\r\n| extend gpuModel = tostring(Tags.gpuModel)\r\n| extend gpu=strcat(gpuVendor, \"/\", gpuModel)\r\n| summarize ptile95used=percentile(Val,95) by bin(TimeGenerated, {timeRange:grain}), gpu, gpuId, Computer\r\n| make-series ['95th-ptile-Used'] = sum(ptile95used) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain}\r\n),\r\n(InsightsMetrics \r\n| where Name == \"containerGpumemoryUsedBytes\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend gpuVendor=tostring(Tags.gpuVendor)\r\n| extend gpuId = tostring(Tags.gpuId)\r\n| extend gpuModel = tostring(Tags.gpuModel)\r\n| extend gpu=strcat(gpuVendor, \"/\", gpuModel)\r\n| summarize ptile99used=percentile(Val,99) by bin(TimeGenerated, {timeRange:grain}), gpu, gpuId, Computer\r\n| make-series ['99th-ptile-Used'] = sum(ptile99used) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain}\r\n)\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Memory Usage",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showLegend": true,
                      "ySettings": {
                        "unit": 2,
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-MemoryUsage",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let im  = InsightsMetrics\r\n| where Name == \"nodeGpuCapacity\"\r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where Val >= 1\r\n| distinct Computer;\r\nKubeNodeInventory\r\n| extend clusterId = ClusterId\r\n{clusterIdWhereClause}\r\n| where Computer in (im)\r\n| extend status=iif(strlen(Status) == 0 ,\"Unknown\", Status)\r\n| summarize count() by Computer, status, bin(TimeGenerated, {timeRange:grain})\r\n| summarize val=count() by status, bin(TimeGenerated, {timeRange:grain})\r\n| make-series ['Node Count by status'] = sum(val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by status\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Node Count by Node Status",
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "status",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "leftContent": {
                        "columnMatch": "Node Count by State",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto",
                          "showIcon": true
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Ready",
                          "color": "green"
                        },
                        {
                          "seriesName": "Unknown",
                          "color": "blue"
                        }
                      ],
                      "ySettings": {
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-NodeCountByNodeStatus",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let im  = InsightsMetrics\r\n| where Name in (\"containerGpuRequests\", \"containerGpuLimits\")\r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| extend selectedNodes = {selectedNodes}\r\n| extend nodeList = iif(selectedNodes == \"*\", \",*\", selectedNodes) \r\n| where '*' in (selectedNodes) or Computer in (selectedNodes)\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n//| extend tags=parse_json(Tags)\r\n| extend containerName = tostring(Tags.containerName)\r\n| extend poduidArray = split(containerName, \"/\")\r\n| extend podUid = iif(array_length(poduidArray) == 2, poduidArray[0], \"\")\r\n| where Val >= 1\r\n| where podUid != \"\"\r\n| distinct podUid;\r\nKubePodInventory\r\n| where PodUid in (im)\r\n| extend clusterId = ClusterId\r\n{clusterIdWhereClause}\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| extend selectedNodes = {selectedNodes}\r\n| extend nodeList = iif(selectedNodes == \"*\", \",*\", selectedNodes) \r\n| where '*' in (selectedNodes) or Computer in (selectedNodes)\r\n| summarize count() by PodUid, PodStatus, bin(TimeGenerated, {timeRange:grain})\r\n| make-series ['GPU Pod Count by status'] = count() default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by PodStatus",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Pod Count by Pod Status",
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Succeeded",
                          "color": "greenDark"
                        },
                        {
                          "seriesName": "Running",
                          "color": "green"
                        }
                      ],
                      "ySettings": {
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-PodCountByPodStatus",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let im  = InsightsMetrics\r\n| where Name in (\"containerGpuRequests\", \"containerGpuLimits\")\r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| extend selectedNodes = {selectedNodes}\r\n| extend nodeList = iif(selectedNodes == \"*\", \",*\", selectedNodes)\r\n| where '*' in (selectedNodes) or Computer in (selectedNodes)\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n//| extend tags=parse_json(Tags)\r\n| extend containerName = tostring(Tags.containerName)\r\n| extend poduidArray = split(containerName, \"/\")\r\n| extend podUid = iif(array_length(poduidArray) == 2, poduidArray[0], \"\")\r\n| where Val >= 1\r\n| where podUid != \"\"\r\n| distinct podUid;\r\nKubePodInventory\r\n| where PodUid in (im)\r\n| extend clusterId = ClusterId\r\n{clusterIdWhereClause}\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| summarize count() by PodUid, Namespace, PodStatus, bin(TimeGenerated, {timeRange:grain})\r\n| make-series ['GPU Pods by namespace'] = count() default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Namespace, PodStatus\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Pod Count by Kubernetes Namespace",
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Namespace",
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "subtitleContent": {
                        "columnMatch": "PodStatus",
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "rightContent": {
                        "columnMatch": "GPU Pods by namespace",
                        "formatter": 10,
                        "formatOptions": {
                          "palette": "red",
                          "showIcon": true
                        },
                        "tooltipFormat": {
                          "tooltip": "hello {0}"
                        }
                      },
                      "showBorder": false,
                      "sortCriteriaField": "Namespace"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Namespace",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "leftContent": {
                        "columnMatch": "PodStatus",
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "centerContent": {
                        "columnMatch": "podcount",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "nodeIdField": "Namespace",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": null,
                      "hivesMargin": 5
                    },
                    "chartSettings": {
                      "showLegend": true,
                      "ySettings": {
                        "unit": 17,
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-PodCountByK8SNamespace",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics \r\n| where Name == \"nodeGpuCapacity\" \r\n| where Namespace == \"container.azm.ms/gpu\" \r\n| where Origin == \"container.azm.ms\"\r\n| where TimeGenerated >= {timeRange:start}\r\n| where TimeGenerated < {timeRange:end}\r\n| where '*' in ({selectedNodes}) or Computer in ({selectedNodes})\r\n| extend Tags = todynamic(Tags)\r\n| extend clusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend gpuVendor=strcat ('🔹 ',tostring(Tags.gpuVendor))\r\n| summarize gpuCountPerComputer=max(Val) by gpuVendor, Computer , bin(TimeGenerated, {timeRange:grain})\r\n| make-series ['GPU count by make'] =sum(gpuCountPerComputer) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by gpuVendor\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "GPU Count by Make",
                    "color": "blue",
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "gpuVendor",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "GPU count by make",
                          "formatter": 10,
                          "formatOptions": {
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "{0}"
                          }
                        },
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "gpuVendor",
                          "label": "Make",
                          "comment": ""
                        },
                        {
                          "columnId": "GPU count by make",
                          "label": "Count"
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "gpuVendor",
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "rightContent": {
                        "columnMatch": "GPU count by make",
                        "formatter": 10,
                        "formatOptions": {
                          "palette": "blue",
                          "showIcon": true
                        },
                        "tooltipFormat": {
                          "tooltip": "{0}"
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "TimeGenerated",
                      "sortOrderField": 1
                    },
                    "chartSettings": {
                      "ySettings": {
                        "unit": 17,
                        "min": 0,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "GPU-GpuCountByMake",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "GPU"
            },
            "name": "GPU-tab"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "parsedDCRInfo",
        "comparison": "isEqualTo",
        "value": ""
      },
      "name": "Workbook Content"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
