{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Azure Monitor Agent Health"
      },
      "name": "headertext"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "label": "Subscription(s)",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| project value = id, label = name, selected = true",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "4f143406-a91d-4e04-9160-f1dd0c186f4a",
            "version": "KqlParameterItem/1.0",
            "name": "WSSub",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| distinct subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = true",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e101dbda-5c3b-469e-a505-7377f2ff5a43",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "label": "Workspace(s)",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| project value = id, label = name, selected = true",
            "crossComponentResources": [
              "{WSSub}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "900928f5-74ee-4858-a407-89d223037394",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRangeSelect",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 86400000
            }
          },
          {
            "id": "86f10d6d-188b-4ece-b754-94329c4750b0",
            "version": "KqlParameterItem/1.0",
            "name": "UnhealthyCriteria",
            "label": "Unhealthy Criteria",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\":\"1m\",\"label\":\"1 minute without heartbeat\",\"selected\":false},\r\n    {\"value\":\"5m\",\"label\":\"5 minute without heartbeat\",\"selected\":false},\r\n    {\"value\":\"30m\",\"label\":\"30 minute without heartbeat\",\"selected\":true},\r\n    {\"value\":\"1h\",\"label\":\"1 hour without heartbeat\",\"selected\":false},\r\n    {\"value\":\"2h\",\"label\":\"2 hour without heartbeat\",\"selected\":false},\r\n    {\"value\":\"8h\",\"label\":\"8 hour without heartbeat\",\"selected\":false},\r\n    {\"value\":\"1d\",\"label\":\"1 day without heartbeat\",\"selected\":false},\r\n    {\"value\":\"2d\",\"label\":\"2 day without heartbeat\",\"selected\":false},\r\n    {\"value\":\"7d\",\"label\":\"7 day without heartbeat\",\"selected\":false}\r\n]"
          },
          {
            "id": "0909eea0-9253-4b1d-97e7-1b4a76345452",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"Overview\\\", \\\"label\\\": \\\"Overview\\\", \\\"selected\\\":true }\\r\\n]\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 8
      },
      "name": "Parameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "19f6d436-2b4e-4a05-af13-f287c65494d6",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Get Started",
            "subTarget": "GetStarted",
            "style": "link"
          },
          {
            "id": "68c2939f-96a0-4208-8c07-a981cefb434d",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "c7a87cea-5a51-45b7-85b9-96c6dfc2d174",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Virtual Machines",
            "subTarget": "Azure",
            "style": "link"
          },
          {
            "id": "ea261c48-3a16-41ec-8dd3-28456798170f",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Arc-enabled servers",
            "subTarget": "Hybrid",
            "style": "link"
          },
          {
            "id": "2e3d7c23-a2e4-4658-934b-77dd33dced9e",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Data Collection Rules (DCRs)",
            "subTarget": "DCR",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "AgentCount",
        "comparison": "isNotEqualTo",
        "value": "0"
      },
      "name": "tabs"
    },
    {
      "type": 1,
      "content": {
        "json": "# Get started info#\r\n\r\n------------------------\r\n\r\nWelcome to the **AMA Health Overview.**\r\n\r\nUse the drop-down selectors to pick the relevant scope (subscription, workspace), time and criteria to view Azure Monitor Agent (AMA) health state across your Azure virtual machines, Azure Virtual Machine Scale Sets and non-Azure servers (Arc-enabled).\r\n\r\n* Drill down in 'Overview' tab using Resource Type, Platform, or Agent version\r\n* View health trend and details of agents across all your Azure VMs or Hybrid serversÂ \r\n* View all existing data collection rules for a selected scope\r\n\r\n**NOTE:** Collecting the following performance counters will enable this workbook to show also the agent processes footprint on both Processor and Memory:\r\n\r\n* Windows:\r\n\t* Process(*)\\% Processor Time\r\n\t* Process(*)\\Working Set - Private\r\n* Linux:\r\n\t* Process(*)\\Pct User Time\r\n\t* Process(*)\\Used Memory\r\n\r\n## Prerequistes ##\r\n\r\n- One or more [Log Analytics workspace(s).](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/design-logs-deployment?WT.mc_id=Portal-fx)\r\n- One or more [data collection rule(s).](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/data-collection-rule-overview)\r\n- Agents sending to Log Analytics workspace(s) through data collection rule(s)\r\n\r\nFor questions, requests or feedback, please click [here](https://aka.ms/AMAHealthfeedback)."
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "GetStarted"
      },
      "name": "abouttext",
      "styleSettings": {
        "padding": "10px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Agent summary",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "dc21f4f1-2c6e-4e68-ba99-b66bd38f8830",
                        "version": "KqlParameterItem/1.0",
                        "name": "DistributionSelection",
                        "type": 1,
                        "isRequired": true,
                        "isGlobal": true,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"ALL\\\", \\\"label\\\": \\\"ALL\\\", \\\"selected\\\":true }\\r\\n]\",\"transformers\":null}",
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 8
                      },
                      {
                        "id": "8bd338b6-237b-4708-b88d-a8cecb69fb3b",
                        "version": "KqlParameterItem/1.0",
                        "name": "AgentHealthSelection",
                        "type": 1,
                        "isRequired": true,
                        "isGlobal": true,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"\\\\\\\"Unhealthy\\\\\\\",\\\\\\\"Healthy\\\\\\\"\\\", \\\"label\\\": \\\"\\\\\\\"Unhealthy\\\\\\\",\\\\\\\"Healthy\\\\\\\"\\\", \\\"selected\\\":true }\\r\\n]\",\"transformers\":null}",
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 8
                      }
                    ],
                    "style": "pills",
                    "queryType": 8
                  },
                  "name": "parameters - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let heartbeatCount = (\r\nHeartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| extend ResType = \r\n    case(\r\n        ResourceProvider == \"Microsoft.HybridCompute\" and _ResourceId != \"\", \"Arc-enabled Servers\",\r\n        _ResourceId has \"tenants\", \"Windows Client Devices\",\r\n        ResourceProvider == \"Microsoft.Compute\" and ResourceType != \"virtualMachineScaleSets\", \"Virtual Machines\",\r\n        \"Other\" )\r\n| extend AgentVersion = strcat('AMA ',OSType,' ',Version)\r\n| extend DistFiltered = case(ResType == '{DistributionSelection}', true,\r\n                             OSType == '{DistributionSelection}', true,\r\n                             AgentVersion == '{DistributionSelection}', true,\r\n                             'ALL' == '{DistributionSelection}', true,\r\n                             false\r\n                            )\r\n| where DistFiltered == true\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| extend State = iff(LastHeartbeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| summarize Count = dcount(Computer) by State);\r\ndatatable(State:string, Rank:int)[\"Unhealthy\", 0, \"Healthy\", 1]\r\n| join kind = leftouter heartbeatCount on State\r\n| extend Count = iff(isempty(State1), 0, Count)\r\n| project-away State1\r\n| extend Rank = iff(State == 'Unhealthy' and Count == 0, 2, Rank)\r\n| order by Rank asc\r\n| project-reorder State, Count",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Agent health snapshot : {DistributionSelection}",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "AgentHealthSelection",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Unhealthy",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "Healthy",
                          "color": "green"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Agent health",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend ResType = \r\n    case(\r\n        ResourceProvider == \"Microsoft.HybridCompute\" and _ResourceId != \"\", \"Arc-enabled Servers\",\r\n        _ResourceId has \"tenants\", \"Windows Client Devices\",\r\n        ResourceProvider == \"Microsoft.Compute\" and ResourceType != \"virtualMachineScaleSets\", \"Virtual Machines\",\r\n        \"Other\" )\r\n| extend AgentVersion = strcat('AMA ',OSType,' ',Version)\r\n| extend DistFiltered = case(ResType == '{DistributionSelection}', true,\r\n                             OSType == '{DistributionSelection}', true,\r\n                             AgentVersion == '{DistributionSelection}', true,\r\n                             'ALL' == '{DistributionSelection}', true,\r\n                             false\r\n                            )\r\n| where DistFiltered == true\r\n| extend timeSegment = bin_at(TimeGenerated,{TimeRangeSelect:grain},now())\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer, timeSegment\r\n| extend State = iff(LastHeartbeat < (timeSegment + {TimeRangeSelect:grain} - {UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| summarize Count = dcount(Computer) by State, timeSegment\r\n| order by timeSegment asc, State asc\r\n| project-reorder timeSegment, State, Count",
                    "size": 1,
                    "aggregation": 5,
                    "showAnalytics": true,
                    "title": "Agent health over selected period : {DistributionSelection}",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Unhealthy",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "Healthy",
                          "color": "green"
                        }
                      ]
                    }
                  },
                  "customWidth": "66",
                  "showPin": true,
                  "name": "Agent health over selected period",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| extend ResType = \r\n    case(\r\n        ResourceProvider == \"Microsoft.HybridCompute\" and _ResourceId != \"\", \"Arc-enabled Servers\",\r\n        _ResourceId has \"tenants\", \"Windows Client Devices\",\r\n        ResourceProvider == \"Microsoft.Compute\" and ResourceType != \"virtualMachineScaleSets\", \"Virtual Machines\",\r\n        \"Other\" )\r\n| summarize MachineCount = count() by ResType\r\n| where MachineCount > 0\r\n| sort by MachineCount desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Distribution by Resource Type",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "DistributionSelection",
                    "exportDefaultValue": "ALL",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Arc-enabled Servers",
                          "color": "purple"
                        },
                        {
                          "seriesName": "Virtual Machines",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Windows client deWindows Client Devicesvices",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Distribution By Resource Type",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| summarize MachineCount = count() by OSType\r\n| sort by MachineCount desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Distribution by Operating System",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "DistributionSelection",
                    "exportDefaultValue": "ALL",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Distribution By Operating System",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| extend AgentVersion = strcat('AMA ',OSType,' ',Version)\r\n| summarize MachineCount = count() by AgentVersion\r\n| sort by MachineCount desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Distribution by Agent Version",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "DistributionSelection",
                    "exportDefaultValue": "ALL",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Arc-enabled Servers",
                          "color": "orange"
                        },
                        {
                          "seriesName": "Virtual Machines",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "Windows client deWindows Client Devicesvices",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "Distribution By Agent Version",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "agentSummary",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Monitoring extensions summary",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type in ('microsoft.compute/virtualmachines/extensions', 'microsoft.hybridcompute/machines/extensions')\r\n| extend propertiesJson = parse_json(properties)\r\n| extend extensionType = tostring(propertiesJson.type)\r\n| where extensionType in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\r\n| extend provisioningState = tostring(propertiesJson.provisioningState)\r\n| summarize count() by provisioningState",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Azure Monitor Agent extension by provisioning state",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "StatusSelection",
                    "exportDefaultValue": "ALL",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "server",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "24.5714ch"
                          }
                        },
                        {
                          "columnMatch": "extensionType",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "28.8571ch"
                          }
                        },
                        {
                          "columnMatch": "provisioningState",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20.5714ch"
                          }
                        },
                        {
                          "columnMatch": "extensionVersion",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "13.2857ch"
                          }
                        },
                        {
                          "columnMatch": "automaticUpgrade",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "disabled",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "22.1429ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "provisioningState",
                          "label": "Provisioning state"
                        }
                      ]
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Succeeded",
                          "color": "green"
                        },
                        {
                          "seriesName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "amaByStatus",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type in ('microsoft.compute/virtualmachines/extensions', 'microsoft.hybridcompute/machines/extensions')\r\n| extend propertiesJson = parse_json(properties)\r\n| extend extensionType = tostring(propertiesJson.type)\r\n| where extensionType in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\r\n| extend automaticUpgrade = iif(tostring(propertiesJson.enableAutomaticUpgrade) =='true', 'Enabled', 'Disabled')\r\n| summarize count() by automaticUpgrade",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Azure Monitor Agent extension by automatic update",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "automaticUpgradeSelection",
                    "exportDefaultValue": "ALL",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "server",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "24.5714ch"
                          }
                        },
                        {
                          "columnMatch": "extensionType",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "28.8571ch"
                          }
                        },
                        {
                          "columnMatch": "provisioningState",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20.5714ch"
                          }
                        },
                        {
                          "columnMatch": "extensionVersion",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "13.2857ch"
                          }
                        },
                        {
                          "columnMatch": "automaticUpgrade",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "disabled",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "22.1429ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "provisioningState",
                          "label": "Provisioning state"
                        }
                      ]
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Enabled",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Disabled",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "amaByAutomaticUpdate",
                  "styleSettings": {
                    "margin": "5px",
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "c81ae53a-2723-438e-b26b-036d79e25954",
                        "version": "KqlParameterItem/1.0",
                        "name": "selectedStatusSelection",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "leftOperand": "StatusSelection",
                              "operator": "==",
                              "rightValType": "static",
                              "rightVal": "ALL",
                              "resultValType": "expression",
                              "resultVal": "dynamic(['Succeeded', 'Failed', 'Deleting'])"
                            }
                          },
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "dynamic(['{StatusSelection}'])"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "selectedAutomaticUpgrade",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "leftOperand": "automaticUpgradeSelection",
                              "operator": "==",
                              "rightValType": "static",
                              "rightVal": "ALL",
                              "resultValType": "expression",
                              "resultVal": "dynamic(['Enabled','Disabled'])"
                            }
                          },
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "dynamic(['{automaticUpgradeSelection}'])"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "id": "8e1d3f10-1afe-4387-a5cb-c258a1d16a2c"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type in ('microsoft.compute/virtualmachines/extensions', 'microsoft.hybridcompute/machines/extensions')\r\n| extend propertiesJson = parse_json(properties)\r\n| extend extensionType = tostring(propertiesJson.type)\r\n| where extensionType in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\r\n| extend provisioningState = tostring(propertiesJson.provisioningState)\r\n| where provisioningState in ({selectedStatusSelection})\r\n| extend extensionTypeOS = iif(extensionType == 'AzureMonitorLinuxAgent', 'Linux', 'Windows')\r\n| summarize count() by extensionTypeOS",
                    "size": 1,
                    "title": "Azure Monitor Agent extension by provisioning state by OS : {StatusSelection}",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Linux",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "amaByStatusByOS",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type in ('microsoft.compute/virtualmachines/extensions', 'microsoft.hybridcompute/machines/extensions')\r\n| extend propertiesJson = parse_json(properties)\r\n| extend extensionType = tostring(propertiesJson.type)\r\n| where extensionType in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\r\n| extend automaticUpgrade = iif(tostring(propertiesJson.enableAutomaticUpgrade) =='true', 'Enabled', 'Disabled')\r\n| where automaticUpgrade in ({selectedAutomaticUpgrade})\r\n| extend extensionTypeOS = iif(extensionType == 'AzureMonitorLinuxAgent', 'Linux', 'Windows')\r\n| summarize count() by extensionTypeOS",
                    "size": 1,
                    "title": "Azure Monitor Agent extension by automatic update by OS : {automaticUpgradeSelection}",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "amaByAutomaticUpdateByOS",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "extensionSummary",
            "styleSettings": {
              "showBorder": true
            }
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Azure virtual machines",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let heartbeatCount = (\r\nHeartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| extend State = iff(LastHeartbeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| summarize Count = dcount(Computer) by State);\r\ndatatable(State:string, Rank:int)[\"Unhealthy\", 0, \"Healthy\", 1]\r\n| join kind = leftouter heartbeatCount on State\r\n| extend Count = iff(isempty(State1), 0, Count)\r\n| project-away State1\r\n| extend Rank = iff(State == 'Unhealthy' and Count == 0, 2, Rank)\r\n| order by Rank asc\r\n| project-reorder State, Count",
              "size": 1,
              "showAnalytics": true,
              "title": "Agents health snapshot",
              "showRefreshButton": true,
              "exportFieldName": "series",
              "exportParameterName": "healthStatus",
              "exportDefaultValue": "ALL",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Unhealthy",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "agentHealthAzure",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedHealthStatus = iif('{healthStatus}' == 'ALL', dynamic(['Unhealthy', 'Healthy']), dynamic(['{healthStatus}']));\r\nHeartbeat\r\n| where TimeGenerated {TimeRangeSelect:query}\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend timeSegment = bin_at(TimeGenerated,{TimeRangeSelect:grain},now())\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer, timeSegment\r\n| extend State = iff(LastHeartbeat < (timeSegment + {TimeRangeSelect:grain} - {UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| where State in (selectedHealthStatus)\r\n| summarize Count = dcount(Computer) by State, timeSegment\r\n| order by timeSegment asc, State asc\r\n| project-reorder timeSegment, State, Count",
              "size": 1,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent health over selected period : {healthStatus}",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Unhealthy",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "66",
            "showPin": true,
            "name": "agentHealthTrendAzure",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name)\r\n| project subscriptionId, ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType\r\n| join (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName),\r\n    enableAutomaticUpgrade = tostring(properties.enableAutomaticUpgrade)\r\n| extend automaticUpgrade = iif(enableAutomaticUpgrade =='true', 'Enabled', 'Disabled')\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version, automaticUpgrade\r\n) on ComputerName",
              "size": 0,
              "title": "VM and extension details",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "VMExtStatus-Arg",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedHealthStatus = iif('{healthStatus}' == 'ALL', dynamic(['Unhealthy', 'Healthy']), dynamic(['{healthStatus}']));\r\nHeartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| extend agentState = iff(LastHeartBeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| where agentState in (selectedHealthStatus)\r\n| extend TimeFromNow = now() - LastHeartBeat\r\n| extend [\"TimeAgo\"] = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1s), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| project SubscriptionId, _ResourceId, Computer, LastHeartBeat, [\"TimeAgo\"], agentState\r\n| join kind=leftouter  (Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"SCOM Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| project _ResourceId, Category, Computer) on _ResourceId\r\n| join kind=leftouter  (Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"Direct Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| project _ResourceId, Category, Computer) on _ResourceId\r\n| extend SCOMAgent = iff(isnotempty(Computer1), \"Yes\", \"No\")\r\n| extend LegacyAgent = iff(isnotempty(Computer2), \"Yes\", \"No\")\r\n| project SubscriptionId, _ResourceId, Computer, LastHeartBeat, [\"Time\"]=strcat('ð ', TimeAgo), agentState, SCOMAgent, LegacyAgent",
              "size": 0,
              "title": "Heartbeat Pull",
              "timeContextFromParameter": "TimeRangeSelect",
              "exportFieldName": "_ResourceId",
              "exportParameterName": "selectedResourceId",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "35ch"
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "35ch"
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "24.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "23.8571ch"
                    }
                  },
                  {
                    "columnMatch": "LastHeartBeat",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    }
                  },
                  {
                    "columnMatch": "Time",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "19.2857ch"
                    }
                  },
                  {
                    "columnMatch": "SCOMAgent",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "LegacyAgent",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "35ch"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_link__ResourceId_2",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "_ResourceId",
                    "label": "Resource name"
                  },
                  {
                    "columnId": "Computer",
                    "label": "Computer name"
                  },
                  {
                    "columnId": "LastHeartBeat",
                    "label": "Last heartbeat"
                  },
                  {
                    "columnId": "Time",
                    "label": "Last heartbeat"
                  },
                  {
                    "columnId": "agentState",
                    "label": "Agent state"
                  },
                  {
                    "columnId": "SCOMAgent",
                    "label": "SCOM agent"
                  },
                  {
                    "columnId": "LegacyAgent",
                    "label": "Legacy agent"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link__ResourceId_2",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "showPin": false,
            "name": "heartbeatPullAzure",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\",\"mergeType\":\"innerunique\",\"leftTable\":\"VMExtStatus-Arg\",\"rightTable\":\"heartbeatPullAzure\",\"leftColumn\":\"id\",\"rightColumn\":\"_ResourceId\"}],\"projectRename\":[{\"originalName\":\"[VMExtStatus-Arg].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].ComputerName\",\"mergedName\":\"ComputerName\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].id\",\"mergedName\":\"id\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].Time\",\"mergedName\":\"Last heartbeat\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].agentState\",\"mergedName\":\"agentState\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMExtStatus-Arg].PowerStatus\",\"mergedName\":\"PowerStatus\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].SCOMAgent\",\"mergedName\":\"SCOM agent\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].LegacyAgent\",\"mergedName\":\"Legacy agent\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].location\",\"mergedName\":\"location\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].OSType\",\"mergedName\":\"OSType\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].IdentityType\",\"mergedName\":\"IdentityType\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].ComputerName1\",\"mergedName\":\"ComputerName1\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].AMA\",\"mergedName\":\"AMA\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].AMAStatus\",\"mergedName\":\"AMAStatus\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].AMAVersion\",\"mergedName\":\"AMAVersion\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[VMExtStatus-Arg].automaticUpgrade\",\"mergedName\":\"automaticUpgrade\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure]._ResourceId\",\"mergedName\":\"Resource name\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].Computer\",\"mergedName\":\"Computer name\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].LastHeartBeat\",\"mergedName\":\"LastHeartBeat\",\"fromId\":\"e6351f18-7da7-4765-b07a-0972bc74b11d\"},{\"originalName\":\"[heartbeatPullAzure].State\",\"mergedName\":\"State\",\"fromId\":\"unknown\"},{\"originalName\":\"[heartbeatPullAzure].SubscriptionId\"}]}",
              "size": 0,
              "title": "Agent details : {healthStatus}",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "id",
                  "parameterName": "selectedResourceId",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5,
                    "formatOptions": {
                      "linkColumn": "subscriptionId",
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "ComputerName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkColumn": "id",
                      "linkTarget": "Resource",
                      "subTarget": "appsandextensions",
                      "linkIsContextBlade": true,
                      "showIcon": true,
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Last heartbeat",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18.5714ch"
                    }
                  },
                  {
                    "columnMatch": "agentState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "16.5714ch"
                    }
                  },
                  {
                    "columnMatch": "PowerStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "VM deallocated",
                          "representation": "Unavailable",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "VM running",
                          "representation": "Available",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "19.5714ch"
                    }
                  },
                  {
                    "columnMatch": "location",
                    "formatter": 17,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "OSType",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "IdentityType",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ComputerName1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AMAStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AMAVersion",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Resource name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Computer name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "LastHeartBeat",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkColumn": "subscriptionId",
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "ComputerName",
                    "label": "Computer"
                  },
                  {
                    "columnId": "id",
                    "label": "Resource name"
                  },
                  {
                    "columnId": "agentState",
                    "label": "Agent state"
                  },
                  {
                    "columnId": "PowerStatus",
                    "label": "VM power status"
                  },
                  {
                    "columnId": "location",
                    "label": "Location"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "OSType",
                    "label": "OS type"
                  },
                  {
                    "columnId": "IdentityType",
                    "label": "Identity type"
                  },
                  {
                    "columnId": "AMA",
                    "label": "AMA Extension name"
                  },
                  {
                    "columnId": "AMAStatus",
                    "label": "AMA status"
                  },
                  {
                    "columnId": "AMAVersion",
                    "label": "AMA version"
                  },
                  {
                    "columnId": "automaticUpgrade",
                    "label": "Automatic update"
                  }
                ]
              }
            },
            "showPin": false,
            "name": "VMAgentOverview",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "ð¡ _Click on one virtual machine name from the above list to see more details about resources comsumed and data collected by the monitoring agents._"
            },
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isEqualTo"
            },
            "name": "text - 8",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// ## Monitoring Agent footprint (WINDOWS & LINUX)\r\n//Used CPU on Windows computers\r\nlet UsedCpu_Windows = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"% Processor Time\"\r\n| where InstanceName == \"AMAExtHealthMonitor\" or InstanceName == \"MicrosoftDependencyAgent\" or InstanceName startswith \"MonAgent\"\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\n//Used CPU on Linux computers\r\nlet UsedCpu_Linux = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Pct User Time\"\r\n| where InstanceName in ('amacoreagent', 'microsoft-dependency-agent', 'mdsd', 'telegraf', 'MetricsExtension', 'agentlauncher')\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\nunion UsedCpu_Windows, UsedCpu_Linux",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent processes - Processor footprint",
              "noDataMessage": "No process metrics emitted into the selected workspace(s) for the agents. Please go the 'Get Started' tab to view the instructions for enabling these counters.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "cpuFootprintAzure",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// ## Monitoring Agent footprint (WINDOWS & LINUX)\r\n//Used CPU on Windows computers\r\nlet UsedCpu_Windows = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Working Set - Private\"\r\n| where InstanceName == \"AMAExtHealthMonitor\" or InstanceName == \"MicrosoftDependencyAgent\" or InstanceName startswith \"MonAgent\"\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\n//Used CPU on Linux computers\r\nlet UsedCpu_Linux = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Used Memory MBytes\"\r\n| where InstanceName in ('amacoreagent', 'microsoft-dependency-agent', 'mdsd', 'telegraf', 'MetricsExtension', 'agentlauncher')\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\nunion UsedCpu_Windows, UsedCpu_Linux",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent processes - Memory footprint",
              "noDataMessage": "No process metrics emitted into the selected workspace(s) for the agents. Please go the 'Get Started' tab to view the instructions for enabling these counters.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "memFootprintAzure",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "union withsource=SourceTable kind=inner Perf, Event, InsightsMetrics, Syslog\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where _ResourceId has_all ('Microsoft.Compute','virtualMachines')\r\n| summarize arg_max(TimeGenerated, *) by _ResourceId, SourceTable\r\n| extend SubscriptionId = split(_ResourceId, '/resourcegroups/')[0]\r\n| extend Computer = split(Computer, '.')[0]\r\n| project SubscriptionId, SourceTable, TimeGenerated, _ResourceId, Computer\r\n| evaluate pivot(SourceTable, max(TimeGenerated))",
              "size": 0,
              "title": "Agent(s) - Last collected data",
              "noDataMessage": "No telemetry emitted into the selected workspace(s) for the agents. Please make sure agents have been associated with corresponding data collection rules.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "_ResourceId",
                    "label": "Resource name"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo",
              "value": ""
            },
            "name": "lastCollectedDataAzVMs",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Azure"
      },
      "name": "azureVM",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Arc-enabled servers",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let heartbeatCount = (\r\nHeartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.HybridCompute' and ResourceType == 'machines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| extend State = iff(LastHeartbeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| summarize Count = dcount(Computer) by State);\r\ndatatable(State:string, Rank:int)[\"Unhealthy\", 0, \"Healthy\", 1]\r\n| join kind = leftouter heartbeatCount on State\r\n| extend Count = iff(isempty(State1), 0, Count)\r\n| project-away State1\r\n| extend Rank = iff(State == 'Unhealthy' and Count == 0, 2, Rank)\r\n| order by Rank asc\r\n| project-reorder State, Count",
              "size": 1,
              "showAnalytics": true,
              "title": "Agents health snapshot",
              "showRefreshButton": true,
              "exportFieldName": "series",
              "exportParameterName": "healthStatus",
              "exportDefaultValue": "ALL",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Unhealthy",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "agentHealthHybrid",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedHealthStatus = iif('{healthStatus}' == 'ALL', dynamic(['Unhealthy', 'Healthy']), dynamic(['{healthStatus}']));\r\nHeartbeat\r\n| where TimeGenerated {TimeRangeSelect:query}\r\n| where ResourceProvider == 'Microsoft.HybridCompute' and ResourceType == 'machines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| extend timeSegment = bin_at(TimeGenerated,{TimeRangeSelect:grain},now())\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer, timeSegment\r\n| extend State = iff(LastHeartbeat < (timeSegment + {TimeRangeSelect:grain} - {UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| where State in (selectedHealthStatus)\r\n| summarize Count = dcount(Computer) by State, timeSegment\r\n| order by timeSegment asc, State asc\r\n| project-reorder timeSegment, State, Count",
              "size": 1,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent health over selected period : {healthStatus}",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Unhealthy",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "66",
            "showPin": true,
            "name": "agentHealthTrendHybrid",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedHealthStatus = iif('{healthStatus}' == 'ALL', dynamic(['Unhealthy', 'Healthy']), dynamic(['{healthStatus}']));\r\nHeartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.HybridCompute' and ResourceType == 'machines'\r\n| where Category == \"Azure Monitor Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| extend agentState = iff(LastHeartBeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| where agentState in (selectedHealthStatus)\r\n| extend TimeFromNow = now() - LastHeartBeat\r\n| extend [\"TimeAgo\"] = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1s), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| project SubscriptionId, _ResourceId, Computer, LastHeartBeat, [\"TimeAgo\"], agentState\r\n| join kind=leftouter  (Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.HybridCompute' and ResourceType == 'machines'\r\n| where Category == \"SCOM Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| project _ResourceId, Category, Computer) on _ResourceId\r\n| join kind=leftouter  (Heartbeat\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where ResourceProvider == 'Microsoft.Compute' and ResourceType == 'virtualMachines'\r\n| where Category == \"Direct Agent\"\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| project _ResourceId, Category, Computer) on _ResourceId\r\n| extend SCOMAgent = iff(isnotempty(Computer1), \"Yes\", \"No\")\r\n| extend LegacyAgent = iff(isnotempty(Computer2), \"Yes\", \"No\")\r\n| project SubscriptionId, _ResourceId, Computer, LastHeartBeat, [\"Time\"]=strcat('ð ', TimeAgo), SCOMAgent, LegacyAgent, agentState",
              "size": 0,
              "showAnalytics": true,
              "title": "Heartbeat Pull",
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "_ResourceId",
                  "parameterName": "selectedResourceId",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "24.4286ch"
                    }
                  },
                  {
                    "columnMatch": "LastHeartBeat",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Time",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "19ch"
                    }
                  },
                  {
                    "columnMatch": "SCOMAgent",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "LegacyAgent",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "35ch"
                    }
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "35ch"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "LegacyAgent",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "_ResourceId",
                    "label": "Resource name"
                  },
                  {
                    "columnId": "Computer",
                    "label": "Computer name"
                  },
                  {
                    "columnId": "LastHeartBeat",
                    "label": "Last heartbeat"
                  },
                  {
                    "columnId": "Time",
                    "label": "Last heartbeat"
                  },
                  {
                    "columnId": "SCOMAgent",
                    "label": "SCOM agent"
                  },
                  {
                    "columnId": "LegacyAgent",
                    "label": "Legacy agent"
                  },
                  {
                    "columnId": "agentState",
                    "label": "Agent state"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "LegacyAgent",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "showPin": true,
            "name": "heartbeatPullHybrid",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend PowerStatus = properties.status,\r\n\tOSType = properties.osType,\r\n    IdentityType = identity.type,\r\n    ComputerName = tolower(name)\r\n| project subscriptionId, ComputerName, id, location, resourceGroup, PowerStatus, OSType, IdentityType\r\n| join (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"achines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName),\r\n    enableAutomaticUpgrade = tostring(properties.enableAutomaticUpgrade)\r\n| extend automaticUpgrade = iif(enableAutomaticUpgrade =='true', 'Enabled', 'Disabled')\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version, automaticUpgrade\r\n) on ComputerName",
              "size": 0,
              "title": "Arc and extension details",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "HybridMachinesARG"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\",\"mergeType\":\"innerunique\",\"leftTable\":\"heartbeatPullHybrid\",\"rightTable\":\"HybridMachinesARG\",\"leftColumn\":\"_ResourceId\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[heartbeatPullHybrid].SubscriptionId\",\"mergedName\":\"SubscriptionId\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid]._ResourceId\",\"mergedName\":\"_ResourceId\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].Computer\",\"mergedName\":\"Computer name\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].LastHeartBeat\",\"mergedName\":\"LastHeartBeat\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].Time\",\"mergedName\":\"Last heartbeat\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].agentState\",\"mergedName\":\"agentState\",\"fromId\":\"unknown\"},{\"originalName\":\"[HybridMachinesARG].PowerStatus\",\"mergedName\":\"PowerStatus\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].SCOMAgent\",\"mergedName\":\"SCOM agent\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[heartbeatPullHybrid].LegacyAgent\",\"mergedName\":\"Legacy agent\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].ComputerName\",\"mergedName\":\"ComputerName\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].id\",\"mergedName\":\"id\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].location\",\"mergedName\":\"location\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].OSType\",\"mergedName\":\"OSType\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].IdentityType\",\"mergedName\":\"IdentityType\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].ComputerName1\",\"mergedName\":\"ComputerName1\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].AMA\",\"mergedName\":\"AMA\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].AMAStatus\",\"mergedName\":\"AMAStatus\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].AMAVersion\",\"mergedName\":\"AMAVersion\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"},{\"originalName\":\"[HybridMachinesARG].automaticUpgrade\",\"mergedName\":\"automaticUpgrade\",\"fromId\":\"572c2eb8-5a93-4c54-b8b3-d3fef8642098\"}]}",
              "size": 0,
              "title": "Agent details : {healthStatus}",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "_ResourceId",
                  "parameterName": "selectedResourceId",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Computer name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "LastHeartBeat",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Last heartbeat",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18.5714ch"
                    }
                  },
                  {
                    "columnMatch": "agentState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "16.5714ch"
                    }
                  },
                  {
                    "columnMatch": "PowerStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Connected",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Expired",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Disconnected",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "19.5714ch"
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ComputerName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "OSType",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "IdentityType",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "AMAStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AMAVersion",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Subscriptions",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Resource name",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "_ResourceId",
                    "label": "Resource name"
                  },
                  {
                    "columnId": "agentState",
                    "label": "Agent state"
                  },
                  {
                    "columnId": "PowerStatus",
                    "label": "Arc agent status"
                  },
                  {
                    "columnId": "location",
                    "label": "Location"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "OSType",
                    "label": "OS type"
                  },
                  {
                    "columnId": "IdentityType",
                    "label": "Identity type"
                  },
                  {
                    "columnId": "AMA",
                    "label": "AMA Extension name"
                  },
                  {
                    "columnId": "AMAStatus",
                    "label": "AMA status"
                  },
                  {
                    "columnId": "AMAVersion",
                    "label": "AMA version"
                  },
                  {
                    "columnId": "automaticUpgrade",
                    "label": "Automatic upgrade"
                  }
                ]
              }
            },
            "showPin": false,
            "name": "HybridmachinesAgentStatus",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "ð¡ _Click on one Arc-enabled server name from the above list to see more details about resources consumed and data collected by the monitoring agents._"
            },
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isEqualTo"
            },
            "name": "text - 8",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// ## Monitoring Agent footprint (WINDOWS & LINUX)\r\n//Used CPU on Windows computers\r\nlet UsedCpu_Windows = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"% Processor Time\"\r\n| where InstanceName == \"AMAExtHealthMonitor\" or InstanceName == \"MicrosoftDependencyAgent\" or InstanceName startswith \"MonAgent\"\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\n//Used CPU on Linux computers\r\nlet UsedCpu_Linux = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Pct User Time\"\r\n| where InstanceName in ('amacoreagent', 'microsoft-dependency-agent', 'mdsd', 'telegraf', 'MetricsExtension', 'agentlauncher')\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\nunion UsedCpu_Windows, UsedCpu_Linux",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent processes - Processor footprint",
              "noDataMessage": "No process metrics emitted into the selected workspace(s) for the agents. Please go the 'Get Started' tab to view the instructions for enabling these counters.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  },
                  "max": 100
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "cpuFootprintHybrid",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// ## Monitoring Agent footprint (WINDOWS & LINUX)\r\n//Used CPU on Windows computers\r\nlet UsedCpu_Windows = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Working Set - Private\"\r\n| where InstanceName == \"AMAExtHealthMonitor\" or InstanceName == \"MicrosoftDependencyAgent\" or InstanceName startswith \"MonAgent\"\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\n//Used CPU on Linux computers\r\nlet UsedCpu_Linux = Perf\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where ObjectName == \"Process\"\r\n| where CounterName == \"Used Memory\"\r\n| where InstanceName in ('amacoreagent', 'microsoft-dependency-agent', 'mdsd', 'telegraf', 'MetricsExtension', 'agentlauncher')\r\n| summarize val=avg(CounterValue) by bin(TimeGenerated,5m), Computer\r\n| project TimeGenerated, Computer, val;\r\nunion UsedCpu_Windows, UsedCpu_Linux",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Agent processes - Memory footprint",
              "noDataMessage": "No process metrics emitted into the selected workspace(s) for the agents. Please go the 'Get Started' tab to view the instructions for enabling these counters.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "memFootprintHybrid",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "union withsource=SourceTable kind=inner Perf, Event, InsightsMetrics, Syslog\r\n| where (TimeGenerated {TimeRangeSelect:query})\r\n| where _ResourceId in ({selectedResourceId})\r\n| where _ResourceId has_all ('Microsoft.HybridCompute','machines')\r\n| summarize arg_max(TimeGenerated, *) by _ResourceId, SourceTable\r\n| extend SubscriptionId = split(_ResourceId, '/resourcegroups/')[0]\r\n| extend Computer = split(Computer, '.')[0]\r\n| project SubscriptionId, SourceTable, TimeGenerated, _ResourceId, Computer\r\n| evaluate pivot(SourceTable, max(TimeGenerated))",
              "size": 0,
              "title": "Agent(s) - Last collected data",
              "noDataMessage": "No telemetry emitted into the selected workspace(s) for the agents. Please make sure agents have been associated with corresponding data collection rules.",
              "noDataMessageStyle": 4,
              "timeContextFromParameter": "TimeRangeSelect",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "_ResourceId",
                    "label": "Resource name"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "selectedResourceId",
              "comparison": "isNotEqualTo",
              "value": ""
            },
            "name": "lastCollectedDataArcVMs",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Hybrid"
      },
      "name": "hybridVMs",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == 'microsoft.insights/datacollectionrules'\r\n| extend porpertiesJson = parse_json(properties)\r\n| extend provisioningState = porpertiesJson.provisioningState,\r\n    description = porpertiesJson.description,\r\n    createdBy = tags.createdBy\r\n| mv-expand porpertiesJson.dataSources.windowsEventLogs\r\n| extend xPath = tostring(porpertiesJson_dataSources_windowsEventLogs.xPathQueries)\r\n| project subscriptionId, id, name, resourceGroup, xPath, provisioningState, description, createdBy, properties\r\n| join kind = leftouter (\r\n    resources\r\n    | where type == 'microsoft.insights/datacollectionrules'\r\n    | extend porpertiesJson = parse_json( properties)\r\n    | mv-expand porpertiesJson.dataFlows\r\n    | extend streams = tostring(porpertiesJson_dataFlows.streams)\r\n    | extend streams = replace(@'(Microsoft-)*(\\w+)',@'\\2',streams)\r\n    | extend streams = trim('\\\\[\"',streams)\r\n    | extend streams = trim('\"\\\\]',streams)\r\n    | extend streams = replace('\",\"',',',streams)\r\n    | summarize streamsList = make_set(streams) by id\r\n    | project id, streamsList) on id\r\n| join kind = leftouter (\r\n    resources\r\n    | where type == 'microsoft.insights/datacollectionrules'\r\n    | extend porpertiesJson = parse_json( properties)\r\n    | mv-expand porpertiesJson.dataSources.syslog\r\n    | extend facilities = porpertiesJson_dataSources_syslog.facilityNames\r\n    | summarize facilitiesList = make_set(facilities) by id\r\n    | project id, facilitiesList) on id\r\n| join kind = leftouter (\r\nresources\r\n    | where type == \"microsoft.insights/datacollectionrules\"\r\n    | extend destinations = properties.destinations, dataSources = properties.dataSources\r\n    | extend DataSource = case(dataSources contains \"extensions\", \"Extensions\", \r\n                    dataSources contains \"syslog\", \"Syslog\", \r\n                    dataSources contains \"windowsEventLogs\", \"EventLogs\", \r\n                    dataSources contains \"performanceCounters\", \"Performance\", \"Other\")\r\n    | extend destination = case(destinations contains \"logAnalytics\", \"Log Analytics Workspace\", \r\n                    destinations contains \"azureMonitorMetrics\", \"Metrics\", \"Other\")\r\n    | extend workspace = destinations.logAnalytics\r\n    | mv-expand workspace\r\n    | extend workspaceId = tostring(split(workspace.workspaceResourceId,'/')[8])\r\n    | extend workspaceId = trim('\\\\[\"',workspaceId)\r\n    | extend workspaceId = trim('\"\\\\]',workspaceId)\r\n    | extend workspaceId = replace('\",\"',',',workspaceId)\r\n    | summarize workspaceIdList = make_set(workspaceId) by id, destination, DataSource\r\n    | project id, destination, workspaceIdList, DataSource ) on id\r\n| extend resourceGroup = split(id,'/providers/')[0]\r\n| extend dcrName = split(id,'/')[8]\r\n| project subscriptionId, id, resourceGroup, provisioningState, description, createdBy, xPath, streamsList, facilitiesList, destination, workspaceIdList, DataSource, properties, dcrName",
              "size": 0,
              "showAnalytics": true,
              "title": "Data Collection Rule list",
              "noDataMessage": "No data collection rules found in the selected subscription(s).",
              "showRefreshButton": true,
              "exportedParameters": [
                {
                  "fieldName": "id",
                  "parameterName": "dcrResourceId",
                  "parameterType": 1
                },
                {
                  "fieldName": "dcrName",
                  "parameterName": "dcrName",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true,
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "provisioningState",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "createdBy",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "streamsList",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "facilitiesList",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "workspaceIdList",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "properties",
                    "formatter": 1,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "dcrName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "id",
                    "label": "Resource"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "provisioningState",
                    "label": "Provisioning state"
                  },
                  {
                    "columnId": "description",
                    "label": "Description"
                  },
                  {
                    "columnId": "createdBy",
                    "label": "Created by"
                  },
                  {
                    "columnId": "xPath",
                    "label": "xPath"
                  },
                  {
                    "columnId": "streamsList",
                    "label": "Streams"
                  },
                  {
                    "columnId": "facilitiesList",
                    "label": "Syslog facilities"
                  },
                  {
                    "columnId": "destination",
                    "label": "Destination type"
                  },
                  {
                    "columnId": "workspaceIdList",
                    "label": "Workspace name"
                  },
                  {
                    "columnId": "DataSource",
                    "label": "Data source"
                  },
                  {
                    "columnId": "properties",
                    "label": "Properties"
                  }
                ]
              },
              "sortBy": []
            },
            "showPin": true,
            "name": "DCR-ARM-Query",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "ð¡ _Click on one Data Collection Rule name from the above list to see more details about associated machines._"
            },
            "conditionalVisibility": {
              "parameterName": "dcrName",
              "comparison": "isEqualTo"
            },
            "name": "selectDcrText",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{dcrResourceId}/associations\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-04-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"id\",\"columnid\":\"VMs\",\"substringRegexMatch\":\"(\\\\/subscriptions.*)(\\\\/providers.*|Providers.*)\",\"substringReplace\":\"$1\"},{\"path\":\"id\",\"columnid\":\"subscriptionId\",\"substringRegexMatch\":\"(\\\\/subscriptions.*)(\\\\/resourcegroups.*)\",\"substringReplace\":\"$1\"},{\"path\":\"id\",\"columnid\":\"resourceGroups\",\"substringRegexMatch\":\"(\\\\/subscriptions.*)(\\\\/providers\\\\/.*|Providers\\\\/.*)(\\\\/providers\\\\/.*|Providers\\\\/.*)\",\"substringReplace\":\"$1\"}]}}]}",
              "size": 0,
              "title": "VMs associated with the '{dcrName}' data collection rule",
              "noDataMessage": "No Virtual Machines associated with this data collection rule. See [Configure data colletion for the Azure Monitor Agent](https://docs.microsoft.com/en-us/azure/azure-monitor/agents/data-collection-rule-azure-monitor-agent) to see how you can associate virtual machines.",
              "noDataMessageStyle": 4,
              "showRefreshButton": true,
              "queryType": 12,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "VMs",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "resourceGroups",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": false
                    }
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_link_resourceGroups_3",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "VMs",
                    "label": "Virtual machine(s)"
                  },
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "resourceGroups",
                    "label": "Resource group"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_resourceGroups_3",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "dcrResourceId",
              "comparison": "isNotEqualTo"
            },
            "showPin": false,
            "name": "DCRVms",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "**Data collection rule(s) associated to selected VM**"
            },
            "name": "vmDcrText"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "f29631d3-1456-4a79-85ca-4d6fee0fd157",
                  "version": "KqlParameterItem/1.0",
                  "name": "VirtualMachine",
                  "label": "Virtual Machine",
                  "type": 5,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| where type in ('microsoft.hybridcompute/machines', 'microsoft.compute/virtualmachines')\r\n| distinct id\r\n| project value = id, label = id",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "Parameters2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "insightsresources\r\n| where type == 'microsoft.insights/datacollectionruleassociations'\r\n| extend associatedVMs = toupper(tostring(split(id,'/providers/Microsoft.Insights/dataCollectionRuleAssociations/')[0])), dcrName = tostring(properties.dataCollectionRuleId)\r\n| where associatedVMs in~ ({VirtualMachine})\r\n| project associatedVMs, dcrName, name\r\n| sort by tostring(split(associatedVMs, '/')[-1]) asc",
              "size": 0,
              "showAnalytics": true,
              "noDataMessage": "No data collection rule associated with this virtual machine. See [Configure data colletion for the Azure Monitor Agent](https://docs.microsoft.com/en-us/azure/azure-monitor/agents/data-collection-rule-azure-monitor-agent) to see how you can associate virtual machines.",
              "noDataMessageStyle": 4,
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "associatedVMs",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "dcrName",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "associatedVMs"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "associatedVMs",
                    "label": "Virtual Machine"
                  },
                  {
                    "columnId": "dcrName",
                    "label": "Data Collection Rule"
                  },
                  {
                    "columnId": "name",
                    "label": "Association Name"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "VirtualMachine",
              "comparison": "isNotEqualTo"
            },
            "name": "VMsToDcrAssociation",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{VirtualMachine}/providers/Microsoft.Insights/dataCollectionRuleAssociations\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2022-06-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"id\",\"columnid\":\"subscriptionId\",\"substringRegexMatch\":\"(\\\\/subscriptions.*)(\\\\/resourcegroups.*|\\\\/resourceGroups.*)\",\"substringReplace\":\"$1\"},{\"path\":\"id\",\"columnid\":\"virtualMachine\",\"substringRegexMatch\":\"(\\\\/subscriptions.*)(\\\\/providers/Microsoft.Insights.*)\",\"substringReplace\":\"$1\"},{\"path\":\"properties.dataCollectionRuleId\",\"columnid\":\"dcrId\"},{\"path\":\"name\",\"columnid\":\"associationName\"},{\"path\":\"systemData.createdAt\",\"columnid\":\"createdAt\"},{\"path\":\"systemData.lastModifiedAt\",\"columnid\":\"lastModifiedAt\"}]}}]}",
              "size": 0,
              "noDataMessage": "No data collection rule associated with this virtual machine. See [Configure data colletion for the Azure Monitor Agent](https://docs.microsoft.com/en-us/azure/azure-monitor/agents/data-collection-rule-azure-monitor-agent) to see how you can associate virtual machines.",
              "noDataMessageStyle": 4,
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 12,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "virtualMachine",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "createdAt",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "lastModifiedAt",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "VMs",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptioId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "resourceGroups",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": false
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "virtualMachine"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "virtualMachine",
                    "label": "Virtual Machine"
                  },
                  {
                    "columnId": "dcrId",
                    "label": "Data collection Rule"
                  },
                  {
                    "columnId": "associationName",
                    "label": "Association Name"
                  },
                  {
                    "columnId": "createdAt",
                    "label": "Associated On"
                  },
                  {
                    "columnId": "lastModifiedAt",
                    "label": "Last Modified On"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "_",
              "comparison": "isEqualTo",
              "value": "_"
            },
            "name": "VMsDcrs",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "DCR"
      },
      "name": "DCRGroup",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}