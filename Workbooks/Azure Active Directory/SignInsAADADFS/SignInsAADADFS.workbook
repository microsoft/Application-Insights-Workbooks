{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Sign-in Analysis Workbook (Preview)\r\nThis workbook will help you analyze your organization's sign-ins for both Azure AD and AD FS Sign-Ins. For help as you navigate this workbook, toggle Show Help below."
      },
      "name": "text - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e8df0096-0969-4423-91ec-7952ec1615e2",
            "version": "KqlParameterItem/1.0",
            "name": "ShowHelp",
            "label": "Show Help",
            "type": 10,
            "description": "Toggle to Show Help for each Tab",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": " [{ \"value\": \"1\", \"label\": \"Yes\" },{ \"value\": \"2\", \"label\": \"No\", \"selected\":true}, { \"value\": \"3\", \"label\": \"Change Log\"}]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 17"
    },
    {
      "type": 1,
      "content": {
        "json": "### Welcome to the Sign-In Analysis Workbook\r\nThis workbook is currently in preview. To access the previous version of the sign-in Workbook, navigate to \"Sign-Ins\" in Workbook templates. This Workbook can help analyze the organization's sign-ins for both Azure AD and AD FS Sign-Ins.\r\nFor help as you navigate this workbook, toggle Show Help at the page top.\r\n\r\n#### View Azure Active Directory Sign-In Data\r\n1. Ensure the *SigninLogs* Log Analytics stream is enabled in Diagnostic Settings to view the report.\r\n2. To get started, select one of the tabs and filter the parameters to select any filtering you would like to do on the report.\r\n\r\n#### View Azure Active Directory and AD FS Sign-In data\r\n1. If your organization uses AD FS, verify that the prerequisites are satisfied for [AD FS Sign-Ins in AAD Public Preview](https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-health-ad-fs-sign-in), which include the latest version of the Azure AD Connect Health for AD FS agent.\r\n2. Navigate to the \"Diagnostic Settings\" blade and verify that  *ADFSSignInLogs* is enabled.\r\n3. Select \"AD FS Data Enabled\" in this report, which displays queries with the streams combined to display all data. \r\n4. To get started, filter the report between AAD and AD FS data, use the \"Token Issuer Type\" filter. The default selection is \"All\", combining AAD and AD FS data. \r\n\r\n",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "ShowHelp",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "WelcomeShowHelp"
    },
    {
      "type": 1,
      "content": {
        "json": "### Change Log: As updates and fixes are made to the preview Workbook, they will be tracked.\r\n\r\n##### March 29, 2021\r\nPreview Workbook released for AAD and AD FS Sign-In data.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "ShowHelp",
        "comparison": "isEqualTo",
        "value": "3"
      },
      "name": "ShowHelpChangeLog"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "76a5730a-009f-4d75-be70-5b2238d901f5",
            "version": "KqlParameterItem/1.0",
            "name": "ADFSData",
            "label": "AD FS Data Enabled",
            "type": 10,
            "description": "Verify that ADFSSigninLogs is enabled in Diagnostic Settings. This is required to view AD FS data.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": " [{ \"value\": \"4\", \"label\": \"Yes\" },{ \"value\": \"5\", \"label\": \"No\", \"selected\":true}]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "ADFSDataParameter"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": []
      },
      "name": "group - 24",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "51a50588-4060-4037-867f-690537b30533",
            "cellValue": "View",
            "linkTarget": "parameter",
            "linkLabel": "General Analysis",
            "subTarget": "GeneralAnalysis",
            "preText": "ADFS Failed Sign-In",
            "style": "link"
          },
          {
            "id": "44e002a8-9200-4fbc-8e44-e97e65894e0f",
            "cellValue": "View",
            "linkTarget": "parameter",
            "linkLabel": "Error Analysis",
            "subTarget": "ErrorAnalysis",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5c23991d-1fc6-4a3c-827f-610a6f2640f2",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 2592000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "7ee67c7a-065c-47d3-bbbe-3826f9c2e846",
            "version": "KqlParameterItem/1.0",
            "name": "Apps",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": "10",
            "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "ab8bacea-a8e1-4b76-b459-40ff6b2bbd05",
            "version": "KqlParameterItem/1.0",
            "name": "Users",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": "20",
            "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| summarize Count = count() by UserDisplayName\r\n| order by Count desc, UserDisplayName asc\r\n| project Value = UserDisplayName, Label = strcat(UserDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "35",
      "name": "GeneralParameters"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "64a06cc9-937c-40b6-83c8-5fb4e7202105",
            "version": "KqlParameterItem/1.0",
            "name": "TokenIssuerType",
            "label": "Token Issuer Type",
            "type": 2,
            "description": "Filter what type of data to see, Azure AD, AD FS or both",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\": \"AzureAD\", \"label\": \"Azure AD\"},\r\n    {\"value\": \"ADFederationServices\", \"label\": \"AD FS\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "ADFSData",
        "comparison": "isEqualTo",
        "value": "4"
      },
      "name": "ADFSParameter"
    },
    {
      "type": 1,
      "content": {
        "json": "## Sign-In Activity Summary"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isNotEqualTo",
        "value": "ADFSAnalysis"
      },
      "name": "text - 23"
    },
    {
      "type": 1,
      "content": {
        "json": "##### Sign-In Summary\r\n\r\nThe Sign-In summary displays an overall view of the amount of successful and failed sign-ins in the organization. Select a tile to be able to filter based on successful, failed, or pending user action sign-ins.\r\n\r\nThe sign-ins summary by time may show any anomalies in failures in the overall view of the tenant.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isNotEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ShowHelp",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "ShowHelpSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\");\r\ndata\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count() \r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
        "size": 3,
        "title": "💡 Click on a tile in the grid below to filter the report further.",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportFieldName": "Status",
        "exportParameterName": "SigninStatus",
        "exportDefaultValue": "*",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "SigninStatus",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "blue",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 9,
            "formatOptions": {
              "min": 0,
              "palette": "blue",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "name": "AADFilter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs | union ADFSSignInLogs;\r\nlet signInStatusData = data\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n|extend errorCode = Status_dynamic.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\");\r\n\r\nsignInStatusData\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (signInStatusData\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    signInStatusData \r\n    | summarize Count = count() \r\n    | extend jkey = 1\r\n    | join kind=inner (signInStatusData\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
        "size": 3,
        "title": "💡 Click on a tile in the grid below to filter the report further.",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportFieldName": "Status",
        "exportParameterName": "SigninStatus",
        "exportDefaultValue": "*",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "SigninStatus",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "blue",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 9,
            "formatOptions": {
              "min": 0,
              "palette": "blue",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "name": "CombinedFilter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs | union ADFSSignInLogs;\r\ndata\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| project TimeGenerated, UserPrincipalName, Status_dynamic\r\n|extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| make-series SignIns = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus\r\n\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Summary of Sign-Ins  by Time",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Success",
              "color": "green"
            },
            {
              "seriesName": "Failure",
              "color": "redBright"
            },
            {
              "seriesName": "Pending user action",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "showPin": true,
      "name": "CombinedSignInTimeChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs;\r\ndata\r\n| project TimeGenerated, UserPrincipalName, Status\r\n|extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| make-series SignIns = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus\r\n\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Summary of Sign Ins by Time",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Success",
              "color": "green"
            },
            {
              "seriesName": "Failure",
              "color": "redBright"
            },
            {
              "seriesName": "Pending user action",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "showPin": true,
      "name": "AADSignInTimeChart"
    },
    {
      "type": 1,
      "content": {
        "json": "## Sign-In Analysis by Location"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "GeneralAnalysis"
      },
      "name": "LocationTitle"
    },
    {
      "type": 1,
      "content": {
        "json": "#### Map of Locations\r\nLocation data color scheme is based on the amount of sign-ins. The gradient will display the darkest color for the most sign-ins.\r\n\r\nThe data is aggregated from:\r\n- Location Details from each sign-in, which includes the country and city of the sign-in.\r\n- The status of sign-in: Success, Failure, or Interrupted. To view different types of sign-ins, select the corresponding tile at the top of this report to filter.\r\n\r\n#### Location Sign In Details\r\nThis chart can be used to view details from each country in a list view. Each row can be expanded to see the sign-in counts based on city. The graph is ordered based on the highest volume of sign-ins.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "ShowHelp",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        }
      ],
      "name": "LocationHelp"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| project LocationDetails, TokenIssuerType, Status\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| summarize Count = count() by tostring(LocationDetails.countryOrRegion)",
        "size": 0,
        "showAnalytics": true,
        "title": "Sign-Ins Mapped by Country",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "map",
        "mapSettings": {
          "locInfo": "CountryRegion",
          "locInfoColumn": "LocationDetails_countryOrRegion",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "nodeColorField": "Count",
            "colorAggregation": "Sum",
            "type": "heatmap",
            "heatmapPalette": "purpleBlue",
            "heatmapMin": 0
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "50",
      "name": "AADLocationMap"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs | union ADFSSignInLogs;\r\ndata\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| project LocationDetails, TokenIssuerType, Status_dynamic\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| summarize Count = count() by tostring(LocationDetails.countryOrRegion)",
        "size": 0,
        "showAnalytics": true,
        "title": "Sign-Ins Mapped by Country",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "map",
        "mapSettings": {
          "locInfo": "CountryRegion",
          "locInfoColumn": "LocationDetails_countryOrRegion",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "nodeColorField": "Count",
            "colorAggregation": "Sum",
            "type": "heatmap",
            "heatmapPalette": "purpleBlue",
            "heatmapMin": 0
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "customWidth": "50",
      "name": "CombinedLocationMap"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet countryData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country\r\n| join kind=inner\r\n(\r\n    data\r\n   | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n    | project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,  Trend\r\n| order by TotalCount desc, Country asc;\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City\r\n| join kind=inner\r\n(\r\n    data    \r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n    | project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root')\r\n| order by ['Sign-in Count'] desc, Name asc",
        "size": 0,
        "showAnalytics": true,
        "title": "Location Sign-In Details",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5
            },
            {
              "columnMatch": "Type",
              "formatter": 5
            },
            {
              "columnMatch": "Sign-in Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Failure Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "red"
              }
            },
            {
              "columnMatch": "Interrupt Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Success Rate",
              "formatter": 5
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "50",
      "name": "AADLocationDetails"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs | union ADFSSignInLogs;\r\n\r\nlet totalData = data\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\n\r\nlet countryData = totalData\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country\r\n| join kind=inner\r\n(\r\n    totalData\r\n   | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n    | project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,  Trend\r\n| order by TotalCount desc, Country asc;\r\ntotalData\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City\r\n| join kind=inner\r\n(\r\n    totalData    \r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n    | project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root')\r\n| order by ['Sign-in Count'] desc, Name asc\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Location Sign-In Details",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5
            },
            {
              "columnMatch": "Type",
              "formatter": 5
            },
            {
              "columnMatch": "Sign-in Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Failure Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "red"
              }
            },
            {
              "columnMatch": "Interrupt Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Success Rate",
              "formatter": 5
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "customWidth": "50",
      "name": "CombinedLocationDetails"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "name": "text - 5"
    },
    {
      "type": 1,
      "content": {
        "json": "## Sign-In Analysis by Device"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "name": "DeviceText"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet appData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Os = tostring(DeviceDetail.operatingSystem)\r\n| where Os != ''\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Os = tostring(DeviceDetail.operatingSystem)\r\n    | project-away TimeGenerated) on Os\r\n| order by TotalCount desc, Os asc\r\n| project Os, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n    | project-away TimeGenerated) on Os, Browser\r\n| order by TotalCount desc, Os asc\r\n| project Os, Browser, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on Os\r\n| project Id, Name = Browser, Type = 'Browser', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = Os, Type = 'Operating System', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = -1)\r\n| order by ['Sign-in Count'] desc, Name asc",
        "size": 1,
        "showAnalytics": true,
        "title": "Sign-ins by Device",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "exportParameterName": "DeviceDetail",
        "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Type",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Sign-in Count",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Failure Count|Interrupt Count",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "orange",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Success Rate",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "percent"
                }
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name",
            "expandTopLevel": false
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "67",
      "showPin": true,
      "name": "DeviceDetails"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let details = dynamic({DeviceDetail});\r\nlet data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| extend Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n| where details.Type == '*' or (details.Type == 'Operating System' and Os == details.Name) or (details.Type == 'Browser' and Browser == details.Name);\r\ndata\r\n| order by TimeGenerated desc\r\n| top 200 by TimeGenerated desc\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| project User = UserDisplayName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName\r\n\r\n",
        "size": 1,
        "showAnalytics": true,
        "title": "Device Sign-in details",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Sign-in Status",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "showIcon": true
              }
            },
            {
              "columnMatch": "App",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Error code",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Result type",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Result signature",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Result description",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Conditional access policies",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Conditional access status",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operating system",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Browser",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Country or region",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "State",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "City",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Time generated",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "User principal name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "GeneralAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "33",
      "name": "DeviceExtraDetails"
    },
    {
      "type": 1,
      "content": {
        "json": "## Sign-In Error Analysis\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "ADFSAnalysis"
      },
      "name": "text - 7"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\r\n| project TimeGenerated, UserPrincipalName, Status\r\n|extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| make-series SignIns = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus\r\n",
        "size": 0,
        "showAnalytics": true,
        "color": "redBright",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "50",
      "name": "AADErrorSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs | union ADFSSignInLogs\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| project TimeGenerated, UserPrincipalName, Status_dynamic\r\n|extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| make-series SignIns = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus\r\n",
        "size": 0,
        "showAnalytics": true,
        "color": "redBright",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "customWidth": "50",
      "name": "CombinedErrorSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend Country = tostring(LocationDetails.countryOrRegion)\r\n| extend City = tostring(LocationDetails.city)\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n|where errorCode == 50126\r\n| project Application = AppDisplayName, AppId, TimeGenerated\r\n| summarize count() by Application\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Top Applications with Bad Password Attempts",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "customWidth": "50",
      "showPin": true,
      "name": "AADBadPasswordAttempt"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs | union ADFSSignInLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| extend Country = tostring(LocationDetails.countryOrRegion)\r\n| extend City = tostring(LocationDetails.city)\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n|where errorCode == 50126\r\n| project Application = AppDisplayName, AppId, TimeGenerated\r\n| summarize count() by Application\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Top Applications with Bad Password Attempts",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "customWidth": "50",
      "showPin": true,
      "name": "CombinedDataBadPassword"
    },
    {
      "type": 1,
      "content": {
        "json": "\r\n\r\n## Top Sign-In Errors by User or IP\r\nSelect the parameter value below to display the query based on the parameter you would like to view."
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "ErrorAnalysis"
      },
      "name": "ErrorUserIPTitle"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "037f0b58-686f-41bd-8dc2-b556efe51958",
            "version": "KqlParameterItem/1.0",
            "name": "ViewErrors",
            "label": "View Errors By",
            "type": 10,
            "description": "Select how to view Top Sign-In Errors",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[{ \"value\": 1, \"label\": \"Users\" }, { \"value\": 2, \"label\": \"IP\", \"selected\":true }]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "ErrorAnalysis"
      },
      "name": "UserIPFilter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| summarize count() by User = UserDisplayName, Error_Code = ResultType, Error_Description = ResultDescription, Location = tostring(LocationDetails.countryOrRegion)\r\n| extend Count = count_\r\n| order by Count desc\r\n| project User, Error = Error_Code, Description = Error_Description, Location, Count\r\n| take 50",
        "size": 0,
        "showAnalytics": true,
        "title": "Top Sign-In Errors by User",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "filter": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ViewErrors",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "showPin": true,
      "name": "AADErrorAnalysisUser"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs | union ADFSSignInLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| summarize count() by User = UserDisplayName, Error_Code = ResultType, Error_Description = ResultDescription, Location = tostring(LocationDetails.countryOrRegion)\r\n| extend Count = count_\r\n| order by Count desc\r\n| project User, Error = Error_Code, Description = Error_Description, Location, Count\r\n| take 50",
        "size": 0,
        "showAnalytics": true,
        "title": "Top Sign-In Errors by User",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "filter": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ViewErrors",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "showPin": true,
      "name": "CoimbinedErrorAnalysisUser"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| summarize count() by IP_Address = IPAddress, Error_Code = ResultType, Error_Description = ResultDescription, Location = tostring(LocationDetails.countryOrRegion)\r\n| extend Count = count_\r\n| order by Count desc\r\n| project IP = IP_Address, Error = Error_Code, Description = Error_Description, Location, Count\r\n| take 50",
        "size": 0,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ViewErrors",
          "comparison": "isEqualTo",
          "value": "2"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "5"
        }
      ],
      "showPin": true,
      "name": "AADErrorAnalysisIP"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs | union ADFSSignInLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|where TokenIssuerType in ({TokenIssuerType}) or '*' in ({TokenIssuerType})\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n| summarize count() by IP_Address = IPAddress, Error_Code = ResultType, Error_Description = ResultDescription, Location = tostring(LocationDetails.countryOrRegion)\r\n| extend Count = count_\r\n| order by Count desc\r\n| project IP = IP_Address, Error = Error_Code, Description = Error_Description, Location, Count\r\n| take 50",
        "size": 0,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ViewErrors",
          "comparison": "isEqualTo",
          "value": "2"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "showPin": true,
      "name": "CombinedErrorAnalysisIP"
    },
    {
      "type": 1,
      "content": {
        "json": "\r\n\r\n## AD FS Account Lockout Analysis"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "name": "AccountLockoutADFS"
    },
    {
      "type": 1,
      "content": {
        "json": "### Data from AD FS is aggregated and sent through the Azure AD Connect Health agent to the Azure AD Sign-Ins Report and Log Analytics.\r\nAD FS Account Lockout information is aggregated from AD FS Events 411, 1500, and is marked in the Azure AD logs as Error Code 30030. \r\n\r\nAdditional data provided in logs relaged to AD FS lockouts include:\r\n- Attempted Login Name (Alternate Login In)\r\n- IP the Request Originated From \r\n- User Agent String\r\n\r\nIf no data is present, verify that the Connect Health agent for AD FS is installed, upgraded to the latest version, and the \"ADFSSignInLogs\" stream in Log Analytics is enabled.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        },
        {
          "parameterName": "ShowHelp",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        }
      ],
      "name": "ADFSAccountLockoutText"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ADFSSignInLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n| extend errorCode = Status_dynamic.errorCode\r\n| extend SigninStatus = case((errorCode == 0, \"Success\", errorCode == 50058, \"Pending action (Interrupts)\",errorCode == 50140, \"Pending action (Interrupts)\", errorCode == 51006, \"Pending action (Interrupts)\", errorCode == 50059, \"Pending action (Interrupts)\",errorCode == 65001, \"Pending action (Interrupts)\", errorCode == 52004, \"Pending action (Interrupts)\", errorCode == 50055, \"Pending action (Interrupts)\", errorCode == 50144, \"Pending action (Interrupts)\", errorCode == 50072, \"Pending action (Interrupts)\", errorCode == 50074, \"Pending action (Interrupts)\", errorCode == 16000, \"Pending action (Interrupts)\", errorCode == 16001, \"Pending action (Interrupts)\", errorCode == 16003, \"Pending action (Interrupts)\", errorCode == 50127, \"Pending action (Interrupts)\", errorCode == 50125, \"Pending action (Interrupts)\", errorCode == 50129, \"Pending action (Interrupts)\", errorCode == 50143, \"Pending action (Interrupts)\", errorCode == 81010, \"Pending action (Interrupts)\", errorCode == 81014, \"Pending action (Interrupts)\", errorCode == 81012 ,\"Pending action (Interrupts)\", \"Failure\")\r\n| where SigninStatus == \"Failure\"\r\n|where errorCode == 30030\r\n| project TimeGenerated, UserDisplayName, AlternateSignInName, IPAddress, UserAgent\r\n| order by TimeGenerated desc\r\n| take 30\r\n\r\n\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Users with Account Lockouts",
        "noDataMessage": "No users or data with account lockouts. ",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "filter": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "ADFSData",
          "comparison": "isEqualTo",
          "value": "4"
        },
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "ErrorAnalysis"
        }
      ],
      "customWidth": "50",
      "showPin": true,
      "name": "AccountLockoutADFS"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
