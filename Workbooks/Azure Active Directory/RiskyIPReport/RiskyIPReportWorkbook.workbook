{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Risky IP Workbook"
      },
      "name": "title"
    },
    {
      "type": 1,
      "content": {
        "json": "This risky IP workbook analyzes data from ADFSSignInLogs to help you detect password spray or password brute force attacks. The workbook has two parts. The first part \"Risky IP Analysis\" identifies risky IP addresses based on designated error thresholds and detection window length. The second part provides the sign-in details and error eounts for selected IPs.\r\n\r\nSelect a data time range to get started.",
        "style": "info"
      },
      "name": "description"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "56e17684-47a6-4d43-bb3a-bdc24240f676",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 259200000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "ParameterThreshold"
    },
    {
      "type": 1,
      "content": {
        "json": "# Risky IP Analysis\r\nAn external IP address is considered risky if \r\n1. The number of failed sign-ins due to extranet lockout errors exceeds the designated threshold  during a detection window\r\n2. Or the combined number of failed sign-ins due to bad password errors and extranet lockout errors exceeds the threshold.\r\n\r\nSelect Risky IP detection window length and error thresholds to view the detected risky IP addresses."
      },
      "name": "RiskyAnalysisInfo"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "db0cc9ee-8c08-4a39-83ef-45627362795d",
            "version": "KqlParameterItem/1.0",
            "name": "DetectionWindowLength",
            "label": "Detection Window Length",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": " [\r\n     { \"value\": \"Hour\", \"label\": \"Hour\", \"selected\":true },\r\n     { \"value\": \"Day\", \"label\": \"Day\"}\r\n]\r\n",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "TimeParameter"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "dd9af165-620e-4311-ba9e-86ca3d8bf339",
            "version": "KqlParameterItem/1.0",
            "name": "ExtranetLockoutErrorCountThresholdHourly",
            "label": "Extranet Lockout Error Threshold",
            "type": 1,
            "description": "An IP address is considered risky if the number of Extranet Lockout errors from that IP exceeds this threshold.",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"25\\\", \\\"label\\\":\\\"ExtranetLockoutErrorCountDefaultThresholdForHourDetectionWindow\\\" }\\r\\n]\",\"transformers\":null}",
            "value": "0",
            "typeSettings": {
              "paramValidationRules": [
                {
                  "regExp": "\\d+",
                  "match": true,
                  "message": ""
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "d359a319-4813-4c2a-a254-6aaa647e781a",
            "version": "KqlParameterItem/1.0",
            "name": "BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly",
            "label": "Bad Password + Extranet Lockout Error Threshold",
            "type": 1,
            "description": "An IP address is considered risky if the sum of Bad Username/Password and Extranet Lockout errors from that IP exceeds this threshold.",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"50\\\", \\\"label\\\":\\\"BadpasswordAndExtranetLockoutErrorCountDefaultThresholdForHourWindow\\\" }\\r\\n]\",\"transformers\":null}",
            "value": "0",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 8
      },
      "conditionalVisibility": {
        "parameterName": "DetectionWindowLength",
        "comparison": "isEqualTo",
        "value": "Hour"
      },
      "name": "BadPassThreshold"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "86e67827-003e-436f-84ab-796f70313e0e",
            "version": "KqlParameterItem/1.0",
            "name": "ExtranetLockoutErrorCountThresholdDaily",
            "label": "Lockout Error Threshold",
            "type": 1,
            "description": "An IP address is considered risky if the number of Extranet Lockout errors from that IP exceeds this threshold.",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"50\\\", \\\"label\\\":\\\"ExtranetLockoutErrorCountDefaultThresholdDaily\\\" }\\r\\n]\",\"transformers\":null}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "ee97dc64-36c0-4605-802e-fbd4cb0cae45",
            "version": "KqlParameterItem/1.0",
            "name": "BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily",
            "label": "Bad Password + Extranet Lockout Error Threshold",
            "type": 1,
            "description": "An IP address is considered risky if the sum of Bad Username/Password and Extranet Lockout errors from that IP exceeds this threshold.",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"100\\\", \\\"label\\\":\\\"BadUsernameOrPasswordAndExtranetLockoutErrorCountDefaultThresholdDaily\\\" }\\r\\n]\",\"transformers\":null}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 8
      },
      "conditionalVisibility": {
        "parameterName": "DetectionWindowLength",
        "comparison": "isEqualTo",
        "value": "Day"
      },
      "name": "ESLThreshold"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let isWhiteListedIP = (IP:string) {\r\n    // exchangeOnline IP ranges\r\n    ipv4_is_in_range(IP, \"13.107.6.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.9.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.18.10/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.19.10/31\")\r\n    or ipv4_is_in_range(IP, \"23.103.160.0/20\")\r\n    or ipv4_is_in_range(IP, \"23.103.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"40.96.0.0/13\")\r\n    or ipv4_is_in_range(IP, \"40.104.0.0/15\")\r\n    or ipv4_is_in_range(IP, \"70.37.151.128/25\")\r\n    or ipv4_is_in_range(IP, \"111.221.112.0/21\")\r\n    or ipv4_is_in_range(IP, \"131.253.33.215/32\")\r\n    or ipv4_is_in_range(IP, \"132.245.0.0/16\")\r\n    or ipv4_is_in_range(IP, \"134.170.68.0/23\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.16/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.224/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.106.128/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.232.0/21\")\r\n    or ipv4_is_in_range(IP, \"157.56.240.0/20\")\r\n    or ipv4_is_in_range(IP, \"191.232.96.0/19\")\r\n    or ipv4_is_in_range(IP, \"191.234.6.152/32\")\r\n    or ipv4_is_in_range(IP, \"191.234.140.0/22\")\r\n    or ipv4_is_in_range(IP, \"191.234.224.0/22\")\r\n    or ipv4_is_in_range(IP, \"204.79.197.215/32\")\r\n    or ipv4_is_in_range(IP, \"206.191.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"207.46.150.128/25\")\r\n    or ipv4_is_in_range(IP, \"207.46.203.128/26\")\r\n    // Local IP address ranges\r\n    or ipv4_is_in_range(IP, \"10.0.0.0/8\")\r\n    or ipv4_is_in_range(IP, \"172.16.0.0/12\")\r\n    or ipv4_is_in_range(IP, \"192.168.0.0/16\")\r\n};\r\n\r\nADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where ErrorCode in (\"50126\", \"300030\")\r\n| where isWhiteListedIP(IPAddress) == false\r\n| where NetworkLocationDetails !contains \"Intranet\" // Filter out sign-ins from local network as local IPs are not considered risky\r\n| extend DetectionWindowLength = iff('{DetectionWindowLength}' == 'Hour', floor(CreatedDateTime, 1h), floor(CreatedDateTime, 1d))\r\n| summarize badPasswordErrorCount = countif(ErrorCode == \"50126\"), extranetLockoutErrorCount = countif(ErrorCode == \"300030\") by IPAddress, DetectionWindowLength, Location\r\n| where extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {ExtranetLockoutErrorCountThresholdHourly}, {ExtranetLockoutErrorCountThresholdDaily}) \r\nor \r\nbadPasswordErrorCount + extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly}, {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily}) // Take customized threshold parameters\r\n| summarize Count = dcount(IPAddress) by Location",
        "size": 0,
        "title": "Risky IPs Mapped by Location",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "map",
        "mapSettings": {
          "locInfo": "CountryRegion",
          "locInfoColumn": "Location",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "labelSettings": "Location",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "nodeColorField": "Count",
            "colorAggregation": "Sum",
            "type": "heatmap",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "customWidth": "60",
      "name": "LocationRiskyIP"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let isWhiteListedIP = (IP:string) {\r\n    // exchangeOnline IP ranges\r\n    ipv4_is_in_range(IP, \"13.107.6.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.9.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.18.10/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.19.10/31\")\r\n    or ipv4_is_in_range(IP, \"23.103.160.0/20\")\r\n    or ipv4_is_in_range(IP, \"23.103.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"40.96.0.0/13\")\r\n    or ipv4_is_in_range(IP, \"40.104.0.0/15\")\r\n    or ipv4_is_in_range(IP, \"70.37.151.128/25\")\r\n    or ipv4_is_in_range(IP, \"111.221.112.0/21\")\r\n    or ipv4_is_in_range(IP, \"131.253.33.215/32\")\r\n    or ipv4_is_in_range(IP, \"132.245.0.0/16\")\r\n    or ipv4_is_in_range(IP, \"134.170.68.0/23\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.16/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.224/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.106.128/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.232.0/21\")\r\n    or ipv4_is_in_range(IP, \"157.56.240.0/20\")\r\n    or ipv4_is_in_range(IP, \"191.232.96.0/19\")\r\n    or ipv4_is_in_range(IP, \"191.234.6.152/32\")\r\n    or ipv4_is_in_range(IP, \"191.234.140.0/22\")\r\n    or ipv4_is_in_range(IP, \"191.234.224.0/22\")\r\n    or ipv4_is_in_range(IP, \"204.79.197.215/32\")\r\n    or ipv4_is_in_range(IP, \"206.191.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"207.46.150.128/25\")\r\n    or ipv4_is_in_range(IP, \"207.46.203.128/26\")\r\n    // Local IP address ranges\r\n    or ipv4_is_in_range(IP, \"10.0.0.0/8\")\r\n    or ipv4_is_in_range(IP, \"172.16.0.0/12\")\r\n    or ipv4_is_in_range(IP, \"192.168.0.0/16\")\r\n};\r\n\r\nADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where ErrorCode in (\"50126\", \"300030\")\r\n| where isWhiteListedIP(IPAddress) == false\r\n| where NetworkLocationDetails !contains \"Intranet\" // Filter out sign-ins from local network as local IPs are not considered risky\r\n| extend DetectionWindowLength = iff('{DetectionWindowLength}' == 'Hour', floor(CreatedDateTime, 1h), floor(CreatedDateTime, 1d))\r\n| summarize badPasswordErrorCount = countif(ErrorCode == \"50126\"), extranetLockoutErrorCount = countif(ErrorCode == \"300030\") by IPAddress, DetectionWindowLength, Location\r\n| where extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {ExtranetLockoutErrorCountThresholdHourly}, {ExtranetLockoutErrorCountThresholdDaily}) \r\nor \r\nbadPasswordErrorCount + extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly}, {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily}) // Take customized threshold parameters\r\n| summarize dcount(IPAddress) by Location",
        "size": 0,
        "title": "Top Regions with Most Risky IPs",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "piechart"
      },
      "customWidth": "40",
      "name": "TimeRangeParameter"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let isWhiteListedIP = (IP:string) {\r\n    // exchangeOnline IP ranges\r\n    ipv4_is_in_range(IP, \"13.107.6.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.9.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.18.10/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.19.10/31\")\r\n    or ipv4_is_in_range(IP, \"23.103.160.0/20\")\r\n    or ipv4_is_in_range(IP, \"23.103.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"40.96.0.0/13\")\r\n    or ipv4_is_in_range(IP, \"40.104.0.0/15\")\r\n    or ipv4_is_in_range(IP, \"70.37.151.128/25\")\r\n    or ipv4_is_in_range(IP, \"111.221.112.0/21\")\r\n    or ipv4_is_in_range(IP, \"131.253.33.215/32\")\r\n    or ipv4_is_in_range(IP, \"132.245.0.0/16\")\r\n    or ipv4_is_in_range(IP, \"134.170.68.0/23\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.16/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.224/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.106.128/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.232.0/21\")\r\n    or ipv4_is_in_range(IP, \"157.56.240.0/20\")\r\n    or ipv4_is_in_range(IP, \"191.232.96.0/19\")\r\n    or ipv4_is_in_range(IP, \"191.234.6.152/32\")\r\n    or ipv4_is_in_range(IP, \"191.234.140.0/22\")\r\n    or ipv4_is_in_range(IP, \"191.234.224.0/22\")\r\n    or ipv4_is_in_range(IP, \"204.79.197.215/32\")\r\n    or ipv4_is_in_range(IP, \"206.191.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"207.46.150.128/25\")\r\n    or ipv4_is_in_range(IP, \"207.46.203.128/26\")\r\n    // Local IP address ranges\r\n    or ipv4_is_in_range(IP, \"10.0.0.0/8\")\r\n    or ipv4_is_in_range(IP, \"172.16.0.0/12\")\r\n    or ipv4_is_in_range(IP, \"192.168.0.0/16\")\r\n};\r\n\r\nADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where ErrorCode in (\"50126\", \"300030\")\r\n| where isWhiteListedIP(IPAddress) == false\r\n| where NetworkLocationDetails !contains \"Intranet\" // Filter out sign-ins from local network as local IPs are not considered risky\r\n| extend detectionWindowStartTime = iff('{DetectionWindowLength}' == 'Hour', floor(CreatedDateTime, 1h), floor(CreatedDateTime, 1d))\r\n| summarize badPasswordErrorCount = countif(ErrorCode == \"50126\"), extranetLockoutErrorCount = countif(ErrorCode == \"300030\") by IPAddress, detectionWindowStartTime, Location\r\n| where extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {ExtranetLockoutErrorCountThresholdHourly}, {ExtranetLockoutErrorCountThresholdDaily}) \r\nor \r\nbadPasswordErrorCount + extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly}, {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily}) // Take customized threshold parameters\r\n| make-series riskyIPCount = dcount(IPAddress) default = 0 on detectionWindowStartTime from {TimeRange:start} to {TimeRange:end} step iff('{DetectionWindowLength}'=='Hour', 1h, 1d) by Location\r\n",
        "size": 0,
        "title": "Risky IP Count by time",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "barchart"
      },
      "name": "CountbyTime"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let isWhiteListedIP = (IP:string) {\r\n    // exchangeOnline IP ranges\r\n    ipv4_is_in_range(IP, \"13.107.6.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.9.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.18.10/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.19.10/31\")\r\n    or ipv4_is_in_range(IP, \"23.103.160.0/20\")\r\n    or ipv4_is_in_range(IP, \"23.103.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"40.96.0.0/13\")\r\n    or ipv4_is_in_range(IP, \"40.104.0.0/15\")\r\n    or ipv4_is_in_range(IP, \"70.37.151.128/25\")\r\n    or ipv4_is_in_range(IP, \"111.221.112.0/21\")\r\n    or ipv4_is_in_range(IP, \"131.253.33.215/32\")\r\n    or ipv4_is_in_range(IP, \"132.245.0.0/16\")\r\n    or ipv4_is_in_range(IP, \"134.170.68.0/23\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.16/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.224/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.106.128/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.232.0/21\")\r\n    or ipv4_is_in_range(IP, \"157.56.240.0/20\")\r\n    or ipv4_is_in_range(IP, \"191.232.96.0/19\")\r\n    or ipv4_is_in_range(IP, \"191.234.6.152/32\")\r\n    or ipv4_is_in_range(IP, \"191.234.140.0/22\")\r\n    or ipv4_is_in_range(IP, \"191.234.224.0/22\")\r\n    or ipv4_is_in_range(IP, \"204.79.197.215/32\")\r\n    or ipv4_is_in_range(IP, \"206.191.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"207.46.150.128/25\")\r\n    or ipv4_is_in_range(IP, \"207.46.203.128/26\")\r\n    // Local IP address ranges\r\n    or ipv4_is_in_range(IP, \"10.0.0.0/8\")\r\n    or ipv4_is_in_range(IP, \"172.16.0.0/12\")\r\n    or ipv4_is_in_range(IP, \"192.168.0.0/16\")\r\n};\r\n\r\nADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where ErrorCode in (\"50126\",\"300030\")\r\n| where isWhiteListedIP(IPAddress) == false\r\n| where NetworkLocationDetails !contains \"Intranet\" // Filter out sign-ins from local network as local IPs are not considered risky\r\n| extend detectionWindowStartTime = iff('{DetectionWindowLength}' == 'Hour', floor(CreatedDateTime, 1h), floor(CreatedDateTime, 1d))\r\n| summarize badPasswordErrorCount = countif(ErrorCode == \"50126\"), extranetLockoutErrorCount = countif(ErrorCode == \"300030\"), uniqueUsersAttempted = dcount(UserId), detectionWindowLength = '{DetectionWindowLength}' by IPAddress, detectionWindowStartTime, Location, TenantId, TokenIssuerName\r\n| where extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {ExtranetLockoutErrorCountThresholdHourly}, {ExtranetLockoutErrorCountThresholdDaily}) \r\nor \r\nbadPasswordErrorCount + extranetLockoutErrorCount > iff('{DetectionWindowLength}' == 'Hour', {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly}, {BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily}) // Take customized threshold parameters\r\n| sort by detectionWindowStartTime\r\n| project \r\n['Detection Window Start Time'] = detectionWindowStartTime, \r\n['Detection Window Length'] = detectionWindowLength, \r\n['IP Address'] = IPAddress, \r\nLocation, \r\n['Bad Password Error Count (50126)'] = badPasswordErrorCount, \r\n['Extranet Lockout Error Count (300030)']= extranetLockoutErrorCount, \r\n['Unique Users Attempted'] = uniqueUsersAttempted, \r\n['Extranet Lockout Error Threshold'] = iff('{DetectionWindowLength}' == 'Hour','{ExtranetLockoutErrorCountThresholdHourly}','{ExtranetLockoutErrorCountThresholdDaily}'), \r\n['Bad Password and Extranet Lockout Error Threshold'] = iff('{DetectionWindowLength}' == 'Hour','{BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdHourly}','{BadUsernameOrPasswordAndExtranetLockoutErrorCountThresholdDaily}'),\r\nTenantId,\r\nTokenIssuerName\r\n",
        "size": 0,
        "title": "Risky IP Details",
        "noDataMessageStyle": 4,
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Extranet Lockout Error Threshold",
              "formatter": 5
            },
            {
              "columnMatch": "Bad Password and Extranet Lockout Error Threshold",
              "formatter": 5
            },
            {
              "columnMatch": "TenantId",
              "formatter": 5
            },
            {
              "columnMatch": "TokenIssuerName",
              "formatter": 5
            }
          ]
        },
        "sortBy": []
      },
      "name": "IPs with errors exceeding the threshold"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "name": "TitleIPsThreshold"
    },
    {
      "type": 1,
      "content": {
        "json": "# Sign-in Details and Error Counts by IP\r\nSelect one or multiple IP addresses to view failed sign-in details and error counts.\r\nThe \"Failed Sign-in Details for Selected IP Addresses\" table shows the failed ADFS sign-in activities due to bad password errors or extranet lockout errors for the selected IP addresses.\r\nThe \"Error Count for Selected IPs by Time\" chart visualizes the number of the errors for the selected IP addresses."
      },
      "name": "DetailsonIPError"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "29f34569-45a9-4af2-b4cb-0d4170a2d776",
            "version": "KqlParameterItem/1.0",
            "name": "UserSelectedIPAddress",
            "label": "IP Address",
            "type": 2,
            "description": "Select an IP address to view details of the failed ADFS sign-ins with bad password attempts or extranet lockout errors.",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let isWhiteListedIP = (IP:string) {\r\n    // exchangeOnline IP ranges\r\n    ipv4_is_in_range(IP, \"13.107.6.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.9.152/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.18.10/31\")\r\n    or ipv4_is_in_range(IP, \"13.107.19.10/31\")\r\n    or ipv4_is_in_range(IP, \"23.103.160.0/20\")\r\n    or ipv4_is_in_range(IP, \"23.103.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"40.96.0.0/13\")\r\n    or ipv4_is_in_range(IP, \"40.104.0.0/15\")\r\n    or ipv4_is_in_range(IP, \"70.37.151.128/25\")\r\n    or ipv4_is_in_range(IP, \"111.221.112.0/21\")\r\n    or ipv4_is_in_range(IP, \"131.253.33.215/32\")\r\n    or ipv4_is_in_range(IP, \"132.245.0.0/16\")\r\n    or ipv4_is_in_range(IP, \"134.170.68.0/23\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.16/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.96.224/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.106.128/28\")\r\n    or ipv4_is_in_range(IP, \"157.56.232.0/21\")\r\n    or ipv4_is_in_range(IP, \"157.56.240.0/20\")\r\n    or ipv4_is_in_range(IP, \"191.232.96.0/19\")\r\n    or ipv4_is_in_range(IP, \"191.234.6.152/32\")\r\n    or ipv4_is_in_range(IP, \"191.234.140.0/22\")\r\n    or ipv4_is_in_range(IP, \"191.234.224.0/22\")\r\n    or ipv4_is_in_range(IP, \"204.79.197.215/32\")\r\n    or ipv4_is_in_range(IP, \"206.191.224.0/19\")\r\n    or ipv4_is_in_range(IP, \"207.46.150.128/25\")\r\n    or ipv4_is_in_range(IP, \"207.46.203.128/26\")\r\n    // Local IP address ranges\r\n    or ipv4_is_in_range(IP, \"10.0.0.0/8\")\r\n    or ipv4_is_in_range(IP, \"172.16.0.0/12\")\r\n    or ipv4_is_in_range(IP, \"192.168.0.0/16\")\r\n};\r\n\r\nADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where ErrorCode in (\"50126\",\"300030\")\r\n| where isWhiteListedIP(IPAddress) == false\r\n| where NetworkLocationDetails !contains \"Intranet\" // Filter out sign-ins from local network as local IPs are not considered risky\r\n| summarize by IPAddress",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "IP Address Selector"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where IPAddress in ({UserSelectedIPAddress})\r\n| where ErrorCode in (\"50126\",\"300030\")\r\n| sort by IPAddress, CreatedDateTime\r\n//| summarize by IPAddress\r\n| project IPAddress, ['Sign-in Activity Time'] = CreatedDateTime, Location, ['User Name'] = UserDisplayName, ['Alternate Sign-in Name'] = AlternateSignInName, ['User Principal Name'] = UserPrincipalName, ['UserId'] = UserId, ['Error Code']= ResultType, ['Error Description'] = ResultDescription, ['Authentication Details'] = AuthenticationDetails",
        "size": 0,
        "title": "Failed Sign-in Details for Selected IPs",
        "timeContext": {
          "durationMs": 7776000000
        },
        "timeContextFromParameter": "TimeRange",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table"
      },
      "name": "Failed Sign-in Details for Selected IPs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ADFSSignInLogs\r\n| extend ErrorCode = ResultType\r\n| where IPAddress in ({UserSelectedIPAddress})\r\n| extend SigninErrors = case(ErrorCode == \"50126\", \"Bad Password Errors\", ErrorCode == \"300030\", \"Extranet Lockout Errors\", \"Others\")\r\n| make-series errorCount = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step iff('{DetectionWindowLength}'=='Hour', 1h, 1d) by SigninErrors",
        "size": 0,
        "title": "Error Count for Selected IPs by Time",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "barchart"
      },
      "name": "ErrorChart"
    }
  ]
}
