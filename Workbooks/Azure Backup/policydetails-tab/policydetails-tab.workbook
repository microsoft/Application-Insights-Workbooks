{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "parameters": [
                {
                  "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_SearchPolicyName",
                  "label": "Search Policy Name",
                  "type": 1,
                  "description": "Use to search by Policy Name",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "value": ""
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-SearchParameterBlock",
            "styleSettings": {
              "margin": "0% 0% 0% 0%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "______________"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-DividingLine1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\n// local Params\r\nlet PolicyNameParam =  @\"{PolicyTab_SearchPolicyName}\";\r\nlet ActivePolicyCount = () \r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| summarize count(UniqueId) by PolicyUniqueId, VaultResourceId\r\n| extend active = iff(PolicyUniqueId != \"\", 1, 0)\r\n| summarize ActivePolicy = sum(active)\r\n| extend  Key = pack_array(\"Active Policies\"), Value = pack_array( ActivePolicy), SubText = pack_array(\"Count\"), Row = pack_array(-2)\r\n| project Key, Value, SubText, Row\r\n| mvexpand  Key, Value, SubText, Row};\r\nlet StorageByStorageReplication = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| summarize sum_VaultStore_StorageConsumption_InGBs = sum(VaultStore_StorageConsumptionInMBs)/1024 by VaultStore_StorageReplicationType\r\n| order by VaultStore_StorageReplicationType \r\n// The below two values are temporary VaultStore_StorageReplicationType during vault creation\r\n| where VaultStore_StorageReplicationType !in (\"Invalid\", \"\")\r\n| extend rn = row_number()\r\n| extend  Key = pack_array(VaultStore_StorageReplicationType), Value = pack_array(sum_VaultStore_StorageConsumption_InGBs), SubText = pack_array(\"Cloud Storage (GB)\"), Row = pack_array(rn)\r\n| project Key, Value, SubText, Row\r\n| mvexpand  Key, Value, SubText, Row\r\n};\r\nunion  ActivePolicyCount, StorageByStorageReplication \r\n| order by toint(Row) asc\r\n| order by toint(Row) asc",
              "size": 3,
              "noDataMessage": "No records found for the selected time range and scope",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Key",
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "subtitleContent": {
                  "columnMatch": "SubText",
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-Tiles"
          },
          {
            "type": 1,
            "content": {
              "json": "______________"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-DividingLine2"
          },
          {
            "type": 1,
            "content": {
              "json": " The below charts are displayed in **{AggregationType}** view due to your time range selection. [Learn more](https://aka.ms/BackupReportAggregationType) ",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              }
            ],
            "name": "PolicyDetails-AggregationTypeInfoText"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\nlet AggregationType = @\"{AggregationType}\";\r\n// local Params\r\nlet PolicyNameParam =  @\"{PolicyTab_SearchPolicyName}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstancesTrends(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields, AggregationType)\r\n// query to transform function output\r\n| where PolicyUniqueId != \"\"\r\n| summarize ActivePolicyCount = dcount(strcat(VaultResourceId, PolicyUniqueId), 4) by TimeRangeEndDay =  startofday(TimeGenerated)",
              "size": 0,
              "aggregation": 5,
              "title": "Active Policy Trend",
              "noDataMessage": "No records found for the selected time range and scope",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "linechart",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "TimeRangeEndDay",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "TimeRangeEndDay",
                  "sortOrder": 2
                }
              ],
              "chartSettings": {
                "xAxis": "TimeRangeEndDay",
                "seriesLabelSettings": [
                  {
                    "seriesName": "ActivePolicyCount",
                    "label": "# Active Policies"
                  }
                ]
              }
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo",
                "value": ""
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyDetails-ActivePoliciesTrendGraph"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\nlet AggregationType = @\"{AggregationType}\";\r\n// local Params\r\nlet PolicyNameParam =  @\"{PolicyTab_SearchPolicyName}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstancesTrends(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields, AggregationType)\r\n// query to transform function output\r\n| summarize StorageConsumedInGBs = sum(VaultStore_StorageConsumptionInMBs)/(1024) by  TimeRangeEndDay = startofday(TimeGenerated)",
              "size": 0,
              "aggregation": 5,
              "title": "Cloud Storage Trend",
              "noDataMessage": "No records found for the selected time range and scope",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "linechart",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "TimeRangeEndDay",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "TimeRangeEndDay",
                  "sortOrder": 2
                }
              ],
              "chartSettings": {
                "xAxis": "TimeRangeEndDay",
                "seriesLabelSettings": [
                  {
                    "seriesName": "StorageConsumedInMBs",
                    "label": "Cloud Storage (MB)"
                  },
                  {
                    "seriesName": "StorageConsumedInGBs",
                    "label": "Cloud Storage (GB)"
                  }
                ]
              }
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo",
                "value": ""
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyDetails-CloudStorageTrendGraph"
          },
          {
            "type": 1,
            "content": {
              "json": "_________________"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-DividingLine3"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">Backup Instances and Storage by Policy</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-GridTitle1",
            "styleSettings": {
              "margin": "0% 0% 10px 0%"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "5dc2a074-b510-44f2-9530-cfcbd159b59c",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_SortBy",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"count_UniqueId\", \"label\": \"# BackupItems\" },\r\n{ \"value\": \"sum_VaultStore_StorageConsumptionInMBs\", \"label\": \"Cloud Storage (MB)\", \"selected\": \"true\" }]",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "df3cc03c-53f7-4523-a29b-e50bf1b6d922",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_Order",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "44b4c590-ecc4-4d3d-840e-16c4638000d4",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_RowsPerPage",
                  "label": "Rows Per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "90478836-8cb6-4235-98a0-7724ac01d29a",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_Page",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\n// local Params\r\nlet PolicyNameParam =  @\"{PolicyTab_SearchPolicyName}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| where PolicyUniqueId != \"\"\r\n| where PolicyName contains (PolicyNameParam) or '*' in (PolicyNameParam)\r\n| summarize sum(SourceSizeInMBs), sum(VaultStore_StorageConsumptionInMBs), count(UniqueId), StorageReplicationType = any(VaultStore_StorageReplicationType), PolicyName = any(PolicyName), ResourceId = any(VaultResourceId), PolicyId = any(PolicyId) by PolicyUniqueId, VaultResourceId\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyTab_RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-Grid1ParameterBlock",
            "styleSettings": {
              "margin": "-23px 0% 0% 0%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "**Note** - For workloads like blobs and disks where vault tier is not yet supported, the storage redundancy column will show up as empty by design."
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-GridTitle1 - Copy",
            "styleSettings": {
              "margin": "0% 0% 10px 0%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"font-size:12px;font-style:italic\"> Click on any row above to see all backup items associated with that policy.</span>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "text - 65"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\n// local Params\r\nlet PolicyNameParam =  @\"{PolicyTab_SearchPolicyName}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| where PolicyUniqueId != \"\"\r\n| where PolicyName contains (PolicyNameParam) or '*' in (PolicyNameParam)\r\n| summarize sum(SourceSizeInMBs), sum(VaultStore_StorageConsumptionInMBs), count(UniqueId), StorageReplicationType = any(VaultStore_StorageReplicationType), PolicyName = any(PolicyName), Vault = any(VaultResourceId), PolicyId = any(PolicyId) by PolicyUniqueId, VaultResourceId\r\n| extend TempColumn = column_ifexists(tostring('{PolicyTab_SortBy}'), \"sum_VaultStore_StorageConsumptionInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyTab_Order}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, PolicyId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyTab_RowsPerPage} + 1))\r\n| where page_num has ('{PolicyTab_Page}') or '*' in ('{PolicyTab_Page}') \r\n| project PolicyId, PolicyName, BackupInstances=count_UniqueId, CloudStorage = sum_VaultStore_StorageConsumptionInMBs/1024, Vault, StorageReplicationType, VaultAndPolicyUniqueId = strcat(Vault,PolicyUniqueId)",
              "size": 3,
              "noDataMessage": "No records found for the selected time range and scope",
              "exportFieldName": "VaultAndPolicyUniqueId",
              "exportParameterName": "PolicyTab_VaultAndPolicyUniqueId",
              "exportDefaultValue": "*",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "PolicyId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PolicyName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the policy"
                    }
                  },
                  {
                    "columnMatch": "BackupInstances",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of backup instances associated with the given policy"
                    }
                  },
                  {
                    "columnMatch": "CloudStorage",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Total cloud storage consumed by backup instances associated with the given policy, as of the end of the selected time range"
                    }
                  },
                  {
                    "columnMatch": "Vault",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Vault associated with the policy"
                    }
                  },
                  {
                    "columnMatch": "StorageReplicationType",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Storage replication type associated with the policy"
                    }
                  },
                  {
                    "columnMatch": "VaultAndPolicyUniqueId",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "PolicyName",
                    "label": "Policy Name"
                  },
                  {
                    "columnId": "BackupInstances",
                    "label": "# Backup Instances"
                  },
                  {
                    "columnId": "CloudStorage",
                    "label": "Cloud Storage (GB)"
                  },
                  {
                    "columnId": "StorageReplicationType",
                    "label": "Storage Replication Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-Grid1",
            "styleSettings": {
              "margin": "-30px 0% 0% 0%",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">List of Backup Items associated with the selected Policy</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyTab_VaultAndPolicyUniqueId",
                "comparison": "isNotEqualTo",
                "value": "*"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-Grid2Title",
            "styleSettings": {
              "margin": "0% 0% 10px 0%"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "7bb4a71d-d932-4737-8715-d378be7ffba5",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_SortBy_2",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n{ \\\"value\\\": \\\"VaultStore_StorageConsumptionInMBs\\\", \\\"label\\\": \\\"Cloud Storage (MB)\\\", \\\"selected\\\": \\\"true\\\" }]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 8
                },
                {
                  "id": "595e5629-4f64-4038-bff5-5f3371259caa",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_Order_2",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "0e4b3406-91aa-452e-90b2-6b22e71f0b82",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_RowsPerPage_2",
                  "label": "Rows Per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "d1b7fe67-8c02-431c-904c-f82238dd112e",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyTab_Page_2",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\n// local Params\r\nlet VaultAndPolicyUniqueIdParam =  @\"{PolicyTab_VaultAndPolicyUniqueId}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| where strcat(VaultResourceId, PolicyUniqueId) == (VaultAndPolicyUniqueIdParam) or '*' in (VaultAndPolicyUniqueIdParam)\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyTab_RowsPerPage_2} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 8
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyTab_VaultAndPolicyUniqueId",
                "comparison": "isNotEqualTo",
                "value": "*"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyDetails-Grid2ParameterBlock",
            "styleSettings": {
              "margin": "-23px 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\n// local Params\r\nlet VaultAndPolicyUniqueIdParam =  @\"{PolicyTab_VaultAndPolicyUniqueId}\";\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| where strcat(VaultResourceId, PolicyUniqueId) == (VaultAndPolicyUniqueIdParam) or '*' in (VaultAndPolicyUniqueIdParam)\r\n| extend TempColumn = column_ifexists(tostring('{PolicyTab_SortBy_2}'), \"VaultStore_StorageConsumptionInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyTab_Order_2}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, UniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyTab_RowsPerPage_2} + 1))\r\n| where page_num has ('{PolicyTab_Page_2}') or '*' in ('{PolicyTab_Page_2}')\r\n| project BackupInstance=FriendlyName, Id, Container=DatasourceSetFriendlyName, ResourceGroup=iff(DatasourceType==\"Azure Backup Agent\" or DatasourceType==\"Azure Backup Server\" or DatasourceType==\"DPM\",\"(none)\",split(split(tostring(tolower(DatasourceSetResourceId)), '/resourcegroups/')[1],'/')[0]\r\n), Policy=PolicyName, CloudStorage=VaultStore_StorageConsumptionInMBs/1024, Vault=VaultResourceId, StorageReplicationType=VaultStore_StorageReplicationType, AzureResource=DatasourceSetResourceId, DatasourceType",
              "size": 3,
              "noDataMessage": "No records found for the selected time range and scope",
              "exportFieldName": "BackupItemUniqueId",
              "exportParameterName": "SelectedBackupItemUniqueId",
              "exportDefaultValue": "*",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstance",
                    "formatter": 16,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Container",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "Policy",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Policy associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "CloudStorage",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "minimumFractionDigits": 2,
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Total cloud storage consumed by the backup instance, as of the end of the selected time range"
                    }
                  },
                  {
                    "columnMatch": "Vault",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Vault associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "StorageReplicationType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Storage replication type associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "AzureResource",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Azure Resource associated with the backup instance. For Azure VM backup, SQL in Azure VM backup and SAP database in Azure VM backup, the Azure Resource is the Azure VM. For Azure Files Share backup, the Azure Resource is the Azure Storage account. For Azure Database for PostgreSQL Server backup, the Azure Resource is the PostgreSQL Server. For Azure Disk backup, the Azure Resource is the Azure Disk. For Azure Blob backup, the Azure Resource is the Azure Storage Account associated with the blob container. For on-premises backup instances, this field is blank."
                    }
                  },
                  {
                    "columnMatch": "DatasourceType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "DatasourceType"
                    }
                  },
                  {
                    "columnMatch": "UniqueId",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstance",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "CloudStorage",
                    "label": "Cloud Storage (GB)"
                  },
                  {
                    "columnId": "StorageReplicationType",
                    "label": "Storage Replication Type"
                  },
                  {
                    "columnId": "AzureResource",
                    "label": "Azure Resource"
                  },
                  {
                    "columnId": "DatasourceType",
                    "label": "Datasource Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "PolicyDetails"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyTab_VaultAndPolicyUniqueId",
                "comparison": "isNotEqualTo",
                "value": "*"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyDetails-Grid2",
            "styleSettings": {
              "margin": "-30px 0% 0% 0%",
              "showBorder": true
            }
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "fallbackResourceIds": [
    "microsoft_azure_dataprotection"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
