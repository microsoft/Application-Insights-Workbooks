{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Backup Items",
            "subTarget": "Backup Items",
            "style": "link"
          },
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Jobs",
            "subTarget": "Jobs",
            "style": "link"
          },
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "Alerts",
            "style": "link"
          },
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Policies",
            "subTarget": "Policies",
            "style": "link"
          },
          {
            "cellValue": "Tabname",
            "linkTarget": "parameter",
            "linkLabel": "Backup Not Enabled",
            "subTarget": "Backup Not Enabled",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Backup Explorer (Virtual Machines) - {Tabname} </span></div> <div style=\"text-align:right;float:right\"><span style=\"font-size:12px;\"><a href=\"https://aka.ms/AzureBackupExplorerDoc\" target=\"_blank\">How to use backup explorer?</a></span></div>"
      },
      "name": "MainHeadingAndLink"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "8a19264d-e7e9-4a23-8c3a-128bda8340f7",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "description": "Select from list of Default Subscriptions",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false
            }
          },
          {
            "id": "eb783656-4dd4-4973-a090-eea8cf20fb42",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemHostHash",
            "type": 1,
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend x = split(tolower(tostring(properties.containerName)),\";\")\r\n| project x = iff(array_length(x) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(x[2]), tostring(x[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(x[1]), tostring(x[2])))))\r\n| distinct x\r\n| summarize x = tostring(makelist(x,32000))\r\n| project x = replace(\"[\\\\]\\\\[]\",\"\",x)\r\n// Default Value as it is required Parameter\r\n| project x = iff(isempty(x), \"0\", x)\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2fea6948-d21b-478f-9a4a-d58b5e30e14f",
            "version": "KqlParameterItem/1.0",
            "name": "VMHash",
            "type": 1,
            "isRequired": true,
            "query": "Resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.classiccompute/virtualmachines\"\r\n| project x = tolower(subscriptionId), y = tolower(resourceGroup), z = tolower(name)\r\n| project a = tostring(hash(strcat(x,y,z)))\r\n| where a in ({BackupItemHostHash})\r\n| summarize a = makelist(a,32000)\r\n| project a = replace(\"[\\\\]\\\\[]\",\"\",tostring(a))\r\n// Default Value as it is required Parameter\r\n| project a = iff(isempty(a), \"0\", a)\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "customWidth": "18",
      "name": "SubscriptionParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "d8d14542-cdfb-4299-aa94-b633567ab68d",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "label": "Vault Location",
            "type": 2,
            "description": "Select one or more locations having Recovery Services Vaults",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| summarize by location",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "8a2998fa-6ce1-4285-a2b3-63597e7a63b7",
            "version": "KqlParameterItem/1.0",
            "name": "Vault",
            "type": 5,
            "description": "Select one or more Recovery Services Vaults",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| where location in ({Location}) or '*' in ({Location})\r\n| summarize by id = tolower(id)",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isNotEqualTo",
        "value": "Backup Not Enabled"
      },
      "customWidth": "36",
      "name": "VaultParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "e10a33af-55df-48ee-ac20-57f70436964c",
            "version": "KqlParameterItem/1.0",
            "name": "AllVaultHash",
            "type": 1,
            "isRequired": true,
            "query": "Resources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| where location in ({Location}) or '*' in ({Location})\r\n| summarize by id = tolower(id)\r\n| summarize x = makelist(tostring(hash(id)),32000)\r\n| project a = replace(\"[\\\\]\\\\[]\",\"\",tostring(x))\r\n// Default Value as it is required Parameter\r\n| project a = iff(isempty(a), \"0\", a)",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "aeb07d33-7b35-4996-abb7-20d546e8696f",
            "version": "KqlParameterItem/1.0",
            "name": "SummaryProtectionState",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "40047988-c2d0-4f10-b71f-24f4070b4bb6",
            "version": "KqlParameterItem/1.0",
            "name": "SummaryJobStatus",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "9e976a4c-a44e-4434-b3e3-28b77991ee6b",
            "version": "KqlParameterItem/1.0",
            "name": "SummaryAlertSeverity",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "373f9703-b07f-4a82-be21-9f1d328723fe",
            "version": "KqlParameterItem/1.0",
            "name": "SummaryNotEnabledLocation",
            "type": 1,
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isNotEqualTo",
        "value": "Backup Not Enabled"
      },
      "customWidth": "5",
      "name": "VaultHashParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
            "version": "KqlParameterItem/1.0",
            "name": "VMLocation",
            "label": "VM Location",
            "type": 2,
            "description": "Select one or more locations having virtual machines",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| summarize by location",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Not Enabled"
      },
      "customWidth": "18",
      "name": "VMLocationParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "60a7f6fb-86ec-4e68-ac3e-d5f83419cc09",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemView",
            "label": "Backup Item View",
            "type": 2,
            "description": "Choose Advanced view for more filters and columns to interact",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"Standard\", \"label\":\"Standard\", \"selected\":true  },\r\n    { \"value\":\"Enhanced\", \"label\":\"Advanced\" }\r\n]"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Items"
      },
      "customWidth": "18",
      "name": "BackupItemViewParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "60a7f6fb-86ec-4e68-ac3e-d5f83419cc09",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyView",
            "label": "Choose Policy View",
            "type": 2,
            "description": "Choose advanced view for more filters and columns to interact and view Backup Items related to selected policy",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"Standard\", \"label\":\"Standard\", \"selected\":true  },\r\n    { \"value\":\"Enhanced\", \"label\":\"Advanced\" }\r\n]"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "customWidth": "18",
      "name": "PolicyViewParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Select Time Range to view Jobs and Alerts",
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": false
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isNotEqualTo",
          "value": "Backup Items"
        },
        {
          "parameterName": "Tabname",
          "comparison": "isNotEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "Tabname",
          "comparison": "isNotEqualTo",
          "value": "Backup Not Enabled"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isNotEqualTo",
        "value": "Backup Items"
      },
      "customWidth": "18",
      "name": "TimeRangeParameterBlock"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "60a7f6fb-86ec-4e68-ac3e-d5f83419cc09",
            "version": "KqlParameterItem/1.0",
            "name": "RowsPerPage",
            "label": "Rows Per Page",
            "type": 2,
            "description": "Number of rows to display in grid view",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isNotEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "Tabname",
          "comparison": "isNotEqualTo",
          "value": "Summary"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isNotEqualTo",
        "value": "Overview"
      },
      "customWidth": "18",
      "name": "RowsPerPageParameterBlock"
    },
    {
      "type": 1,
      "content": {
        "json": "_______"
      },
      "name": "DividingLine"
    },
    {
      "type": 1,
      "content": {
        "json": "<p> <span style=\"font-size:12px; font-style:italic\"> Click on any of the tiles to see more details</span> </p>"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "InstructionText"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| summarize c = count() \r\n| extend Item = \"Backup Items\", SubText = \"Total\", Key = 1\r\n| union\r\n(\r\nRecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| where properties.status != \"InProgress\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| summarize c = count()\r\n| extend Item = \"Backup Jobs\", SubText = \"Total\", Key = 2\r\n) \r\n| union\r\n(\r\nRecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/alerts\"\r\n| where properties.sourceType == \"IaaSVM\"\r\n| where todatetime(properties.initialOccurrenceTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/alerts.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend Items = \"Backup Alerts\", SubText = \"Total\"\r\n| summarize c = count()\r\n| extend Item = \"Backup Alerts\", SubText = \"Total\", Key = 3\r\n) \r\n| sort by Key asc",
        "size": 4,
        "exportFieldName": "Item",
        "exportParameterName": "SummarySelectedItem",
        "exportDefaultValue": "\"\"",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Item",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Always Hide"
      },
      "customWidth": "0",
      "name": "SummaryTilesFromRecoveryServices"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| summarize c = count() \r\n| extend Item = \"Backup Not Enabled\", SubText = \"Virtual Machines\", Key = 4\r\n",
        "size": 4,
        "exportFieldName": "NotProtected",
        "exportParameterName": "SummarySelectedItem1",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "NotProtected",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "VirtualMachines",
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Always Hide"
      },
      "customWidth": "0",
      "name": "SummaryTilesFromResources"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"d07e608f-747a-4780-9d2d-ed1cb021802d\",\"mergeType\":\"union\",\"leftTable\":\"SummaryTilesFromRecoveryServices\",\"rightTable\":\"SummaryTilesFromResources\"}],\"projectRename\":[{\"originalName\":\"[SummaryTilesFromRecoveryServices].c\",\"mergedName\":\"c\",\"fromId\":\"d07e608f-747a-4780-9d2d-ed1cb021802d\"},{\"originalName\":\"[SummaryTilesFromRecoveryServices].Item\",\"mergedName\":\"Item\",\"fromId\":\"d07e608f-747a-4780-9d2d-ed1cb021802d\"},{\"originalName\":\"[SummaryTilesFromRecoveryServices].SubText\",\"mergedName\":\"SubText\",\"fromId\":\"d07e608f-747a-4780-9d2d-ed1cb021802d\"},{\"originalName\":\"[SummaryTilesFromRecoveryServices].Key\",\"mergedName\":\"Key\",\"fromId\":\"d07e608f-747a-4780-9d2d-ed1cb021802d\"},{\"originalName\":\"c\",\"mergedName\":\"c\",\"fromId\":\"unknown\"},{\"originalName\":\"Item\",\"mergedName\":\"Item\",\"fromId\":\"unknown\"},{\"originalName\":\"SubText\",\"mergedName\":\"SubText\",\"fromId\":\"unknown\"},{\"originalName\":\"Key\",\"mergedName\":\"Key\",\"fromId\":\"unknown\"}]}",
        "size": 4,
        "exportFieldName": "Item",
        "exportParameterName": "SummarySelectedItem",
        "exportDefaultValue": "\"\"",
        "queryType": 7,
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Item",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "MergedSummaryTiles"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "text - 38"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\")))\r\n| summarize BackupItems = count() by ProtectionState\r\n| sort by ProtectionState asc",
        "size": 1,
        "title": "Backup Items by Protection State",
        "noDataMessage": "No BackupItems were found in the selected scope",
        "exportFieldName": "",
        "exportParameterName": "SummaryProtectionState",
        "exportDefaultValue": "*",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "vaultId",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            }
          ]
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ProtectionState",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true,
              "workbookContext": null
            }
          },
          "subtitleContent": {
            "columnMatch": "ResourceState",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "BackupItems",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true,
              "workbookContext": null
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Actively Protected",
              "color": "green"
            },
            {
              "seriesName": "Protection Stopped",
              "color": "redBright"
            },
            {
              "seriesName": "Initial Backup Pending",
              "color": "yellow"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "BackupItemsByProtectionState"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\")))\r\n| where ProtectionState == tostring(parse_json('{SummaryProtectionState}').label) or '{SummaryProtectionState}' contains \"*\"\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| summarize BackupItems = count() by ResourceState\r\n| sort by ResourceState asc",
        "size": 1,
        "title": "Backup Items by Resource State",
        "noDataMessage": "No BackupItems were found in the selected scope",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "vaultId",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            }
          ]
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ProtectionState",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true,
              "workbookContext": null
            }
          },
          "subtitleContent": {
            "columnMatch": "ResourceState",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "BackupItems",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true,
              "workbookContext": null
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "VM Active",
              "color": "green"
            },
            {
              "seriesName": "VM Not Found",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "BackupItemsByResourceState"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| where properties.status != \"InProgress\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend SubText = \"Jobs\"\r\n| summarize c=count() by status = tostring(properties.status)\r\n| sort by status asc\r\n",
        "size": 1,
        "title": "Jobs by Status",
        "noDataMessage": "No jobs were found in the selected scope and time range",
        "exportParameterName": "SummaryJobStatus",
        "exportDefaultValue": "*",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "status",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Completed",
              "color": "green"
            },
            {
              "seriesName": "Failed",
              "color": "redBright"
            },
            {
              "seriesName": "CompletedWithWarnings",
              "color": "yellow"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Jobs"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "JobsByStatus"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| where properties.status != \"InProgress\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where tostring(properties.status) == tostring(parse_json('{SummaryJobStatus}').label) or '{SummaryJobStatus}' contains \"*\"\r\n| extend SubText = \"Jobs\"\r\n| summarize c=count() by operation = tostring(properties.operation)\r\n| sort by operation asc\r\n",
        "size": 1,
        "title": "Jobs by Operation",
        "noDataMessage": "No jobs were found in the selected scope and time range",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "status",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Backup",
              "color": "green"
            },
            {
              "seriesName": "DeleteBackupData",
              "color": "redBright"
            },
            {
              "seriesName": "ConfigureBackup",
              "color": "turquoise"
            },
            {
              "seriesName": "Restore",
              "color": "lightBlue"
            },
            {
              "seriesName": "DisableBackup",
              "color": "red"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Jobs"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "JobsByOperation"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/alerts\"\r\n| where properties.sourceType == \"IaaSVM\"\r\n| where todatetime(properties.initialOccurrenceTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/alerts.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend SubText = \"Alerts\", severity = iff(tolong(properties.severity) == 1, \"Critical\", iff(tolong(properties.severity) == 2, \"Warining\", \"Info\"))\r\n| summarize c=count() by severity\r\n| sort by severity\r\n",
        "size": 4,
        "title": "Alerts by Severity",
        "noDataMessage": "No alerts were found in the selected scope and time range",
        "exportParameterName": "SummaryAlertSeverity",
        "exportDefaultValue": "*",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "severity",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Critical",
              "color": "redBright"
            },
            {
              "seriesName": "Warning",
              "color": "yellow"
            },
            {
              "seriesName": "Info",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Alerts"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "AlertsBySeverity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/alerts\"\r\n| where properties.sourceType == \"IaaSVM\"\r\n| where todatetime(properties.initialOccurrenceTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/alerts.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend SubText = \"Alerts\", severity = iff(tolong(properties.severity) == 1, \"Critical\", iff(tolong(properties.severity) == 2, \"Warining\", \"Info\"))\r\n| where severity == tostring(parse_json('{SummaryAlertSeverity}').label) or '{SummaryAlertSeverity}' contains \"*\"\r\n| summarize c=count() by AlertName = tostring(properties.alertTitle)\r\n| sort by AlertName\r\n",
        "size": 4,
        "title": "Alerts by Alert Type",
        "noDataMessage": "No alerts were found in the selected scope and time range",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "severity",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Delete Backup Data",
              "color": "redBright"
            },
            {
              "seriesName": "Backup failure",
              "color": "red"
            },
            {
              "seriesName": "Restore failure",
              "color": "orange"
            },
            {
              "seriesName": "Backup completed with warnings",
              "color": "yellow"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Alerts"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "AlertsByAlertType"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| project id, location\r\n| summarize c = count() by location\r\n| sort by c desc, location asc\r\n",
        "size": 4,
        "title": "Backup Not Enabled Machines by Location",
        "exportParameterName": "SummaryNotEnabledLocation",
        "exportDefaultValue": "*",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "severity",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "group": "location",
          "createOtherGroup": 5
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Not Enabled"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "BackupNotEnabledMachineByLocation"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| where location == tostring(parse_json('{SummaryNotEnabledLocation}').label) or '{SummaryNotEnabledLocation}' contains \"*\" or '{SummaryNotEnabledLocation}' contains \"Other\"\r\n| project id, resourceGroup\r\n| summarize c = count() by resourceGroup\r\n| sort by c desc, resourceGroup asc\r\n",
        "size": 4,
        "title": "Backup Not Enabled Machines by Resource Group",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "severity",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "SubText",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "c",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": true
        },
        "chartSettings": {
          "group": "resourceGroup",
          "createOtherGroup": 5
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "SummarySelectedItem",
          "comparison": "isEqualTo",
          "value": "Backup Not Enabled"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "customWidth": "0",
      "name": "BackupNotEnabledMachinesByResourceGroup"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemName",
            "label": "Search Item or RG",
            "type": 1,
            "description": "Use to filter by BackupItem or Resource Group. <br/> To filter for a specific item in a specific resource group use &lt;resourceGroup&gt;;&lt;backupItem&gt;",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "value": ""
          },
          {
            "id": "db5ab575-14f6-44d0-bbb9-71c59d0d86b2",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyName",
            "label": "Search Vault or Policy",
            "type": 1,
            "description": "Use to filter by Vault or Policy Name. <br/>To filter by a policy within a vault use &lt;Vault&gt;;&lt;Policy&gt;",
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "ProtectionState",
            "label": "Protection State",
            "type": 2,
            "description": "Use to filter by Protection State of the Backup Item",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Actively Protected\", \"label\":\"Actively Protected\" },\r\n    { \"value\":\"Protection Stopped\", \"label\":\"Protection Stopped\" },\r\n    { \"value\":\"Initial Backup Pending\", \"label\":\"Initial Backup Pending\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ad30973f-5071-4ce4-9f2b-df9a93955879",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceState",
            "label": "Resource State",
            "type": 2,
            "description": "Use to filter by the current state of the resource being backed up",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"VM Active\", \"label\":\"VM Active\" },\r\n    { \"value\":\"VM Not Found\", \"label\":\"VM Not Found\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "4c20879b-cb6e-4c9c-8923-0af5a1c063bd",
            "version": "KqlParameterItem/1.0",
            "name": "InDeferredDelete",
            "label": "Soft-deleted?",
            "type": 2,
            "description": "Use to filter for Soft-Deleted Backup Items",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Yes\", \"label\":\"Yes\" },\r\n    { \"value\":\"No\", \"label\":\"No\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2a76174a-d5a5-41bb-99d2-9d2fce0e3167",
            "version": "KqlParameterItem/1.0",
            "name": "HealthCheck",
            "label": "Health Check Status",
            "type": 2,
            "description": "Use to filter by Health Check Status of the Backup Item",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Passed\", \"label\":\"Passed\" },\r\n    { \"value\":\"ActionRequired\", \"label\":\"ActionRequired\" },\r\n    { \"value\":\"ActionSuggested\", \"label\":\"ActionSuggested\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ee5b73b4-8354-47fa-b98f-e4bd20332298",
            "version": "KqlParameterItem/1.0",
            "name": "LastBackup",
            "label": "Last Backup Status",
            "type": 2,
            "description": "Use to filter by status of the last Backup Job for each each Backup Item",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Completed\", \"label\":\"Completed\" },\r\n    { \"value\":\"CompletedWithWarnings\", \"label\":\"CompletedWithWarnings\" },\r\n    { \"value\":\"Failed\", \"label\":\"Failed\" },\r\n    { \"value\":\"Unknown\", \"label\":\"Unknown\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "dd894ccd-2ec7-456b-941a-f3ca616ad9e3",
            "version": "KqlParameterItem/1.0",
            "name": "MinDailyRetention",
            "type": 1,
            "description": "Specify minimum number of days the daily backup is retained in the vault. Use zero to view rows with no daily retention.",
            "isRequired": true,
            "value": "0",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Min Daily Retention"
          },
          {
            "id": "1fc96995-297e-476d-8964-83b0d0e3687c",
            "version": "KqlParameterItem/1.0",
            "name": "MaxDailyRetention",
            "type": 1,
            "description": "Specify maximum number of days the daily backup is retained in the vault",
            "isRequired": true,
            "value": "3650",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Max Daily Retention"
          },
          {
            "id": "1d767e68-5daf-4741-afa5-1dd017d68ba2",
            "version": "KqlParameterItem/1.0",
            "name": "SnapshotRetention",
            "type": 2,
            "description": "To filter by number of days the backup snapshot is retained for fast restores. Use zero to view rows with no snapshot retention.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"0\", \"label\":\"0\" },\r\n    { \"value\":\"1\", \"label\":\"1\" },\r\n    { \"value\":\"2\", \"label\":\"2\" },\r\n    { \"value\":\"3\", \"label\":\"3\" },\r\n    { \"value\":\"4\", \"label\":\"4\" },\r\n    { \"value\":\"5\", \"label\":\"5\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Snapshot Retention  Days"
          },
          {
            "id": "2cdfb760-6c7c-4eab-a653-581a04640397",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  InDeferredDelete = iff(tostring(properties.isScheduledForDeferredDelete) == \"true\", \"Yes\", \"No\"),\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id),\r\n          VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  PolicyName = tostring(properties.policyName),\r\n\t\t  deferredDeleteTimeInUTC = properties.deferredDeleteTimeInUTC, \r\n\t\t  deferredDeleteTimeRemaining = properties.deferredDeleteTimeRemaining, \r\n\t\t  healthDetails = properties.healthDetails\r\n| where Name contains (@\"{BackupItemName}\") \r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where ProtectionState == \"{ProtectionState}\" or strcat(ProtectionState,\"{ProtectionState}\") contains \"All\"\r\n| where ResourceState == \"{ResourceState}\" or strcat(ResourceState,\"{ResourceState}\") contains \"All\"\r\n| where InDeferredDelete == \"{InDeferredDelete}\" or strcat(InDeferredDelete,\"{InDeferredDelete}\") contains \"All\"\r\n| where HealthCheck == \"{HealthCheck}\" or strcat(HealthCheck,\"{HealthCheck}\") contains \"All\"\r\n| where LastBackup == \"{LastBackup}\" or strcat(LastBackup,\"{LastBackup}\") contains \"All\"\r\n| join kind = leftouter (\r\n\tRecoveryServicesResources\r\n\t| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n\t| extend policyId = tolower(id)\r\n\t| project policyId, DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n\t          InstantRpRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)), \"2\", tostring(properties.instantRpRetentionRangeInDays)), schedulePolicy = properties.schedulePolicy, retentionPolicy = properties.retentionPolicy \r\n) on policyId\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n          ResourceState,\r\n\t\t  InDeferredDelete,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  DailyRetention,\r\n\t\t  InstantRpRetention,\r\n\t\t  PolicyName,\r\n\t\t  vaultId,\r\n\t\t  Info = \"Details\",\r\n\t\t  InfoDetails = pack(\"deferredDeleteTimeInUTC\",deferredDeleteTimeInUTC,\"deferredDeleteTimeRemaining\",deferredDeleteTimeRemaining,\"healthDetails\",healthDetails,\"schedulePolicy\",schedulePolicy,\"retentionPolicy\",retentionPolicy,\"InstantRpRetentionInDays\",tolong(InstantRpRetention))\r\n| where (tolong(DailyRetention) >= {MinDailyRetention} and tolong(DailyRetention) <= {MaxDailyRetention}) or (isempty(DailyRetention) and tolong({MinDailyRetention}) <= 0)\r\n| where InstantRpRetention == \"{SnapshotRetention}\" or strcat(InstantRpRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(InstantRpRetention) and strcat(InstantRpRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        },
        {
          "parameterName": "BackupItemView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Items"
      },
      "customWidth": "100",
      "name": "BackupItemsAdvancedParameterBlock"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  InDeferredDelete = iff(tostring(properties.isScheduledForDeferredDelete) == \"true\", \"Yes\", \"No\"),\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id),\r\n          VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  PolicyName = tostring(properties.policyName),\r\n\t\t  deferredDeleteTimeInUTC = properties.deferredDeleteTimeInUTC, \r\n\t\t  deferredDeleteTimeRemaining = properties.deferredDeleteTimeRemaining, \r\n\t\t  healthDetails = properties.healthDetails\r\n| where Name contains (@\"{BackupItemName}\") \r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where ProtectionState == \"{ProtectionState}\" or strcat(ProtectionState,\"{ProtectionState}\") contains \"All\"\r\n| where ResourceState == \"{ResourceState}\" or strcat(ResourceState,\"{ResourceState}\") contains \"All\"\r\n| where InDeferredDelete == \"{InDeferredDelete}\" or strcat(InDeferredDelete,\"{InDeferredDelete}\") contains \"All\"\r\n| where HealthCheck == \"{HealthCheck}\" or strcat(HealthCheck,\"{HealthCheck}\") contains \"All\"\r\n| where LastBackup == \"{LastBackup}\" or strcat(LastBackup,\"{LastBackup}\") contains \"All\"\r\n| join kind = leftouter (\r\n\tRecoveryServicesResources\r\n\t| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n\t| extend policyId = tolower(id)\r\n\t| project policyId, DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n\t          InstantRpRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)), \"2\", tostring(properties.instantRpRetentionRangeInDays)), schedulePolicy = properties.schedulePolicy, retentionPolicy = properties.retentionPolicy \r\n) on policyId\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n\t\t  InDeferredDelete,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n          ResourceState,\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  DailyRetention,\r\n\t\t  InstantRpRetention,\r\n\t\t  PolicyName,\r\n\t\t  vaultId,\r\n\t\t  Info = \"Details\",\r\n\t\t  InfoDetails = pack(\"deferredDeleteTimeInUTC\",deferredDeleteTimeInUTC,\"deferredDeleteTimeRemaining\",deferredDeleteTimeRemaining,\"healthDetails\",healthDetails,\"schedulePolicy\",schedulePolicy,\"retentionPolicy\",retentionPolicy,\"InstantRpRetentionInDays\",tolong(InstantRpRetention))\r\n| where (tolong(DailyRetention) >= {MinDailyRetention} and tolong(DailyRetention) <= {MaxDailyRetention}) or (isempty(DailyRetention) and tolong({MinDailyRetention}) <= 0)\r\n| where InstantRpRetention == \"{SnapshotRetention}\" or strcat(InstantRpRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(InstantRpRetention) and strcat(InstantRpRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| sort by tolower(Item) asc, backupItemId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{BackupItemPageNumber}') or '*' in ('{BackupItemPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "backupItemId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Item",
              "formatter": 16,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Backup Item"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Resource Group of the Backup Item"
              }
            },
            {
              "columnMatch": "ProtectionState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Stopped",
                    "representation": "disabled",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Protected",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Pending",
                    "representation": "pending",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Protection State of the Backup Item"
              }
            },
            {
              "columnMatch": "InDeferredDelete",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Whether the Backup Item is in soft-deleted state or not"
              }
            },
            {
              "columnMatch": "HealthCheck",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Passed",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionSuggested",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionRequired",
                    "representation": "critical",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Health Check Status of the Backup Item"
              }
            },
            {
              "columnMatch": "LastBackup",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Status of the last backup job on the Backup Item"
              }
            },
            {
              "columnMatch": "LastBackupTime",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "LastRecoveryPoint",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Latest Recovery Point of the Backup Item"
              }
            },
            {
              "columnMatch": "ResourceState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": " Active",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Not Found",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "State of the Resource being backed up"
              }
            },
            {
              "columnMatch": "Host",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Link to the Azure VM being backed up"
              }
            },
            {
              "columnMatch": "DailyRetention",
              "formatter": 2,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of days the daily backup is retained in the vault"
              }
            },
            {
              "columnMatch": "InstantRpRetention",
              "formatter": 2,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of days the backup snapshot is retained for fast restores"
              }
            },
            {
              "columnMatch": "PolicyName",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Policy associated with the Backup Item"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Backup Item"
              }
            },
            {
              "columnMatch": "Info",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "InfoDetails",
                "linkTarget": "CellDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "More details about the Backup Item"
              }
            },
            {
              "columnMatch": "InfoDetails",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "backupItemHostId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "Item",
              "label": "Backup Item"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "ProtectionState",
              "label": "Protection State"
            },
            {
              "columnId": "InDeferredDelete",
              "label": "Soft-Deleted?"
            },
            {
              "columnId": "HealthCheck",
              "label": "Health Check Status"
            },
            {
              "columnId": "LastBackup",
              "label": "Last Backup Status"
            },
            {
              "columnId": "LastBackupTime",
              "label": "Last Backup Time [UTC]"
            },
            {
              "columnId": "LastRecoveryPoint",
              "label": "Latest Recovery Point [UTC]"
            },
            {
              "columnId": "ResourceState",
              "label": "Resource State"
            },
            {
              "columnId": "Host",
              "label": "Azure Resource"
            },
            {
              "columnId": "DailyRetention",
              "label": "Daily Retention"
            },
            {
              "columnId": "InstantRpRetention",
              "label": "Snapshot Retention"
            },
            {
              "columnId": "PolicyName",
              "label": "Policy"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            },
            {
              "columnId": "row_num"
            },
            {
              "columnId": "page_num"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        },
        {
          "parameterName": "BackupItemView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Items"
      },
      "showPin": true,
      "name": "BackupItemsAdvanced",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemName",
            "label": "Search Item or RG",
            "type": 1,
            "description": "Use to filter by Backup Item or Resource Group. <br/> To filter for a specific item in a specific resource group use &lt;resourceGroup&gt;;&lt;backupItem&gt;",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "value": ""
          },
          {
            "id": "db5ab575-14f6-44d0-bbb9-71c59d0d86b2",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyName",
            "label": "Search Vault",
            "type": 1,
            "description": "Use to filter by Vault",
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "ProtectionState",
            "label": "Protection State",
            "type": 2,
            "description": "Use to filter by Protection State of the Backup Item",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Actively Protected\", \"label\":\"Actively Protected\" },\r\n    { \"value\":\"Protection Stopped\", \"label\":\"Protection Stopped\" },\r\n    { \"value\":\"Initial Backup Pending\", \"label\":\"Initial Backup Pending\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ad30973f-5071-4ce4-9f2b-df9a93955879",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceState",
            "label": "Resource State",
            "type": 2,
            "description": "Use to filter by the current state of the resource being backed up",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"VM Active\", \"label\":\"VM Active\" },\r\n    { \"value\":\"VM Not Found\", \"label\":\"VM Not Found\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2a76174a-d5a5-41bb-99d2-9d2fce0e3167",
            "version": "KqlParameterItem/1.0",
            "name": "HealthCheck",
            "label": "Health Check Status",
            "type": 2,
            "description": "Use to filter by Health Check Status of the Backup Item",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Passed\", \"label\":\"Passed\" },\r\n    { \"value\":\"ActionRequired\", \"label\":\"ActionRequired\" },\r\n    { \"value\":\"ActionSuggested\", \"label\":\"ActionSuggested\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "41c16426-7f19-4cbc-b72d-f65aaee5c034",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id)\r\n| where Name contains (@\"{BackupItemName}\") \r\n| where VaultName contains (@\"{PolicyName}\")\r\n| where ProtectionState == \"{ProtectionState}\" or strcat(ProtectionState,\"{ProtectionState}\") contains \"All\"\r\n| where ResourceState == \"{ResourceState}\" or strcat(ResourceState,\"{ResourceState}\") contains \"All\"\r\n| where HealthCheck == \"{HealthCheck}\" or strcat(HealthCheck,\"{HealthCheck}\") contains \"All\"\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n          ResourceState,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  vaultId\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        },
        {
          "parameterName": "BackupItemView",
          "comparison": "isEqualTo",
          "value": "Standard"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Items"
      },
      "customWidth": "100",
      "name": "BackupItemsStandardParameterBlock"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id)\r\n| where Name contains (@\"{BackupItemName}\") \r\n| where VaultName contains (@\"{PolicyName}\")\r\n| where ProtectionState == \"{ProtectionState}\" or strcat(ProtectionState,\"{ProtectionState}\") contains \"All\"\r\n| where ResourceState == \"{ResourceState}\" or strcat(ResourceState,\"{ResourceState}\") contains \"All\"\r\n| where HealthCheck == \"{HealthCheck}\" or strcat(HealthCheck,\"{HealthCheck}\") contains \"All\"\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n          ResourceState,\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  vaultId\r\n| sort by tolower(Item) asc, backupItemId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{BackupItemPageNumber}') or '*' in ('{BackupItemPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "backupItemId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Item",
              "formatter": 16,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "subTarget": "",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Backup Item"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Resource Group of the Backup Item"
              }
            },
            {
              "columnMatch": "ProtectionState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Stopped",
                    "representation": "disabled",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Protected",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Pending",
                    "representation": "pending",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Protection State of the Backup Item"
              }
            },
            {
              "columnMatch": "HealthCheck",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Passed",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionSuggested",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionRequired",
                    "representation": "critical",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Health Check Status of the Backup Item"
              }
            },
            {
              "columnMatch": "LastBackup",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "LastBackupTime",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "LastRecoveryPoint",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Latest Recovery Point of the Backup Item"
              }
            },
            {
              "columnMatch": "ResourceState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Active",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Not Found",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "State of the Resource being backed up"
              }
            },
            {
              "columnMatch": "Host",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Link to the Azure VM being backed up"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Backup Item"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "PolicyName",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Policy associated with the Backup Item"
              }
            },
            {
              "columnMatch": "backupItemHostId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "Item",
              "label": "Backup Item"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "ProtectionState",
              "label": "Protection State"
            },
            {
              "columnId": "HealthCheck",
              "label": "Health Check Status"
            },
            {
              "columnId": "LastBackup",
              "label": "Last Backup Status"
            },
            {
              "columnId": "LastBackupTime",
              "label": "Last Backup Time [UTC]"
            },
            {
              "columnId": "LastRecoveryPoint",
              "label": "Latest Recovery Point [UTC]"
            },
            {
              "columnId": "ResourceState",
              "label": "Resource State"
            },
            {
              "columnId": "Host",
              "label": "Azure Resource"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            },
            {
              "columnId": "row_num"
            },
            {
              "columnId": "page_num"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Backup Items"
        },
        {
          "parameterName": "BackupItemView",
          "comparison": "isEqualTo",
          "value": "Standard"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Items"
      },
      "showPin": true,
      "name": "BackupItemsStandard",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemName",
            "label": "Search Item or RG",
            "type": 1,
            "description": "Use to filter by Backup Item and/or Resource Group",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "value": ""
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "Operation",
            "type": 2,
            "description": "Use to filter by Job Operation",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Backup\", \"label\":\"Backup\" },\r\n    { \"value\":\"Restore\", \"label\":\"Restore\" },\r\n    { \"value\":\"ConfigureBackup\", \"label\":\"ConfigureBackup\" },\r\n    { \"value\":\"DeleteBackupData\", \"label\":\"DeleteBackupData\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ad30973f-5071-4ce4-9f2b-df9a93955879",
            "version": "KqlParameterItem/1.0",
            "name": "Status",
            "type": 2,
            "description": "Use to filter by Job Status",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Completed\", \"label\":\"Completed\" },\r\n    { \"value\":\"CompletedWithWarnings\", \"label\":\"CompletedWithWarnings\" },\r\n    { \"value\":\"Failed\", \"label\":\"Failed\" },\r\n    { \"value\":\"Cancelled\", \"label\":\"Cancelled\" },\r\n    { \"value\":\"InProgress\", \"label\":\"InProgress\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "value": "Failed"
          },
          {
            "id": "2a76174a-d5a5-41bb-99d2-9d2fce0e3167",
            "version": "KqlParameterItem/1.0",
            "name": "Error",
            "type": 2,
            "description": "Use to filter by Job Error Code",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where properties.entityFriendlyName contains (@\"{BackupItemName}\") \r\n| where tostring(properties.operation) == \"{Operation}\" or strcat(tostring(properties.operation),\"{Operation}\") contains \"All\"\r\n| where tostring(properties.status) == \"{Status}\" or strcat(tostring(properties.status),\"{Status}\") contains \"All\"\r\n| summarize by x = tostring(properties.errorDetails[0].errorTitle)\r\n| where isnotempty(x)\r\n| sort by x asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "All",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "778135da-147b-4ea6-915e-218ff195521a",
            "version": "KqlParameterItem/1.0",
            "name": "JobPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where properties.entityFriendlyName contains (@\"{BackupItemName}\") \r\n| where tostring(properties.operation) == \"{Operation}\" or strcat(tostring(properties.operation),\"{Operation}\") contains \"All\"\r\n| where tostring(properties.status) == \"{Status}\" or strcat(tostring(properties.status),\"{Status}\") contains \"All\"\r\n| where tostring(properties.errorDetails[0].errorTitle) in ({Error}) or \"All\" in ({Error})\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Jobs"
      },
      "customWidth": "100",
      "name": "JobsParameterBlock",
      "styleSettings": {
        "margin": "-10px 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where todatetime(properties.startTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/backupJobs.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where properties.containerName contains (@\"{BackupItemName}\") \r\n| where tostring(properties.operation) == \"{Operation}\" or strcat(tostring(properties.operation),\"{Operation}\") contains \"All\"\r\n| where tostring(properties.status) == \"{Status}\" or strcat(tostring(properties.status),\"{Status}\") contains \"All\"\r\n| where tostring(properties.errorDetails[0].errorTitle) in ({Error}) or \"All\" in ({Error})\r\n| extend x = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend y = array_length(x)\r\n| project Name = tostring(properties.entityFriendlyName),\r\n          id = tolower(id),\r\n          Operation = properties.operation,\r\n\t      Status = properties.status,\r\n\t      StartTime = todatetime(properties.startTime),\r\n\t      Duration = iff(datetime_diff('hour',todatetime(properties.endTime),todatetime(properties.startTime))<24,format_timespan(todatetime(properties.endTime) - todatetime(properties.startTime),\"HH:mm:ss\"),format_timespan(todatetime(properties.endTime) - todatetime(properties.startTime),\"dd.HH:mm:ss\")),\r\n\t\t  Error = properties.errorDetails[0].errorTitle,\r\n\t\t  errorDetails = pack(\"Error\",properties.errorDetails[0].errorTitle,\"ErrorString\",properties.errorDetails[0].errorString,\"Recommendations\",properties.errorDetails[0].recommendations),\r\n          Host = \"VM\",\r\n          vaultId,\r\n          ContainerName = iff(y == 3, strcat(x[0],\";\",x[1],\";\",x[2]), iff(y == 4, strcat(x[1],\";\",x[2],\";\",x[3]), \"\") ),\r\n\t\t  subscriptionId\r\n| project Name, jobId = id, Operation, Status, StartTime, Duration, Error, errorDetails, Host, vaultId,\t\t  \r\n\t\t  backupItemId = strcat(vaultId,\"/backupFabrics/Azure/protectionContainers/IaasVMContainer;\",ContainerName,\"/protectedItems/VM;\",ContainerName),\r\n\t\t  backupItemHostId = strcat(\r\n\t\t  replace(\"\\\\/resourcegroups.*\",\"\",id),\"/resourceGroups/\",tostring(split(ContainerName,\";\")[1]),\r\n\t\t  \"/providers/Microsoft.\",\r\n\t\t  iff(ContainerName contains \"iaasvmcontainerv2;\", \"Compute/virtualMachines/\", \"ClassicCompute/virtualMachines/\"), tostring(split(ContainerName,\";\")[2])),\r\n\t\t  HostHash = hash(tolower(strcat(subscriptionId, tolower(tostring(split(ContainerName,\";\")[1])), tolower(tostring(split(ContainerName,\";\")[2]))))), ContainerName\r\n| project Name, jobId, Operation, Status, StartTime, Duration, Error, errorDetails,  backupItemId = iff(ContainerName == \"\",\"\",backupItemId), Host = iff(HostHash in ({VMHash}), backupItemHostId, \"\"), vaultId\r\n| sort by tolower(Name) asc, jobId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{JobPageNumber}') or '*' in ('{JobPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Name",
              "formatter": 16,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "subTarget": "",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Backup Item"
              }
            },
            {
              "columnMatch": "jobId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operation",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Job Operation"
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Completed",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Failed",
                    "representation": "error",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "CompletedWithWarnings",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Job Status"
              }
            },
            {
              "columnMatch": "StartTime",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Start date and time of the job"
              }
            },
            {
              "columnMatch": "Duration",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Job Duration"
              }
            },
            {
              "columnMatch": "Error",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "errorDetails",
                "linkTarget": "CellDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Error Details (if the job has failed)"
              }
            },
            {
              "columnMatch": "errorDetails",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "backupItemId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Host",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Link to the Azure VM being backed up"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Backup Item"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "backupItemHostId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "Name",
              "label": "Backup Item"
            },
            {
              "columnId": "StartTime",
              "label": "Start Time [UTC]"
            },
            {
              "columnId": "Duration",
              "label": "Duration [hh:mm:ss]"
            },
            {
              "columnId": "Host",
              "label": "Azure Resource"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Jobs"
      },
      "showPin": true,
      "name": "Jobs",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "BackupItemName",
            "label": "Search Item or RG",
            "type": 1,
            "description": "Use to filter by BackupItem or Resource Group. <br/> To filter for a specific item in a specific resource group use &lt;resourceGroup&gt;;&lt;backupItem&gt;",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "AlertName",
            "label": "Alert Type",
            "type": 2,
            "description": "Use to filter by Type of Alert",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Backup failure\", \"label\":\"Backup failure\" },\r\n    { \"value\":\"Restore failure\", \"label\":\"Restore failure\" },\r\n    { \"value\":\"Delete Backup Data\", \"label\":\"Delete Backup Data\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ad30973f-5071-4ce4-9f2b-df9a93955879",
            "version": "KqlParameterItem/1.0",
            "name": "Status",
            "type": 2,
            "description": "Use to filter by Alert Status",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"1\", \"label\":\"Active\" },\r\n    { \"value\":\"2\", \"label\":\"Resolved\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "value": "1"
          },
          {
            "id": "2a76174a-d5a5-41bb-99d2-9d2fce0e3167",
            "version": "KqlParameterItem/1.0",
            "name": "Severity",
            "type": 2,
            "description": "Use to filter by Alert Severity",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"1\", \"label\":\"Critical\" },\r\n    { \"value\":\"2\", \"label\":\"Warning\" },\r\n    { \"value\":\"3\", \"label\":\"Info\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "39fac540-0eff-4d71-9192-44e1880f713e",
            "version": "KqlParameterItem/1.0",
            "name": "AlertPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/alerts\"\r\n| where properties.sourceType == \"IaaSVM\"\r\n| where todatetime(properties.initialOccurrenceTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/alerts.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tostring(properties.firstLevelContainerId))) contains (@\"{BackupItemName}\") \r\n| where tostring(properties.alertTitle) == \"{AlertName}\" or strcat(tostring(properties.alertTitle),\"{AlertName}\") contains \"All\"\r\n| where tostring(properties.status) == \"{Status}\" or strcat(tostring(properties.status),\"{Status}\") contains \"All\"\r\n| where tostring(properties.severity) == \"{Severity}\" or strcat(tostring(properties.severity),\"{Severity}\") contains \"All\"\r\n| project backupItemId = strcat(vaultId,\"/backupFabrics/Azure/protectionContainers/IaasVMContainer;\",tostring(properties.firstLevelContainerId),\"/protectedItems/VM;\",tostring(properties.firstLevelContainerId)),\r\n          Item = tostring(split(tostring(properties.firstLevelContainerId),\";\")[2]),\r\n          ResourceGroup = tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]),\r\n\t\t  HostHash = hash(tolower(strcat(subscriptionId, tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]), tostring(split(tostring(properties.firstLevelContainerId),\";\")[2])))),\r\n          alertId = id, \r\n\t\t  backupItemHostId = strcat(\r\n\t\t  replace(\"\\\\/resourceGroups.*\",\"\",id),\"/resourceGroups/\",tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]),\r\n\t\t  \"/providers/Microsoft.\",\r\n\t\t  iff(tostring(properties.firstLevelContainerId) contains \"iaasvmcontainerv2;\", \"Compute/virtualMachines/\", \"ClassicCompute/virtualMachines/\"),             tostring(split(tostring(properties.firstLevelContainerId),\";\")[2])\r\n\t\t  ),\r\n\t\t  AlertName = tostring(properties.alertTitle),\r\n          CreationTime = todatetime(properties.initialOccurrenceTime),\r\n\t\t  Duration = replace(\"\\\\..*\",\"\",tostring(properties.duration)),\r\n\t\t  Severity = iff(tolong(properties.severity) == 1, \"Critical\", iff(tolong(properties.severity) == 2, \"Warining\", \"Info\")),\r\n\t\t  Status = iff(tolong(properties.status) == 1, \"Active\", \"Resolved\"),\r\n\t\t  ResolutionTime = todatetime(properties.resolutionTime),\r\n\t\t  vaultId\r\n| project backupItemId, Item, ResourceGroup, alertId, AlertName, CreationTime, Duration, Severity, Status, \r\n          Host = iff(HostHash in ({VMHash}), backupItemHostId, \"\"), vaultId\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Alerts"
      },
      "customWidth": "100",
      "name": "AlertsParameterBlock",
      "styleSettings": {
        "margin": "-10px 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/alerts\"\r\n| where properties.sourceType == \"IaaSVM\"\r\n| where todatetime(properties.initialOccurrenceTime) {TimeRange}\r\n| extend vaultId = tolower(replace(\"\\\\/alerts.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| where replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tostring(properties.firstLevelContainerId))) contains (@\"{BackupItemName}\") \r\n| where tostring(properties.alertTitle) == \"{AlertName}\" or strcat(tostring(properties.alertTitle),\"{AlertName}\") contains \"All\"\r\n| where tostring(properties.status) == \"{Status}\" or strcat(tostring(properties.status),\"{Status}\") contains \"All\"\r\n| where tostring(properties.severity) == \"{Severity}\" or strcat(tostring(properties.severity),\"{Severity}\") contains \"All\"\r\n| project backupItemId = strcat(vaultId,\"/backupFabrics/Azure/protectionContainers/IaasVMContainer;\",tostring(properties.firstLevelContainerId),\"/protectedItems/VM;\",tostring(properties.firstLevelContainerId)),\r\n          Item = tostring(split(tostring(properties.firstLevelContainerId),\";\")[2]),\r\n          ResourceGroup = tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]),\r\n\t\t  HostHash = hash(tolower(strcat(subscriptionId, tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]), tostring(split(tostring(properties.firstLevelContainerId),\";\")[2])))),\r\n          alertId = id, \r\n\t\t  backupItemHostId = strcat(\r\n\t\t  replace(\"\\\\/resourcegroups.*\",\"\",tolower(id)),\"/resourceGroups/\",tostring(split(tostring(properties.firstLevelContainerId),\";\")[1]),\r\n\t\t  \"/providers/Microsoft.\",\r\n\t\t  iff(tostring(properties.firstLevelContainerId) contains \"iaasvmcontainerv2;\", \"Compute/virtualMachines/\", \"ClassicCompute/virtualMachines/\"),             tostring(split(tostring(properties.firstLevelContainerId),\";\")[2])\r\n\t\t  ),\r\n\t\t  AlertName = tostring(properties.alertTitle),\r\n          CreationTime = todatetime(properties.initialOccurrenceTime),\r\n\t\t  Duration = replace(\"\\\\..*\",\"\",tostring(properties.duration)),\r\n\t\t  Severity = iff(tolong(properties.severity) == 1, \"Critical\", iff(tolong(properties.severity) == 2, \"Warining\", \"Info\")),\r\n\t\t  Status = iff(tolong(properties.status) == 1, \"Active\", \"Resolved\"),\r\n\t\t  ResolutionTime = todatetime(properties.resolutionTime),\r\n\t\t  vaultId\r\n| project backupItemId, Item, ResourceGroup, alertId, AlertName, CreationTime, Duration, Severity, Status, \r\n          Host = iff(HostHash in ({VMHash}), backupItemHostId, \"\"), vaultId\r\n| sort by Item asc, alertId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{AlertPageNumber}') or '*' in ('{AlertPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "backupItemId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Item",
              "formatter": 16,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Backup Item"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Resource Group of the Backup Item"
              }
            },
            {
              "columnMatch": "alertId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "AlertName",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Alert Name"
              }
            },
            {
              "columnMatch": "CreationTime",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Alert Creation Time"
              }
            },
            {
              "columnMatch": "Duration",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Alert Duration"
              }
            },
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Critical",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Warning",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Info",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Alert Severity"
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Active",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Resolved",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Alert Status"
              }
            },
            {
              "columnMatch": "Host",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Link to the Azure VM being backed up"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Backup Item"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "a",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "backupItemHostId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResolutionTime",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "Item",
              "label": "Backup Item"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "AlertName",
              "label": "Alert Type"
            },
            {
              "columnId": "CreationTime",
              "label": "Creation Time [UTC]"
            },
            {
              "columnId": "Duration",
              "label": "Duration [hh:mm:ss]"
            },
            {
              "columnId": "Host",
              "label": "Azure Resource"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Alerts"
      },
      "showPin": true,
      "name": "Alerts",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
            "version": "KqlParameterItem/1.0",
            "name": "VMName",
            "label": "Search Machine",
            "type": 1,
            "description": "Use to filter by Machine",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "6bfd6bdc-12c5-4e9d-9ed3-58fc3c790334",
            "version": "KqlParameterItem/1.0",
            "name": "Tags",
            "label": "Search Tags",
            "type": 1,
            "description": "Use to filter by Resource Tags",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "6911ecd2-a87e-404e-b562-f8b8a6e4635b",
            "version": "KqlParameterItem/1.0",
            "name": "NotProtectedPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| where strcat(name,resourceGroup) contains (@\"{VMName}\") \r\n| where tostring(tags) contains ('{Tags}') \r\n| project id,\r\n          Name = name,\r\n\t\t  Type = replace(\"\\\\/virtualmachines\",\"\",replace(\"microsoft.\",\"\",type)),\r\n          ResourceGroup = resourceGroup,\r\n\t\t  Location = location,\r\n\t\t  Tags = iff(isempty(tags),tags,\"Tags\"),\r\n          TagDetails = tags,\r\n          VmSize = iff(type == \"microsoft.classiccompute/virtualmachines\",properties.hardwareProfile.size, properties.hardwareProfile.vmSize),\r\n\t\t  OsType = iff(type == \"microsoft.classiccompute/virtualmachines\", properties.storageProfile.operatingSystemDisk.operatingSystem, properties.storageProfile.osDisk.osType)\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Not Enabled"
      },
      "customWidth": "100",
      "name": "BackupNotEnabledParameterBlock",
      "styleSettings": {
        "margin": "-10px 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.classiccompute/virtualmachines\")\r\n| where tostring(hash(strcat(tolower(subscriptionId), tolower(resourceGroup), tolower(name)))) !in ({BackupItemHostHash})\r\n| where location in ({VMLocation}) or '*' in ({VMLocation})\r\n| where strcat(name,resourceGroup) contains (@\"{VMName}\") \r\n| where tostring(tags) contains ('{Tags}') \r\n| project id,\r\n          Name = name,\r\n\t\t  Type = replace(\"\\\\/virtualmachines\",\"\",replace(\"microsoft.\",\"\",type)),\r\n          ResourceGroup = resourceGroup,\r\n\t\t  Location = location,\r\n\t\t  Tags = iff(isempty(tags),tags,\"Tags\"),\r\n          TagDetails = tags,\r\n          VmSize = iff(type == \"microsoft.classiccompute/virtualmachines\",properties.hardwareProfile.size, properties.hardwareProfile.vmSize),\r\n\t\t  OsType = iff(type == \"microsoft.classiccompute/virtualmachines\", properties.storageProfile.operatingSystemDisk.operatingSystem, properties.storageProfile.osDisk.osType)\r\n| sort by Name asc, id asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{NotProtectedPageNumber}') or '*' in ('{NotProtectedPageNumber}')\r\n",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Name of the VM"
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": false
              }
            },
            {
              "columnMatch": "Type",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Resource Group of the VM"
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Location of the VM"
              }
            },
            {
              "columnMatch": "Tags",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "TagDetails",
                "linkTarget": "CellDetails",
                "linkIsContextBlade": true,
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Tags associated with the VM"
              }
            },
            {
              "columnMatch": "TagDetails",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "VmSize",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Size of the VM"
              }
            },
            {
              "columnMatch": "OsType",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "OS running on the VM"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "sortBy": [
            {
              "itemKey": "ResourceGroup",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Name"
            },
            {
              "columnId": "Name",
              "label": "VM Name"
            },
            {
              "columnId": "Type",
              "label": "VM Type"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "TagDetails",
              "label": "Tag Details"
            },
            {
              "columnId": "VmSize",
              "label": "VM Size"
            },
            {
              "columnId": "OsType",
              "label": "OS Type"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "ResourceGroup",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Backup Not Enabled"
      },
      "showPin": true,
      "name": "BackupNotEnabled",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "db5ab575-14f6-44d0-bbb9-71c59d0d86b2",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyName",
            "label": "Search Vault or Policy",
            "type": 1,
            "description": "Use to filter by Vault or Policy name. <br/> To filter for a specific policy in a specific vault use &lt;vault&gt;;&lt;policy&gt;",
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "0588c964-1b62-424b-aef3-34f05435548a",
            "version": "KqlParameterItem/1.0",
            "name": "HasProtectedItems",
            "label": "Has Protected Items?",
            "type": 2,
            "description": "Use to filter the results only for policies associated with one or more protected items",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Yes\", \"label\":\"Yes\" },\r\n    { \"value\":\"No\", \"label\":\"No\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "ScheduleFrequency",
            "label": "Schedule Frequency",
            "type": 2,
            "description": "Use to filter by Backup Frequency of the policy",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Daily\", \"label\":\"Daily\" },\r\n    { \"value\":\"Weekly\", \"label\":\"Weekly\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "0b064ac9-d8fa-4985-83e7-8f41dca55f02",
            "version": "KqlParameterItem/1.0",
            "name": "RetentionSchedule",
            "label": "Retention Type",
            "type": 2,
            "description": "Use to filter policies where selected Retention Type has been defined",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"1 == 1\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"isnotempty(DailyRetention)\", \"label\":\"Daily\" },\r\n    { \"value\":\"isnotempty(WeeklyRetention)\", \"label\":\"Weekly\" },\r\n    { \"value\":\"isnotempty(MonthlyRetention)\", \"label\":\"Monthly\" },\r\n    { \"value\":\"isnotempty(YearlyRetention)\", \"label\":\"Yearly\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "dd894ccd-2ec7-456b-941a-f3ca616ad9e3",
            "version": "KqlParameterItem/1.0",
            "name": "MinRetention",
            "label": "Min Retention",
            "type": 1,
            "description": "Specify minimum number of days/weeks/months/years the backup is retained in the vault. Use MinMaxRetentionType filter to choose the RetentionType daily/weekly/monthly/yearly to apply the filter on. Use zero to not apply any filter on min retention irrespective of the choice of MinMaxRetentionType filter value",
            "isRequired": true,
            "value": "0",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "1fc96995-297e-476d-8964-83b0d0e3687c",
            "version": "KqlParameterItem/1.0",
            "name": "MaxRetention",
            "label": "Max Retention",
            "type": 1,
            "description": "Specify maximum number of days/weeks/months/years the backup is retained in the vault. Use MinMaxRetentionType filter to choose the RetentionType daily/weekly/monthly/yearly to apply the filter on. Use a large value to not apply any filter on max retention",
            "isRequired": true,
            "value": "3650",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "4c20879b-cb6e-4c9c-8923-0af5a1c063bd",
            "version": "KqlParameterItem/1.0",
            "name": "RetentionFilterType",
            "label": "Min Max Retention Filter Type",
            "type": 2,
            "description": "Use to specify on which retention type the min and max retention filters apply",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"Daily\", \"label\":\"Days\", \"selected\": true },\r\n    { \"value\":\"Weekly\", \"label\":\"Weeks\" },\r\n    { \"value\":\"Monthly\", \"label\":\"Months\" },\r\n    { \"value\":\"Yearly\", \"label\":\"Years\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "1d767e68-5daf-4741-afa5-1dd017d68ba2",
            "version": "KqlParameterItem/1.0",
            "name": "SnapshotRetention",
            "type": 2,
            "description": "To filter by number of days the backup snapshot is retained for fast restores. Use zero to view rows with no snapshot retention.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"0\", \"label\":\"0\" },\r\n    { \"value\":\"1\", \"label\":\"1\" },\r\n    { \"value\":\"2\", \"label\":\"2\" },\r\n    { \"value\":\"3\", \"label\":\"3\" },\r\n    { \"value\":\"4\", \"label\":\"4\" },\r\n    { \"value\":\"5\", \"label\":\"5\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Snapshot Retention"
          },
          {
            "id": "ad30973f-5071-4ce4-9f2b-df9a93955879",
            "version": "KqlParameterItem/1.0",
            "name": "RunDays",
            "label": "Scheduled day(s) of week",
            "type": 1,
            "description": "Filter for days of the week the backup is scheduled to run. Use when schedule frequency is weekly",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "26872b3b-57d6-4f51-8d2a-52bd24811f1b",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupPolicies.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend PolicyId = tolower(id)\r\n| join kind = leftouter\r\n(\r\n    recoveryservicesresources\r\n    | where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n    | summarize ProtectedItems = count() by PolicyId = tolower(tostring(properties.policyId))\r\n) on PolicyId\r\n| project id,\r\n          PolicyName = replace(\".*\\\\/backupPolicies\\\\/\",\"\",id),\r\n\t\t  vaultId,\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",vaultId),\r\n\t\t  ProtectedItems,\r\n          RunTime = strcat(tostring(properties.schedulePolicy.scheduleRunTimes[0]),\" \",iff(isempty(tostring(properties.timeZone)),\"UTC\",tostring(properties.timeZone))),\r\n          Frequency = tostring(properties.schedulePolicy.scheduleRunFrequency),\r\n          RunDays = tostring(properties.schedulePolicy.scheduleRunDays),\r\n \t      SnapshotRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)),\"2\",tostring(properties.instantRpRetentionRangeInDays)),\r\n          DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n          WeeklyRetention = tostring(properties.retentionPolicy.weeklySchedule.retentionDuration.['count']),\r\n          MonthlyRetention = tostring(properties.retentionPolicy.monthlySchedule.retentionDuration.['count']),\r\n          YearlyRetention = tostring(properties.retentionPolicy.yearlySchedule.retentionDuration.['count']),\r\n\t\t  Daily = \"Daily\", Weekly = \"Weekly\", Monthly = \"Monthly\", Yearly = \"Yearly\"\r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where (isnull(ProtectedItems) and \"{HasProtectedItems}\" == \"No\") or (isnotnull(ProtectedItems) and \"{HasProtectedItems}\" == \"Yes\") or (strcat(tostring(ProtectedItems),\"{HasProtectedItems}\") contains \"All\") \r\n| where Frequency == \"{ScheduleFrequency}\" or strcat(Frequency,\"{ScheduleFrequency}\") contains \"All\"\r\n| where {RetentionSchedule}\r\n| where ((Daily == \"{RetentionFilterType}\") and ((tolong(DailyRetention) >= {MinRetention} and tolong(DailyRetention) <= {MaxRetention}) \r\n        or (isempty(DailyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Weekly == \"{RetentionFilterType}\") and ((tolong(WeeklyRetention) >= {MinRetention} and tolong(WeeklyRetention) <= {MaxRetention}) \r\n        or (isempty(WeeklyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Monthly == \"{RetentionFilterType}\") and ((tolong(MonthlyRetention) >= {MinRetention} and tolong(MonthlyRetention) <= {MaxRetention}) \r\n        or (isempty(MonthlyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Yearly == \"{RetentionFilterType}\") and ((tolong(YearlyRetention) >= {MinRetention} and tolong(YearlyRetention) <= {MaxRetention}) \r\n        or (isempty(YearlyRetention) and tolong({MinRetention}) <= 0)))\r\n| where SnapshotRetention == \"{SnapshotRetention}\" or strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(SnapshotRetention) and strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| where RunDays contains (@\"{RunDays}\")\r\n| project id, PolicyName, vaultId, ProtectedItems, RunTime, BackupFrequency = Frequency, RunDays, SnapshotRetention,\r\n          DailyRetention = iff(isnotempty(DailyRetention),strcat(DailyRetention,\" days \"),DailyRetention),\r\n\t\t  WeeklyRetention = iff(isnotempty(WeeklyRetention),strcat(WeeklyRetention,\" weeks \"),WeeklyRetention),\r\n\t\t  MonthlyRetention = iff(isnotempty(MonthlyRetention),strcat(MonthlyRetention,\" months \"),MonthlyRetention),\r\n\t\t  YearlyRetention = iff(isnotempty(YearlyRetention),strcat(YearlyRetention,\" years \"),YearlyRetention)\r\n| project id, PolicyName, vaultId, ProtectedItems, SnapshotRetention,\r\n          MaxRetention = iff(isempty(YearlyRetention),iff(isempty(MonthlyRetention),iff(isempty(WeeklyRetention),DailyRetention,WeeklyRetention),MonthlyRetention),YearlyRetention),\r\n\t\t  Retention = strcat(DailyRetention,WeeklyRetention,MonthlyRetention,YearlyRetention), RunTime, BackupFrequency, RunDays\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "bfe11186-998c-4f54-8e1d-6a58f0c3630a",
            "version": "KqlParameterItem/1.0",
            "name": "SelectedPolicyId",
            "label": "Search Policy",
            "type": 1,
            "description": "Search by Policy",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "customWidth": "100",
      "name": "PoliciesAdvancedParameterBlock",
      "styleSettings": {
        "margin": "-10px 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupPolicies.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend PolicyId = tolower(id)\r\n| join kind = leftouter\r\n(\r\n    recoveryservicesresources\r\n    | where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n    | summarize ProtectedItems = count() by PolicyId = tolower(tostring(properties.policyId))\r\n) on PolicyId\r\n| project id,\r\n          PolicyName = replace(\".*\\\\/backupPolicies\\\\/\",\"\",id),\r\n\t\t  vaultId,\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",vaultId),\r\n\t\t  ProtectedItems,\r\n          RunTime = strcat(replace(\":00\\\\.00.*\",\"\",replace(\".*T\",\"\",tostring(properties.schedulePolicy.scheduleRunTimes[0]))),\" \",iff(isempty(tostring(properties.timeZone)),\"UTC\",tostring(properties.timeZone))),\r\n          Frequency = tostring(properties.schedulePolicy.scheduleRunFrequency),\r\n          RunDays = tostring(properties.schedulePolicy.scheduleRunDays),\r\n \t      SnapshotRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)),\"2\",tostring(properties.instantRpRetentionRangeInDays)),\r\n          DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n          WeeklyRetention = tostring(properties.retentionPolicy.weeklySchedule.retentionDuration.['count']),\r\n          MonthlyRetention = tostring(properties.retentionPolicy.monthlySchedule.retentionDuration.['count']),\r\n          YearlyRetention = tostring(properties.retentionPolicy.yearlySchedule.retentionDuration.['count']),\r\n\t\t  Daily = \"Daily\", Weekly = \"Weekly\", Monthly = \"Monthly\", Yearly = \"Yearly\"\r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where (isnull(ProtectedItems) and \"{HasProtectedItems}\" == \"No\") or (isnotnull(ProtectedItems) and \"{HasProtectedItems}\" == \"Yes\") or (strcat(tostring(ProtectedItems),\"{HasProtectedItems}\") contains \"All\") \r\n| where Frequency == \"{ScheduleFrequency}\" or strcat(Frequency,\"{ScheduleFrequency}\") contains \"All\"\r\n| where {RetentionSchedule}\r\n| where ((Daily == \"{RetentionFilterType}\") and ((tolong(DailyRetention) >= {MinRetention} and tolong(DailyRetention) <= {MaxRetention}) \r\n        or (isempty(DailyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Weekly == \"{RetentionFilterType}\") and ((tolong(WeeklyRetention) >= {MinRetention} and tolong(WeeklyRetention) <= {MaxRetention}) \r\n        or (isempty(WeeklyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Monthly == \"{RetentionFilterType}\") and ((tolong(MonthlyRetention) >= {MinRetention} and tolong(MonthlyRetention) <= {MaxRetention}) \r\n        or (isempty(MonthlyRetention) and tolong({MinRetention}) <= 0)))\r\n\tor \r\n\t    ((Yearly == \"{RetentionFilterType}\") and ((tolong(YearlyRetention) >= {MinRetention} and tolong(YearlyRetention) <= {MaxRetention}) \r\n        or (isempty(YearlyRetention) and tolong({MinRetention}) <= 0)))\r\n| where SnapshotRetention == \"{SnapshotRetention}\" or strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(SnapshotRetention) and strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| where RunDays contains (@\"{RunDays}\")\r\n| project id, PolicyName, vaultId, ProtectedItems, RunTime, BackupFrequency = Frequency, RunDays, SnapshotRetention,\r\n          DailyRetention = iff(isnotempty(DailyRetention),strcat(DailyRetention,\" days \"),DailyRetention),\r\n\t\t  WeeklyRetention = iff(isnotempty(WeeklyRetention),strcat(WeeklyRetention,\" weeks \"),WeeklyRetention),\r\n\t\t  MonthlyRetention = iff(isnotempty(MonthlyRetention),strcat(MonthlyRetention,\" months \"),MonthlyRetention),\r\n\t\t  YearlyRetention = iff(isnotempty(YearlyRetention),strcat(YearlyRetention,\" years \"),YearlyRetention)\r\n| project id, PolicyName, vaultId, ProtectedItems, SnapshotRetention,\r\n          MaxRetention = iff(isempty(YearlyRetention),iff(isempty(MonthlyRetention),iff(isempty(WeeklyRetention),DailyRetention,WeeklyRetention),MonthlyRetention),YearlyRetention),\r\n\t\t  Retention = strcat(DailyRetention,WeeklyRetention,MonthlyRetention,YearlyRetention), RunTime, BackupFrequency, RunDays\r\n| sort by ProtectedItems desc, tolower(PolicyName) asc, id asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{PolicyPageNumber}') or '*' in ('{PolicyPageNumber}')",
        "size": 3,
        "exportFieldName": "id",
        "exportParameterName": "SelectedPolicyId",
        "exportDefaultValue": "*",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "PolicyName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Name of the Policy"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Policy"
              }
            },
            {
              "columnMatch": "ProtectedItems",
              "formatter": 2,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of Protected Items associated with the Policy"
              }
            },
            {
              "columnMatch": "SnapshotRetention",
              "formatter": 2,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of days the backup snapshot is retained for fast restores, as per the Policy"
              }
            },
            {
              "columnMatch": "MaxRetention",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Maximum amount of time a retention point can exist in the vault, whether it is a daily, weekly, monthly or yearly retention point"
              }
            },
            {
              "columnMatch": "Retention",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Retention period as specified by the policy"
              }
            },
            {
              "columnMatch": "RunTime",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Time at which the Policy is scheduled to run"
              }
            },
            {
              "columnMatch": "BackupFrequency",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Frequency of backup as per the Policy"
              }
            },
            {
              "columnMatch": "RunDays",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Days of the week on which the Policy is scheduled to run"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "sortBy": [
            {
              "itemKey": "SnapshotRetention",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "PolicyName",
              "label": "Policy"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            },
            {
              "columnId": "ProtectedItems",
              "label": "# Protected Items"
            },
            {
              "columnId": "SnapshotRetention",
              "label": "Snapshot Retention"
            },
            {
              "columnId": "MaxRetention",
              "label": "Max Retention"
            },
            {
              "columnId": "Retention",
              "label": "Retention [Daily Weekly Monthly Yearly]"
            },
            {
              "columnId": "RunTime",
              "label": "Scheduled Time"
            },
            {
              "columnId": "BackupFrequency",
              "label": "Backup Frequency"
            },
            {
              "columnId": "RunDays",
              "label": "Scheduled Day(s) Of Week"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "SnapshotRetention",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "showPin": true,
      "name": "PoliciesAdvanced",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "db5ab575-14f6-44d0-bbb9-71c59d0d86b2",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyName",
            "label": "Search Vault or Policy",
            "type": 1,
            "description": "Use to filter by Vault or Policy name. <br/> To filter for a specific policy in a specific vault use &lt;vault&gt;;&lt;policy&gt;",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "0588c964-1b62-424b-aef3-34f05435548a",
            "version": "KqlParameterItem/1.0",
            "name": "HasProtectedItems",
            "label": "Has Protected Items?",
            "type": 2,
            "description": "Use to filter the results only for policies associated with one or more protected items",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Yes\", \"label\":\"Yes\" },\r\n    { \"value\":\"No\", \"label\":\"No\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "2fd2f893-b2e3-44d8-9326-5f6b9564b3c4",
            "version": "KqlParameterItem/1.0",
            "name": "ScheduleFrequency",
            "label": "Schedule Frequency",
            "type": 2,
            "description": "Use to filter by Backup Frequency of the policy",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"Daily\", \"label\":\"Daily\" },\r\n    { \"value\":\"Weekly\", \"label\":\"Weekly\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "0b064ac9-d8fa-4985-83e7-8f41dca55f02",
            "version": "KqlParameterItem/1.0",
            "name": "RetentionSchedule",
            "label": "Retention Type",
            "type": 2,
            "description": "Use to filter policies where selected Retention Type has been defined",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"1 == 1\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"isnotempty(DailyRetention)\", \"label\":\"Daily\" },\r\n    { \"value\":\"isnotempty(WeeklyRetention)\", \"label\":\"Weekly\" },\r\n    { \"value\":\"isnotempty(MonthlyRetention)\", \"label\":\"Monthly\" },\r\n    { \"value\":\"isnotempty(YearlyRetention)\", \"label\":\"Yearly\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "1d767e68-5daf-4741-afa5-1dd017d68ba2",
            "version": "KqlParameterItem/1.0",
            "name": "SnapshotRetention",
            "type": 2,
            "description": "To filter by number of days the backup snapshot is retained for fast restores. Use zero to view rows with no snapshot retention.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"All\", \"label\":\"All\", \"selected\": true },\r\n    { \"value\":\"0\", \"label\":\"0\" },\r\n    { \"value\":\"1\", \"label\":\"1\" },\r\n    { \"value\":\"2\", \"label\":\"2\" },\r\n    { \"value\":\"3\", \"label\":\"3\" },\r\n    { \"value\":\"4\", \"label\":\"4\" },\r\n    { \"value\":\"5\", \"label\":\"5\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "label": "Snapshot Retention"
          },
          {
            "id": "e43d08b8-4fe9-44a0-9360-aa34ecd4823d",
            "version": "KqlParameterItem/1.0",
            "name": "PolicyPageNumber",
            "label": "Page",
            "type": 2,
            "description": "Select Page Number",
            "isRequired": true,
            "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupPolicies.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend PolicyId = tolower(id)\r\n| join kind = leftouter\r\n(\r\n    recoveryservicesresources\r\n    | where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n    | summarize ProtectedItems = count() by PolicyId = tolower(tostring(properties.policyId))\r\n) on PolicyId\r\n| project id,\r\n          PolicyName = replace(\".*\\\\/backupPolicies\\\\/\",\"\",id),\r\n\t\t  vaultId,\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",vaultId),\r\n\t\t  ProtectedItems,\r\n          RunTime = strcat(tostring(properties.schedulePolicy.scheduleRunTimes[0]),\" \",iff(isempty(tostring(properties.timeZone)),\"UTC\",tostring(properties.timeZone))),\r\n          Frequency = tostring(properties.schedulePolicy.scheduleRunFrequency),\r\n          RunDays = tostring(properties.schedulePolicy.scheduleRunDays),\r\n \t      SnapshotRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)),\"2\",tostring(properties.instantRpRetentionRangeInDays)),\r\n          DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n          WeeklyRetention = tostring(properties.retentionPolicy.weeklySchedule.retentionDuration.['count']),\r\n          MonthlyRetention = tostring(properties.retentionPolicy.monthlySchedule.retentionDuration.['count']),\r\n          YearlyRetention = tostring(properties.retentionPolicy.yearlySchedule.retentionDuration.['count']),\r\n\t\t  Daily = \"Daily\", Weekly = \"Weekly\", Monthly = \"Monthly\", Yearly = \"Yearly\"\r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where (isnull(ProtectedItems) and \"{HasProtectedItems}\" == \"No\") or (isnotnull(ProtectedItems) and \"{HasProtectedItems}\" == \"Yes\") or (strcat(tostring(ProtectedItems),\"{HasProtectedItems}\") contains \"All\") \r\n| where Frequency == \"{ScheduleFrequency}\" or strcat(Frequency,\"{ScheduleFrequency}\") contains \"All\"\r\n| where {RetentionSchedule}\r\n| where SnapshotRetention == \"{SnapshotRetention}\" or strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(SnapshotRetention) and strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| project id, PolicyName, vaultId, ProtectedItems, RunTime, BackupFrequency = Frequency, RunDays, SnapshotRetention,\r\n          DailyRetention = iff(isnotempty(DailyRetention),strcat(DailyRetention,\" days \"),DailyRetention),\r\n\t\t  WeeklyRetention = iff(isnotempty(WeeklyRetention),strcat(WeeklyRetention,\" weeks \"),WeeklyRetention),\r\n\t\t  MonthlyRetention = iff(isnotempty(MonthlyRetention),strcat(MonthlyRetention,\" months \"),MonthlyRetention),\r\n\t\t  YearlyRetention = iff(isnotempty(YearlyRetention),strcat(YearlyRetention,\" years \"),YearlyRetention)\r\n| project id, PolicyName, vaultId, ProtectedItems, SnapshotRetention,\r\n          MaxRetention = iff(isempty(YearlyRetention),iff(isempty(MonthlyRetention),iff(isempty(WeeklyRetention),DailyRetention,WeeklyRetention),MonthlyRetention),YearlyRetention),\r\n\t\t  Retention = strcat(DailyRetention,WeeklyRetention,MonthlyRetention,YearlyRetention), BackupFrequency\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Standard"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "customWidth": "100",
      "name": "PoliciesStandardParameterBlock",
      "styleSettings": {
        "margin": "-10px 0% 0% 0%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backuppolicies\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| extend vaultId = tolower(replace(\"\\\\/backupPolicies.*\",\"\",id))\r\n| where vaultId in ({Vault}) or (\"*\" in ({Vault}) and tostring(hash(vaultId)) in ({AllVaultHash}))\r\n| extend PolicyId = tolower(id)\r\n| join kind = leftouter\r\n(\r\n    recoveryservicesresources\r\n    | where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n\t| where properties.backupManagementType == \"AzureIaasVM\"\r\n    | summarize ProtectedItems = count() by PolicyId = tolower(tostring(properties.policyId))\r\n) on PolicyId\r\n| project id,\r\n          PolicyName = replace(\".*\\\\/backupPolicies\\\\/\",\"\",id),\r\n\t\t  vaultId,\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",vaultId),\r\n\t\t  ProtectedItems,\r\n          RunTime = strcat(tostring(properties.schedulePolicy.scheduleRunTimes[0]),\" \",iff(isempty(tostring(properties.timeZone)),\"UTC\",tostring(properties.timeZone))),\r\n          Frequency = tostring(properties.schedulePolicy.scheduleRunFrequency),\r\n          RunDays = tostring(properties.schedulePolicy.scheduleRunDays),\r\n \t      SnapshotRetention = iff(isempty(tostring(properties.instantRpRetentionRangeInDays)),\"2\",tostring(properties.instantRpRetentionRangeInDays)),\r\n          DailyRetention = tostring(properties.retentionPolicy.dailySchedule.retentionDuration.['count']),\r\n          WeeklyRetention = tostring(properties.retentionPolicy.weeklySchedule.retentionDuration.['count']),\r\n          MonthlyRetention = tostring(properties.retentionPolicy.monthlySchedule.retentionDuration.['count']),\r\n          YearlyRetention = tostring(properties.retentionPolicy.yearlySchedule.retentionDuration.['count']),\r\n\t\t  Daily = \"Daily\", Weekly = \"Weekly\", Monthly = \"Monthly\", Yearly = \"Yearly\"\r\n| where strcat(VaultName,\";\",PolicyName) contains (@\"{PolicyName}\")\r\n| where (isnull(ProtectedItems) and \"{HasProtectedItems}\" == \"No\") or (isnotnull(ProtectedItems) and \"{HasProtectedItems}\" == \"Yes\") or (strcat(tostring(ProtectedItems),\"{HasProtectedItems}\") contains \"All\") \r\n| where Frequency == \"{ScheduleFrequency}\" or strcat(Frequency,\"{ScheduleFrequency}\") contains \"All\"\r\n| where {RetentionSchedule}\r\n| where SnapshotRetention == \"{SnapshotRetention}\" or strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"All\" or (isempty(SnapshotRetention) and strcat(SnapshotRetention,\"{SnapshotRetention}\") contains \"0\")\r\n| project id, PolicyName, vaultId, ProtectedItems, RunTime, BackupFrequency = Frequency, RunDays, SnapshotRetention,\r\n          DailyRetention = iff(isnotempty(DailyRetention),strcat(DailyRetention,\" days \"),DailyRetention),\r\n\t\t  WeeklyRetention = iff(isnotempty(WeeklyRetention),strcat(WeeklyRetention,\" weeks \"),WeeklyRetention),\r\n\t\t  MonthlyRetention = iff(isnotempty(MonthlyRetention),strcat(MonthlyRetention,\" months \"),MonthlyRetention),\r\n\t\t  YearlyRetention = iff(isnotempty(YearlyRetention),strcat(YearlyRetention,\" years \"),YearlyRetention)\r\n| project id, PolicyName, vaultId, ProtectedItems, SnapshotRetention,\r\n          MaxRetention = iff(isempty(YearlyRetention),iff(isempty(MonthlyRetention),iff(isempty(WeeklyRetention),DailyRetention,WeeklyRetention),MonthlyRetention),YearlyRetention),\r\n\t\t  Retention = strcat(DailyRetention,WeeklyRetention,MonthlyRetention,YearlyRetention), BackupFrequency\r\n| sort by ProtectedItems desc, tolower(PolicyName) asc, id asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{PolicyPageNumber}') or '*' in ('{PolicyPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "PolicyName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Name of the Policy"
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Vault associated with the Policy"
              }
            },
            {
              "columnMatch": "ProtectedItems",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of Protected Items associated with the Policy"
              }
            },
            {
              "columnMatch": "SnapshotRetention",
              "formatter": 2,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Number of days the backup snapshot is retained for fast restores, as per the policy"
              }
            },
            {
              "columnMatch": "MaxRetention",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Maximum amount of time a retention point can exist in the vault, whether it is a daily, weekly, monthly or yearly retention point"
              }
            },
            {
              "columnMatch": "Retention",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Retention period as specified by the Policy"
              }
            },
            {
              "columnMatch": "BackupFrequency",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Frequency of backup as per the Policy"
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "RunTime",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "RunDays",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "PolicyName",
              "label": "Policy"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            },
            {
              "columnId": "ProtectedItems",
              "label": "# Protected Items"
            },
            {
              "columnId": "SnapshotRetention",
              "label": "Snapshot Retention"
            },
            {
              "columnId": "MaxRetention",
              "label": "Max Retention"
            },
            {
              "columnId": "Retention",
              "label": "Retention [Daily Weekly Monthly Yearly]"
            },
            {
              "columnId": "BackupFrequency",
              "label": "Backup Frequency"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Standard"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "showPin": true,
      "name": "PoliciesStandard",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<div><span style=\"font-size:18px;\">&nbsp;<br/></span><span style=\"font-size:14px;\">Backup Items managed by above selected policy</span></div>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "SelectedPolicyId",
          "comparison": "isNotEqualTo",
          "value": "*"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "customWidth": "0",
      "name": "RelatedBackupItemsTitle"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "93005650-7d74-4d70-8048-01749a5fb6f6",
            "version": "KqlParameterItem/1.0",
            "name": "RelatedBackupItemPageNumber",
            "label": "Page",
            "type": 2,
            "isRequired": true,
            "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where tolower(properties.policyId) == tolower(\"{SelectedPolicyId}\")\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id)\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n          ResourceState,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  vaultId\r\n| summarize c = count()\r\n| project num = (c-1)/{RowsPerPage} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "SelectedPolicyId",
          "comparison": "isNotEqualTo",
          "value": "*"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "customWidth": "0",
      "name": "RelatedBackupItemsPageNumberParameterBlock"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| where tolower(properties.policyId) == tolower(\"{SelectedPolicyId}\")\r\n| extend vaultId = tolower(replace(\"\\\\/backupFabrics.*\",\"\",id))\r\n| extend a = split(tolower(tostring(properties.containerName)),\";\")\r\n| extend a = iff(array_length(a) == 4, tostring(hash(strcat(tolower(subscriptionId), tostring(a[2]), tostring(a[3])))), tostring(hash(strcat(tolower(subscriptionId), tostring(a[1]), tostring(a[2])))))\r\n| extend ResourceState = iff(a in ({VMHash}), \"VM Active\", \"VM Not Found\")\r\n| project backupItemId = id,\r\n\t\t  Name = replace(\"iaasvmcontainer;\",\"\",replace(\"iaasvmcontainerv2;\",\"\",tolower(tostring(properties.containerName)))),\r\n          ProtectionState = iff(tostring(properties.protectionState) == \"IRPending\", \"Initial Backup Pending\", iff(tostring(properties.protectionState) == \"Protected\", \"Actively Protected\", iff(tostring(properties.protectionState) == \"ProtectionStopped\", \"Protection Stopped\", \"Actively Protected\"))),\r\n          ResourceState,\r\n\t\t  HealthCheck = tostring(properties.healthStatus),\r\n\t\t  LastBackup = iff(isempty(tostring(properties.lastBackupStatus)),\"Unknown\",tostring(properties.lastBackupStatus)), \r\n\t\t  LastBackupTime = properties.lastBackupTime,\r\n          LastRecoveryPoint = properties.lastRecoveryPoint,\r\n\t\t  backupItemHostId = properties.sourceResourceId,\r\n\t\t  Host = iff(tostring(properties.protectedItemType) contains \"classic\", \"Classic VM\", \"VM\"),\r\n\t\t  policyId = tolower(tostring(properties.policyId)),\r\n\t\t  VaultName = replace(\".*\\\\/vaults\\\\/\",\"\",replace(\"\\\\/backupFabrics.*\",\"\",id)),\r\n\t\t  vaultId = replace(\"\\\\/backupFabrics.*\",\"\",id)\r\n| project backupItemId,\r\n\t\t  Name,\r\n          Item = tostring(split(Name,\";\")[1]),\r\n          ResourceGroup = tostring(split(Name,\";\")[0]),\r\n          ProtectionState,\r\n\t\t  HealthCheck,\r\n\t\t  LastBackup, \r\n\t\t  LastBackupTime = todatetime(LastBackupTime),\r\n          LastRecoveryPoint = todatetime(LastRecoveryPoint),\r\n          ResourceState,\r\n\t\t  Host = iff(ResourceState == \"VM Active\",backupItemHostId,\"\"),\r\n\t\t  vaultId\r\n| sort by tolower(Name) asc, backupItemId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{RowsPerPage} + 1))\r\n| where page_num has ('{RelatedBackupItemPageNumber}') or '*' in ('{RelatedBackupItemPageNumber}')",
        "size": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "backupItemId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Item",
              "formatter": 18,
              "formatOptions": {
                "linkColumn": "backupItemId",
                "linkTarget": "Resource",
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "resource",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ProtectionState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Stopped",
                    "representation": "disabled",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Protected",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Pending",
                    "representation": "pending",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "HealthCheck",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Passed",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionSuggested",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "ActionRequired",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "LastBackup",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "LastBackupTime",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "LastRecoveryPoint",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "ResourceState",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Active",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Not Found",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Host",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "vaultId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "row_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "page_num",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "PolicyName",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "backupItemHostId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "Item",
              "label": "Backup Item"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "ProtectionState",
              "label": "Protection State"
            },
            {
              "columnId": "HealthCheck",
              "label": "Health Check"
            },
            {
              "columnId": "LastBackupTime",
              "label": "LastBackupTime [UTC]"
            },
            {
              "columnId": "LastRecoveryPoint",
              "label": "LastRecoveryPoint [UTC]"
            },
            {
              "columnId": "ResourceState",
              "label": "Resource State"
            },
            {
              "columnId": "Host",
              "label": "Azure Resource"
            },
            {
              "columnId": "vaultId",
              "label": "Vault"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tabname",
          "comparison": "isEqualTo",
          "value": "Policies"
        },
        {
          "parameterName": "SelectedPolicyId",
          "comparison": "isNotEqualTo",
          "value": "*"
        },
        {
          "parameterName": "PolicyView",
          "comparison": "isEqualTo",
          "value": "Enhanced"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Tabname",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "showPin": true,
      "name": "RelatedBackupItems",
      "styleSettings": {
        "margin": "-30px 0% 0% 0%",
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}