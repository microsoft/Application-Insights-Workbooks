{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "eb1c9bce-f681-4fd9-939c-9515f911494a",
                  "cellValue": "PolicyAdherence_SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Policy Adherence by Time Period",
                  "subTarget": "Policy Adherence by Time Period",
                  "preText": "Policy Adherence by Time Period",
                  "style": "link"
                },
                {
                  "id": "d641ca7e-8ca3-4ff9-a536-129243f877b6",
                  "cellValue": "PolicyAdherence_SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Policy Adherence by Backup Instance",
                  "subTarget": "Policy Adherence by Backup Instance",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceSubTabs"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "65975bbd-0ea1-4c4d-ae29-2adb4467ad3f",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherence_DailyOrWeeklyBackup",
                  "label": "Display Data for",
                  "type": 2,
                  "description": "Use to filter for items with daily backup policy or weekly backup policy",
                  "isRequired": true,
                  "value": "Daily",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Daily\", \"label\": \"Items backed up daily\" },\r\n{ \"value\": \"Weekly\", \"label\": \"Items backed up weekly\" }]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherence-PolicyTypeParameter"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">Count of Backup Instances with atleast one successful backup every day </span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-Grid1Title"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Daily view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on a given day fall under the second column in the below table. [Learn more](https://aka.ms/AzureBackupReportDailyBackupDailyView1)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-AggregationType-Daily-Text"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Weekly view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on every day in the given week fall under the second column in the below table. [Learn more](https://aka.ms/AzureBackupReportDailyBackupWeeklyView1)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-AggregationType-Daily-Text - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Monthly view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on every day in the given month (28 days) fall under the second column in the below table. [Learn more](https://aka.ms/AzureBackupReportDailyBackupMonthlyView1)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-AggregationType-Daily-Text - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value = iff(@\"{AggregationType}\" == \"Weekly\", 7d, iff(@\"{AggregationType}\" == \"Monthly\", 28d, 1d));\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"7\", iff(@\"{AggregationType}\" == \"Monthly\", \"28\", \"1\")); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"6.00:00:00\", iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"00.00:00:00\")); \r\nlet BackupInstanceWithDailyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Daily\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithDailyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount =count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), jobFailureCount = countif(Status == \"Failed\" or Status == \"Cancelled\") by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n// calculating isJobSuccess in the timeperiod to determine if it is successfull throughout the timeperiod\r\n| project BackupInstanceUniqueId, Day, isJobSuccessInTheTimePeriod =iff(isnull(jobCount), 0, iff((jobSuccessCount > 1), 1, jobSuccessCount)), jobFailureCount\r\n| summarize max(Day), min(Day), sum(isJobSuccessInTheTimePeriod), sum(jobFailureCount) by BackupInstanceUniqueId, bin_at(Day, bin_Value, RangeEnd + 1d)\r\n//| where BackupInstanceUniqueId in (\"westus;1541146419693764636;iaasvmcontainerv2;arult-test;cvarshrbac\",\"southeastasia;7777938885731870052;iaasvmcontainerv2;trinadhkselfhostrg;databasevm8\")\r\n| project BackupInstanceUniqueId, Period = iff(@\"{AggregationType}\" == \"Weekly\" or @\"{AggregationType}\" == \"Monthly\", strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")), format_datetime(todatetime(min_Day),\"yyyy/MM/dd\")), sum_isJobSuccessInTheTimePeriod, sum_jobFailureCount, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize ItemsWithSuccessfulDailyBackup = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), ItemsWithoutSuccessfulDailyBackup = countif(sum_isJobSuccessInTheTimePeriod != sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), sum_jobFailureCount = any(sum_jobFailureCount) by BackupInstanceUniqueId, Period\r\n| summarize ItemsWithSuccessfulDailyBackup = sum(ItemsWithSuccessfulDailyBackup), ItemsWithoutSuccessfulDailyBackup = sum(ItemsWithoutSuccessfulDailyBackup), FailedBackupJobs = sum(sum_jobFailureCount), RangeStartValue = (any(Day)) by Period\r\n| sort by RangeStartValue desc | extend RangeEndValue = RangeStartValue + bin_Value - 1d | extend BackupJobsInPeriod=\"Click to view\"\r\n\r\n\r\n",
              "size": 3,
              "noDataMessage": "No records found for the selected scope and time range",
              "exportedParameters": [
                {
                  "fieldName": "RangeEndValue",
                  "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup",
                  "parameterType": 1,
                  "defaultValue": ""
                },
                {
                  "fieldName": "RangeStartValue",
                  "parameterName": "RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup",
                  "parameterType": 1,
                  "defaultValue": "2000-01-01T00:00:00Z"
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Period",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Time Period in UTC"
                    }
                  },
                  {
                    "columnMatch": "ItemsWithSuccessfulDailyBackup",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of backup instances which had atleast one successful backup on all days in the selected time period"
                    }
                  },
                  {
                    "columnMatch": "ItemsWithoutSuccessfulDailyBackup",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of backup instances which did not have atleast one successful backup on all days in the selected time period"
                    }
                  },
                  {
                    "columnMatch": "FailedBackupJobs",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of failed backup jobs in the selected time period"
                    }
                  },
                  {
                    "columnMatch": "RangeStartValue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RangeEndValue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "BackupJobsInPeriod",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Period",
                    "label": "Period (UTC)"
                  },
                  {
                    "columnId": "ItemsWithSuccessfulDailyBackup",
                    "label": "# Items with successful daily backup"
                  },
                  {
                    "columnId": "ItemsWithoutSuccessfulDailyBackup",
                    "label": "# Items without successful daily backup"
                  },
                  {
                    "columnId": "FailedBackupJobs",
                    "label": "# Failed backup jobs"
                  },
                  {
                    "columnId": "BackupJobsInPeriod",
                    "label": "Backup Jobs In Period"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-Grid1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">Count of Backup Instances with atleast one successful backup every week </span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-Grid1Title"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Weekly view** due to your time range selection. Backup Instances which have had **atleast one** successful backup in a given week fall under the second column in the below table. [Learn more](https://aka.ms/AzureBackupReportWeeklyBackupWeeklyView1)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isNotEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-AggregationType-Weekly-Text"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Monthly view** due to your time range selection. Backup Instances which have had **atleast one** successful backup in every week in a given month (28 days) fall under the second column in the below table. [Learn more](https://aka.ms/AzureBackupReportWeeklyBackupMonthlyView1)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-AggregationType-Weekly-Text - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\n// BackupJob\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value =  iff(@\"{AggregationType}\" == \"Monthly\", 28d, 7d);\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"4\", \"1\"); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"6.00:00:00\"); \r\nlet BackupInstanceWithWeeklyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Weekly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithWeeklyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount =count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), jobFailureCount = countif(Status == \"Failed\" or Status == \"Cancelled\") by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n// Create weekly buckets to check if SLA met\r\n| summarize max(Day), min(Day), sum(jobSuccessCount), sum(jobFailureCount) by BackupInstanceUniqueId, bin_at(Day, 7d, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, Day, sum_isJobSuccessInTheTimePeriod = iff(sum_jobSuccessCount > 1, 1, sum_jobSuccessCount), sum_jobFailureCount, max_Day, min_Day\r\n| summarize max_Day = max(max_Day), min_Day = min(min_Day), sum_isJobSuccessInTheTimePeriod = sum(sum_isJobSuccessInTheTimePeriod), sum_jobFailureCount = sum(sum_jobFailureCount) by BackupInstanceUniqueId, Day = bin_at(Day, bin_Value, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, Period = strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")),  sum_isJobSuccessInTheTimePeriod, sum_jobFailureCount, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize ItemsWithSuccessfulWeeklyBackup = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), ItemsWithoutSuccessfulWeeklyBackup = countif(sum_isJobSuccessInTheTimePeriod != sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), sum_jobFailureCount = any(sum_jobFailureCount) by BackupInstanceUniqueId, Period\r\n| summarize ItemsWithSuccessfulWeeklyBackup = sum(ItemsWithSuccessfulWeeklyBackup), ItemsWithoutSuccessfulWeeklyBackup = sum(ItemsWithoutSuccessfulWeeklyBackup), FailedBackupJobs = sum(sum_jobFailureCount), RangeStartValue = (any(Day)) by Period\r\n| sort by RangeStartValue desc | extend RangeEndValue = RangeStartValue + bin_Value - 1d | extend BackupJobsInPeriod=\"Click to view\"",
              "size": 3,
              "noDataMessage": "No records found for the selected scope and time range. Note that data for partial weeks is not displayed.",
              "exportedParameters": [
                {
                  "fieldName": "RangeEndValue",
                  "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup",
                  "parameterType": 1,
                  "defaultValue": ""
                },
                {
                  "fieldName": "RangeStartValue",
                  "parameterName": "RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup",
                  "parameterType": 1,
                  "defaultValue": ""
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Period",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    }
                  },
                  {
                    "columnMatch": "FailedBackupJobs",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20%"
                    }
                  },
                  {
                    "columnMatch": "RangeStartValue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RangeEndValue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "BackupJobsInPeriod",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "Period",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Period",
                    "label": "Period (UTC)"
                  },
                  {
                    "columnId": "ItemsWithSuccessfulWeeklyBackup",
                    "label": "# Items with successful weekly backup"
                  },
                  {
                    "columnId": "ItemsWithoutSuccessfulWeeklyBackup",
                    "label": "# Items without successful weekly backup"
                  },
                  {
                    "columnId": "FailedBackupJobs",
                    "label": "# Failed backup jobs"
                  },
                  {
                    "columnId": "BackupJobsInPeriod",
                    "label": "Backup Jobs In Period"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Period",
                  "sortOrder": 2
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-Grid1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"font-size:12px;font-style:italic\"> Click on any row above to see details of all backup jobs that were triggered in the selected period. </span>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-PromptText"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">List of Backup Jobs in Period</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-Grid2Title"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8db8c419-3938-44fb-98c1-38fec5488fbf",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SortBy_1a",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"DurationInSecs\", \"label\": \"Job Duration (hrs)\" },\r\n{ \"value\": \"DataTransferredInMBs\", \"label\": \"Data Transferred (MB)\", \"selected\": \"true\" }]",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "bbe6281f-5a52-4c0e-8f6e-c2bef22742f4",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Order_1a",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "f95c204a-4472-489b-b92e-f0fd393cc236",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_1a",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "e9debeb6-ff52-4136-9fd8-ac9798b45bfe",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_1a",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup = @\"{RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup}\";\r\nlet RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup = @\"{RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup}\";\r\n// function Params - Report Filters\r\nlet RangeStart = RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup;\r\nlet RangeEnd = RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup; \r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_1a} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num)) ",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-Grid2ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup = @\"{RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup}\";\r\nlet RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup = @\"{RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup}\";\r\n// function Params - Report Filters\r\nlet RangeStart = RangeStartValue_PolicyAdherenceTimePeriod_DailyBackup;\r\nlet RangeEnd = RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup; \r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| extend TempColumn = column_ifexists(tostring('{PolicyAdherenceTab_SortBy_1a}'), \"DataTransferredInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyAdherenceTab_Order_1a}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, UniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_1a} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_1a}') or '*' in ('{PolicyAdherenceTab_Page_1a}')\r\n| extend Container = iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)\r\n| extend AzureResource = iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)\r\n| project BackupInstance=BackupInstanceFriendlyName, BackupInstanceId, Container=Container, ResourceGroup=iff(DatasourceType==\"Azure Backup Agent\" or DatasourceType==\"Azure Backup Server\" or DatasourceType==\"DPM\",\"(none)\",split(split(tostring(tolower(AzureResource)), '/resourcegroups/')[1],'/')[0]\r\n), OperationCategory, JobStatus=Status,  JobStartDateTime=StartTime, JobDuration=DurationInSecs/3600, ErrorTitle, DataTransferred=DataTransferredInMBs, AzureResource=AzureResource, DatasourceType ",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstance",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Container",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "OperationCategory",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Operation Category"
                    }
                  },
                  {
                    "columnMatch": "JobStatus",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Status"
                    }
                  },
                  {
                    "columnMatch": "JobStartDateTime",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Start date and time of the Job"
                    }
                  },
                  {
                    "columnMatch": "JobDuration",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Job Duration"
                    }
                  },
                  {
                    "columnMatch": "ErrorTitle",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Failure Code"
                    }
                  },
                  {
                    "columnMatch": "DataTransferred",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "tooltipFormat": {
                      "tooltip": "Amount of data transferred by the job"
                    }
                  },
                  {
                    "columnMatch": "AzureResource",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Azure Resource associated with the backup instance. For Azure VM Backup, SQL in Azure VM backup and SAP database in Azure VM backup, the Azure Resource is the Azure VM. For Azure Files Share backup, the Azure Resource is the Azure Storage account. For on-premises backup instances, this field is blank."
                    }
                  },
                  {
                    "columnMatch": "DatasourceType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Datasource Type"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstance",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "OperationCategory",
                    "label": "Operation Category"
                  },
                  {
                    "columnId": "JobStatus",
                    "label": "Job Status"
                  },
                  {
                    "columnId": "JobStartDateTime",
                    "label": "Job Start Date Time"
                  },
                  {
                    "columnId": "JobDuration",
                    "label": "Job Duration (hrs)"
                  },
                  {
                    "columnId": "ErrorTitle",
                    "label": "Job Failure Code"
                  },
                  {
                    "columnId": "DataTransferred",
                    "label": "Data Transferred (MB)"
                  },
                  {
                    "columnId": "AzureResource",
                    "label": "Azure Resource"
                  },
                  {
                    "columnId": "DatasourceType",
                    "label": "Datasource Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_DailyBackup",
                "comparison": "isNotEqualTo",
                "value": ""
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByTimePeriod-DailyBackup-Grid2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">List of Backup Jobs in Period </span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-Grid2Title"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "4010e835-5e14-40f1-8232-885b3d81392a",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SortBy_1b",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "value": "DurationInSecs",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"DurationInSecs\", \"label\": \"Job Duration (hrs)\" },\r\n{ \"value\": \"DataTransferredInMBs\", \"label\": \"Data Transferred (MB)\", \"selected\": \"true\" }]",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "715e7892-2a1a-4579-806b-459c49e8abd5",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Order_1b",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "4ec2f27f-c475-4472-93d1-e2a4c12768db",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_1b",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "dfa947c5-2084-41c2-856b-44a485e40314",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_1b",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup = @\"{RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup}\";\r\nlet RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup = @\"{RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup}\";\r\n// function Params - Report Filters\r\nlet RangeStart = RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup;\r\nlet RangeEnd = RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup;\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_1b} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num)) ",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              }
            ],
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-Grid2ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup = @\"{RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup}\";\r\nlet RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup = @\"{RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup}\";\r\n// function Params - Report Filters\r\nlet RangeStart = RangeStartValue_PolicyAdherenceTimePeriod_WeeklyBackup;\r\nlet RangeEnd = RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup;\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| extend TempColumn = column_ifexists(tostring('{PolicyAdherenceTab_SortBy_1b}'), \"DataTransferredInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyAdherenceTab_Order_1b}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, UniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_1b} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_1b}') or '*' in ('{PolicyAdherenceTab_Page_1b}')\r\n| extend Container = iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)\r\n| extend AzureResource = iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)\r\n| project BackupInstance=BackupInstanceFriendlyName, BackupInstanceId, Container=Container, ResourceGroup=iff(DatasourceType==\"Azure Backup Agent\" or DatasourceType==\"Azure Backup Server\" or DatasourceType==\"DPM\",\"(none)\",split(split(tostring(tolower(AzureResource)), '/resourcegroups/')[1],'/')[0]\r\n), OperationCategory, JobStatus=Status,  JobStartDateTime=StartTime, JobDuration=DurationInSecs/3600, ErrorTitle, DataTransferred=DataTransferredInMBs, AzureResource=AzureResource, DatasourceType ",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstance",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Container",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "OperationCategory",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Operation Category"
                    }
                  },
                  {
                    "columnMatch": "JobStatus",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Status"
                    }
                  },
                  {
                    "columnMatch": "JobStartDateTime",
                    "formatter": 6,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    },
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Start date and time of the Job"
                    }
                  },
                  {
                    "columnMatch": "JobDuration",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Job Duration"
                    }
                  },
                  {
                    "columnMatch": "ErrorTitle",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Failure Code"
                    }
                  },
                  {
                    "columnMatch": "DataTransferred",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Amount of data transferred by the job"
                    }
                  },
                  {
                    "columnMatch": "AzureResource",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Azure Resource associated with the backup instance. For Azure VM Backup, SQL in Azure VM backup and SAP database in Azure VM backup, the Azure Resource is the Azure VM. For Azure Files Share backup, the Azure Resource is the Azure Storage account. For on-premises backup instances, this field is blank."
                    }
                  },
                  {
                    "columnMatch": "DatasourceType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Datasource Type"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstance",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "OperationCategory",
                    "label": "Operation Category"
                  },
                  {
                    "columnId": "JobStatus",
                    "label": "Job Status"
                  },
                  {
                    "columnId": "JobStartDateTime",
                    "label": "Job Start Date Time"
                  },
                  {
                    "columnId": "JobDuration",
                    "label": "Job Duration (hrs)"
                  },
                  {
                    "columnId": "ErrorTitle",
                    "label": "Job Failure Code"
                  },
                  {
                    "columnId": "DataTransferred",
                    "label": "Data Transferred (MB)"
                  },
                  {
                    "columnId": "AzureResource",
                    "label": "Azure Resource"
                  },
                  {
                    "columnId": "DatasourceType",
                    "label": "Datasource Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "RangeEndValue_PolicyAdherenceTimePeriod_WeeklyBackup",
                "comparison": "isNotEqualTo",
                "value": ""
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Time Period"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByTimePeriod-WeeklyBackup-Grid2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">Policy Adherence details at Backup Instance level</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-Grid1Title"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Daily view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on a given day are marked green (compliant) for that day. [Learn more](https://aka.ms/AzureBackupReportDailyBackupDailyView2)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-AggregationType-Daily-Text"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Weekly view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on every day in a given week are marked green (compliant) for that day. [Learn more](https://aka.ms/AzureBackupReportDailyBackupWeeklyView2)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-AggregationType-Daily-Text - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Monthly view** due to your time range selection. Backup Instances which have had **atleast one successful backup** on every day in a given month (28 days) are marked green (compliant) for that day. [Learn more](https://aka.ms/AzureBackupReportDailyBackupMonthlyView2)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-AggregationType-Daily-Text - Copy - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "parameters": [
                {
                  "id": "f25f4728-0548-4872-995b-009e36fae10e",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2b",
                  "label": "Search Instance or Container",
                  "type": 1,
                  "description": "Use to search for a backup instance by name. <br/> To search for a specific instance in a container, use the syntax [container name];[instance name] <br/> To search for all instances in a container, use the syntax [container name];",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "value": ""
                },
                {
                  "id": "8fcd9638-ffa1-4ab4-a10a-6ec84675e7d5",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_2b",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "8c69b14b-b995-44ea-baa8-3e812d381c96",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_2b",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  @\"{PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2b}\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value = iff(@\"{AggregationType}\" == \"Weekly\", 7d, iff(@\"{AggregationType}\" == \"Monthly\", 28d, 1d));\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"7\", iff(@\"{AggregationType}\" == \"Monthly\", \"28\", \"1\")); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"6.00:00:00\", iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"00.00:00:00\")); \r\nlet BackupInstanceWithDailyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Daily\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithDailyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount = count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupSolution =  any(BackupSolution), DatasourceSetResourceId = any(DatasourceSetResourceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName) by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n| project ResourceGroup=iff(BackupSolution ==\"Azure Backup Agent\" or BackupSolution ==\"Azure Backup Server\" or BackupSolution ==\"DPM\",\"(none)\",split(split(tostring(tolower(DatasourceSetResourceId)), '/resourcegroups/')[1],'/')[0]), jobCount, jobSuccessCount, BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, JobCreationDate\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n//| where BackupInstanceUniqueId == \"eastus;944400882857245004;iaasvmcontainerv2;azurefiles;afsaccount\"\r\n| sort by BackupInstanceUniqueId, Day desc\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Day, jobTotalCountInTheTimePeriod = iff(isnull(jobCount), 0, jobCount), isJobSuccessInTheTimePeriod =iff(isnull(jobCount), 0, iff((jobSuccessCount > 1), 1, jobSuccessCount))\r\n| summarize max(Day), min(Day), sum(isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, bin_at(Day, bin_Value, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Period = iff(@\"{AggregationType}\" == \"Weekly\" or @\"{AggregationType}\" == \"Monthly\", strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")), format_datetime(todatetime(min_Day),\"yyyy/MM/dd\")), sum_isJobSuccessInTheTimePeriod, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize sum_isJobSuccessInTheTimePeriod = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Period\r\n| evaluate pivot(Period, any(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, ResourceGroup)\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_2b} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-Grid1ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  @\"{PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2b}\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value = iff(@\"{AggregationType}\" == \"Weekly\", 7d, iff(@\"{AggregationType}\" == \"Monthly\", 28d, 1d));\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"7\", iff(@\"{AggregationType}\" == \"Monthly\", \"28\", \"1\")); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Weekly\", \"6.00:00:00\", iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"00.00:00:00\")); \r\nlet BackupInstanceWithDailyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Daily\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Daily\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithDailyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount = count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupInstanceId=any(BackupInstanceId), BackupSolution =  any(BackupSolution), DatasourceSetResourceId = any(iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)), DatasourceSetFriendlyName = any(iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)) by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n| project ResourceGroup=iff(BackupSolution ==\"Azure Backup Agent\" or BackupSolution ==\"Azure Backup Server\" or BackupSolution ==\"DPM\",\"(none)\",split(split(tostring(tolower(DatasourceSetResourceId)), '/resourcegroups/')[1],'/')[0]), jobCount, jobSuccessCount, BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, JobCreationDate, BackupInstanceId\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, BackupInstanceId\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, BackupInstanceId, DatasourceSetFriendlyName, ResourceGroup, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n//| where BackupInstanceUniqueId == \"eastus;944400882857245004;iaasvmcontainerv2;azurefiles;afsaccount\"\r\n| sort by BackupInstanceUniqueId, Day desc\r\n| project BackupInstanceUniqueId, BackupInstanceId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Day, jobTotalCountInTheTimePeriod = iff(isnull(jobCount), 0, jobCount), isJobSuccessInTheTimePeriod =iff(isnull(jobCount), 0, iff((jobSuccessCount > 1), 1, jobSuccessCount))\r\n| summarize max(Day), min(Day), sum(isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName),BackupInstanceId = any(BackupInstanceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, bin_at(Day, bin_Value, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Period = iff(@\"{AggregationType}\" == \"Weekly\" or @\"{AggregationType}\" == \"Monthly\", strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")), format_datetime(todatetime(min_Day),\"yyyy/MM/dd\")), sum_isJobSuccessInTheTimePeriod, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize sum_isJobSuccessInTheTimePeriod = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupInstanceId = any(BackupInstanceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Period\r\n| evaluate pivot(Period, any(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName, BackupInstanceId, BackupInstanceUniqueId, DatasourceSetFriendlyName, ResourceGroup)\r\n| sort by BackupInstanceUniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_2b} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_2b}') or '*' in ('{PolicyAdherenceTab_Page_2b}')",
              "size": 3,
              "exportedParameters": [
                {
                  "fieldName": "DatasourceSetFriendlyName",
                  "parameterName": "PolicyAdherence_DailyBackup_DatasourceSetFriendlyName",
                  "parameterType": 1
                },
                {
                  "fieldName": "BackupInstanceFriendlyName",
                  "parameterName": "PolicyAdherence_DailyBackup_BackupInstanceFriendlyName",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstanceFriendlyName",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "BackupInstanceUniqueId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DatasourceSetFriendlyName",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]|[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]-[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "0",
                          "representation": "green",
                          "text": "."
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "."
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "row_num",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "page_num",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstanceFriendlyName",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "DatasourceSetFriendlyName",
                    "label": "Container"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Daily"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-Grid1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Weekly view** due to your time range selection. Backup Instances which have had **atleast one** successful backup in a given week are marked green (compliant) for that week.  [Learn more](https://aka.ms/AzureBackupReportDailyBackupWeeklyView2)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isNotEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-AggregationType-Weekly-Text"
          },
          {
            "type": 1,
            "content": {
              "json": "The below grid is displayed in **Monthly view** due to your time range selection. Backup Instances which have had **atleast one** successful backup in every week in a given month (28 days) are marked green (compliant) for that week.  [Learn more](https://aka.ms/AzureBackupReportWeeklyBackupMonthlyView2)",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "AggregationType",
                "comparison": "isEqualTo",
                "value": "Monthly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-AggregationType-Weekly-Text - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "parameters": [
                {
                  "id": "cb015b28-ef63-4003-8cdd-afc04992841a",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2c",
                  "label": "Search Instance or Container",
                  "type": 1,
                  "description": "Use to search for a backup instance by name. <br/> To search for a specific instance in a container, use the syntax [container name];[instance name] <br/> To search for all instances in a container, use the syntax [container name];",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "9597943f-e990-4c14-967d-36b971159676",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_2c",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "fbb06ba5-20eb-41d5-ad52-a0d883c83f48",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_2c",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  @\"{PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2c}\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\n// BackupJob\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value =  iff(@\"{AggregationType}\" == \"Monthly\", 28d, 7d);\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"4\", \"1\"); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"6.00:00:00\"); \r\nlet BackupInstanceWithWeeklyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Weekly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithWeeklyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount = count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupSolution =  any(BackupSolution), DatasourceSetResourceId = any(DatasourceSetResourceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName) by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n| project ResourceGroup=iff(BackupSolution ==\"Azure Backup Agent\" or BackupSolution ==\"Azure Backup Server\" or BackupSolution ==\"DPM\",\"(none)\",split(split(tostring(tolower(DatasourceSetResourceId)), '/resourcegroups/')[1],'/')[0]), jobCount, jobSuccessCount, BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, JobCreationDate\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n| sort by BackupInstanceUniqueId, Day desc\r\n// Create weekly buckets to check if SLA met\r\n| summarize max(Day), min(Day), sum(jobSuccessCount), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, bin_at(Day, 7d, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Day, sum_isJobSuccessInTheTimePeriod = iff(sum_jobSuccessCount > 1, 1, sum_jobSuccessCount), max_Day, min_Day\r\n| summarize max_Day = max(max_Day), min_Day = min(min_Day), sum_isJobSuccessInTheTimePeriod = sum(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Day = bin_at(Day, bin_Value, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Period =  strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")), sum_isJobSuccessInTheTimePeriod, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize sum_isJobSuccessInTheTimePeriod = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Period\r\n| evaluate pivot(Period, any(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, ResourceGroup)\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_2b} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-Grid1ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet Item_search =  @\"{PolicyAdherenceTab_SearchBackupInstanceOrDatasourceSet_2c}\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\n// BackupJob\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n// Grid specific params\r\nlet bin_Value =  iff(@\"{AggregationType}\" == \"Monthly\", 28d, 7d);\r\nlet sum_isJobSuccessInTheTimePeriod_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"4\", \"1\"); \r\nlet duration_Value = iff(@\"{AggregationType}\" == \"Monthly\", \"27.00:00:00\", \"6.00:00:00\"); \r\nlet BackupInstanceWithWeeklyBackup = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).FullBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).DifferentialBackupFrequency == \"Weekly\" or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Weekly\"\r\n};\r\n// Grid Logic\r\nlet JobInfo = ()\r\n{\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithWeeklyBackup) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize jobCount = count(), jobSuccessCount = countif(Status == \"Completed\" or Status == \"CompletedWithWarnings\"), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupInstanceId = any(BackupInstanceId), BackupSolution =  any(BackupSolution), DatasourceSetResourceId = any(iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)), DatasourceSetFriendlyName = any(iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)) by BackupInstanceUniqueId, JobCreationDate = startofday(StartTime)\r\n| project ResourceGroup=iff(BackupSolution ==\"Azure Backup Agent\" or BackupSolution ==\"Azure Backup Server\" or BackupSolution ==\"DPM\",\"(none)\",split(split(tostring(tolower(DatasourceSetResourceId)), '/resourcegroups/')[1],'/')[0]), jobCount, jobSuccessCount, BackupInstanceFriendlyName, BackupInstanceUniqueId, DatasourceSetFriendlyName, JobCreationDate, BackupInstanceId\r\n};\r\nJobInfo\r\n| summarize by BackupInstanceUniqueId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, BackupInstanceId\r\n| extend Day = range(RangeEnd, RangeStart, -1d)\r\n| mv-expand Day\r\n| project BackupInstanceUniqueId, BackupInstanceId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, todatetime(Day)\r\n| join kind = leftouter \r\n( JobInfo\r\n) on BackupInstanceUniqueId, $left.Day == $right.JobCreationDate\r\n| sort by BackupInstanceUniqueId, Day desc\r\n// Create weekly buckets to check if SLA met\r\n| summarize max(Day), min(Day), sum(jobSuccessCount), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName),BackupInstanceId = any(BackupInstanceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, bin_at(Day, 7d, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Day, sum_isJobSuccessInTheTimePeriod = iff(sum_jobSuccessCount > 1, 1, sum_jobSuccessCount), max_Day, min_Day\r\n| summarize max_Day = max(max_Day), min_Day = min(min_Day), sum_isJobSuccessInTheTimePeriod = sum(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupInstanceId = any(BackupInstanceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Day = bin_at(Day, bin_Value, RangeEnd + 1d)\r\n| project BackupInstanceUniqueId, BackupInstanceId, BackupInstanceFriendlyName, DatasourceSetFriendlyName, ResourceGroup, Period =  strcat(format_datetime(todatetime(min_Day),\"yyyy/MM/dd\"), \" - \", format_datetime(todatetime(max_Day),\"yyyy/MM/dd\")), sum_isJobSuccessInTheTimePeriod, duration = max_Day - min_Day, Day\r\n// Exclude partial week/month\r\n| where duration == duration_Value\r\n| summarize sum_isJobSuccessInTheTimePeriod = countif(sum_isJobSuccessInTheTimePeriod == sum_isJobSuccessInTheTimePeriod_Value), Day= (any(Day)), BackupInstanceFriendlyName = any(BackupInstanceFriendlyName), BackupInstanceId = any(BackupInstanceId), DatasourceSetFriendlyName = any(DatasourceSetFriendlyName), ResourceGroup = any(ResourceGroup) by BackupInstanceUniqueId, Period\r\n| evaluate pivot(Period, any(sum_isJobSuccessInTheTimePeriod), BackupInstanceFriendlyName, BackupInstanceId, BackupInstanceUniqueId, DatasourceSetFriendlyName, ResourceGroup)\r\n| sort by BackupInstanceUniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_2c} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_2c}') or '*' in ('{PolicyAdherenceTab_Page_2c}') | project-away row_num, page_num",
              "size": 3,
              "noDataMessage": "No records found for the selected scope and time range. Note that data for partial weeks is not displayed.",
              "exportedParameters": [
                {
                  "fieldName": "DatasourceSetFriendlyName",
                  "parameterName": "PolicyAdherence_WeeklyBackup_DatasourceSetFriendlyName",
                  "parameterType": 1
                },
                {
                  "fieldName": "BackupInstanceFriendlyName",
                  "parameterName": "PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstanceFriendlyName",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "BackupInstanceUniqueId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DatasourceSetFriendlyName",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]|[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] - [0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "0",
                          "representation": "green",
                          "text": "."
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "."
                        }
                      ]
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstanceFriendlyName",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "DatasourceSetFriendlyName",
                    "label": "Container"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "PolicyAdherence_DailyOrWeeklyBackup",
                "comparison": "isEqualTo",
                "value": "Weekly"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-Grid1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"font-size:12px;font-style:italic\"> Click on any row above to see details of all backup jobs that were triggered in the selected period for the given backup instance. </span>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-PromptText"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">List of Backup Jobs in Period</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_DailyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-Grid2Title"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0a8a7ff6-2849-46e2-8b52-4750eed51a8b",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SortBy_2a",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"DurationInSecs\", \"label\": \"Job Duration (hrs)\" },\r\n{ \"value\": \"DataTransferredInMBs\", \"label\": \"Data Transferred (MB)\", \"selected\": \"true\" }]",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "941ce741-3f2f-44fe-bd1b-f44d2d7abc0d",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Order_2a",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "7e9d2fe4-d0bd-4c29-81f0-823dda4337d5",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_2a",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "fa53c49c-3992-4413-bd0e-fb639de3e0e9",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_2a",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet BackupInstanceName = @\"{PolicyAdherence_DailyBackup_BackupInstanceFriendlyName}\";\r\nlet DatasourceSetName = @\"{PolicyAdherence_DailyBackup_DatasourceSetFriendlyName}\";\r\nlet JobOperationList = \"Backup\";\r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_2a} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num)) ",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-Grid2ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet BackupInstanceName = @\"{PolicyAdherence_DailyBackup_BackupInstanceFriendlyName}\";\r\nlet DatasourceSetName = @\"{PolicyAdherence_DailyBackup_DatasourceSetFriendlyName}\";\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| extend TempColumn = column_ifexists(tostring('{PolicyAdherenceTab_SortBy_2a}'), \"DataTransferredInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyAdherenceTab_Order_2a}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, UniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_2a} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_2a}') or '*' in ('{PolicyAdherenceTab_Page_2a}')\r\n| extend Container = iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)\r\n| extend AzureResource = iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)\r\n| project BackupInstance=BackupInstanceFriendlyName, BackupInstanceId, Container=Container, ResourceGroup=iff(DatasourceType==\"Azure Backup Agent\" or DatasourceType==\"Azure Backup Server\" or DatasourceType==\"DPM\",\"(none)\",split(split(tostring(tolower(AzureResource)), '/resourcegroups/')[1],'/')[0]\r\n), OperationCategory, JobStatus=Status,  JobStartDateTime=StartTime, JobDuration=DurationInSecs/3600, ErrorTitle, DataTransferred=DataTransferredInMBs, AzureResource=AzureResource, DatasourceType ",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstance",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Container",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "OperationCategory",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Operation Category"
                    }
                  },
                  {
                    "columnMatch": "JobStatus",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Status"
                    }
                  },
                  {
                    "columnMatch": "JobStartDateTime",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Start date and time of the Job"
                    }
                  },
                  {
                    "columnMatch": "JobDuration",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Job Duration"
                    }
                  },
                  {
                    "columnMatch": "ErrorTitle",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Failure Code"
                    }
                  },
                  {
                    "columnMatch": "DataTransferred",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Amount of data transferred by the job"
                    }
                  },
                  {
                    "columnMatch": "AzureResource",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Azure Resource associated with the backup instance. For Azure VM Backup, SQL in Azure VM backup and SAP database in Azure VM backup, the Azure Resource is the Azure VM. For Azure Files Share backup, the Azure Resource is the Azure Storage account. For on-premises backup instances, this field is blank."
                    }
                  },
                  {
                    "columnMatch": "DatasourceType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Datasource Type"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "OperationCategory",
                    "label": "Operation Category"
                  },
                  {
                    "columnId": "ErrorTitle",
                    "label": "Error Title"
                  },
                  {
                    "columnId": "DatasourceType",
                    "label": "Datasource Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_DailyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByBackupInstance-DailyBackup-Grid2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">List of Backup Jobs in Period</span> </div>"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "Policy Adherence"
              },
              {
                "parameterName": "PolicyAdherence_SubTab",
                "comparison": "isEqualTo",
                "value": "Policy Adherence by Backup Instance"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-Grid2Title"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1d337e2a-8cf3-48b1-ab33-e94e0dd62b46",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_SortBy_2d",
                  "label": "Sort By",
                  "type": 2,
                  "description": "Use to sort by a certain column",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"DurationInSecs\", \"label\": \"Job Duration (hrs)\" },\r\n{ \"value\": \"DataTransferredInMBs\", \"label\": \"Data Transferred (MB)\", \"selected\": \"true\" }]",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "5b6194ab-e6fe-4e97-8ab5-2d2a5f35dbc9",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Order_2d",
                  "label": "Order",
                  "type": 2,
                  "description": "Use to specify the sort order: Ascending/Descending",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"Ascending\"},\r\n    { \"value\":\"Descending\", \"selected\":true}\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "f0dade2b-e0c3-4dc9-8fe2-cdeff6773082",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_RowsPerPage_2d",
                  "label": "Rows per Page",
                  "type": 2,
                  "description": "Number of rows to display in grid view",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "7357c97e-59fd-4df0-a979-560063c13c0c",
                  "version": "KqlParameterItem/1.0",
                  "name": "PolicyAdherenceTab_Page_2d",
                  "label": "Page",
                  "type": 2,
                  "description": "Select Page Number",
                  "isRequired": true,
                  "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet BackupInstanceName = @\"{PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName}\";\r\nlet DatasourceSetName = @\"{PolicyAdherence_WeeklyBackup_DatasourceSetFriendlyName}\";\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| summarize c=count()\r\n| project num = (c-1)/{PolicyAdherenceTab_RowsPerPage_2d} + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num)) ",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "value": "1",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-Grid2ParameterBlock",
            "styleSettings": {
              "padding": "0% 0% 0% 0%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet DisplayAllFields = false;\r\nlet BackupInstanceName = @\"{PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName}\";\r\nlet DatasourceSetName = @\"{PolicyAdherence_WeeklyBackup_DatasourceSetFriendlyName}\";\r\nlet JobOperationList = \"Backup\"; \r\nlet JobStatusList = \"*\";\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet PolicyAdherence_DailyOrWeeklyBackup_Value = @\"{PolicyAdherence_DailyOrWeeklyBackup}\";\r\nlet BackupInstanceWithSelectedBackupFrequency = (){\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| join kind = inner (\r\n// calling LA System Function\r\n_AzureBackup_GetPolicies(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList)\r\n) on $left.PolicyUniqueId == $right.UniqueId, $left.VaultResourceId == $right.VaultResourceId\r\n| where parse_json(ExtendedProperties).BackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).FullBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).DifferentialBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == PolicyAdherence_DailyOrWeeklyBackup_Value or parse_json(ExtendedProperties).IncrementalBackupFrequency == \"Hourly\"\r\n};\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| join kind = inner (BackupInstanceWithSelectedBackupFrequency) on $left.BackupInstanceUniqueId == $right.UniqueId\r\n| extend TempColumn = column_ifexists(tostring('{PolicyAdherenceTab_SortBy_2d}'), \"DataTransferredInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{PolicyAdherenceTab_Order_2d}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last, UniqueId asc\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/{PolicyAdherenceTab_RowsPerPage_2d} + 1))\r\n| where page_num has ('{PolicyAdherenceTab_Page_2d}') or '*' in ('{PolicyAdherenceTab_Page_2d}')\r\n| extend Container = iff(isnotempty(DatasourceSetFriendlyName),DatasourceSetFriendlyName,DatasourceFriendlyName)\r\n| extend AzureResource = iff(isnotempty(DatasourceSetResourceId),DatasourceSetResourceId,DatasourceResourceId)\r\n| project BackupInstance=BackupInstanceFriendlyName, BackupInstanceId, Container=Container, ResourceGroup=iff(DatasourceType==\"Azure Backup Agent\" or DatasourceType==\"Azure Backup Server\" or DatasourceType==\"DPM\",\"(none)\",split(split(tostring(tolower(AzureResource)), '/resourcegroups/')[1],'/')[0]\r\n), OperationCategory, JobStatus=Status,  JobStartDateTime=StartTime, JobDuration=DurationInSecs/3600, ErrorTitle, DataTransferred=DataTransferredInMBs, AzureResource=AzureResource, DatasourceType ",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "BackupInstance",
                    "formatter": 16,
                    "formatOptions": {
                      "linkColumn": "BackupInstanceId",
                      "linkTarget": "Resource",
                      "showIcon": true
                    },
                    "tooltipFormat": {
                      "tooltip": "Name of the backup instance"
                    }
                  },
                  {
                    "columnMatch": "BackupInstanceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Container",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Protected Container associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Resource group associated with the backup instance"
                    }
                  },
                  {
                    "columnMatch": "OperationCategory",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Operation Category"
                    }
                  },
                  {
                    "columnMatch": "JobStatus",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Status"
                    }
                  },
                  {
                    "columnMatch": "JobStartDateTime",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Start date and time of the Job"
                    }
                  },
                  {
                    "columnMatch": "JobDuration",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Job Duration"
                    }
                  },
                  {
                    "columnMatch": "ErrorTitle",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Job Failure Code"
                    }
                  },
                  {
                    "columnMatch": "DataTransferred",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 2
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Amount of data transferred by the job"
                    }
                  },
                  {
                    "columnMatch": "AzureResource",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Azure Resource associated with the backup instance. For Azure VM Backup, SQL in Azure VM backup and SAP database in Azure VM backup, the Azure Resource is the Azure VM. For Azure Files Share backup, the Azure Resource is the Azure Storage account. For on-premises backup instances, this field is blank."
                    }
                  },
                  {
                    "columnMatch": "DatasourceType",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Datasource Type"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "BackupInstance",
                    "label": "Backup Instance"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "OperationCategory",
                    "label": "Operation Category"
                  },
                  {
                    "columnId": "JobStatus",
                    "label": "Job Status"
                  },
                  {
                    "columnId": "JobStartDateTime",
                    "label": "Job Start Date Time"
                  },
                  {
                    "columnId": "JobDuration",
                    "label": "Job Duration (hrs)"
                  },
                  {
                    "columnId": "ErrorTitle",
                    "label": "Job Failure Code"
                  },
                  {
                    "columnId": "DataTransferred",
                    "label": "Data Transferred"
                  },
                  {
                    "columnId": "AzureResource",
                    "label": "Azure Resource"
                  },
                  {
                    "columnId": "DatasourceType",
                    "label": "Datasource Type"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "PolicyAdherence_WeeklyBackup_BackupInstanceFriendlyName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "Workspaces",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DatasourceType",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "PolicyAdherenceByBackupInstance-WeeklyBackup-Grid2",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
