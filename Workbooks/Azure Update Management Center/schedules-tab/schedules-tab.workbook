{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "57df95b6-bf4e-43d7-bac0-22f2903ede45",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "05578175-fbe8-4dd2-9c6a-dec2f503d6cf",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "type": 8,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n| distinct location",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - Schedules"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where ['type'] =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n| where location in~ ({Location})\r\n| where properties.maintenanceScope == \"InGuestPatch\"\r\n| project id = tolower(id)\r\n| join kind=leftouter (\r\n    maintenanceresources\r\n    | where type =~ \"microsoft.maintenance/configurationassignments\"\r\n    | extend splitArr = split(id, \"/\")\r\n    | extend isDynamicScope = array_length(splitArr) == 7 or array_length(splitArr) == 9\r\n    | extend maintenanceConfigurationId = tolower(tostring(properties.maintenanceConfigurationId))\r\n) on $left.id == $right.maintenanceConfigurationId\r\n| summarize totalNumberOfSchedules = dcount(id), noOfStaticAssignments = dcountif(id, isDynamicScope == false), noOfDynamicScopes = dcountif(id, isDynamicScope == true)\r\n| project machinePack = pack(\"Total schedules\", totalNumberOfSchedules, \"Total number of machines attached\", noOfStaticAssignments, \"Total number of dynamic scopes\", noOfDynamicScopes)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend tileRank = case(machine =~ \"Total schedules\", 0, machine =~ \"Total number of machines attached\", 1, 2)\r\n| extend count_ = tolong(machinePack[machine])\r\n| project tileRank, machine, count_",
        "size": 3,
        "exportFieldName": "id",
        "exportParameterName": "maintenanceConfigurationID",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "maintenanceConfigurationId",
              "formatter": 5
            }
          ],
          "rowLimit": 500,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Maintenance configuration"
            },
            {
              "columnId": "name",
              "label": "Name"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "properties_maintenanceWindow_duration",
              "label": "Duration"
            },
            {
              "columnId": "properties_maintenanceWindow_timeZone",
              "label": "Timezone"
            },
            {
              "columnId": "properties_maintenanceWindow_startDateTime",
              "label": "Start date time"
            },
            {
              "columnId": "properties_maintenanceWindow_endDateTime",
              "label": "End date time"
            },
            {
              "columnId": "properties_maintenanceWindow_recurEvery",
              "label": "Recurrence"
            },
            {
              "columnId": "installPatchesProperties",
              "label": "Install patches settings"
            },
            {
              "columnId": "noOfStaticAssignments",
              "label": "Number of attached VMs"
            },
            {
              "columnId": "noOfDynamicScopes",
              "label": "Number of attached dynamic scopes"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "machine",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": false,
          "sortCriteriaField": "tileRank",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "name": "Schedules cards",
      "styleSettings": {
        "margin": "10px 0 0 0",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# Maintenance configurations\r\n\r\nPlease make sure to select all the subscriptions across which the machines are present for accurate count of attached VMs and dynamic scopes."
      },
      "name": "text - SchedulesNoteForSubscriptionSelection",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where ['type'] =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n| where location in~ ({Location})\r\n| where properties.maintenanceScope == \"InGuestPatch\"\r\n| project id = tolower(id), name, location, tostring(properties.maintenanceWindow.duration),  tostring(properties.maintenanceWindow.timeZone), tostring(properties.maintenanceWindow.startDateTime), tostring(properties.maintenanceWindow.endDateTime), tostring(properties.maintenanceWindow.recurEvery), installPatchesProperties = properties.installPatches\r\n| join kind=leftouter (\r\n    maintenanceresources\r\n    | where type =~ \"microsoft.maintenance/configurationassignments\"\r\n    | extend splitArr = split(id, \"/\")\r\n    | extend isDynamicScope = array_length(splitArr) == 7 or array_length(splitArr) == 9\r\n    | extend maintenanceConfigurationId = tolower(tostring(properties.maintenanceConfigurationId))\r\n    | summarize noOfStaticAssignments = dcountif(id, isDynamicScope == false), noOfDynamicScopes = dcountif(id, isDynamicScope) by maintenanceConfigurationId\r\n) on $left.id == $right.maintenanceConfigurationId\r\n| extend noOfStaticAssignments = iff(isnull(noOfStaticAssignments), 0, noOfStaticAssignments), noOfDynamicScopes = iff(isnull(noOfStaticAssignments), 0, noOfDynamicScopes)",
        "size": 0,
        "exportFieldName": "id",
        "exportParameterName": "maintenanceConfigurationID",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "maintenanceConfigurationId",
              "formatter": 5
            }
          ],
          "rowLimit": 500,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Maintenance configuration"
            },
            {
              "columnId": "name",
              "label": "Name"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "properties_maintenanceWindow_duration",
              "label": "Duration"
            },
            {
              "columnId": "properties_maintenanceWindow_timeZone",
              "label": "Timezone"
            },
            {
              "columnId": "properties_maintenanceWindow_startDateTime",
              "label": "Start date time"
            },
            {
              "columnId": "properties_maintenanceWindow_endDateTime",
              "label": "End date time"
            },
            {
              "columnId": "properties_maintenanceWindow_recurEvery",
              "label": "Recurrence"
            },
            {
              "columnId": "installPatchesProperties",
              "label": "Install patches settings"
            },
            {
              "columnId": "noOfStaticAssignments",
              "label": "Number of attached VMs"
            },
            {
              "columnId": "noOfDynamicScopes",
              "label": "Number of attached dynamic scopes"
            }
          ]
        },
        "sortBy": []
      },
      "name": "query - schedulesList",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<u>**Please select a maintenance configuration from the grid above to load data for the attached VMs and dynamic scopes.**</u>",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "maintenanceConfigurationID",
        "comparison": "isEqualTo"
      },
      "name": "text - MaintenanceConfigSelection"
    },
    {
      "type": 1,
      "content": {
        "json": "# Machines attached to the maintenance configuration"
      },
      "name": "text - SchedulesMachinesAttached"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "maintenanceresources\r\n| where ['type'] =~ \"microsoft.maintenance/configurationassignments\"\r\n| where properties.maintenanceConfigurationId =~ '{maintenanceConfigurationID}'\r\n| extend splitArr = split(id, \"/\")\r\n| where not(array_length(splitArr) == 7 or array_length(splitArr) == 9) // Condition to identify static assignments\r\n| extend vmId = tostring(properties.resourceId)\r\n| project vmId, subscriptionId, resourceGroup, location, tocName = iff(vmId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")",
        "size": 0,
        "noDataMessage": "No machines attached to this schedule.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "vmId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "OpenBlade",
                "showIcon": true,
                "bladeOpenContext": {
                  "bladeName": "ResourceMenuBlade",
                  "extensionName": "HubsExtension",
                  "bladeParameters": [
                    {
                      "name": "id",
                      "source": "column",
                      "value": "vmId"
                    },
                    {
                      "name": "menuid",
                      "source": "column",
                      "value": "tocName"
                    }
                  ]
                },
                "customColumnWidthSetting": "64ch"
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "resourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "location",
              "formatter": 17,
              "formatOptions": {
                "customColumnWidthSetting": "243px"
              }
            },
            {
              "columnMatch": "tocName",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "vmId",
              "label": "Virtual machine name"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "location",
              "label": "Location"
            }
          ]
        }
      },
      "name": "query - VMsAttachedToMaintenanceConfiguration",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# Dynamic scopes attached to the maintenance configuration"
      },
      "name": "text - DynamicScopesAttachedToMaintenanceConfiguration"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "maintenanceresources\r\n| where ['type'] =~ \"microsoft.maintenance/configurationassignments\"\r\n| where properties.maintenanceConfigurationId =~ '{maintenanceConfigurationID}'\r\n| extend splitArr = split(id, \"/\")\r\n| where array_length(splitArr) == 7 or array_length(splitArr) == 9 // Condition to identify dynamic scopes\r\n| extend criteria = properties['filter']\r\n| project id, resourceGroups = criteria.resourceGroups, resourceTypes = criteria.resourceTypes, tagSettings = criteria.tagSettings, locations = criteria.locations, osTypes = criteria.osTypes, availabilityZones = criteria.availabilityZones, properties",
        "size": 0,
        "noDataMessage": "No dynamic scopes present in this schedule.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "resourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "location",
              "formatter": 17,
              "formatOptions": {
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "osTypes",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "13ch"
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Id"
            },
            {
              "columnId": "resourceGroups",
              "label": "Resource group(s)"
            },
            {
              "columnId": "resourceTypes",
              "label": "Resource type(s)"
            },
            {
              "columnId": "tagSettings",
              "label": "Tag settings"
            },
            {
              "columnId": "locations",
              "label": "Location(s)"
            },
            {
              "columnId": "osTypes",
              "label": "OS type(s)"
            },
            {
              "columnId": "availabilityZones",
              "label": "Availability zone(s)"
            },
            {
              "columnId": "properties",
              "label": "Properties"
            }
          ]
        }
      },
      "name": "Dynamic scopes attached to the maintenance configuration",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}