{
  "version": "Notebook/1.0",
  "items": [
    {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "095e1fe3-574e-43e3-a993-d3df4d956294",
                    "version": "KqlParameterItem/1.0",
                    "name": "Subscription",
                    "type": 6,
                    "isRequired": true,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "includeAll": true,
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "defaultValue": "value::all",
                    "value": [
                      "value::all"
                    ]
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - Recommendations"
            }
          ],
          "exportParameters": true
        },
        "conditionalVisibility": {
          "parameterName": "CurrentTab",
          "comparison": "isEqualTo",
          "value": "Recommendations"
        },
        "name": "Recommendations filters"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "title": "Periodic assessment",
          "items": [
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend PeriodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize count() by PeriodicAssessment",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "piechart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Disabled",
                      "color": "red"
                    },
                    {
                      "seriesName": "Enabled",
                      "color": "green"
                    }
                  ]
                }
              },
              "name": "Periodic assessment status"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend periodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize periodicAssessmentEnablementPercentage = round(todouble(countif(periodicAssessment == \"Disabled\")) / count() * 100, 2)\r\n| project paRecommendation = strcat(\"**\", periodicAssessmentEnablementPercentage, \"% of machines do not have periodic assessment enabled.**\", \" Enable periodic assessment to stay up to date with the patch compliance of your VMs. [Learn more](https://aka.ms/PeriodicAssessmentLearnMore)\")",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "card",
                "textSettings": {
                  "style": "markdown"
                }
              },
              "name": "query - periodicAssessment",
              "styleSettings": {
                "margin": "0 0 0 20px"
              }
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                  {
                    "id": "99286f6a-4fa1-4cf2-8286-7bf234f0087e",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Enable Periodic assessment now",
                    "preText": "",
                    "style": "primary",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterUpdateSettingsBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                    }
                  }
                ]
              },
              "name": "links - updateSettingsBlade",
              "styleSettings": {
                "margin": "0 0 0 20px"
              }
            }
          ]
        },
        "customWidth": "50",
        "name": "Periodic assessment recommendation group",
        "styleSettings": {
          "maxWidth": "33.33%"
        }
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "title": "Azure virtual machines - Patch orchestration",
          "items": [
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\"\r\n| extend patchSettings = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend patchMode = patchSettings.patchMode\r\n| extend patchMode = case(patchMode =~ 'AutomaticByOS', 'Windows Automatic Updates', patchMode =~ 'ImageDefault', 'Image default', (patchMode =~ 'AutomaticByPlatform' and patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule == true), 'Customer Managed Schedules', patchMode =~ 'AutomaticByPlatform', 'Azure Managed - Safe Deployment', isempty(patchMode), \"N/A\", patchMode)\r\n| summarize count() by tostring(patchMode)",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "piechart",
                "graphSettings": {
                  "type": 2,
                  "topContent": {
                    "columnMatch": "patchMode",
                    "formatter": 0
                  },
                  "centerContent": {
                    "columnMatch": "count_",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "maximumSignificantDigits": 3,
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  "nodeIdField": "patchMode",
                  "graphOrientation": 3,
                  "showOrientationToggles": false,
                  "nodeSize": null,
                  "staticNodeSize": 200,
                  "colorSettings": {
                    "nodeColorField": "patchMode",
                    "type": 1,
                    "colorPalette": "default"
                  },
                  "hivesMargin": 5,
                  "edgeColorSettings": null
                },
                "chartSettings": {
                  "showMetrics": false,
                  "showLegend": true,
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Customer Managed Schedules",
                      "color": "green"
                    },
                    {
                      "seriesName": "Windows Automatic Updates",
                      "color": "red"
                    },
                    {
                      "seriesName": "Image default",
                      "color": "orangeDark"
                    },
                    {
                      "seriesName": "Azure Managed - Safe Deployment",
                      "color": "green"
                    },
                    {
                      "seriesName": "Manual",
                      "color": "yellow"
                    },
                    {
                      "seriesName": "",
                      "color": "gray"
                    }
                  ]
                }
              },
              "name": "Azure virtual machines - Patch orchestration"
            },
            {
              "type": 1,
              "content": {
                "json": "\r\n\r\nPlease use **'Customer Managed Schedules'** mode and set up [Scheduled updates](https://aka.ms/ScheduleUpdatesLearnMore), or use **'Azure Managed - Safe Deployment'** mode to allow Azure platform to manage the patching. [Learn more](https://learn.microsoft.com/azure/update-manager/manage-multiple-machines#summary-of-machine-status) "
              },
              "name": "text - patchMode",
              "styleSettings": {
                "margin": "0 0 0 20px"
              }
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                  {
                    "id": "802dc5c2-a293-4ce3-a063-404f652a900f",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Update patch mode now",
                    "style": "primary",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterUpdateSettingsBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                    }
                  }
                ]
              },
              "name": "links - updateSettingsBlade2",
              "styleSettings": {
                "margin": "0 0 0 20px"
              }
            }
          ]
        },
        "customWidth": "50",
        "name": "Patch orchestration recommendation",
        "styleSettings": {
          "maxWidth": "33.33%"
        }
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "title": "Reboot pending",
          "items": [
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id), type\r\n| join kind=leftouter(\r\n    patchassessmentresources\r\n    | where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n    | parse id with resourceId \"/patchAssessmentResults\" *\r\n    | where properties.status =~ \"Succeeded\"\r\n    | extend rebootStatus = properties.rebootPending\r\n    | project vmId = tolower(resourceId), rebootStatus\r\n) on vmId\r\n| where rebootStatus == true\r\n| extend resourceType = iff (type =~ \"microsoft.compute/virtualmachines\", \"Azure virtual machines\", \"Arc-enabled servers\")\r\n| summarize VMCount = count() by resourceType",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "tiles",
                "tileSettings": {
                  "titleContent": {
                    "columnMatch": "resourceType",
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "VMCount",
                    "formatter": 12,
                    "formatOptions": {
                      "palette": "auto"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2,
                        "maximumSignificantDigits": 3
                      }
                    }
                  },
                  "showBorder": false
                },
                "graphSettings": {
                  "type": 2,
                  "topContent": {},
                  "centerContent": {
                    "columnMatch": "VMCount"
                  },
                  "bottomContent": {
                    "columnMatch": "content"
                  },
                  "nodeIdField": "VMCount",
                  "graphOrientation": 3,
                  "showOrientationToggles": false,
                  "nodeSize": null,
                  "staticNodeSize": 100,
                  "colorSettings": null,
                  "hivesMargin": 5,
                  "edgeColorSettings": null
                },
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Disabled",
                      "color": "red"
                    },
                    {
                      "seriesName": "Enabled",
                      "color": "green"
                    }
                  ]
                }
              },
              "name": "query - rebootPendingVMCount"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id), type\r\n| join kind=leftouter(\r\n    patchassessmentresources\r\n    | where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n    | parse id with resourceId \"/patchAssessmentResults\" *\r\n    | where properties.status =~ \"Succeeded\"\r\n    | extend rebootStatus = properties.rebootPending\r\n    | project vmId = tolower(resourceId), rebootStatus\r\n) on vmId\r\n| where rebootStatus == true\r\n| summarize totalRebootPendingVMs = count()\r\n| project text = strcat(\"Total \", totalRebootPendingVMs, \" VMs have pending reboot.\")",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "card",
                "textSettings": {
                  "style": "header"
                }
              },
              "name": "query - totalRebootPendingVMCount"
            },
            {
              "type": 1,
              "content": {
                "json": "Rebooting after patch installation is crucial to ensure that all updates are properly applied, system files are refreshed, and any pending changes take effect to maintain system stability and security."
              },
              "name": "text - rebootPending",
              "styleSettings": {
                "maxWidth": "80%"
              }
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                  {
                    "id": "8440ceb1-c38d-43bf-9085-b3ef53ce7599",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Machines",
                    "preText": "Visit",
                    "postText": "view and reboot VMs with pending reboot.",
                    "style": "link",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterMachinesBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeParameters": []
                    }
                  }
                ]
              },
              "name": "links - MachinesBlade"
            }
          ]
        },
        "customWidth": "50",
        "name": "Reboot pending recommendations",
        "styleSettings": {
          "maxWidth": "33.33%"
        }
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "title": "Security and Critical updates",
          "items": [
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| where classification contains \"security\" or classification =~ \"critical\"\r\n| extend publishedDateTime = iff(isnotnull(properties.publishedDateTime), properties.publishedDateTime, \"N/A\")\r\n| extend rebootRequired = iff(isnotnull(properties.rebootBehavior), properties.rebootBehavior, \"N/A\")\r\n| extend classification = iff(properties.classifications[0] =~ \"UpdateRollUp\", \"UpdateRollup\", properties.classifications[0])\r\n| extend msrcSeverity = iff(isnotnull(properties.msrcSeverity), properties.msrcSeverity, \"NotAvailable\")\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| extend uniquePatchIdentifier = strcat(uniquePatchNameWithVersion, publishedDateTime, tostring(properties.patchId), rebootRequired, tostring(classification), msrcSeverity)\r\n| join kind=leftouter(\r\n    resources\r\n    | where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | project vmId, osType = case(os =~ \"windows\", \"Windows\", os =~ \"Linux\", \"Linux\", os)\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize updateCount = dcount(uniquePatchIdentifier), machineCountString = strcat(\"across \", dcount(vmId), \" machine(s)\") by osType",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "tiles",
                "tileSettings": {
                  "titleContent": {
                    "columnMatch": "osType",
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "updateCount",
                    "formatter": 12,
                    "formatOptions": {
                      "palette": "auto"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2,
                        "maximumSignificantDigits": 3
                      }
                    }
                  },
                  "secondaryContent": {
                    "columnMatch": "machineCountString"
                  },
                  "showBorder": false
                },
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Disabled",
                      "color": "red"
                    },
                    {
                      "seriesName": "Enabled",
                      "color": "green"
                    }
                  ]
                }
              },
              "name": "query - securityAndCriticalUpdates"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = iff(properties.classifications[0] =~ \"UpdateRollUp\", \"UpdateRollup\", properties.classifications[0])\r\n| where classification contains \"security\" or classification =~ \"critical\"\r\n| extend publishedDateTime = iff(isnotnull(properties.publishedDateTime), properties.publishedDateTime, \"N/A\")\r\n| extend rebootRequired = iff(isnotnull(properties.rebootBehavior), properties.rebootBehavior, \"N/A\")\r\n| extend msrcSeverity = iff(isnotnull(properties.msrcSeverity), properties.msrcSeverity, \"NotAvailable\")\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| extend uniquePatchIdentifier = strcat(uniquePatchNameWithVersion, publishedDateTime, tostring(properties.patchId), rebootRequired, tostring(classification), msrcSeverity)\r\n| join kind=leftouter(\r\n    resources\r\n    | where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | project vmId, osType = case(os =~ \"windows\", \"Windows\", os =~ \"Linux\", \"Linux\", os)\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize updateCount = dcount(uniquePatchIdentifier), machineCount = dcount(vmId)\r\n| project securityAndCriticalUpdateRecommendation = strcat(\"There are **\", updateCount, \" pending security and critical updates across \", machineCount, \" machines.**\")",
                "size": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "card",
                "textSettings": {
                  "style": "markdown"
                }
              },
              "name": "query - securityAndCriticalUpdatesAndVMCount",
              "styleSettings": {
                "margin": "10px 0 0 0"
              }
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                  {
                    "id": "99286f6a-4fa1-4cf2-8286-7bf234f0087e",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Schedule update",
                    "preText": "",
                    "postText": "or",
                    "style": "link",
                    "bladeOpenContext": {
                      "bladeName": "CreateMaintenanceConfiguration.ReactView",
                      "extensionName": "Microsoft_Azure_Maintenance",
                      "bladeParameters": [
                        {
                          "name": "scope",
                          "source": "static",
                          "value": "InGuestPatch"
                        }
                      ]
                    }
                  },
                  {
                    "id": "f9b0f302-bc89-4451-8a93-5287927b60cc",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "One-time update",
                    "preText": "trigger",
                    "postText": "to stay compliant.",
                    "style": "link",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterInstallUpdatesBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"subs\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                    }
                  }
                ]
              },
              "name": "links - patchTriggerSuggestion"
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                  {
                    "id": "cf459ba7-6b3a-48e0-83c2-c49a2d34ddd1",
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Create alerts",
                    "preText": "",
                    "postText": "to get notified when security or critical updates are available.",
                    "style": "link",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterMenuBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeJsonParameters": "{\r\n\t\"defaultMenuId\": \"alerts\"\r\n}"
                    }
                  }
                ]
              },
              "name": "links - Alerting"
            }
          ]
        },
        "customWidth": "50",
        "name": "Security and Critical updates",
        "styleSettings": {
          "maxWidth": "33.33%"
        }
      }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}