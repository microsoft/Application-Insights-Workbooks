{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "7c3ebe26-8ab3-4b4e-8618-7545f5e29efb",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "43663c2d-1a18-4b18-9c76-6d11303e0353",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "label": "VM location",
            "type": 8,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type in~ (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\")\r\n| distinct location",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "43019d70-ae25-4c93-9129-1245c54fc7ac",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceType",
            "type": 7,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": " [\r\n     { \"value\": \"microsoft.compute/virtualmachines\", \"label\": \"Azure Virtual Machine\", \"selected\":true}, \r\n     \r\n     { \"value\": \"microsoft.hybridcompute/machines\", \"label\": \"Arc enabled server\", \"selected\":true }]",
            "defaultValue": "value::all",
            "label": "Resource type"
          },
          {
            "id": "1bc9b442-a6da-4d1c-92b7-57da7d9b7fdc",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 604800000
            },
            "label": "Time range"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - OperationsHistory"
    },
    {
      "type": 1,
      "content": {
        "json": "# Patch installation history by maintenance run"
      },
      "name": "text - ByMaintenanceRun"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "maintenanceresources\r\n| where type =~ \"microsoft.maintenance/maintenanceconfigurations/applyupdates\"\r\n| where properties.maintenanceConfiguration.properties.maintenanceScope == \"InGuestPatch\"\r\n| where properties.startDateTime {TimeRange}\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
              "size": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Succeeded",
                    "color": "green"
                  },
                  {
                    "seriesName": "Timedout",
                    "color": "orangeDark"
                  },
                  {
                    "seriesName": "Failed",
                    "color": "red"
                  },
                  {
                    "seriesName": "PartiallySucceeded",
                    "color": "orangeDark"
                  },
                  {
                    "seriesName": "InProgress",
                    "color": "blue"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Patch installation history by maintenance run",
            "styleSettings": {
              "maxWidth": "25%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "maintenanceresources\r\n| where type =~ \"microsoft.maintenance/maintenanceconfigurations/applyupdates\"\r\n| where properties.startDateTime {TimeRange}\r\n| where properties.maintenanceConfiguration.properties.maintenanceScope == \"InGuestPatch\"\r\n| project name, properties, id\r\n| extend joinId = tolower(properties.maintenanceConfigurationId)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n    | extend maintenanceConfigId = tolower(id)\r\n    | project maintenanceConfigId, tags\r\n) on $left.joinId == $right.maintenanceConfigId\r\n| extend status = tostring(properties.status)\r\n| extend maintenanceConfigurationName = tostring(properties.maintenanceConfiguration.name)\r\n| extend operationStartTime = todatetime(properties.startDateTime)\r\n| extend operationEndTime = iff(properties.status =~ \"InProgress\", datetime(null), todatetime(properties.endDateTime))\r\n| extend maintenanceConfigurationId = properties.maintenanceConfigurationId\r\n| extend scheduleRunId = properties.correlationId\r\n| extend succeededMachinesCount = iff(isempty(properties.resourceUpdateSummary.succeeded), 0, properties.resourceUpdateSummary.succeeded)\r\n| extend totalMachines = iff(isempty(properties.resourceUpdateSummary.total), 0, properties.resourceUpdateSummary.total)\r\n| project-rename maintenanceRunId = name\r\n| project maintenanceRunId, maintenanceConfigurationId, updatedMachines = strcat(succeededMachinesCount, \" out of \", totalMachines), operationStartTime, operationEndTime, status, tags, id\r\n| order by operationStartTime desc\r\n| take 1000",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "maintenanceRunId",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "bladeOpenContext": {
                        "bladeName": "UpdateCenterMaintenanceRunHistoryBlade",
                        "extensionName": "Microsoft_Azure_Automation",
                        "bladeParameters": [
                          {
                            "name": "maintenanceRunId",
                            "source": "column",
                            "value": "id"
                          },
                          {
                            "name": "maintenanceConfigurationId",
                            "source": "column",
                            "value": "maintenanceConfigurationId"
                          },
                          {
                            "name": "maintenanceRunName",
                            "source": "column",
                            "value": "maintenanceRunId"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "maintenanceConfigurationId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true,
                      "customColumnWidthSetting": "64ch"
                    }
                  },
                  {
                    "columnMatch": "operationStartTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Failed",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "InProgress",
                          "representation": "pending",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Timedout",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "NotStarted",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Partially succeeded",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Cancelled",
                          "representation": "cancelled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "bladeOpenContext": {
                        "bladeName": "UpdateCenterMaintenanceRunHistoryBlade",
                        "extensionName": "Microsoft_Azure_Automation",
                        "bladeParameters": [
                          {
                            "name": "maintenanceRunId",
                            "source": "column",
                            "value": "id"
                          },
                          {
                            "name": "maintenanceConfigurationId",
                            "source": "column",
                            "value": "maintenanceConfigurationId"
                          },
                          {
                            "name": "maintenanceRunName",
                            "source": "column",
                            "value": "maintenanceRunId"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "59.1429ch"
                    }
                  },
                  {
                    "columnMatch": "deepLink",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "deepLink",
                      "linkTarget": "Url"
                    }
                  }
                ],
                "rowLimit": 500,
                "labelSettings": [
                  {
                    "columnId": "maintenanceRunId",
                    "label": "Maintenance run id"
                  },
                  {
                    "columnId": "maintenanceConfigurationId",
                    "label": "Maintenance configuration"
                  },
                  {
                    "columnId": "updatedMachines",
                    "label": "Updated machines"
                  },
                  {
                    "columnId": "operationStartTime",
                    "label": "Operation start time"
                  },
                  {
                    "columnId": "operationEndTime",
                    "label": "Operation end time"
                  },
                  {
                    "columnId": "status",
                    "label": "Status"
                  },
                  {
                    "columnId": "tags",
                    "label": "Tag"
                  },
                  {
                    "columnId": "id",
                    "label": "Maintenance run"
                  }
                ]
              }
            },
            "name": "historyByMaintenance",
            "styleSettings": {
              "maxWidth": "75%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "### <u>**Action(s):**</u>"
            },
            "name": "text - Actions"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "d09eb1c8-14a2-4ca1-b5fc-b185a8016176",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "History",
                  "preText": "Visit",
                  "postText": "for more details.",
                  "style": "link",
                  "bladeOpenContext": {
                    "bladeName": "UpdateCenterHistoryBlade",
                    "extensionName": "Microsoft_Azure_Automation",
                    "bladeParameters": []
                  }
                }
              ]
            },
            "name": "links - HistoryBlade"
          }
        ]
      },
      "name": "History by maintenance run",
      "styleSettings": {
        "margin": "0 0 0 10px",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# Patch installation history by machines"
      },
      "name": "text - ByMachines"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "PatchInstallationResources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults\", \"microsoft.hybridcompute/machines/patchinstallationresults\")\r\n| parse tolower(type) with typeID \"/patchinstallationresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
              "size": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Succeeded",
                    "color": "green"
                  },
                  {
                    "seriesName": "CompletedWithWarnings",
                    "color": "orangeDark"
                  },
                  {
                    "seriesName": "Failed",
                    "color": "red"
                  },
                  {
                    "seriesName": "InProgress",
                    "color": "blue"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Patch installation history by machines",
            "styleSettings": {
              "maxWidth": "25%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "patchinstallationresources\r\n| where type =~ \"microsoft.compute/virtualmachines/patchinstallationresults\" or type =~ \"microsoft.hybridcompute/machines/patchinstallationresults\"\r\n| parse tolower(type) with typeID \"/patchinstallationresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| parse id with resourceId '/patchInstallationResults/' *\r\n| parse id with * 'achines/' resourceName '/patchInstallationResults/' *\r\n| project resourceName, resourceId, properties.status, properties.startDateTime, properties.lastModifiedDateTime, properties.startedBy, properties, tocName = iff(resourceId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")\r\n| order by todatetime(properties.lastModifiedDateTime) desc\r\n| take 1000\r\n",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resourceName",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "bladeOpenContext": {
                        "bladeName": "ResourceMenuBlade",
                        "extensionName": "HubsExtension",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "resourceId"
                          },
                          {
                            "name": "menuid",
                            "source": "column",
                            "value": "tocName"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "resourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "ResourceMenuBlade",
                        "extensionName": "HubsExtension",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "resourceId"
                          },
                          {
                            "name": "menuid",
                            "source": "column",
                            "value": "tocName"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "properties_status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Failed",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "CompletedWithWarnings",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "InProgress",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "properties_startDateTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "properties_lastModifiedDateTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "properties_startedBy",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "tocName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "tags",
                    "formatter": 1
                  }
                ],
                "rowLimit": 500,
                "labelSettings": [
                  {
                    "columnId": "resourceName",
                    "label": "Name"
                  },
                  {
                    "columnId": "resourceId",
                    "label": "Name"
                  },
                  {
                    "columnId": "properties_status",
                    "label": "Status"
                  },
                  {
                    "columnId": "properties_startDateTime",
                    "label": "Start time"
                  },
                  {
                    "columnId": "properties_lastModifiedDateTime",
                    "label": "End time"
                  },
                  {
                    "columnId": "properties_startedBy",
                    "label": "Started by"
                  },
                  {
                    "columnId": "properties",
                    "label": "View run details"
                  }
                ]
              }
            },
            "name": "HistoryByRuns",
            "styleSettings": {
              "maxWidth": "75%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "### <u>**Action(s):**</u>"
            },
            "name": "text - Actions2"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "bffd65dd-6142-49ce-9652-bf02240f89ed",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "History",
                  "preText": "Visit",
                  "postText": "for more details.",
                  "style": "link",
                  "bladeOpenContext": {
                    "bladeName": "UpdateCenterHistoryBlade",
                    "extensionName": "Microsoft_Azure_Automation",
                    "bladeParameters": []
                  }
                }
              ]
            },
            "name": "links - HistoryBlade2"
          }
        ]
      },
      "name": "History by machines",
      "styleSettings": {
        "margin": "0 0 0 10px",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# Patch assessment history by machines"
      },
      "name": "text - PatchAssessmentHistory"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "PatchAssessmentResources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| parse tolower(type) with typeID \"/patchassessmentresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
              "size": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Succeeded",
                    "color": "green"
                  },
                  {
                    "seriesName": "CompletedWithWarnings",
                    "color": "orangeDark"
                  },
                  {
                    "seriesName": "Failed",
                    "color": "red"
                  },
                  {
                    "seriesName": "InProgress",
                    "color": "blue"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Patch assessment history by machines",
            "styleSettings": {
              "maxWidth": "25%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "patchassessmentresources\r\n| where type =~ \"microsoft.compute/virtualmachines/patchassessmentresults\" or type =~  \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n| parse tolower(type) with typeID \"/patchassessmentresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| parse id with resourceId '/patchAssessmentResults/' *\r\n| parse id with * 'achines/' resourceName '/patchAssessmentResults/' *\r\n| project resourceName, resourceId, properties.status, properties.startDateTime, properties.lastModifiedDateTime, properties.startedBy, properties, tocName = iff(resourceId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")\r\n| order by todatetime(properties.lastModifiedDateTime) desc\r\n| take 1000\r\n",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resourceName",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "bladeOpenContext": {
                        "bladeName": "ResourceMenuBlade",
                        "extensionName": "HubsExtension",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "resourceId"
                          },
                          {
                            "name": "menuid",
                            "source": "column",
                            "value": "tocName"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "resourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "ResourceMenuBlade",
                        "extensionName": "HubsExtension",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "resourceId"
                          },
                          {
                            "name": "menuid",
                            "source": "column",
                            "value": "tocName"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "properties_status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Failed",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "CompletedWithWarnings",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "InProgress",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "properties_startDateTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "properties_lastModifiedDateTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "properties_startedBy",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "tocName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "tags",
                    "formatter": 1
                  }
                ],
                "rowLimit": 500,
                "labelSettings": [
                  {
                    "columnId": "resourceName",
                    "label": "Name"
                  },
                  {
                    "columnId": "resourceId",
                    "label": "Name"
                  },
                  {
                    "columnId": "properties_status",
                    "label": "Status"
                  },
                  {
                    "columnId": "properties_startDateTime",
                    "label": "Start time"
                  },
                  {
                    "columnId": "properties_lastModifiedDateTime",
                    "label": "End time"
                  },
                  {
                    "columnId": "properties_startedBy",
                    "label": "Started by"
                  },
                  {
                    "columnId": "properties",
                    "label": "View run details"
                  }
                ]
              }
            },
            "name": "HistoryByRuns",
            "styleSettings": {
              "maxWidth": "75%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "### <u>**Action(s):**</u>"
            },
            "name": "text - Actions3"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "87529386-7202-4c0d-b364-6bd80f6629ad",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "History",
                  "preText": "Visit",
                  "postText": "for more details.",
                  "style": "link",
                  "bladeOpenContext": {
                    "bladeName": "UpdateCenterHistoryBlade",
                    "extensionName": "Microsoft_Azure_Automation",
                    "bladeParameters": []
                  }
                }
              ]
            },
            "name": "links - HistoryBlade3"
          }
        ]
      },
      "name": "Patch Assessment history by machines",
      "styleSettings": {
        "margin": "0 0 0 10px",
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}