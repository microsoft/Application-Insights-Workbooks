{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b799771e-b262-4a16-8a01-e2ebaca03038",
            "version": "KqlParameterItem/1.0",
            "name": "DatabaseId",
            "label": "Database id",
            "type": 5,
            "isRequired": true,
            "value": "value::1",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "7b33f159-2efc-4eda-8475-84a9fc00e5e4",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "07e3985b-ac8d-4b48-afa7-ac49286ad2e1",
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceId",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/(.+)/computer/.+/sqlinstance/.+/database/.*', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "Computer",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/.+/computer/(.+)/sqlinstance/.+/database/.*', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": "99fba200-20d5-4385-9014-686c1950f7eb"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "SqlInstance",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/.+/computer/.+/sqlinstance/(.+)/database/.*', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": "411808ff-e620-40d8-92af-3de7dbcc84f5"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "SqlDatabase",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/.+/computer/.+/sqlinstance/.+/database/(.*)', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": "ef294ba3-ec6b-4b26-be52-1db5c77297ef"
          },
          {
            "id": "735e6c9c-ed77-48bb-aaad-641c9ec7972a",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "Resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces' and properties.customerId == '{WorkspaceId}'",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "72a01604-7df5-4e7d-b8cc-73905b4c0cc9",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "0f71f4f2-421b-413a-a168-a133dbd66179",
            "version": "KqlParameterItem/1.0",
            "name": "Replica",
            "type": 2,
            "isRequired": true,
            "query": "let data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance == '{SqlInstance}'\r\n| where Namespace =~ 'sqlserver_azure_db_resource_stats' and (Computer == '{Computer}' or '*' == '{Computer}');\r\ndata\r\n| summarize by value = tostring(iff(Tags.replica_updateability == 'READ_WRITE', 'primary', 'secondary'))\r\n| project value, label = value, selected = true\r\n| order by label asc",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameter block",
      "styleSettings": {
        "margin": "0 0 15px 0"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# {SqlDatabase}"
      },
      "name": "Db Name"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6a802fb2-aff0-4d4c-ac50-cff64d3722b6",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "ca22d182-2af8-425d-a7a7-506f0989c78a",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Activities",
            "subTarget": "Activities",
            "style": "link"
          },
          {
            "id": "1030b326-64bb-4c24-a516-487d79526db1",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Memory clerks",
            "subTarget": "Memory clerks",
            "style": "link"
          },
          {
            "id": "b1eac7ea-67b6-428a-b572-98bae7792eb4",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database space",
            "subTarget": "Database space",
            "style": "link"
          },
          {
            "id": "b7b233f1-911e-4445-ac7d-1a0616bad551",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Transactions",
            "subTarget": "Transactions",
            "style": "link"
          },
          {
            "id": "a7668912-de5b-44ea-8c90-ce8497529047",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database IO",
            "subTarget": "Database IO",
            "style": "link"
          },
          {
            "id": "d65a1414-2715-45e6-b03d-91617c39b213",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Explore metrics",
            "subTarget": "Sql counters",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Names = dynamic(['avg_cpu_percent', 'avg_instance_cpu_percent']);\r\nlet data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Namespace =~ 'sqlserver_azure_db_resource_stats' and (Computer == '{Computer}' or '*' == '{Computer}') and Name in (Names) and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE');\r\ndata\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize Val = avg(Val) by bin(TimeGenerated, 5m), SeriesName, Name\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by Name, SeriesName",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "CPU Utilization %",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "avg_instance_cpu_percent",
                    "label": "Instance CPU %"
                  },
                  {
                    "seriesName": "avg_cpu_percent",
                    "label": "CPU %"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  },
                  "min": 0
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "CPU Utilization %"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Names = dynamic(['avg_memory_usage_percent', 'avg_instance_memory_percent']);\r\nlet data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Namespace =~ 'sqlserver_azure_db_resource_stats' and (Computer == '{Computer}' or '*' == '{Computer}') and Name in (Names) and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE');\r\ndata\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize Val = avg(Val) by bin(TimeGenerated, 5m), SeriesName, Name\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by Name, SeriesName",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Memory Utilization %",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "avg_instance_memory_percent",
                    "label": "Instance Memory Usage %"
                  },
                  {
                    "seriesName": "avg_memory_usage_percent",
                    "label": "Memory Usage %"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  },
                  "min": 0
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Memory Utilization %"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Names = dynamic(['avg_data_io_percent', 'avg_log_write_percent']);\r\nlet data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Namespace =~ 'sqlserver_azure_db_resource_stats' and (Computer == '{Computer}' or '*' == '{Computer}') and Name in (Names) and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE');\r\ndata\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize Val = avg(Val) by bin(TimeGenerated, 5m), SeriesName, Name\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by Name, SeriesName",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Data IO %",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "linechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "avg_log_write_percent",
                    "label": "Log Write %"
                  },
                  {
                    "seriesName": "avg_data_io_percent",
                    "label": "Data IO %"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Data IO"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let counterMetadata = datatable(id:string, name:string, rank:int)[\r\n'User Connections', 'User Connections', 1,\r\n'Active Temp Tables', 'Active Temp Tables', 2,\r\n'Memory Grants Pending', 'Memory Grants Pending', 4,\r\n'Processes blocked', 'Processes blocked', 5,\r\n'Number of Deadlocks/sec', 'Deadlocks/sec', 6,\r\n];\r\nlet data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| where  (Computer == '{Computer}' or '*' == '{Computer}') and SqlInstance == '{SqlInstance}' and (Database == '{SqlDatabase}' or '*' == '{SqlDatabase}') and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE');\r\ndata\r\n| where Counter in~ ('User connections', 'Active Temp Tables')\r\n| summarize EndValue = max(Val) by Counter\r\n| union (data\r\n    | where Counter in~ ('Memory Grants Pending', 'Number of deadlocks/sec', 'Processes blocked')\r\n    | summarize (T, EndValue) = arg_max(TimeGenerated, Val), Max = max(Val) by Counter)\r\n| extend EndValue = toint(EndValue)\r\n| join kind = inner (counterMetadata) on $left.Counter == $right.id\r\n| extend Subtitle = '⎯⎯⎯⎯⎯', Status = case(Counter !in~ ('Memory Grants Pending', 'Processes blocked', 'Number of Deadlocks/sec'), 'Not applicable', EndValue > 0, 'Error', Max > 0, 'Warning', 'Success')\r\n| order by rank asc\r\n",
              "size": 4,
              "title": "Key stats",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "name",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "Subtitle",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "EndValue",
                  "formatter": 12,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "Status",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Not applicable",
                        "representation": "Blank",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Error",
                        "representation": "3",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Warning",
                        "representation": "2",
                        "text": ""
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": ""
                      }
                    ]
                  },
                  "tooltipFormat": {
                    "tooltip": "Warning icon indicates that this metric is good now, but had a problem in the time window."
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue"
                  }
                },
                "showBorder": false
              }
            },
            "name": "Key stats"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let counterMetadata = datatable(id:string, name:string, rank:int)[\r\n'Data File(s) Size (KB)', 'Total data file size', 1,\r\n'Log File(s) Size (KB)', 'Total log file size', 2,\r\n'Log File(s) Used Size (KB)', 'Total log file used size', 4,\r\n'Free Space in tempdb (KB)', 'Free space in tempdb', 5,\r\n'Memory broker clerk size', 'Memory broker clerk size', 6,\r\n];\r\nlet data = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| where  (Computer == '{Computer}' or '*' == '{Computer}') and SqlInstance == '{SqlInstance}' and (Database == '{SqlDatabase}' or '*' == '{SqlDatabase}') and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend ComponentId = strcat('/workspace/', TenantId, '/computer/', Computer, '/sqlinstance/', SqlInstance, '/database/');\r\ndata\r\n| where tostring(Tags.object) endswith ':Databases' and tostring(Tags.instance) =~ 'total' and Counter in~ ('Data File(s) Size (KB)', 'Log File(s) Size (KB)', 'Log File(s) Used Size (KB)')\r\n| summarize (End, EndValue) = arg_max(TimeGenerated, Val) by Counter, ComponentId\r\n| extend Link = 'Community-Workbooks/Workloads/SQL/Database Drilldown/Database space'\r\n| extend selectedTab = iff(Counter == 'Data File(s) Size (KB)', 'Data', 'Logs')\r\n| union (data\r\n    | where  Counter =~ 'Free Space in tempdb (KB)'\r\n    | summarize EndValue = min(Val) by Counter, ComponentId\r\n    | extend Link = 'Community-Workbooks/Workloads/SQL/Database Drilldown/Free space in tempdb'\r\n    | extend EndValue = EndValue)\r\n| union (data\r\n    | where  Counter =~ 'Memory broker clerk size' and DbInstance =~ 'Buffer Pool'\r\n    | summarize (End, EndValue) = arg_max(TimeGenerated, Val) by Counter, ComponentId\r\n    | extend Link = 'Community-Workbooks/Workloads/SQL/Database Drilldown/Memory broker clerk'\r\n    | extend EndValue = EndValue * 8)\r\n| join kind = inner (counterMetadata) on $left.Counter == $right.id\r\n| order by rank asc\r\n| extend Subtitle = '⎯⎯⎯⎯⎯'\r\n",
              "size": 4,
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "name",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "Subtitle",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "EndValue",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "green",
                    "linkTarget": "WorkbookTemplate",
                    "linkIsContextBlade": true,
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "column",
                      "resourceIds": "ComponentId",
                      "templateIdSource": "column",
                      "templateId": "Link",
                      "typeSource": "static",
                      "type": "workbook",
                      "gallerySource": "static",
                      "gallery": "Azure Monitor",
                      "locationSource": "default",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "TimeRange",
                          "source": "parameter",
                          "value": "TimeRange"
                        },
                        {
                          "name": "selectedTab",
                          "source": "column",
                          "value": "selectedTab"
                        },
                        {
                          "name": "Replica",
                          "source": "parameter",
                          "value": "Replica"
                        },
                        {
                          "name": "showReplica",
                          "source": "static",
                          "value": "true"
                        },
                        {
                          "name": "WorkspaceId",
                          "source": "parameter",
                          "value": "WorkspaceId"
                        },
                        {
                          "name": "Computer",
                          "source": "parameter",
                          "value": "Computer"
                        },
                        {
                          "name": "SqlInstance",
                          "source": "parameter",
                          "value": "SqlInstance"
                        },
                        {
                          "name": "SqlDatabase",
                          "source": "parameter",
                          "value": "SqlDatabase"
                        }
                      ]
                    }
                  },
                  "numberFormat": {
                    "unit": 37,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue"
                  }
                },
                "showBorder": false
              }
            },
            "name": "Key sizes"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Namespace in~ ('sqlserver_azuredb_waitstats', 'sqlserver_waitstats') and Name =~ 'wait_time_ms'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(iff(Tags[\"database_name'\"] == '', Tags[\"database_name\"], Tags[\"database_name'\"])), Instance = tostring(Tags.sql_instance), WaitType = tostring(Tags.wait_type), WaitCategory = tostring(Tags.wait_category)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and Instance == '{SqlInstance}' and (Database == '{SqlDatabase}' or '*' == '{SqlDatabase}')\r\n| order by Computer asc, Instance asc, Database asc, Namespace asc, Name asc, WaitType asc, TimeGenerated asc\r\n| extend WaitCategory = iff(isempty(WaitCategory), \"Other\", WaitCategory)\r\n| extend Val = iff(Computer == prev(Computer) and Instance == prev(Instance) and Database == prev(Database) and Namespace == prev(Namespace) and Name == prev(Name) and WaitType == prev(WaitType) and Val > prev(Val), Val - prev(Val), real(null))\r\n;\r\ndata\r\n| summarize Val = avg(Val) by bin(TimeGenerated, {TimeRange:grain}), WaitCategory\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by WaitCategory\r\n",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "SQL Wait Category stats",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "series",
              "exportParameterName": "WaitCategory",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "areachart",
              "chartSettings": {
                "createOtherGroup": 50,
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "min": 0
                }
              }
            },
            "showPin": true,
            "name": "Wait stats"
          },
          {
            "type": 1,
            "content": {
              "json": "Click on one of the Wait Categories on the legend to view more SQL wait types.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "WaitCategory",
              "comparison": "isEqualTo"
            },
            "name": "Select Wait Category text"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Namespace in~ ('sqlserver_azuredb_waitstats', 'sqlserver_waitstats') and Name =~ 'wait_time_ms'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(iff(Tags[\"database_name'\"] == '', Tags[\"database_name\"], Tags[\"database_name'\"])), Instance = tostring(Tags.sql_instance), WaitType = tostring(Tags.wait_type), WaitCategory = tostring(Tags.wait_category)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and Instance == '{SqlInstance}' and (Database == '{SqlDatabase}' or '*' == '{SqlDatabase}')\r\n| order by Computer asc, Instance asc, Database asc, Namespace asc, Name asc, WaitType asc, TimeGenerated asc\r\n| extend WaitCategory = iff(isempty(WaitCategory), \"Other\", WaitCategory)\r\n| where WaitCategory == '{WaitCategory}'\r\n| extend Val = iff(Computer == prev(Computer) and Instance == prev(Instance) and Database == prev(Database) and Namespace == prev(Namespace) and Name == prev(Name) and WaitType == prev(WaitType) and Val > prev(Val), Val - prev(Val), real(null))\r\n;\r\ndata\r\n| summarize Val = avg(Val) by bin(TimeGenerated, {TimeRange:grain}), WaitType\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by WaitType\r\n\r\n",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "SQL Wait Type Stats",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "areachart",
              "chartSettings": {
                "createOtherGroup": 50,
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "min": 0
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "WaitCategory",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "Wait Type stats"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'Transactions/sec' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE') \r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Transactions./sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "createOtherGroup": 0,
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal"
                    }
                  }
                }
              }
            },
            "showPin": true,
            "name": "Transactions/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'User connections' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "User connections",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 17,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "User connections"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'Batch requests/sec' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Batch requests/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Batch requests per second"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'SQL compilations/sec' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "SQL compilations/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "SQL compilations/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'SQL re-compilations/sec' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "SQL re-compilations/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "SQL re-compilations/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'Processes blocked' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Processes blocked",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 17,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Processes blocked"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer == '{Computer}'\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Instance == '{SqlInstance}' and Database == '{SqlDatabase}'\r\n| where Name =~ 'Number of deadlocks/sec' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Number of deadlocks/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Number of deadlocks/sec"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Activities"
      },
      "name": "Activities"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Namespace == 'sqlserver_memory_clerks'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance), ClerkType = tostring(Tags.clerk_type)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and Instance == '{SqlInstance}' and (Database == '{SqlDatabase}' or '*' == '{SqlDatabase}') and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE') ;\r\ndata\r\n| extend SeriesName = strcat(Instance, '/', Database)\r\n| summarize (StartTime, StartValue) = arg_min(TimeGenerated, Val), (EndTime, EndValue) = arg_max(TimeGenerated, Val) by bin(TimeGenerated, {TimeRange:grain}), SeriesName, ClerkType\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by ClerkType, SeriesName\r\n\r\n",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Memory clerks",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "areachart",
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 3,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "showPin": true,
            "name": "Memory clerks"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Memory clerks"
      },
      "name": "Memory clerks group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' and tostring(Tags.object) endswith ':Databases' and tostring(Tags.instance) !~ 'total'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and SqlInstance == '{SqlInstance}' and DbInstance == '{SqlDatabase}' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| summarize \r\n        DataFilesSize = avgif(Val, Counter == 'Data File(s) Size (KB)'),\r\n        LogFilesSize = avgif(Val, Counter == 'Log File(s) Size (KB)'),\r\n        LogFilesUsedSize = avgif(Val, Counter == 'Log File(s) Used Size (KB)'),\r\n        PercentLogUsed = avgif(Val, Counter == 'Percent Log Used')\r\n    by SqlInstance, DbInstance\r\n",
              "size": 0,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "DbInstance",
              "exportParameterName": "DbInstance",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "parameter",
                        "resourceIds": "DatabaseId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads/SQL/Database Drilldown/Database space",
                        "typeSource": "static",
                        "type": "workbook",
                        "gallerySource": "static",
                        "gallery": "Azure Monitor",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "Replica",
                            "source": "parameter",
                            "value": "Replica"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "showReplica",
                            "source": "static",
                            "value": "true"
                          },
                          {
                            "name": "WorkspaceId",
                            "source": "parameter",
                            "value": "WorkspaceId"
                          },
                          {
                            "name": "Computer",
                            "source": "parameter",
                            "value": "Computer"
                          },
                          {
                            "name": "SqlInstance",
                            "source": "parameter",
                            "value": "SqlInstance"
                          },
                          {
                            "name": "SqlDatabase",
                            "source": "parameter",
                            "value": "SqlDatabase"
                          }
                        ]
                      }
                    },
                    "tooltipFormat": {}
                  },
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DbInstance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DataFilesSize|LogFilesSize|LogFilesUsedSize",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 37,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "PercentLogUsed",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "orange"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "namename",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SqlInstance"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "DbInstance"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_DataFilesSize|LogFilesSize|LogFilesUsedSize_3",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SqlInstance",
                    "label": "Name"
                  },
                  {
                    "columnId": "DbInstance",
                    "label": "Name"
                  },
                  {
                    "columnId": "DataFilesSize",
                    "label": "Data file(s) size"
                  },
                  {
                    "columnId": "LogFilesSize",
                    "label": "Log file(s) size"
                  },
                  {
                    "columnId": "LogFilesUsedSize",
                    "label": "Log file(s) used size"
                  },
                  {
                    "columnId": "PercentLogUsed",
                    "label": "Percent log used"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_DataFilesSize|LogFilesSize|LogFilesUsedSize_3",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Database space"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Database space"
      },
      "name": "Database space"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' and tostring(Tags.object) endswith ':Databases' and tostring(Tags.instance) !~ 'total'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and SqlInstance == '{SqlInstance}' and DbInstance == '{SqlDatabase}' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE') \r\n| summarize (Start, StartValue) = arg_min(TimeGenerated, Val), (End, EndValue) = arg_max(TimeGenerated, Val) by Counter, Database, SqlInstance, DbInstance, bin(TimeGenerated, {TimeRange:grain})\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| summarize \r\n        WriteTransactionsPerSec = avgif(Val, Counter == 'Write Transactions/sec'),\r\n        LogFlushesPerSec = avgif(Val, Counter == 'Log Flushes/sec'),\r\n        LogBytesFlushedPerSec = avgif(Val, Counter == 'Log Bytes Flushed/sec'),\r\n        LogFlushWaitTime = avgif(Val, Counter == 'Log Flush Wait Time')\r\n    by SqlInstance, DbInstance\r\n| project-reorder WriteTransactionsPerSec, LogFlushesPerSec, LogBytesFlushedPerSec, LogFlushWaitTime, DbInstance\r\n",
              "size": 0,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "parameter",
                        "resourceIds": "DatabaseId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads/SQL/Database Drilldown/Transactions",
                        "typeSource": "static",
                        "type": "workbook",
                        "gallerySource": "static",
                        "gallery": "Azure Monitor",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "Replica",
                            "source": "parameter",
                            "value": "Replica"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "showReplica",
                            "source": "static",
                            "value": "true"
                          },
                          {
                            "name": "WorkspaceId",
                            "source": "parameter",
                            "value": "WorkspaceId"
                          },
                          {
                            "name": "Computer",
                            "source": "parameter",
                            "value": "Computer"
                          },
                          {
                            "name": "SqlInstance",
                            "source": "parameter",
                            "value": "SqlInstance"
                          },
                          {
                            "name": "SqlDatabase",
                            "source": "parameter",
                            "value": "SqlDatabase"
                          }
                        ]
                      }
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "TransactionsPerSec|WriteTransactionsPerSec",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogFlushesPerSec",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogBytesFlushedPerSec",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogFlushWaitTime",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "DbInstance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "DbInstance"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "DbInstance"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_TransactionsPerSec|WriteTransactionsPerSec_1",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "WriteTransactionsPerSec",
                    "label": "Write transactions/sec"
                  },
                  {
                    "columnId": "LogFlushesPerSec",
                    "label": "Log flushes/sec"
                  },
                  {
                    "columnId": "LogBytesFlushedPerSec",
                    "label": "Log bytes flushed/sec"
                  },
                  {
                    "columnId": "LogFlushWaitTime",
                    "label": "Log flush wait time"
                  },
                  {
                    "columnId": "DbInstance",
                    "label": "Name"
                  },
                  {
                    "columnId": "SqlInstance",
                    "label": "Name"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_TransactionsPerSec|WriteTransactionsPerSec_1",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Transactions"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Transactions"
      },
      "name": "Transactions"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_database_io'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), FileType = tostring(Tags.file_type), FileName = tostring(Tags.logical_filename)\r\n| where (Computer == '{Computer}' or '*' == '{Computer}') and SqlInstance == '{SqlInstance}' and Database == '{SqlDatabase}' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE')\r\n| summarize (Start, StartValue) = arg_min(TimeGenerated, Val), (End, EndValue) = arg_max(TimeGenerated, Val) by Name, Database, SqlInstance, FileType, FileName, TenantId, Computer\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null))\r\n| summarize\r\n        DataReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'DATA'),\r\n        DataWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'DATA'),\r\n        DataReadLatency = avgif(Val, Name == 'read_latency_ms' and FileType == 'DATA'),\r\n        DataWriteLatency = avgif(Val, Name == 'write_latency_ms' and FileType == 'DATA'),\r\n        LogReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'LOG'),\r\n        LogWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'LOG'),\r\n        LogReadLatency = avgif(Val, Name == 'read_latency_ms' and FileType == 'LOG'),\r\n        LogWriteLatency = avgif(Val, Name == 'write_latency_ms' and FileType == 'LOG')\r\n    by SqlInstance, Database, ComponentId = strcat('/workspace/', TenantId, '/computer/', Computer, '/sqlinstance/', SqlInstance, '/database/', Database)\r\n| project-reorder LogReadBytes, LogWriteBytes, LogReadLatency, LogWriteLatency, DataReadBytes, DataWriteBytes, DataReadLatency, DataWriteLatency, Database",
              "size": 0,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Database",
              "exportParameterName": "DbInstance",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "column",
                        "resourceIds": "ComponentId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads/SQL/Database Drilldown/Database IO",
                        "typeSource": "static",
                        "type": "workbook",
                        "gallerySource": "static",
                        "gallery": "Azure Monitor",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "Replica",
                            "source": "parameter",
                            "value": "Replica"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "showReplica",
                            "source": "static",
                            "value": "true"
                          },
                          {
                            "name": "WorkspaceId",
                            "source": "parameter",
                            "value": "WorkspaceId"
                          },
                          {
                            "name": "Computer",
                            "source": "parameter",
                            "value": "Computer"
                          },
                          {
                            "name": "SqlInstance",
                            "source": "parameter",
                            "value": "SqlInstance"
                          },
                          {
                            "name": "SqlDatabase",
                            "source": "parameter",
                            "value": "SqlDatabase"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadBytes|LogWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadLatency|LogWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "DataReadBytes|DataWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "DataReadLatency|DataWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ComponentId",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SqlInstance"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Database"
                },
                "labelSettings": [
                  {
                    "columnId": "LogReadBytes",
                    "label": "Log read bytes"
                  },
                  {
                    "columnId": "LogWriteBytes",
                    "label": "Log write bytes"
                  },
                  {
                    "columnId": "LogReadLatency",
                    "label": "Log read latency"
                  },
                  {
                    "columnId": "LogWriteLatency",
                    "label": "Log write latency"
                  },
                  {
                    "columnId": "DataReadBytes",
                    "label": "Data read bytes"
                  },
                  {
                    "columnId": "DataWriteBytes",
                    "label": "Data write bytes"
                  },
                  {
                    "columnId": "DataReadLatency",
                    "label": "Data read latency"
                  },
                  {
                    "columnId": "DataWriteLatency",
                    "label": "Data write latency"
                  },
                  {
                    "columnId": "Database",
                    "label": "More..."
                  },
                  {
                    "columnId": "SqlInstance",
                    "label": "Name"
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Database IO"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Database IO"
      },
      "name": "Database IO"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "d96a773c-653b-468b-bba0-33925dabe752",
                  "version": "KqlParameterItem/1.0",
                  "name": "Metric",
                  "type": 2,
                  "isRequired": true,
                  "query": "InsightsMetrics\n| extend Tags = todynamic(Tags)\n| extend SqlInstance = tostring(Tags.sql_instance), Database = tostring(Tags.database_name)\n| where Computer =~ '{Computer}'\n| where Namespace != 'sqlserver_performance' and SqlInstance == '{SqlInstance}' and Database == '{SqlDatabase}'\n| summarize by Namespace, Name\n| project value = strcat('| where Namespace == \"', Namespace, '\" and Name == \"', Name, '\"'), label = Name, group = Namespace\n| order by group asc, label asc\n| extend Row = row_number()\n| project value, label, selected = Row == 1, group\n| union (\n    InsightsMetrics\n    | extend Tags = todynamic(Tags)\n    | extend SqlInstance = tostring(Tags.sql_instance), Database = tostring(Tags.database_name)\n    | where Computer =~ '{Computer}'\n    | where Namespace == 'sqlserver_performance' and SqlInstance == '{SqlInstance}' and Database == '{SqlDatabase}'\n    | summarize by Namespace, Name, Counter = tostring(Tags.counter)\n    | project value = strcat('| where Namespace == \"sqlserver_performance\" and Name == \"value\" and Tags.counter ==\"', Counter, '\"'), label = Counter, group = Namespace\n    | order by group asc, label asc\n    | extend Row = row_number()\n    | project value, label, selected = Row == 1, group\n)",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "1e8a0803-aff5-45d4-990a-29923479851b",
                  "version": "KqlParameterItem/1.0",
                  "name": "Aggregation",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    { \"value\":\"avg(Val)\", \"label\":\"Average\", \"selected\":\"true\" },\n    { \"value\":\"sum(Val)\", \"label\":\"Sum\", \"selected\":\"false\" },\n    { \"value\":\"min(Val)\", \"label\":\"Minimum\", \"selected\":\"false\" },\n    { \"value\":\"max(Val)\", \"label\":\"Maximum\", \"selected\":\"false\" },\n    { \"value\":\"count()\", \"label\":\"Count\", \"selected\":\"false\" }\n]",
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "9b2944ed-09fe-4e36-a535-7e89d28d8c3a",
                  "version": "KqlParameterItem/1.0",
                  "name": "SplitBy",
                  "label": "Split by",
                  "type": 2,
                  "query": "InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where Computer =~ '{Computer}'\r\n{Metric}\r\n| take 10\r\n| project Keys = bag_keys(Tags)\r\n| mvexpand Keys\r\n| summarize by label = tostring(Keys)\r\n| project value = strcat('by Split = tostring(Tags[\"', label, '\"])'), label = replace('vm.azm.ms/', '', label), selected = true\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "1358fefc-333a-477b-973d-9926da5c852e",
                  "version": "KqlParameterItem/1.0",
                  "name": "SplitByValue",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "SplitBy",
                        "operator": "isNotNull",
                        "resultValType": "param",
                        "resultVal": "SplitBy"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "//"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "TimeRange"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "Metric selectors",
            "styleSettings": {
              "margin": "15px 0 10px 0"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\n| extend Tags = todynamic(Tags)\n| where Computer =~ '{Computer}'\n| where Tags.sql_instance == '{SqlInstance}' or Tags.sql_instance == '' and Tags.replica_updateability == iff('{Replica}' == 'secondary', 'READ_ONLY', 'READ_WRITE') \n{Metric}\n| make-series Trend = {Aggregation} default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} {SplitBy}\n",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "{Metric:label} trend",
              "timeContext": {
                "durationMs": 86400000
              },
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "xSettings": {},
                "ySettings": {
                  "min": 0
                }
              }
            },
            "showPin": true,
            "name": "Metric trend"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Sql counters"
      },
      "name": "Sql counters"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}