{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7ef499bd-fea4-4db0-9924-fe3544b300f3",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "isGlobal": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": []
          },
          {
            "id": "c3c353f3-249e-49cd-87c4-4c10376ba65c",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n { \"value\": \"No\", \"label\": \"No\", \"selected\":true },\r\n { \"value\": \"Change Log\", \"label\": \"Change Log\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "31184e31-8b2f-4743-a165-1666fe11613f",
            "version": "KqlParameterItem/1.0",
            "name": "Resource_Filter",
            "type": 2,
            "description": "Filer Resource base on \"Resource Group\" or \"VIS [Virtual Instance for SAP Solutions]\"",
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"ResourceGroup\", \"label\": \"ResourceGroup\"},\r\n { \"value\": \"VIS\", \"label\": \"VIS\", \"selected\":true }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "ResourceGroup"
          },
          {
            "id": "a0e701f9-fe18-4d0a-bbfc-c75960795243",
            "version": "KqlParameterItem/1.0",
            "name": "Report_check",
            "label": "Report",
            "type": 2,
            "description": "Single page view",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"Yes\\\", \\\"No\\\"]\",\"transformers\":null}",
            "value": "No",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "40",
      "name": "Overview of Inventory checks",
      "styleSettings": {
        "maxWidth": "40"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "fca544bb-a0b7-4e91-b0e5-d29a0c00b6f8",
            "version": "KqlParameterItem/1.0",
            "name": "Resource_Group",
            "type": 5,
            "description": "Resource Group",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| distinct resourceGroup\r\n| order by resourceGroup asc\r\n| extend Rank = row_number()\r\n| project value = resourceGroup, label = resourceGroup, selected = Rank <= 7000",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Resource_Filter",
        "comparison": "isEqualTo",
        "value": "ResourceGroup"
      },
      "customWidth": "20",
      "name": "parameters - Resource Group Filter"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "1010a239-d7fb-419f-8589-83b91412f852",
            "version": "KqlParameterItem/1.0",
            "name": "system_SID",
            "type": 5,
            "description": "VIS",
            "isRequired": true,
            "isGlobal": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| distinct id, name\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = name, label = name, selected = Rank <= 5000",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "44e23a9f-fc1e-482f-993a-42bda9dd7ab1",
            "version": "KqlParameterItem/1.0",
            "name": "VIS_VMs",
            "type": 5,
            "isGlobal": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances'\r\n| extend visId = split(split(id, '/centralInstances')[0], '/databaseInstances')[0] // getting the VIS id out of child resource\r\n| extend SID = tostring(split(visId,\"/\",8)[0])\r\n//| extend visList = split('{system_SID:id}', ', ') // split the selected vis list in array to search\r\n//| where set_has_element(visList, tostring(visId)) == 1 //check if the running vis exists in selected vis id.\r\n| mv-expand properties.vmDetails\r\n| extend vmID = tostring(properties_vmDetails.virtualMachineId)\r\n| where strlen(vmID) > 0\r\n| extend vmRole = split(type, \"/\")[2]\r\n//| extend vmRole = \"qwertyuiop\"\r\n//| project visVMId = strcat(tolower(vmID), \", \", SID, \", \", vmRole)\r\n| project visVMId = strcat(tolower(vmID)), SID, vmRole\r\n| union(\r\nresources\r\n        | where type =~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n        | extend visId = split(id, '/applicationInstances')[0]\r\n //       | extend visList = split('{system_SID:id}', ', ') \r\n        | extend SID = tostring(split(visId,\"/\",8)[0])\r\n        // split the selected vis list in array to search\r\n//        | where set_has_element(visList, tostring(visId)) == 1\r\n        | extend vmID = tostring(properties.virtualMachineId)\r\n        | where strlen(vmID) > 0\r\n        | extend vmRole = split(type, \"/\")[2]\r\n        //| extend vmRole = \"qwertyuiop\"\r\n    //    | project visVMId = strcat(tolower(vmID), \", \",SID , \", \", vmRole)\r\n    | project visVMId = strcat(tolower(vmID)), SID, vmRole\r\n        )\r\n| extend VIS_VMs = tostring(split(visVMId,\"/\",8)[0])\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n//| project VIS_VMs\r\n| distinct VIS_VMs\r\n| order by VIS_VMs asc\r\n| extend Rank = row_number()\r\n| project value = VIS_VMs, label = VIS_VMs, selected = Rank <= 5000\r\n\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "12dbb639-192b-4907-82bf-2fdf443ec2a1",
            "version": "KqlParameterItem/1.0",
            "name": "Resource_group",
            "type": 5,
            "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| distinct resourceGroup\r\n| order by resourceGroup asc\r\n| extend Rank = row_number()\r\n| project value = resourceGroup, label = resourceGroup, selected = Rank <= 5000",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "Resource_Filter",
        "comparison": "isEqualTo",
        "value": "VIS"
      },
      "customWidth": "20",
      "name": "parameters - VIS Filter",
      "styleSettings": {
        "maxWidth": "10"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Welcome to SAP Inventory checks.\r\nFor any support with this workbook, please log a case under Virtual Machines running for SAP."
      },
      "customWidth": "20",
      "name": "text - Home text",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "** Greetings to the Inventory Checks for SAP workbook. **\r\n\r\nThis workbook is designed for a self-service examination of your Azure resources dedicated to SAP workloads. We leverage platform resources and refer to best practices wherever applicable. Additionally, we offer a Resource_Filter, allowing you to choose an Azure Resource Group or VIS (Virtual Instance for SAP = SID) for reviewing resources on Azure within the selected subscription.\r\n\r\nKindly choose the subscription where the workload/resources requiring review are deployed."
      },
      "conditionalVisibility": {
        "parameterName": "Subscriptions",
        "comparison": "isEqualTo"
      },
      "name": "text - Welcome text"
    },
    {
      "type": 1,
      "content": {
        "json": "## Azure SAP Inventory Checks\r\n### Change Log\r\nThis workbook is for Azure SAP Inventory Checks. Use this checks the overall Azure SAP Health Check from Azure Platform.\r\n\r\n|Version|Description|Update on | Update By|\r\n|---|---|---|\r\n|v0.0.0| Initial Release  | November 2021 | Developer1\r\n|v0.0.1| Code update      | December 2021 | Developer1\r\n|v0.1.0| Added Report tab | January 2022 | Developer1\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Change Log"
      },
      "customWidth": "60",
      "name": "text - Change log"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "66a08934-0e82-48c9-91df-5a54a7418f62",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Azure Inventory Checks Report",
            "subTarget": "Single_Page_View",
            "preText": "Report",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Report_check",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "customWidth": "20",
      "name": "links - Report"
    },
    {
      "type": 1,
      "content": {
        "json": "## Overview Group"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "text - Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "a19cfc88-cfe4-4dda-9c1b-916950e8d04d",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure resource Overview",
                  "subTarget": "overview",
                  "style": "link"
                }
              ]
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "Extended_Checks",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "links - Azure Resource Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Overview Azure Resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Extended_Checks",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "Overview-Title"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources | summarize count(type)",
                    "size": 4,
                    "title": "Count of All Resources",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "count_type",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "count_type",
                      "sortOrderField": 2
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Extended_Checks",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - Overview Count"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources \r\n| extend type = case(\r\ntype contains 'microsoft.netapp/netappaccounts', 'NetApp Accounts',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype contains 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype contains 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype contains 'microsoft.operationalinsights/workspaces', 'Azure Monitor Resources',\r\ntype contains 'microsoft.operationsmanagement', 'Operations Management Resources',\r\ntype contains 'microsoft.insights', 'Azure Monitor Resources',\r\ntype contains 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype contains 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype contains 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\ntype contains 'microsoft.recoveryservices/vaults', 'Backup Vaults',\r\ntype contains 'microsoft.web', 'App Services',\r\ntype contains 'microsoft.managedidentity/userassignedidentities','Managed Identities',\r\ntype contains 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\ntype contains 'microsoft.hybridcompute/machines', 'ARC Machines',\r\ntype contains 'Microsoft.EventHub', 'Event Hub',\r\ntype contains 'Microsoft.EventGrid', 'Event Grid',\r\ntype contains 'Microsoft.Sql', 'SQL Resources',\r\ntype contains 'Microsoft.HDInsight/clusters', 'HDInsight Clusters',\r\ntype contains 'microsoft.devtestlab', 'DevTest Labs Resources',\r\ntype contains 'microsoft.containerinstance', 'Container Instances Resources',\r\ntype contains 'microsoft.portal/dashboards', 'Azure Dashboards',\r\ntype contains 'microsoft.containerregistry/registries', 'Container Registry',\r\ntype contains 'microsoft.automation', 'Automation Resources',\r\ntype contains 'sendgrid.email/accounts', 'SendGrid Accounts',\r\ntype contains 'microsoft.datafactory/factories', 'Data Factory',\r\ntype contains 'microsoft.databricks/workspaces', 'Databricks Workspaces',\r\ntype contains 'microsoft.machinelearningservices/workspaces', 'Machine Learnings Workspaces',\r\ntype contains 'microsoft.alertsmanagement/smartdetectoralertrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.apimanagement/service', 'API Management Services',\r\ntype contains 'microsoft.dbforpostgresql', 'PostgreSQL Resources',\r\ntype contains 'microsoft.scheduler/jobcollections', 'Scheduler Job Collections',\r\ntype contains 'microsoft.visualstudio/account', 'Azure DevOps Organization',\r\ntype contains 'microsoft.network/', 'Network Resources',\r\ntype contains 'microsoft.migrate/' or type contains 'microsoft.offazure', 'Azure Migrate Resources',\r\ntype contains 'microsoft.servicebus/namespaces', 'Service Bus Namespaces',\r\ntype contains 'microsoft.classic', 'ASM Obsolete Resources',\r\ntype contains 'microsoft.resources/templatespecs', 'Template Spec Resources',\r\ntype contains 'microsoft.virtualmachineimages', 'VM Image Templates',\r\ntype contains 'microsoft.documentdb', 'CosmosDB DB Resources',\r\ntype contains 'microsoft.alertsmanagement/actionrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.kubernetes/connectedclusters', 'ARC Kubernetes Clusters',\r\ntype contains 'microsoft.purview', 'Purview Resources',\r\ntype contains 'microsoft.security', 'Security Resources',\r\ntype contains 'microsoft.cdn', 'CDN Resources',\r\ntype contains 'microsoft.devices','IoT Resources',\r\ntype contains 'microsoft.datamigration', 'Data Migraiton Services',\r\ntype contains 'microsoft.cognitiveservices', 'Congitive Services',\r\ntype contains 'microsoft.customproviders', 'Custom Providers',\r\ntype contains 'microsoft.appconfiguration', 'App Services',\r\ntype contains 'microsoft.search', 'Search Services',\r\ntype contains 'microsoft.maps', 'Maps',\r\ntype contains 'microsoft.containerservice/managedclusters', 'AKS',\r\ntype contains 'microsoft.signalrservice', 'SignalR',\r\ntype contains 'microsoft.resourcegraph/queries', 'Resource Graph Queries',\r\ntype contains 'microsoft.batch', 'MS Batch',\r\ntype contains 'microsoft.analysisservices', 'Analysis Services',\r\ntype contains 'microsoft.synapse/workspaces', 'Synapse Workspaces',\r\ntype contains 'microsoft.synapse/workspaces/sqlpools', 'Synapse SQL Pools',\r\ntype contains 'microsoft.kusto/clusters', 'ADX Clusters',\r\ntype contains 'microsoft.resources/deploymentscripts', 'Deployment Scripts',\r\ntype contains 'microsoft.aad/domainservices', 'AD Domain Services',\r\ntype contains 'microsoft.labservices/labaccounts', 'Lab Accounts',\r\ntype contains 'microsoft.automanage/accounts', 'Automanage Accounts',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type",
                    "size": 0,
                    "title": "Resource Count by Type",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "barchart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "count_",
                      "sortOrderField": 2
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Extended_Checks",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - Resource Count by Type"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcecontainers \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n| summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\", @\"Resource Groups\", type)",
                    "size": 4,
                    "title": "Subscription Overview",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "type",
                          "formatter": 16,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Extended_Checks",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - Subscription Overview"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Extended_Checks",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "overview"
              }
            ],
            "name": "Overview_Group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "group - Overview"
    },
    {
      "type": 1,
      "content": {
        "json": "### AzSAP CoE Group"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "text - AzSAPCoE"
    },
    {
      "type": 1,
      "content": {
        "json": "### SAP Overview"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "text - 23"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "9c811240-eb66-4610-910c-31ff2a59054b",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "SAPOverview",
                  "style": "link"
                },
                {
                  "id": "1761e5b7-35da-4bb7-83ea-691c30916c4f",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Machine",
                  "subTarget": "compute",
                  "style": "link"
                },
                {
                  "id": "8e966843-9fdf-4768-9ecd-fbb47f408dab",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Storage",
                  "subTarget": "storage",
                  "style": "link"
                },
                {
                  "id": "c7bc3c19-9ac2-40f4-a4d7-5368fd93dcf2",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Network",
                  "subTarget": "network",
                  "style": "link"
                },
                {
                  "id": "54b7e56f-7c8f-49bb-af90-67e6d7c82e0e",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Orphaned Resources",
                  "subTarget": "housekeeping",
                  "style": "link"
                },
                {
                  "id": "ff290cf1-862a-438c-8860-146abc24a1d7",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Configuration Checks",
                  "subTarget": "configchecks",
                  "style": "link"
                },
                {
                  "id": "d1b68ea6-9a2f-4907-b137-f070620d3619",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Monitoring",
                  "subTarget": "monitor",
                  "style": "link"
                }
              ]
            },
            "customWidth": "60",
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "Overview"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "bfbbba3d-8abb-4f3d-9f7c-2f45a9cb78dc",
                  "cellValue": "sapoverview",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Resources Overview ",
                  "subTarget": "bycount",
                  "style": "link"
                },
                {
                  "id": "dc79bbf4-87bb-470b-bfb0-704d22ee847a",
                  "cellValue": "sapoverview",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Resources By List",
                  "subTarget": "bylist",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              }
            ],
            "name": "links - SAP Resource Overview"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name, vmsize = tostring(properties.hardwareProfile.vmSize)\r\n| summarize count() by vmsize",
              "size": 3,
              "title": "Virtual Machine SKU Overview",
              "noDataMessage": "No VM resource found in selected subscription.",
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "vmsize",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "vmsize",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "yAxis": [
                  "count_"
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - VM Overview",
            "styleSettings": {
              "margin": "0",
              "padding": "0"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name = tostring(sku.name),tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 3,
              "title": "Managed Disk overview",
              "noDataMessage": "No Azure Managed Disk found in selected subscription.",
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - Managed Disk overview",
            "styleSettings": {
              "margin": "0",
              "padding": "0",
              "maxWidth": "33%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "where type has \"microsoft.netapp\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend type = case(\r\n\ttype == 'microsoft.netapp/netappaccounts', \"ANF Accounts\",\r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools', \"Capacity Pools\", \r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools/volumes', \"Volumes\", \r\n\ttype == 'microsoft.netapp/netappaccounts/snapshotpolicies', \"snapshotpolicies\", \r\n\ttype == 'microsoft.netapp/netappaccounts/backuppolicies', \"backuppolicies\",\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count() by type",
              "size": 3,
              "title": "ANF Storage Overview",
              "noDataMessage": "No ANF Resource found in selected subscription.",
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "34",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - ANF Overview"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type =~ \"microsoft.network/applicationgateways\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend tier = parse_json(properties).sku.tier\r\n| project SKU = iff(tier contains \"v2\", \"v2\", \"v1\")\r\n| summarize count() by SKU",
              "size": 3,
              "title": "Application Gateway Overview",
              "noDataMessage": "No App GW found in selected subscription.",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "v2",
                    "label": "Application GW V2"
                  },
                  {
                    "seriesName": "v1",
                    "label": "Application GW V1"
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - App GW Overview",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 3,
              "title": "Azure Load Balancer Overview",
              "noDataMessage": "No Azure Load Balancer found in selected subscription.",
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "34",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - Azure Load Balancer Overview"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 3,
              "title": "Azure Storage Accounts",
              "noDataMessage": "No Storage Account found in selected subscription.",
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bycount"
              },
              {
                "parameterName": "Report_check",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "query - Storage Account Overview"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "58b04bca-a5a9-460d-a619-4d50ed8c3aa2",
                  "version": "KqlParameterItem/1.0",
                  "name": "VM_Messages",
                  "type": 1,
                  "query": "Resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize Total = count()\r\n| project Message = strcat('Total VMs # ', Total)",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "54c9eec3-283b-4990-9506-82b2c69713e0",
                  "version": "KqlParameterItem/1.0",
                  "name": "Storage_Messages",
                  "type": 1,
                  "query": "Resources\r\n| where type == 'microsoft.storage/storageaccounts'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize Total = count()\r\n| project Message = strcat('Total Storage Accounts # ', Total)",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "ecdcb0a6-4340-4125-a135-769f25e29308",
                  "version": "KqlParameterItem/1.0",
                  "name": "Disk_Message",
                  "type": 1,
                  "query": "Resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize Total = count()\r\n| project Message = strcat('Total Managed Disks # ', Total)",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "1013df3c-f6c9-4ca6-9423-db40ee6f5b29",
                  "version": "KqlParameterItem/1.0",
                  "name": "ANF_Message",
                  "type": 1,
                  "query": "Resources\r\n| where type == \"microsoft.netapp/netappaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize Total = count()\r\n| project Message = strcat('Total ANF Accounts # ', Total)",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - Future Parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Azure Resources : {VM_Messages} , {Disk_Message} , {Storage_Messages} , {ANF_Message}\r\n"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bylist"
              }
            ],
            "name": "text - 12"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, vmsize = tostring(properties.hardwareProfile.vmSize)\r\n| summarize count() by vmsize\r\n| order by tolower(vmsize) asc",
              "size": 0,
              "title": "VM SKU's",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "vmsize",
                    "label": "VM SKU"
                  }
                ]
              }
            },
            "customWidth": "25",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bylist"
              }
            ],
            "name": "query - VM SKU's",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name\r\n| order by tolower(name) asc",
              "size": 0,
              "title": "Azure Managed Disks",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "table",
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "name",
                    "label": "Disk SKU"
                  }
                ]
              }
            },
            "customWidth": "25",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bylist"
              }
            ],
            "name": "query - Azure Managed Disks",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name\r\n| order by tolower(name) asc",
              "size": 0,
              "title": "Azure Storage Resources",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "table",
              "gridSettings": {
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "name",
                    "label": "Storage Type"
                  },
                  {
                    "columnId": "count_",
                    "label": "Count"
                  }
                ]
              }
            },
            "customWidth": "25",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bylist"
              }
            ],
            "name": "Query - Storage Accounts Overview",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "where type has \"microsoft.netapp\"\r\n| extend type = case(\r\n\ttype == 'microsoft.netapp/netappaccounts', \"ANF Accounts\",\r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools', \"ANF Capacity Pools\", \r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools/volumes', \"ANF Volumes\",\r\n    type == 'microsoft.netapp/netappaccounts/snapshotpolicies', \"Snapshot Policies\",\r\n    type == 'microsoft.netapp/netappaccounts/backuppolicies', \"Backup Policies\",\r\n    type == 'microsoft.netapp/netappaccounts/capacitypools/volumes/mounttargets',\"Mount Targets\",\r\n\tstrcat(\"Not Translated: \", type))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize count() by type\r\n| order by tolower(type) asc",
              "size": 0,
              "title": "ANF Resources",
              "noDataMessage": "No ANF Resource found",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "count_",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "type",
                    "label": "ANF Type"
                  }
                ]
              }
            },
            "customWidth": "25",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "SAPOverview"
              },
              {
                "parameterName": "sapoverview",
                "comparison": "isEqualTo",
                "value": "bylist"
              }
            ],
            "name": "query - ANF Resources",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "### Compute Group"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Compute Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "b36f7dc7-5b49-4071-83fa-76a7c50df2e6",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure Compute",
                        "subTarget": "azure",
                        "preText": "Azure Compute",
                        "style": "link"
                      },
                      {
                        "id": "c7b4b533-ce14-4bc0-acc0-f45104d66fb9",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "Compute List",
                        "subTarget": "computelist",
                        "style": "link"
                      },
                      {
                        "id": "2c5e0c92-05b0-456f-a132-331f2c7dac03",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "Compute Extensions",
                        "subTarget": "computeextension",
                        "style": "link"
                      },
                      {
                        "id": "2962cfcd-40da-4be1-a202-1da16761394c",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "Compute+OS",
                        "subTarget": "computeos",
                        "style": "link"
                      },
                      {
                        "id": "b82c5dbb-f6ac-4964-89c8-6809ef4e65e0",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "Compute+Data Disks",
                        "subTarget": "computedata",
                        "style": "link"
                      },
                      {
                        "id": "fc89347a-500c-4ad3-9b77-2ed7c5c539a5",
                        "cellValue": "compute",
                        "linkTarget": "parameter",
                        "linkLabel": "HANA Large Instance",
                        "subTarget": "computehli",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "name": "links - compute"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Microsoft is constantly updating its platform and submitting new certification details to SAP in order to ensure Microsoft Azure is the best platform on which to run your SAP workloads.\r\n\r\n💡 Learn more about [SAP certifications and configurations running on Microsoft Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-certifications)"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "name": "text - Compute Info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend vmState = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n| extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n| summarize count() by vmState",
                    "size": 3,
                    "title": "Azure Compute Summary ",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "Resource",
                        "parameterName": "storage",
                        "parameterType": 7
                      }
                    ],
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "vmState",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "group": "vmState",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "VM deallocated",
                          "color": "brown"
                        },
                        {
                          "seriesName": "VM running",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "azure"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Azure Compute Summary "
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'Microsoft.Compute/virtualMachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend licenseType = tostring(properties.['licenseType'])\r\n| extend HybridBenefit = iif(properties.licenseType == \"Windows_Server\", \"Azure Hybrid Benefit\", \"Not Enabled\")\r\n| project id,OStype =tostring(properties.storageProfile.osDisk.osType),licenseType,HybridBenefit,location, resourceGroup\r\n| extend licenseType = iif(isempty(licenseType), \"Blank/PAYG\", (licenseType))\r\n| summarize count() by licenseType",
                    "size": 2,
                    "title": "VM OS LicenseType",
                    "noDataMessage": "No OS LicenseType detected",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "azure"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "showPin": true,
                  "name": "query - VM OS License Type"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Generation 2 VMs support key features that aren't supported in generation 1 VMs. These features include increased memory, Intel Software Guard Extensions (Intel SGX), and virtualized persistent memory (vPMEM). Generation 2 VMs running on-premises, have some features that aren't supported in Azure yet. For more information, see the Features and capabilities section.\r\n\r\n💡 Learn more about [Support for generation 2 VMs on Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2)"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computelist"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - Compute Image tip - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, vmName = name, powerstate = tostring(properties.extended.instanceView.powerState.displayStatus), vmsize = tostring(properties.hardwareProfile.vmSize), \r\n os_type = tostring(properties.storageProfile.osDisk.osType),publisher= tostring(properties.storageProfile.imageReference.publisher), version= tostring(properties.storageProfile.imageReference.version), imagesku= tostring(properties.storageProfile.imageReference.sku) ,offer= tostring(properties.storageProfile.imageReference.offer),\r\n  location, bootDiagnostics =tostring(properties.diagnosticsProfile.bootDiagnostics.enabled) ,avSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0])\r\n, ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]), VMSS = tostring(split(properties.virtualMachineScaleSet.id,\"/\",8)[0]), avZone = tostring(zones), resourceGroup, tags=tostring(tags)",
                    "size": 2,
                    "title": "Compute List",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "aggregation": "Count",
                            "customColumnWidthSetting": "18ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "Virtual Machine Name"
                          }
                        },
                        {
                          "columnMatch": "vmName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "powerstate",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "16ch"
                          }
                        },
                        {
                          "columnMatch": "vmsize",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "os_type",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "publisher",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "1",
                                "text": "{0}BYOL/Custom"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "version",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "imagesku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "gen2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "gensecond",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "1",
                                "text": "{0}Review"
                              }
                            ],
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "offer",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "location",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "bootDiagnostics",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "true",
                                "representation": "1",
                                "text": "{0}Review"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "avSet",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "ppg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "avZone",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "adminUsername",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "HyperVgen",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "powerstate",
                          "label": "VM State"
                        },
                        {
                          "columnId": "vmsize",
                          "label": "VM SKU"
                        },
                        {
                          "columnId": "os_type",
                          "label": "Operating System"
                        },
                        {
                          "columnId": "publisher",
                          "label": "OS Image Publisher"
                        },
                        {
                          "columnId": "version",
                          "label": "Image version"
                        },
                        {
                          "columnId": "imagesku",
                          "label": "OS Image SKU"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "bootDiagnostics",
                          "label": "Boot Diagnostic"
                        },
                        {
                          "columnId": "avSet",
                          "label": "AvSet"
                        },
                        {
                          "columnId": "ppg",
                          "label": "PPG"
                        },
                        {
                          "columnId": "avZone",
                          "label": "AvZone"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computelist"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "name": "query - compute List",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "d05b138c-72cf-4fbb-b288-2e02b9f72028",
                        "cellValue": "computeextension",
                        "linkTarget": "parameter",
                        "linkLabel": "VM+Extensions",
                        "subTarget": "listvmextension",
                        "style": "link"
                      },
                      {
                        "id": "ae64417d-6066-4256-b43c-b6847c0a8322",
                        "cellValue": "computeextension",
                        "linkTarget": "parameter",
                        "linkLabel": "VM Extensions Status",
                        "subTarget": "failedextension",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computeextension"
                    }
                  ],
                  "name": "links - Link"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type == 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend\r\n    JoinID = toupper(id),\r\n    OSName = tostring(properties.osProfile.computerName),\r\n    OSType = tostring(properties.storageProfile.osDisk.osType),\r\n    VMSize = tostring(properties.hardwareProfile.vmSize)\r\n| join kind=leftouter(\r\n    Resources\r\n    | where type == 'microsoft.compute/virtualmachines/extensions'\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\r\n        ExtensionName = name\r\n    ) on $left.JoinID == $right.VMId\r\n| summarize Extensions = make_list(ExtensionName) by id, VMSize, OSType, resourceGroup, location",
                    "size": 2,
                    "title": "Compute Extension",
                    "noDataMessage": "No VM Extension found",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "bladeOpenContext": {
                              "bladeJsonParameters": ""
                            }
                          }
                        },
                        {
                          "columnMatch": "Extensions",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "OSName",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "VMSize",
                          "label": "VM SKU"
                        },
                        {
                          "columnId": "OSType",
                          "label": "Operating System"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "Extensions",
                          "label": "VM Extensions"
                        }
                      ]
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computeextension"
                    },
                    {
                      "parameterName": "computeextension",
                      "comparison": "isEqualTo",
                      "value": "listvmextension"
                    }
                  ],
                  "showPin": false,
                  "name": "query - Compute Extension",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type == 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend\r\n    JoinID = toupper(id),\r\n    OSName = tostring(properties.osProfile.computerName),\r\n    OSType = tostring(properties.storageProfile.osDisk.osType),\r\n    VMSize = tostring(properties.hardwareProfile.vmSize)\r\n| join kind=leftouter(\r\n    Resources\r\n    | where type == 'microsoft.compute/virtualmachines/extensions'\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions')))\r\n        ,ExtensionName = name\r\n    , provisioningState = tostring(properties.provisioningState), autoUpgradeMinorVersion= tostring(properties.autoUpgradeMinorVersion), typeHandlerVersion= tostring(properties.typeHandlerVersion)\r\n) on $left.JoinID == $right.VMId\r\n| summarize Extensions = make_list(ExtensionName) by id, VMSize, OSType, provisioningState, autoUpgradeMinorVersion, typeHandlerVersion",
                    "size": 0,
                    "title": "VM Extensions Status",
                    "noDataMessage": "No VM Extensions",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "provisioningState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Succeeded",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "autoUpgradeMinorVersion",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "Sev1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Extensions",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Group",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "VMSize",
                          "label": "VM SKU"
                        },
                        {
                          "columnId": "OSType",
                          "label": "Operating System"
                        },
                        {
                          "columnId": "provisioningState",
                          "label": "Extension State"
                        },
                        {
                          "columnId": "autoUpgradeMinorVersion",
                          "label": "AutoUpgrade"
                        },
                        {
                          "columnId": "typeHandlerVersion",
                          "label": "Version"
                        },
                        {
                          "columnId": "Extensions",
                          "label": "Extension Name"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computeextension"
                    },
                    {
                      "parameterName": "computeextension",
                      "comparison": "isEqualTo",
                      "value": "failedextension"
                    }
                  ],
                  "name": "query -  Failed VM Extension "
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n//| mv-expand datadisks = properties.storageProfile.dataDisks\r\n| project id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), osDisk = tostring(properties.storageProfile.osDisk.name), ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]), caching= tostring(properties.storageProfile.osDisk.caching)\r\n, createOption=tostring(properties.storageProfile.osDisk.createOption), osType=tostring(properties.storageProfile.osDisk.osType), avSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0])\r\n| join ( \r\nresources\r\n| where type == \"microsoft.compute/disks\"\r\n| project id1=id, diskname=name, osDisk=tostring(split(id,\"/\",8)[0]), vmName=tostring(split(managedBy,\"/\",8)[0]), sku =sku.name, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB), \r\n diskbandwidthMBps = tostring(properties.diskMBpsReadWrite), disk_iops = tostring(properties.diskIOPSReadWrite),  managedBy, location, resourceGroup\r\n)\r\non vmName, osDisk\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, vmName, vmSize, osType, id1, diskname, sku, caching,disk_tier, disk_size_GB,diskbandwidthMBps, disk_iops, createOption, location, resourceGroup , ppg , avSet",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "Compute + OS Disk",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "18ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "Virtual Name must be =< 13 Characters"
                          }
                        },
                        {
                          "columnMatch": "vmName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "vmSize",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "id1",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Metrics",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "diskname",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "sku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Standard",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "disk_tier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "disk_size_GB",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "diskbandwidthMBps",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "location",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "ppg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "avSet",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "os_type",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "datadisk_lun",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "14ch"
                          }
                        },
                        {
                          "columnMatch": "datadisk_wa",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "id2",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "sku_name",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "powerstate",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "vmsize",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "vmgen",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "V2",
                                "representation": "success",
                                "text": "V2"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "V2",
                                "representation": "1",
                                "text": "Consider a review."
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "avZone",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "id1",
                          "label": "Disk Name"
                        },
                        {
                          "columnId": "disk_tier",
                          "label": "Tier"
                        },
                        {
                          "columnId": "disk_size_GB",
                          "label": "Disk Size"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "ppg",
                          "label": "PPG"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computeos"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Compute+OS Disk",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| mv-expand datadisks = properties.storageProfile.dataDisks\r\n| project id, vmName = name, \r\n vmSize= tostring(properties.hardwareProfile.vmSize), os_type = tostring(properties.storageProfile.osDisk.osType),\r\n datadisk_lun = toint(datadisks.lun),  datadisk_name = tostring(datadisks.name), datadisksize = tostring(datadisks.diskSizeGB), \r\n datadisk_cache = tostring(datadisks.caching), datadisk_wa = tostring(datadisks.writeAcceleratorEnabled)\r\n//| summarize by vmName,  location, powerstate, avZone, avSet, ppg, vmSize, osname, vmgen, datadisklun, datadiskname, datadisksize, datadiskcache, datadiskwa\r\n| join kind = leftouter  ( \r\nresources\r\n| where type == \"microsoft.compute/disks\"\r\n| parse managedBy with * \"/virtualMachines/\" vmName\r\n| parse id with * \"/disks/\" datadisk_name \r\n| project id1=id, sku.name, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB), \r\n diskbandwidthMBps = tostring(properties.diskMBpsReadWrite), disk_iops = tostring(properties.diskIOPSReadWrite),  datadisk_name, vmName, managedBy, location, resourceGroup\r\n)\r\non vmName, datadisk_name\r\n| project-away datadisk_name, datadisk_name1, vmName1,  managedBy\r\n| sort by vmName asc , datadisk_lun asc\r\n//| distinct datadisk_name",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "Compute + Data disks",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "VM name is recommended equal or less than 13 characters."
                          }
                        },
                        {
                          "columnMatch": "vmName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "vmSize",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "os_type",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "datadisk_lun",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "datadisksize",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "datadisk_cache",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "datadisk_wa",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "Write Accelerator"
                          }
                        },
                        {
                          "columnMatch": "sku_name",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "17ch"
                          }
                        },
                        {
                          "columnMatch": "disk_tier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "disk_size_GB",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "disk_iops",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "location",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "avSet",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "11ch"
                          }
                        },
                        {
                          "columnMatch": "ppg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "9ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_number_datadisk_wa_7",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "vmName",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "vmSize",
                          "label": "VM SKU"
                        },
                        {
                          "columnId": "os_type",
                          "label": "OS Type"
                        },
                        {
                          "columnId": "datadisk_lun",
                          "label": "Disk LUN"
                        },
                        {
                          "columnId": "datadisksize",
                          "label": "Disk Size"
                        },
                        {
                          "columnId": "datadisk_cache",
                          "label": "Disk Cache"
                        },
                        {
                          "columnId": "datadisk_wa",
                          "label": "WA"
                        },
                        {
                          "columnId": "id1",
                          "label": "Disk Name"
                        },
                        {
                          "columnId": "sku_name",
                          "label": "Disk SKU"
                        },
                        {
                          "columnId": "disk_tier",
                          "label": "Disk Tier"
                        },
                        {
                          "columnId": "disk_size_GB",
                          "label": "Disk Size"
                        },
                        {
                          "columnId": "diskbandwidthMBps",
                          "label": "Disk BW"
                        },
                        {
                          "columnId": "disk_iops",
                          "label": "Disk IOPS"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_number_datadisk_wa_7",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computedata"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Compute+Data",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.hanaonazure/hanainstances\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| mv-expand hanasid=properties.storageProfile.hanaSids\r\n| mv-expand ntwork=properties.networkProfile.networkInterfaces\r\n| project id, name, ipaddress=tostring(ntwork.ipAddress), SID=tostring(hanasid.sid), HLI=tostring(properties.hardwareProfile.hanaInstanceSize), memory=tostring(hanasid.memoryAllocation),HLR_Revision=tostring(properties.hwRevision),OS= tostring(properties.osProfile.osType), state=tostring(properties.powerState),resourceGroup, location",
                    "size": 2,
                    "title": "HANA Large Instance Overview",
                    "noDataMessage": "No HLI nodes found!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ipaddress",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "HLI",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "memory",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "HLR_Revision",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "state",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        },
                        {
                          "columnId": "ipaddress",
                          "label": "IP Address"
                        },
                        {
                          "columnId": "HLI",
                          "label": "HLI SKU"
                        },
                        {
                          "columnId": "memory",
                          "label": "Memory"
                        },
                        {
                          "columnId": "HLR_Revision",
                          "label": "HLI Revision"
                        },
                        {
                          "columnId": "OS",
                          "label": "OS Type"
                        },
                        {
                          "columnId": "state",
                          "label": "Power State"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "compute",
                      "comparison": "isEqualTo",
                      "value": "computehli"
                    }
                  ],
                  "name": "query - HLI Overview",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "compute"
            },
            "name": "group - Compute "
          },
          {
            "type": 1,
            "content": {
              "json": "### Storage Group"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Storage Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Storage Overview",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "7e14efaf-16ca-4e89-90e7-cddec83bf803",
                        "cellValue": "storage",
                        "linkTarget": "parameter",
                        "linkLabel": "Overview",
                        "subTarget": "overview",
                        "preText": "Overview",
                        "style": "link"
                      },
                      {
                        "id": "e2dc48a3-0f7e-4091-a87c-1cb2da6c5c00",
                        "cellValue": "storage",
                        "linkTarget": "parameter",
                        "linkLabel": "Key Vaults",
                        "subTarget": "keyvault",
                        "preText": "Key Vaults",
                        "style": "link"
                      },
                      {
                        "id": "02d9a44f-6d08-4dca-b5c6-8986483f147d",
                        "cellValue": "storage",
                        "linkTarget": "parameter",
                        "linkLabel": "Storage Accounts",
                        "subTarget": "storageaccount",
                        "style": "link"
                      },
                      {
                        "id": "330f1a12-489c-4ad4-b745-33c62d831a32",
                        "cellValue": "storage",
                        "linkTarget": "parameter",
                        "linkLabel": "Recovery Service Vault",
                        "subTarget": "rsv",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "storage"
                  },
                  "name": "links - Storage"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Azure Premium Files [AFS] NFS Exception: AFS-NFS file shares don't support an encryption mechanism, you must disable require secure transfer for the storage account.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    }
                  ],
                  "name": "text - AFS Exception"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "9877b4a6-6248-4f25-924c-c0def997a621",
                        "cellValue": "storageaccount",
                        "linkTarget": "parameter",
                        "linkLabel": "Standard Storage Accounts",
                        "subTarget": "stndstorage",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "5866d0e1-2897-4ac6-8c7d-852aaf1af4bc",
                        "cellValue": "storageaccount",
                        "linkTarget": "parameter",
                        "linkLabel": "Standard Storage Accounts with PvtEndPnts",
                        "subTarget": "stndstorageendpnt",
                        "style": "link"
                      },
                      {
                        "id": "b08e3a4c-4868-4aa7-a6c5-d37d7b81e9bc",
                        "cellValue": "storageaccount",
                        "linkTarget": "parameter",
                        "linkLabel": "Classic Storage Accounts",
                        "subTarget": "classicstorage",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "274713de-f745-4bab-85bf-aae85ed1dda4",
                        "cellValue": "storageaccount",
                        "linkTarget": "parameter",
                        "linkLabel": "Storae Accounts with CMK",
                        "subTarget": "storagecmk",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    }
                  ],
                  "name": "links - Storage Options"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize count() by type",
                    "size": 1,
                    "title": "Storage Overview",
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "filter": true
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "showBorder": true
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - Storage Overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.keyvault/vaults\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, family= tostring(properties.sku.family) ,enableSoftDelete = tostring(properties.enableSoftDelete), softDeleteRetentionInDays=tostring(properties.softDeleteRetentionInDays)",
                    "size": 0,
                    "title": "Key Vault",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "enableSoftDelete",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "Resolved",
                                "text": "Enabled"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Sev2",
                                "text": "Not Enabled"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "softDeleteRetentionInDays",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">=",
                                "thresholdValue": "7",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "is Empty",
                                "representation": "Sev2",
                                "text": "{0}Not Applicable"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "7",
                                "representation": "Sev2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "1",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Key Vault Name"
                        },
                        {
                          "columnId": "family",
                          "label": "Family"
                        },
                        {
                          "columnId": "enableSoftDelete",
                          "label": "Soft Delete"
                        },
                        {
                          "columnId": "softDeleteRetentionInDays",
                          "label": "Soft Delete Retention in Days"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "keyvault"
                    }
                  ],
                  "name": "query - Key Vault",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "5c66155e-78f1-4b2d-ab20-a63989dd9ea5",
                        "version": "KqlParameterItem/1.0",
                        "name": "Classic_Storage",
                        "label": "Classic Storage",
                        "type": 1,
                        "query": "resources\r\n| where type == \"microsoft.classicstorage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name\r\n| summarize Total = count()\r\n| project Message = strcat('Classic Storage Accounts # ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "a35d9c1a-b476-4208-a27b-07a8a3bf7b8f",
                        "version": "KqlParameterItem/1.0",
                        "name": "Standard_Storage",
                        "type": 1,
                        "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name\r\n| summarize Total = count()\r\n| project Message = strcat('Standard Storage Accounts # ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "f2261fb2-1f04-42cc-a0a8-059e521ab235",
                        "version": "KqlParameterItem/1.0",
                        "name": "Storage_Account_PvtEndPnt",
                        "label": "Storage_Account_PvtEndpoint",
                        "type": 1,
                        "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| mv-expand privatepoint=properties.privateEndpointConnections\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name\r\n| summarize Total = count()\r\n| project Message = strcat('Standard Storage Accounts with Private Endpoint# ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "NoShow"
                  },
                  "name": "parameters - Storage Account Count Messages"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Classic_Storage}"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "classicstorage"
                    }
                  ],
                  "name": "text - Classic Storage Count Message"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.classicstorage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, SKU=tostring(properties.accountType), status= tostring(properties.provisioningState), Create_Time=tostring(properties.creationTime),  Primary_Region=tostring(properties.geoPrimaryRegion), Secondary_Available=tostring(properties.statusOfSecondaryRegion), Secondary_Region=tostring(properties.geoSecondaryRegion)",
                    "size": 2,
                    "title": "Classic Storage Accounts",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Create_Time",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          },
                          "dateFormat": {
                            "formatName": "shortDatePattern"
                          }
                        },
                        {
                          "columnMatch": "Primary_Region",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "Secondary_Region",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Decondary_Region",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Storage Name"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "classicstorage"
                    }
                  ],
                  "name": "query - Classic Storage Account",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Standard_Storage}"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "stndstorage"
                    }
                  ],
                  "name": "text - Standard Storage Count Message"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, sku=sku.name, Tier=sku.tier, status= tostring(properties.provisioningState), Create_Time=tostring(properties.creationTime), supportsHttpsTrafficOnly=tostring(properties.supportsHttpsTrafficOnly), allowBlobPublicAccess=tostring(properties.allowBlobPublicAccess),minimumTlsVersion=tostring(properties.minimumTlsVersion), Primary_Region=tostring(properties.primaryLocation), statusOfPrimary=tostring(properties.statusOfPrimary), accessTier=tostring(properties.accessTier) ,Secondary_Available=tostring(properties.secondaryLocation), Secondary_Status=tostring(properties.statusOfSecondary)",
                    "size": 2,
                    "title": "Standard Storage Account",
                    "noDataMessage": "No Standard Storage Account found in the selected Subscription.",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "name",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "column",
                              "templateId": "name",
                              "typeSource": "static",
                              "type": "Community-Workbooks/Storage-Performance/Blob Storage Metrics",
                              "gallerySource": "static",
                              "gallery": "workbook",
                              "locationSource": "default"
                            },
                            "bladeOpenContext": {
                              "bladeParameters": []
                            },
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "sku",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "Create_Time",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "16ch"
                          },
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDatePattern"
                          }
                        },
                        {
                          "columnMatch": "supportsHttpsTrafficOnly",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "allowBlobPublicAccess",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "minimumTlsVersion",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "TLS1_2",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "TLS1_2",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Primary_Region",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "statusOfPrimary",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "accessTier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "14ch"
                          }
                        },
                        {
                          "columnMatch": "id1",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        },
                        {
                          "columnId": "sku",
                          "label": "SKU"
                        },
                        {
                          "columnId": "status",
                          "label": "Status"
                        },
                        {
                          "columnId": "Create_Time",
                          "label": "Create Time"
                        },
                        {
                          "columnId": "supportsHttpsTrafficOnly",
                          "label": "HTTPS Only?"
                        },
                        {
                          "columnId": "allowBlobPublicAccess",
                          "label": "Public Access?"
                        },
                        {
                          "columnId": "minimumTlsVersion",
                          "label": "Min. TLS Version"
                        },
                        {
                          "columnId": "Primary_Region",
                          "label": "Primary Region"
                        },
                        {
                          "columnId": "statusOfPrimary",
                          "label": "Primary Status"
                        },
                        {
                          "columnId": "accessTier",
                          "label": "Access Tier"
                        },
                        {
                          "columnId": "Secondary_Available",
                          "label": "Secondary Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "stndstorage"
                    }
                  ],
                  "name": "query - Standard Storage Account",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Storage_Account_PvtEndPnt}"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "stndstorageendpnt"
                    }
                  ],
                  "name": "text - Standard Storage with Private Endpoint Count Message"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| mv-expand privatepoint=properties.privateEndpointConnections\r\n| project id, name, sku=sku.name, Tier=sku.tier, status= tostring(properties.provisioningState), Create_Time=tostring(properties.creationTime), supportsHttpsTrafficOnly=tostring(properties.supportsHttpsTrafficOnly), allowBlobPublicAccess=tostring(properties.allowBlobPublicAccess),minimumTlsVersion=tostring(properties.minimumTlsVersion), Primary_Region=tostring(properties.primaryLocation), statusOfPrimary=tostring(properties.statusOfPrimary), accessTier=tostring(properties.accessTier) ,Secondary_Available=tostring(properties.secondaryLocation), Secondary_Status=tostring(properties.statusOfSecondary), PrivateEndPoint=privatepoint.name",
                    "size": 2,
                    "title": "Standard Storage Account with PvtEndPoint",
                    "noDataMessage": "No Standard Storage Account with PvtEndPoint found in the selected Subscription.",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "name",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "column",
                              "templateId": "name",
                              "typeSource": "static",
                              "type": "Community-Workbooks/Storage-Performance/Blob Storage Metrics",
                              "gallerySource": "static",
                              "gallery": "workbook",
                              "locationSource": "default"
                            },
                            "bladeOpenContext": {
                              "bladeParameters": []
                            },
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "sku",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "Create_Time",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "16ch"
                          },
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDatePattern"
                          }
                        },
                        {
                          "columnMatch": "supportsHttpsTrafficOnly",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "allowBlobPublicAccess",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "minimumTlsVersion",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "TLS1_2",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "TLS1_2",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Primary_Region",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "statusOfPrimary",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "accessTier",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "14ch"
                          }
                        },
                        {
                          "columnMatch": "id1",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        },
                        {
                          "columnId": "sku",
                          "label": "SKU"
                        },
                        {
                          "columnId": "status",
                          "label": "Status"
                        },
                        {
                          "columnId": "Create_Time",
                          "label": "Create Time"
                        },
                        {
                          "columnId": "supportsHttpsTrafficOnly",
                          "label": "HTTPS Only?"
                        },
                        {
                          "columnId": "allowBlobPublicAccess",
                          "label": "Public Access?"
                        },
                        {
                          "columnId": "minimumTlsVersion",
                          "label": "Min. TLS Version"
                        },
                        {
                          "columnId": "Primary_Region",
                          "label": "Primary Region"
                        },
                        {
                          "columnId": "statusOfPrimary",
                          "label": "Primary Status"
                        },
                        {
                          "columnId": "accessTier",
                          "label": "Access Tier"
                        },
                        {
                          "columnId": "Secondary_Available",
                          "label": "Secondary Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "storageaccount"
                    },
                    {
                      "parameterName": "storageaccount",
                      "comparison": "isEqualTo",
                      "value": "stndstorageendpnt"
                    }
                  ],
                  "name": "query - Standard Storage Account with PvtEndPoint",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| extend redundancy=properties.redundancySettings\r\n| project id, name, location, SKU=sku.name, SkuTier=sku.tier,Redundancy=redundancy.standardTierStorageRedundancy, CRR=redundancy.crossRegionRestore, Status=properties.provisioningState, PublicNetworkAccess=properties.publicNetworkAccess, PvtEndpntforBackup=properties.privateEndpointStateForBackup, PvtEndpntForSiteRecovery=properties.privateEndpointStateForSiteRecovery, Storageversion=properties.backupStorageVersion ",
                    "size": 2,
                    "title": "Recovery Service Vault",
                    "noDataMessage": "No Recovery Service Vault identified",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "location",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "SKU",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "8ch"
                          }
                        },
                        {
                          "columnMatch": "SkuTier",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "Redundancy",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "GeoRedundant",
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "CRR",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "PublicNetworkAccess",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "PvtEndpntforBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "enabled",
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "PvtEndpntForSiteRecovery",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Storageversion",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "RSV Name"
                        },
                        {
                          "columnId": "PvtEndpntForSiteRecovery",
                          "label": "PvtEndPntforASR"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "storage"
                    },
                    {
                      "parameterName": "storage",
                      "comparison": "isEqualTo",
                      "value": "rsv"
                    },
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    }
                  ],
                  "name": "query - Recovery Service Vault",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "storage"
            },
            "name": "group - Storage Overview"
          },
          {
            "type": 1,
            "content": {
              "json": "### Network Group"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Network Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "4f2f1ef3-3ee6-403f-aa60-7dcbf3d8739e",
                        "cellValue": "network",
                        "linkTarget": "parameter",
                        "linkLabel": "Overview",
                        "subTarget": "overview",
                        "preText": "Network Overview",
                        "style": "link"
                      },
                      {
                        "id": "e3aee4aa-f1bb-4b53-86ee-e39812e1c102",
                        "cellValue": "network",
                        "linkTarget": "parameter",
                        "linkLabel": "Private DNS Zone",
                        "subTarget": "pvtdnszone",
                        "style": "link"
                      },
                      {
                        "id": "7d4d82c3-d13f-46a0-b9da-e3aeb4d3b946",
                        "cellValue": "network",
                        "linkTarget": "parameter",
                        "linkLabel": "Private Endpoint",
                        "subTarget": "pvtendpoint",
                        "style": "link"
                      },
                      {
                        "id": "0701e703-3459-4b69-a1e0-ae53935ef9f7",
                        "cellValue": "network",
                        "linkTarget": "parameter",
                        "linkLabel": "Monitor",
                        "subTarget": "networkmonitor",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "network"
                  },
                  "name": "links - Network Overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "where type has \"microsoft.network\"\r\n    or type has 'microsoft.cdn'\r\n| extend type = case(\r\n\ttype == 'microsoft.network/networkinterfaces', \"NICs\",\r\n\ttype == 'microsoft.network/networksecuritygroups', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\n\ttype == 'microsoft.network/virtualnetworks', \"vNets\",\r\n\ttype == 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\n\ttype == 'microsoft.network/privatednszones', \"Private DNS\",\r\n\ttype == 'microsoft.network/virtualnetworkgateways', @\"vNet Gateways\",\r\n\ttype == 'microsoft.network/connections', \"Connections\",\r\n\ttype == 'microsoft.network/networkwatchers', \"Network Watchers\",\r\n\ttype == 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\n\ttype == 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\n\ttype == 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\n\ttype == 'microsoft.network/dnszones', 'DNS Zones',\r\n\ttype == 'microsoft.network/networkwatchers/flowlogs', 'Flow Logs',\r\n\ttype == 'microsoft.network/routetables', 'Route Tables',\r\n\ttype == 'microsoft.network/loadbalancers', 'Load Balancers',\r\n\ttype == 'microsoft.network/ddosprotectionplans', 'DDoS Protection Plans',\r\n\ttype == 'microsoft.network/applicationsecuritygroups', 'App Security Groups',\r\n\ttype == 'microsoft.network/azurefirewalls', 'Azure Firewalls',\r\n\ttype == 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype == 'microsoft.network/frontdoors', 'Front Doors',\r\n\ttype == 'microsoft.network/applicationgatewaywebapplicationfirewallpolicies', 'AppGateway Policies',\r\n\ttype == 'microsoft.network/bastionhosts', 'Bastion Hosts',\r\n\ttype == 'microsoft.network/frontdoorwebapplicationfirewallpolicies', 'FrontDoor Policies',\r\n\ttype == 'microsoft.network/firewallpolicies', 'Firewall Policies',\r\n\ttype == 'microsoft.network/networkintentpolicies', 'Network Intent Policies',\r\n\ttype == 'microsoft.network/trafficmanagerprofiles', 'Traffic Manager Profiles',\r\n\ttype == 'microsoft.network/publicipprefixes', 'PublicIP Prefixes',\r\n\ttype == 'microsoft.network/privatelinkservices', 'Private Link',\r\n\ttype == 'microsoft.network/expressroutecircuits', 'Express Route Circuits',\r\n\ttype =~ 'microsoft.cdn/cdnwebapplicationfirewallpolicies', 'CDN Web App Firewall Policies',\r\n\ttype =~ 'microsoft.cdn/profiles', 'CDN Profiles',\r\n\ttype =~ 'microsoft.cdn/profiles/afdendpoints', 'CDN Front Door Endpoints',\r\n\ttype =~ 'microsoft.cdn/profiles/endpoints', 'CDN Endpoints',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize count() by type",
                    "size": 3,
                    "title": "Azure Network Overview",
                    "noDataMessage": "Something went south!",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - Network Overview"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "c72755d6-9fac-458b-979a-f2ce197f6ddf",
                        "version": "KqlParameterItem/1.0",
                        "name": "Resources",
                        "label": "ExpressRoute Ckt",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.network/expressroutecircuits\"\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1",
                            "value::all"
                          ]
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "a1f082dc-094f-48bb-8ae7-6467f2bfd916",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 14400000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "4798ec15-23a7-446e-ba82-fb56e49fd5ee",
                        "version": "KqlParameterItem/1.0",
                        "name": "Message",
                        "type": 1,
                        "query": "where type == \"microsoft.network/expressroutecircuits\"\r\n| summarize Selected = countif(id in ({Resources:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "4e35d916-4d5a-4dbf-b7b2-39cd379fa727",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceName",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "ExpressRoute Ckt"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "parameters - Network Monitor Overview"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Message}\r\n_ExpressRoute Ckt_"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "text - ExpressRoute Ckt"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook491f1ae0-8005-4638-848a-dc181b2f797d",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/expressroutecircuits",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Availability-BgpAvailability",
                        "aggregation": 4,
                        "splitBy": null
                      },
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Availability-ArpAvailability",
                        "aggregation": 4
                      }
                    ],
                    "title": "Availability ExpressRoute Ckt",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "metric - 3"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook581d65e4-97e7-416b-824b-3a154d21a848",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/expressroutecircuits",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Traffic-BitsInPerSecond",
                        "aggregation": 4,
                        "splitBy": null
                      },
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Traffic-BitsOutPerSecond",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg speed through ExpressRoute Ckt",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "metric - Speed"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookf18a2fba-74bf-435b-a99c-eba0722d7fc0",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/expressroutecircuits",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Traffic-BitsInPerSecond",
                        "aggregation": 4,
                        "splitBy": null
                      },
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-Circuit Qos-QosDropBitsOutPerSecond",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg Traffic dropped ",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "metric - Avg Dropped Traffic"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook8800b475-0a9a-4985-8ce3-41a474abd690",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/expressroutecircuits",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-GlobalReach Traffic-GlobalReachBitsInPerSecond",
                        "aggregation": 4,
                        "splitBy": null
                      },
                      {
                        "namespace": "microsoft.network/expressroutecircuits",
                        "metric": "microsoft.network/expressroutecircuits-GlobalReach Traffic-GlobalReachBitsOutPerSecond",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg GlobalReach In/Out",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    },
                    "exportToExcelOptions": "all"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "networkmonitor"
                    }
                  ],
                  "name": "metric - GlobalReach In/Out"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Run query to see results.\r\nresources\r\n| where type =~ \"microsoft.network/privateEndpoints\" and isnotnull(properties)\r\n| extend connection = iff(array_length(properties.manualPrivateLinkServiceConnections) > 0, properties.manualPrivateLinkServiceConnections[0], properties.privateLinkServiceConnections[0])\r\n| extend subnetId = properties.subnet.id\r\n| extend subnetIdSplit = split(subnetId, \"/\")\r\n| extend vnetId = strcat_array(array_slice(subnetIdSplit,0,8), \"/\")\r\n| extend vnetParameters = parse_json(strcat('{\"id\":\"',vnetId,'\",','\"menuid\":\"subnets\"','}'))\r\n| extend subnetName = strcat(subnetIdSplit[8], \"/\", subnetIdSplit[10])\r\n| extend serviceId = tostring(connection.properties.privateLinkServiceId)\r\n| extend serviceIdSplit = split(serviceId, \"/\")\r\n| extend serviceName = tostring(serviceIdSplit[8])\r\n| extend serviceTypeEnum = iff(isnotnull(serviceIdSplit[6]), tolower(strcat(serviceIdSplit[6], \"/\", serviceIdSplit[7])), \"microsoft.network/privatelinkservices\")\r\n| extend stateEnum = tostring(connection.properties.privateLinkServiceConnectionState.status)\r\n| extend statusIcon = case(\r\n    stateEnum == \"Approved\", 8,\r\n    stateEnum == \"Rejected\", 252,\r\n    stateEnum == \"Pending\", 88,\r\n    stateEnum == \"Disconnected\", 131,\r\n    7\r\n)\r\n| extend groupId = tostring(connection.properties.groupIds[0])\r\n| extend id = tolower(tostring(id))\r\n| join kind=leftouter hint.strategy=shuffle ( data\r\n        | where type =~ \"microsoft.network/networkInterfaces\" and isnotnull(properties) and isnotnull(properties.ipConfigurations) and isnotnull(properties.ipConfigurations[0].properties.privateLinkConnectionProperties)\r\n        | extend networkInterfaceId = id\r\n        | extend id = tolower(tostring(properties.privateEndpoint.id))\r\n        | extend ipAddress = properties.ipConfigurations[0].properties.privateIPAddress\r\n        | extend ipBladeParameters = parse_json(strcat('{\"id\":\"',networkInterfaceId,'\"}'))\r\n        | project id, ipBladeParameters, ipAddress)\r\n    on id\r\n| project id, name, type, location, subscriptionId, resourceGroup, kind, tags, serviceId, serviceName, serviceTypeEnum, groupId, subnetId, subnetName, stateEnum, privateIP = coalesce(ipAddress, \" \"), sortedIPs = parse_ipv6(tostring(ipAddress)), statusIcon, ipBladeParameters, vnetParameters\r\n| where (type !~ ('dynatrace.observability/monitors'))\r\n| where (type !~ ('nginx.nginxplus/nginxdeployments'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portal/extensions/deployments'))\r\n| where (type !~ ('microsoft.portal/extensions'))\r\n| where (type !~ ('microsoft.portal/extensions/slots'))\r\n| where (type !~ ('microsoft.portal/extensions/versions'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.network/dnsforwardingrulesets'))\r\n| where (type !~ ('microsoft.network/dnsresolvers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.communication/emailservices/domains'))\r\n| where (type !~ ('microsoft.communication/emailservices'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters/sessionclusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.hpcworkbench/instances'))\r\n| where (type !~ ('microsoft.scvmm/vmmservers'))\r\n| where (type !~ ('microsoft.connectedvmwarevsphere/vcenters'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/assets'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/tests'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/executionplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/testplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts/contacts'))\r\n| where (type !~ ('microsoft.orbital/contactprofiles'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts'))\r\n| where (type !~ ('microsoft.azurepercept/accounts'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.playfab/playeraccountpools'))\r\n| where (type !~ ('microsoft.playfab/playfabresources'))\r\n| where (type !~ ('microsoft.playfab/titles'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.billingbenefits/savingsplanorders/savingsplans'))\r\n| where (type !~ ('microsoft.billingbenefits/savingsplanorders'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/applicationinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/centralinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/databaseinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.testbase/testbaseaccounts/packages'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/datanetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/sites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcorecontrolplanes'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/services'))\r\n| where (type !~ ('microsoft.mobilenetwork/sims'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/simpolicies'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/slices'))\r\n| where (type !~ ('microsoft.workloads/monitors'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name,privateIP,serviceId,groupId,subnetName,statusIcon,location,subscriptionId,resourceGroup,tags\r\n| sort by (tolower(tostring(name))) asc",
                    "size": 2,
                    "title": "Private Endpoints",
                    "noDataMessage": "No Private Endpoints exist!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "privateIP",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "serviceId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "statusIcon",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "8",
                                "representation": "Available",
                                "text": "Approved"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "252",
                                "representation": "3",
                                "text": "Rejected"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "88",
                                "representation": "2",
                                "text": "Pending"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "131",
                                "representation": "disabled",
                                "text": "Disconnected"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "1",
                                "text": "Unknown"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        },
                        {
                          "columnId": "privateIP",
                          "label": "IP address"
                        },
                        {
                          "columnId": "serviceId",
                          "label": "Resource"
                        },
                        {
                          "columnId": "groupId",
                          "label": "Sub-Resource"
                        },
                        {
                          "columnId": "subnetName",
                          "label": "Subnt"
                        },
                        {
                          "columnId": "statusIcon",
                          "label": "Connection State"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "pvtendpoint"
                    }
                  ],
                  "name": "query - PrivateEndpoint",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/privatednszones\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, provisioningState=properties.provisioningState, maxNumberOfRecordSets=properties.maxNumberOfRecordSets, RecordSets=properties.numberOfRecordSets, MaxVNetLinksWithRegistration=properties.maxNumberOfVirtualNetworkLinksWithRegistration, VNetLinksWithRegistration=properties.numberOfVirtualNetworkLinksWithRegistration, MaxVNetLinks=properties.maxNumberOfVirtualNetworkLinks, VNetLinks=properties.numberOfVirtualNetworkLinks, location, resourceGroup",
                    "size": 2,
                    "title": "Private DNS zone",
                    "noDataMessage": "No Private DNS zone",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    {
                      "parameterName": "network",
                      "comparison": "isEqualTo",
                      "value": "pvtdnszone"
                    }
                  ],
                  "name": "query - Private DNS zone",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "network"
            },
            "name": "group - Network Overview"
          },
          {
            "type": 1,
            "content": {
              "json": "### Orphan Resources Group"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Orphan Resources group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "a1884098-f6e4-4446-8767-8d9b654e2dd1",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphaned NIC",
                        "subTarget": "orphannics",
                        "preText": "",
                        "style": "primary"
                      },
                      {
                        "id": "cee17b34-de10-4c50-a0c1-5341667e77b3",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphaned NSG",
                        "subTarget": "orphannsg",
                        "style": "link"
                      },
                      {
                        "id": "ecabb454-8aba-4360-afa5-aa92ca31f050",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphaned Disk",
                        "subTarget": "orphandisks",
                        "style": "link"
                      },
                      {
                        "id": "a6b7ca59-c514-4075-ae33-40f54ddbf943",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphaned ASG",
                        "subTarget": "orphanasgs",
                        "style": "link"
                      },
                      {
                        "id": "6998b068-79f2-4998-9343-809b2c109db7",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphan Load Balancer",
                        "subTarget": "orphanlb",
                        "style": "link"
                      },
                      {
                        "id": "70c95e88-d0aa-4caf-b4d9-6797ea111d83",
                        "cellValue": "housekeeping",
                        "linkTarget": "parameter",
                        "linkLabel": "Orphan ANF Pool",
                        "subTarget": "orphananfpool",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "housekeeping"
                  },
                  "name": "links - Orphan Resources Overview"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Azure Resources must be reviewed and discussed with the technical owner of resources before deletion.",
                    "style": "warning"
                  },
                  "customWidth": "30",
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "housekeeping"
                  },
                  "name": "text - 8"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Listed NICs are not attached to any VM or ANF pool. Please, review incase of Private Endpoints and DR NICs before deletion."
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphannics"
                    }
                  ],
                  "name": "text - Orphan NIC Message"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Run query to see results.\r\nresources\r\n| where type =~ \"microsoft.network/networkinterfaces\"\r\n| extend networkSecurityGroup = coalesce(extract('Microsoft.Network/networkSecurityGroups/(.*)', 1, tostring(properties.networkSecurityGroup.id)), '-')\r\n| extend virtualMachineName = extract('Microsoft.Compute/virtualMachines/(.*)', 1, tostring(properties.virtualMachine.id))\r\n| extend hostedWorkloads = properties.hostedWorkloads\r\n| extend hostedWorkloadCount = array_length(properties.hostedWorkloads)\r\n| extend hostedWorkloadName = iff(hostedWorkloads[0] contains 'volumes',\r\n                                    strcat(hostedWorkloadCount, ' ', 'Azure NetApp Files volumes'),\r\n                                    coalesce(split(hostedWorkloads[0], '/')[(-1)], '-'))\r\n| extend attachedTo = iff(isnotempty(virtualMachineName), virtualMachineName, hostedWorkloadName)\r\n| extend macAddress = coalesce(properties.macAddress, '-')\r\n| extend ipConfigCount=array_length(properties.ipConfigurations)\r\n| extend ipConfigurations=iff(ipConfigCount == 0, dynamic(null), properties.ipConfigurations)\r\n| mvexpand ipConfiguration=ipConfigurations limit 400\r\n| extend isPrimary = (ipConfigCount == 1 or ipConfiguration.properties.primary =~ 'true' or isempty(ipConfiguration))\r\n| extend primarySubnetIds = iff(isPrimary, ipConfiguration.properties.subnet.id, '')\r\n| extend primaryPublicIpAddressIds = iff(isPrimary, tolower(ipConfiguration.properties.publicIPAddress.id), '')\r\n| extend primaryIPprivateIPs = iff(isPrimary, ipConfiguration.properties.privateIPAddress, '-')\r\n| extend secondaryIPprivateIPs = iff(not(isPrimary), ipConfiguration.properties.privateIPAddress, '')\r\n| summarize subnetId=any(primarySubnetIds),\r\n            publicIpAddressId=any(primaryPublicIpAddressIds),\r\n            primaryPrivateIPAddress=any(primaryIPprivateIPs),\r\n            secondaryPrivateIPAddress=makeset(secondaryIPprivateIPs),\r\n            tags=any(tags)\r\n            by name, id, type, kind, location, resourceGroup, subscriptionId, networkSecurityGroup, attachedTo, macAddress\r\n| extend secondaryPrivateIPAddress = case(isempty(secondaryPrivateIPAddress[0]), array_slice(secondaryPrivateIPAddress,1,-1),\r\n                                        isempty(secondaryPrivateIPAddress[(-1)]), array_slice(secondaryPrivateIPAddress,0,-2),\r\n                                        secondaryPrivateIPAddress)\r\n| extend secondaryPrivateIPAddress = strcat_array(secondaryPrivateIPAddress, ',')\r\n| extend secondaryPrivateIPAddress = coalesce(replace(',,', ',', secondaryPrivateIPAddress), '-')\r\n| parse kind=regex subnetId with 'Microsoft.Network/virtualNetworks/' virtualNetwork '/subnets/' subnet\r\n| join kind=leftouter hint.strategy=shuffle (data\r\n| where type =~ 'microsoft.network/publicipaddresses'\r\n| extend publicIpAddress = tostring(properties.ipAddress)\r\n| project publicIpAddressId=tolower(id), publicIpAddress)\r\n    on publicIpAddressId\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name,\r\n        id,\r\n        type,\r\n        kind,\r\n        location,\r\n        resourceGroup,\r\n        subscriptionId,\r\n        tags,\r\n        networkSecurityGroup,\r\n        attachedTo,\r\n        macAddress,\r\n        virtualNetwork=coalesce(virtualNetwork, '-'),\r\n        subnet=coalesce(subnet, '-'),\r\n        primaryPrivateIPAddress,\r\n        secondaryPrivateIPAddress,\r\n        publicIpAddress=coalesce(publicIpAddress, '-')\r\n| where (type !~ ('dynatrace.observability/monitors'))\r\n| where (type !~ ('nginx.nginxplus/nginxdeployments'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portal/extensions/deployments'))\r\n| where (type !~ ('microsoft.portal/extensions'))\r\n| where (type !~ ('microsoft.portal/extensions/slots'))\r\n| where (type !~ ('microsoft.portal/extensions/versions'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.network/dnsforwardingrulesets'))\r\n| where (type !~ ('microsoft.network/dnsresolvers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.communication/emailservices'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters/sessionclusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.hpcworkbench/instances'))\r\n| where (type !~ ('microsoft.scvmm/vmmservers'))\r\n| where (type !~ ('microsoft.connectedvmwarevsphere/vcenters'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/assets'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/tests'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/executionplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/testplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts/contacts'))\r\n| where (type !~ ('microsoft.orbital/contactprofiles'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts'))\r\n| where (type !~ ('microsoft.azurepercept/accounts'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.playfab/playeraccountpools'))\r\n| where (type !~ ('microsoft.playfab/playfabresources'))\r\n| where (type !~ ('microsoft.playfab/titles'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/applicationinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/centralinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/databaseinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/sites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcorecontrolplanes'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/services'))\r\n| where (type !~ ('microsoft.mobilenetwork/sims'))\r\n| where (type !~ ('microsoft.workloads/monitors'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where attachedTo == '-'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name,virtualNetwork,primaryPrivateIPAddress, resourceGroup, id,type, location,subscriptionId,tags\r\n| sort by (tolower(tostring(name))) asc",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "Azure Orphaned NICs",
                    "noDataMessage": "No Orphan NIS's found - Well done!",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "id"
                      },
                      "labelSettings": [
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "id",
                          "label": "NIC Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphannics"
                    }
                  ],
                  "name": "query - Azure Orphaned NICs"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 When you delete a virtual machine (VM) in Azure, by default, any disks that are attached to the VM aren't deleted. This feature helps to prevent data loss due to the unintentional deletion of VMs. After a VM is deleted, you will continue to pay for unattached disks."
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphandisks"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - Orphan Disk Help"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources  \r\n| where type contains \"microsoft.compute/disks\" \r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" \r\n    and (diskState == 'Unattached' or diskState != 'ActiveSAS')\r\n| project id, diskState, resourceGroup, location, subscriptionId, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB)",
                    "size": 2,
                    "title": "Azure Orphaned Disks",
                    "noDataMessage": "No Orphan Disks, Well done!",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Disk Name"
                        },
                        {
                          "columnId": "diskState",
                          "label": "Disk State"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure region"
                        },
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "disk_tier",
                          "label": "Disk Tier"
                        },
                        {
                          "columnId": "disk_size_GB",
                          "label": "Disk Size"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphandisks"
                    }
                  ],
                  "name": "query - Orphan Disks",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project Resource=id, resourceGroup, subscriptionId, location",
                    "size": 2,
                    "title": "Azure Orphan NSG's",
                    "noDataMessage": "No Orphan NSG found, well done!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Resource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Resource",
                          "label": "NSG Name"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphannsg"
                    }
                  ],
                  "name": "query - Orphan NSG",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/applicationsecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.networksecuritygroups)\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project Resource=id, resourceGroup, subscriptionId, location",
                    "size": 2,
                    "title": "Azure Orphan ASGs",
                    "noDataMessage": "No Orphan ASG found, well done!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Resource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Resource",
                          "label": "ASG Name"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphanasgs"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Azure Compute Orphan ASGs",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'microsoft.network/loadbalancers'\r\n| extend loadBalancingRulesCount = array_length(properties.loadBalancingRules)\r\n| extend loadBalancingRule = properties.loadBalancingRules[0]\r\n| extend loadBalancingRuleName = tostring(loadBalancingRule.name)\r\n| extend protocol = tostring(loadBalancingRule.properties.protocol)\r\n| extend frontendPort = tostring(loadBalancingRule.properties.frontendPort)\r\n| extend backendPort = tostring(loadBalancingRule.properties.backendPort)\r\n| extend displayNameWithSameFrontendBackendSplit0 = split('{0}/{1}', '{0}')\r\n| extend displayNameWithSameFrontendBackendValue0 = strcat(displayNameWithSameFrontendBackendSplit0[0], protocol, displayNameWithSameFrontendBackendSplit0[1])\r\n| extend displayNameWithSameFrontendBackendSplit1 = split(displayNameWithSameFrontendBackendValue0, '{1}')\r\n| extend displayNameWithSameFrontendBackend = strcat(displayNameWithSameFrontendBackendSplit1[0], frontendPort, displayNameWithSameFrontendBackendSplit1[1])\r\n| extend displayNameWithDifferentFrontendBackendSplit0 = split('{0}/{1} to {2}/{3}', '{0}')\r\n| extend displayNameWithDifferentFrontendBackendValue0 = strcat(displayNameWithDifferentFrontendBackendSplit0[0], protocol, displayNameWithDifferentFrontendBackendSplit0[1])\r\n| extend displayNameWithDifferentFrontendBackendSplit1 = split(displayNameWithDifferentFrontendBackendValue0, '{1}')\r\n| extend displayNameWithDifferentFrontendBackendValue1 = strcat(displayNameWithDifferentFrontendBackendSplit1[0], frontendPort, displayNameWithDifferentFrontendBackendSplit1[1])\r\n| extend displayNameWithDifferentFrontendBackendSplit2 = split(displayNameWithDifferentFrontendBackendValue1, '{2}')\r\n| extend displayNameWithDifferentFrontendBackendValue2 = strcat(displayNameWithDifferentFrontendBackendSplit2[0], protocol, displayNameWithDifferentFrontendBackendSplit2[1])\r\n| extend displayNameWithDifferentFrontendBackendSplit3 = split(displayNameWithDifferentFrontendBackendValue2, '{3}')\r\n| extend displayNameWithDifferentFrontendBackend = strcat(displayNameWithDifferentFrontendBackendSplit3[0], backendPort, displayNameWithDifferentFrontendBackendSplit3[1])\r\n| extend nonEmptyProtocolPortDisplayName = iff(frontendPort =~ backendPort, displayNameWithSameFrontendBackend, displayNameWithDifferentFrontendBackend)\r\n| extend ruleProtocolPortDisplayName = iff(isnotempty(protocol) and isnotempty(frontendPort) and isnotempty(backendPort), nonEmptyProtocolPortDisplayName, loadBalancingRuleName)\r\n| extend multipleLoadBalancingRulesDisplayNameSplit0 = split('{0} {1}', '{0}')\r\n| extend multipleLoadBalancingRulesDisplayNameValue0 = strcat(multipleLoadBalancingRulesDisplayNameSplit0[0], loadBalancingRulesCount, multipleLoadBalancingRulesDisplayNameSplit0[1])\r\n| extend multipleLoadBalancingRulesDisplayNameSplit1 = split(multipleLoadBalancingRulesDisplayNameValue0, '{1}')\r\n| extend multipleLoadBalancingRulesDisplayName = strcat(multipleLoadBalancingRulesDisplayNameSplit1[0], 'rules', multipleLoadBalancingRulesDisplayNameSplit1[1])\r\n| extend loadBalancingRules = case(loadBalancingRulesCount==0 or isempty(loadBalancingRule), '-',\r\n                                    loadBalancingRulesCount==1, ruleProtocolPortDisplayName,\r\n                                    multipleLoadBalancingRulesDisplayName)\r\n| extend backendAddressPoolsCount = array_length(properties.backendAddressPools)\r\n| extend backendAddressPool = properties.backendAddressPools[0]\r\n| extend backendAddressPoolName = tostring(backendAddressPool.name)\r\n| extend virtualMachineCount = array_length(backendAddressPool.properties.backendIPConfigurations)\r\n| extend singleVirtualMachineDisplayNameSplit0 = split('{0} (1 virtual machine)', '{0}')\r\n| extend singleVirtualMachineDisplayName = strcat(singleVirtualMachineDisplayNameSplit0[0], backendAddressPoolName, singleVirtualMachineDisplayNameSplit0[1])\r\n| extend multipleVirtualMachineDisplayNameSplit0 = split('{0} ({1} virtual machines)', '{0}')\r\n| extend multipleVirtualMachineDisplayNameValue0 = strcat(multipleVirtualMachineDisplayNameSplit0[0], backendAddressPoolName, multipleVirtualMachineDisplayNameSplit0[1])\r\n| extend multipleVirtualMachineDisplayNameSplit1 = split(multipleVirtualMachineDisplayNameValue0, '{1}')\r\n| extend multipleVirtualMachineDisplayName = strcat(multipleVirtualMachineDisplayNameSplit1[0], virtualMachineCount, multipleVirtualMachineDisplayNameSplit1[1])\r\n| extend singleBackendAddressPoolDisplayName = case(isempty(backendAddressPoolName), '-',\r\n                                                    virtualMachineCount == 1, singleVirtualMachineDisplayName,\r\n                                                    virtualMachineCount > 1, multipleVirtualMachineDisplayName,\r\n                                                    backendAddressPoolName)\r\n| extend multipleBackendAddressPoolDisplayNameSplit0 = split('{0} {1}', '{0}')\r\n| extend multipleBackendAddressPoolDisplayNameValue0 = strcat(multipleBackendAddressPoolDisplayNameSplit0[0], backendAddressPoolsCount, multipleBackendAddressPoolDisplayNameSplit0[1])\r\n| extend multipleBackendAddressPoolDisplayNameSplit1 = split(multipleBackendAddressPoolDisplayNameValue0, '{1}')\r\n| extend multipleBackendAddressPoolDisplayName = strcat(multipleBackendAddressPoolDisplayNameSplit1[0], 'backend pools', multipleBackendAddressPoolDisplayNameSplit1[1])\r\n| extend backendPools = case(backendAddressPoolsCount==0 or isempty(backendAddressPool), '-',\r\n                            backendAddressPoolsCount==1, singleBackendAddressPoolDisplayName,\r\n                            multipleBackendAddressPoolDisplayName)\r\n| extend probesCount = array_length(properties.probes)\r\n| extend probe = properties.probes[0]\r\n| extend probeName = tostring(probe.name)\r\n| extend probeProtocol = tostring(toupper(probe.properties.protocol))\r\n| extend probePort = tostring(probe.properties.port)\r\n| extend probePath = tostring(probe.properties.requestPath)\r\n| extend probePath = iff(strlen(probePath)>1 and substring(probePath,0,1)=~'/', substring(probePath,1), probePath)\r\n| extend probeNameWithPathSplit0 = split('{0} ({1}:{2}/{3})', '{0}')\r\n| extend probeNameWithPathValue0 = strcat(probeNameWithPathSplit0[0], probeName, probeNameWithPathSplit0[1])\r\n| extend probeNameWithPathSplit1 = split(probeNameWithPathValue0, '{1}')\r\n| extend probeNameWithPathValue1 = strcat(probeNameWithPathSplit1[0], probeProtocol, probeNameWithPathSplit1[1])\r\n| extend probeNameWithPathSplit2 = split(probeNameWithPathValue1, '{2}')\r\n| extend probeNameWithPathValue2 = strcat(probeNameWithPathSplit2[0], probePort, probeNameWithPathSplit2[1])\r\n| extend probeNameWithPathSplit3 = split(probeNameWithPathValue2, '{3}')\r\n| extend probeNameWithPath = strcat(probeNameWithPathSplit3[0], probePath, probeNameWithPathSplit3[1])\r\n| extend probeNameWithOutPathSplit0 = split('{0} ({1}:{2})', '{0}')\r\n| extend probeNameWithOutPathValue0 = strcat(probeNameWithOutPathSplit0[0], probeName, probeNameWithOutPathSplit0[1])\r\n| extend probeNameWithOutPathSplit1 = split(probeNameWithOutPathValue0, '{1}')\r\n| extend probeNameWithOutPathValue1 = strcat(probeNameWithOutPathSplit1[0], probeProtocol, probeNameWithOutPathSplit1[1])\r\n| extend probeNameWithOutPathSplit2 = split(probeNameWithOutPathValue1, '{2}')\r\n| extend probeNameWithOutPath = strcat(probeNameWithOutPathSplit2[0], probePort, probeNameWithOutPathSplit2[1])\r\n| extend nonEmptyProbeDisplayName = iff(isempty(probePath) or probePath=~'/', probeNameWithOutPath, probeNameWithPath)\r\n| extend singleProbeDisplayName = iff(isnotempty(probe) and isnotempty(probeName) and isnotempty(probeProtocol) and isnotempty(probePort), nonEmptyProbeDisplayName, probeName)\r\n| extend multipleProbeDisplayNameSplit0 = split('{0} {1}', '{0}')\r\n| extend multipleProbeDisplayNameValue0 = strcat(multipleProbeDisplayNameSplit0[0], probesCount, multipleProbeDisplayNameSplit0[1])\r\n| extend multipleProbeDisplayNameSplit1 = split(multipleProbeDisplayNameValue0, '{1}')\r\n| extend multipleProbeDisplayName = strcat(multipleProbeDisplayNameSplit1[0], 'probes', multipleProbeDisplayNameSplit1[1])\r\n| extend healthProbes = case(probesCount==0 or isempty(probe), '-',\r\n                            probesCount==1, singleProbeDisplayName,\r\n                            multipleProbeDisplayName)\r\n| extend natRulesCount = array_length(properties.inboundNatPools)\r\n| extend natRulesDisplaySplit0 = split('{0} inbound', '{0}')\r\n| extend natRulesDisplay = strcat(natRulesDisplaySplit0[0], natRulesCount, natRulesDisplaySplit0[1])\r\n| extend natRules = iff(isempty(properties.inboundNatPools) or natRulesCount==0, '-', natRulesDisplay)\r\n| extend skuName = tostring(sku.name)\r\n| extend sku = case(sku.name =~ 'Basic', 'Basic',\r\n                    sku.name =~ 'standard', 'Standard',\r\n                    '')\r\n| where backendPools=~'-'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name, id, sku, location, resourceGroup, loadBalancingRules, healthProbes, natRules",
                    "size": 2,
                    "title": "Orphan Load Balancer without Backend pool",
                    "noDataMessage": "No Orphan LB found, Great Job!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Load Balancer"
                        },
                        {
                          "columnId": "sku",
                          "label": "SKU"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "loadBalancingRules",
                          "label": "LB Rules"
                        },
                        {
                          "columnId": "healthProbes",
                          "label": "Health Probes"
                        },
                        {
                          "columnId": "natRules",
                          "label": "NAT Rules"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphanlb"
                    }
                  ],
                  "name": "query - Orphan Load Balancer",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools\"\r\n| project id, ANFAccount_Name=tostring(split(name,\"/\",0)[0]), ANFPool_Name=tostring(split(name,\"/\",1)[0]), serviceLevel=tostring(properties.serviceLevel) , usageThreshold = tostring(properties.size), qosType= tostring(properties.qosType), coolAccess= tostring(properties.coolAccess) ,location, resourceGroup\r\n| join kind=leftouter (\r\nresources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools/volumes\"\r\n| project ANFAccount_Name=tostring(split(name,\"/\",0)[0]), ANFPool_Name=tostring(split(name,\"/\",1)[0]) ,volume_name = tostring(split(name,\"/\",2)[0]))\r\non ANFPool_Name\r\n| where isempty( volume_name)\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, ANFAccount_Name, ANFPool_Name, serviceLevel, usageThreshold, qosType, coolAccess, resourceGroup, location",
                    "size": 0,
                    "title": "Orphan ANF Capacity Pool",
                    "noDataMessage": "No Orphan ANF Capacity Pool found, Great job!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "ANFPool_Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "usageThreshold",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "ANF Pool Name"
                        },
                        {
                          "columnId": "serviceLevel",
                          "label": "Service Level"
                        },
                        {
                          "columnId": "usageThreshold",
                          "label": "Quota"
                        },
                        {
                          "columnId": "qosType",
                          "label": "QoS Type"
                        },
                        {
                          "columnId": "coolAccess",
                          "label": "Cool Access"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "housekeeping"
                    },
                    {
                      "parameterName": "housekeeping",
                      "comparison": "isEqualTo",
                      "value": "orphananfpool"
                    }
                  ],
                  "name": "query - ANF Capacity Pool",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "housekeeping"
            },
            "name": "group - Orphan Resources Overview"
          },
          {
            "type": 1,
            "content": {
              "json": "### Config Checks"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Config Checks Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "d5d59394-e91e-4385-bae2-27ecdc506398",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Accelerated Networking",
                        "subTarget": "accn",
                        "style": "link"
                      },
                      {
                        "id": "d4d9e17b-e016-4c6a-810a-f00c9a60d864",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Public IP",
                        "subTarget": "publicip",
                        "style": "link"
                      },
                      {
                        "id": "4b72f572-6109-4bb1-a3fa-bff85e9e69e5",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Backup",
                        "subTarget": "backup",
                        "style": "link"
                      },
                      {
                        "id": "2c2260d0-185a-4438-a7f8-a05337ac5e83",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Blob",
                        "subTarget": "blob",
                        "style": "link"
                      },
                      {
                        "id": "21e722be-71dd-4eec-8c93-75b2a731251c",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancer",
                        "subTarget": "stndlb",
                        "style": "link"
                      },
                      {
                        "id": "44c2545a-dde3-4f39-a4ce-400e0dfef049",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Application Gateway",
                        "subTarget": "appgw",
                        "style": "link"
                      },
                      {
                        "id": "4c4eed39-04d3-4c11-9443-14c3121b7083",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure NetApp Files",
                        "subTarget": "anf",
                        "style": "link"
                      },
                      {
                        "id": "22ef6371-742e-4737-a127-564fdb9fd4be",
                        "cellValue": "configchecks",
                        "linkTarget": "parameter",
                        "linkLabel": "VM's in Deallocated Status",
                        "subTarget": "deallocated",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "configchecks"
                  },
                  "name": "links - Configuration Checks"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources \r\n| where type =~ 'microsoft.compute/virtualmachines' \r\n| extend nics=array_length(properties.networkProfile.networkInterfaces) \r\n| mv-expand nic=properties.networkProfile.networkInterfaces \r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n//| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic) \r\n| project id, vmName = name, az = tostring(zones), resourceGroup, vmSize = tostring(properties.hardwareProfile.vmSize), AvSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0]), ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]),  nicId = tostring(nic.id)\r\n| join kind=leftouter ( \r\n  Resources \r\n  | where type =~ 'microsoft.network/networkinterfaces' \r\n  | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n  | mv-expand ipconfig=properties.ipConfigurations \r\n  //| where ipconfig.properties.primary =~ 'true' \r\n  | where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n  | project nicId = id, ipaddress = tostring(ipconfig.properties.privateIPAddress), resourceGroup, AcceleratedNetworkingOn = tostring(properties.enableAcceleratedNetworking)) on nicId \r\n| summarize by id, nicId, vmName,vmSize,AcceleratedNetworkingOn,ipaddress, AvSet, ppg,  az, resourceGroup",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Check for Accelerated Networking",
                    "noDataMessage": "No output available from the Query",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "nicId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "vmName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "AcceleratedNetworkingOn",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "Available",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "2",
                                "text": "{0}  Consider enabling Accelerated Networking"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "armActionContext": {
                              "headers": [],
                              "params": [],
                              "httpMethod": "POST",
                              "description": "# ARM actions can potentially modify resources.\n## Please use caution and include a confirmation message in this description when authoring this command."
                            }
                          }
                        },
                        {
                          "columnMatch": "ipaddress",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "AvSet",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "Sev2",
                                "text": "{0}VM not part of AvSet"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "ppg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "Sev2",
                                "text": "VM not part of PPG"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "az",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "Sev2",
                                "text": "VM not part of AvZone"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Sev3",
                                "text": "Zonal Deployment"
                              }
                            ],
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "nicId",
                          "label": "NIC name"
                        },
                        {
                          "columnId": "vmName",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "vmSize",
                          "label": "VM SKU"
                        },
                        {
                          "columnId": "AcceleratedNetworkingOn",
                          "label": "Accelerated Networking State"
                        },
                        {
                          "columnId": "ppg",
                          "label": "PPG"
                        },
                        {
                          "columnId": "az",
                          "label": "AZone"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "accn"
                    }
                  ],
                  "name": "query - Accelerated Networking",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n    | where type =~ 'microsoft.network/publicipaddresses' and isnotempty(properties.ipAddress)",
                    "size": 0,
                    "title": "Azure resources with Public IP",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tenantId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "managedBy",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "sku",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "plan",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "properties",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "identity",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "extendedLocation",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "id"
                      },
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "IP Resource Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "publicip"
                    }
                  ],
                  "name": "query - Check for resources with Public IP",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "feba7b07-7dd8-4eaa-9a94-5ad724b4175c",
                        "cellValue": "backup",
                        "linkTarget": "parameter",
                        "linkLabel": "Backup Overview",
                        "subTarget": "bckoverview",
                        "postText": "VM Backp Status Overview",
                        "style": "link"
                      },
                      {
                        "id": "8e538080-7adc-4509-866d-4eebd8a194db",
                        "cellValue": "backup",
                        "linkTarget": "parameter",
                        "linkLabel": "Backup List",
                        "subTarget": "bcklist",
                        "postText": "VM Backup status List",
                        "style": "link"
                      },
                      {
                        "id": "b9f629f4-95f9-4fab-85e4-3d8344a5e0eb",
                        "cellValue": "backup",
                        "linkTarget": "parameter",
                        "linkLabel": "Backup Policy",
                        "subTarget": "bckpolicy",
                        "postText": "Backup Policies implemented",
                        "style": "link"
                      },
                      {
                        "id": "5c413bec-2fac-4913-b79d-4ef431c4a193",
                        "cellValue": "backup",
                        "linkTarget": "parameter",
                        "linkLabel": "VM's with no backup",
                        "subTarget": "nobackup",
                        "postText": "Virtual Machine with no backup configuration",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "backup"
                    }
                  ],
                  "name": "links - Backup Overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type in~ ('microsoft.compute/virtualmachines','microsoft.classiccompute/virtualmachines') \r\n| extend resourceId=tolower(id) \r\n| join kind = leftouter ( RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| project resourceId = tolower(tostring(properties.sourceResourceId)), backupItemid = id, isBackedUp = isnotempty(id) ) on resourceId \r\n| extend isProtected = isnotempty(backupItemid)\r\n| where (isProtected == (0))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id,name,resourceGroup,location,tags",
                    "size": 0,
                    "title": "VM's with no Azure backup",
                    "noDataMessage": "Well done! All VM's are configured with backup.",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "backup"
                    },
                    {
                      "parameterName": "backup",
                      "comparison": "isEqualTo",
                      "value": "nobackup"
                    }
                  ],
                  "name": "query - VM's with no backup",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "RecoveryServicesResources\r\n| where type == 'microsoft.recoveryservices/vaults/backuppolicies'\r\n| extend vaultName = case(type == 'microsoft.recoveryservices/vaults/backuppolicies', split(split(id, 'microsoft.recoveryservices/vaults/')[1],'/')[0],type == 'microsoft.recoveryservices/vaults/backuppolicies', split(split(id, 'microsoft.recoveryservices/vaults/')[1],'/')[0],'--')\r\n| extend datasourceType = case(type == 'microsoft.recoveryservices/vaults/backuppolicies', properties.backupManagementType,type == 'microsoft.dataprotection/backupVaults/backupPolicies',properties.datasourceTypes[0],'--')\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id,name,vaultName,resourceGroup,properties,datasourceType\r\n| where datasourceType == 'AzureIaasVM'",
                    "size": 0,
                    "title": "List all Backup policies used for Azure VMs",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "vaultName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "datasourceType",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Link to Backup Policy"
                        },
                        {
                          "columnId": "name",
                          "label": "Name of Backup Policy"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Name"
                        },
                        {
                          "columnId": "properties",
                          "label": "Retention Policy"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "backup"
                    },
                    {
                      "parameterName": "backup",
                      "comparison": "isEqualTo",
                      "value": "bckpolicy"
                    }
                  ],
                  "name": "query - List all Backup policies used for Azure VMs",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "dca0d53c-2257-4de7-bd15-1ea504d9d0ee",
                        "cellValue": "anf",
                        "linkTarget": "parameter",
                        "linkLabel": "Overview",
                        "subTarget": "anfoverview",
                        "preText": "ANF Overview",
                        "style": "link"
                      },
                      {
                        "id": "11241f3e-fa3e-4042-b5d9-00fdbd04e7d1",
                        "cellValue": "anf",
                        "linkTarget": "parameter",
                        "linkLabel": "ANF Resources",
                        "subTarget": "anfresources",
                        "preText": "ANF Monitor",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    }
                  ],
                  "name": "links - ANF Overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "where type has \"microsoft.netapp\"\r\n| extend type = case(\r\n\ttype == 'microsoft.netapp/netappaccounts', \"ANF Accounts\",\r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools', \"Capacity Pools\", \r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools/volumes', \"Volumes\", \r\n\ttype == 'microsoft.netapp/netappaccounts/snapshotpolicies', \"snapshotpolicies\", \r\n\ttype == 'microsoft.netapp/netappaccounts/backuppolicies', \"backuppolicies\",\r\n\tstrcat(\"Not Translated: \", type))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize count() by type",
                    "size": 2,
                    "title": "ANF Account Overview",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tenantId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "managedBy",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "plan",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "properties",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "identity",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "zones",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "extendedLocation",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "type",
                          "label": "Type of Storage"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfoverview"
                    }
                  ],
                  "name": "query - ANF Account Overview"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{netappaccounts}"
                    ],
                    "parameters": [
                      {
                        "id": "8ea902a2-94ac-4cc3-ab10-295564472aa5",
                        "version": "KqlParameterItem/1.0",
                        "name": "Show_ANF_Metrics",
                        "type": 2,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"Yes\\\", \\\"No\\\"]\",\"transformers\":null}",
                        "value": null,
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 8
                      },
                      {
                        "id": "31b5031c-a2a6-4e71-8225-7d379a35f61e",
                        "version": "KqlParameterItem/1.0",
                        "name": "netappaccounts",
                        "label": "Netapp Accounts",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts\"\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "7fc91be8-c2d1-40ba-8244-2ce6a875bf26",
                        "version": "KqlParameterItem/1.0",
                        "name": "netappcapacitypool",
                        "label": "ANF Capacity Pool",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools\"\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{netappaccounts}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "faa359a8-8409-4219-931f-9b1b07913487",
                        "version": "KqlParameterItem/1.0",
                        "name": "netappvolumes",
                        "label": "ANF Volumes",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools/volumes\"\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{netappcapacitypool}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1",
                            "value::5",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "6de57615-ccc6-45c4-aff6-a0729400b83d",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 43200000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5be24d67-b45d-4ef0-949b-52791fef7c74",
                        "version": "KqlParameterItem/1.0",
                        "name": "Message",
                        "type": 1,
                        "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools/volumes\"\r\n| summarize Selected = countif(id in ({Resources:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    }
                  ],
                  "name": "parameters - Show ANF Metrics"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "b1812928-402c-443d-8d79-9cefcb459256",
                        "cellValue": "anfresources",
                        "linkTarget": "parameter",
                        "linkLabel": "ANF Capacity Pool",
                        "subTarget": "anfcapacity",
                        "style": "link"
                      },
                      {
                        "id": "210b7b22-caa8-42ae-96f0-e01fa01d3b2f",
                        "cellValue": "anfresources",
                        "linkTarget": "parameter",
                        "linkLabel": "ANF List",
                        "subTarget": "anflist",
                        "preText": "Monitor",
                        "style": "link"
                      },
                      {
                        "id": "0ef09999-47ab-4481-9d44-7aa5e1ca4562",
                        "cellValue": "anfresources",
                        "linkTarget": "parameter",
                        "linkLabel": "ANF Volume usage",
                        "subTarget": "anfvolusage",
                        "style": "link"
                      },
                      {
                        "id": "7f32b9e3-2934-4776-a95b-e59df1d14e7b",
                        "cellValue": "anfresources",
                        "linkTarget": "parameter",
                        "linkLabel": "ANF Monitor",
                        "subTarget": "anfmonitor",
                        "preText": "List",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    }
                  ],
                  "name": "links - 41"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook0036bbb1-2158-4932-a070-04edf41f7d58",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 0,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                    "metricScope": 0,
                    "resourceParameter": "netappvolumes",
                    "resourceIds": [
                      "{netappvolumes}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached",
                        "aggregation": 4
                      }
                    ],
                    "title": "ANF Volume Usage",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "75ch"
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "coldHot"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "38ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_bar_microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage_2",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Volume Name"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                          "label": "Used %"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage Timeline",
                          "label": "Percentage Volume Consumed Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                          "label": "Allocated"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize Timeline",
                          "label": "Volume allocated size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize",
                          "label": "Consumed"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize Timeline",
                          "label": "Volume Consumed Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize",
                          "label": "Volume snapshot size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize Timeline",
                          "label": "Volume snapshot size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached",
                          "label": "Throughput limit reached (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached Timeline",
                          "label": "Throughput limit reached Timeline"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_bar_microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage_2",
                        "sortOrder": 2
                      }
                    ],
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfvolusage"
                    },
                    {
                      "parameterName": "x",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "metric - ANF Volume Usage"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "where type == 'microsoft.netapp/netappaccounts/capacitypools/volumes'\r\n| project Name = id, Throughput = properties.throughputMibps",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "value::all"
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "x",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - ANF volumes throughput"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\",\"mergeType\":\"innerunique\",\"leftTable\":\"metric - ANF Volume Usage\",\"rightTable\":\"query - ANF volumes throughput\",\"leftColumn\":\"Name\",\"rightColumn\":\"Name\"}],\"projectRename\":[{\"originalName\":\"[metric - ANF Volume Usage].Name\",\"mergedName\":\"Volume Name\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage\",\"mergedName\":\"Used %\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize\",\"mergedName\":\"Allocated\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize\",\"mergedName\":\"Consumed\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize\",\"mergedName\":\"Snapshot consumed\",\"fromId\":\"unknown\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached\",\"mergedName\":\"Throughput limit reached (Average)\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[query - ANF volumes throughput].Throughput\",\"mergedName\":\"Throughput\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage Timeline\",\"mergedName\":\"Percentage Volume Consumed Size Timeline\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize Timeline\",\"mergedName\":\"Volume allocated size Timeline\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize Timeline\",\"mergedName\":\"Volume Consumed Size Timeline\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--ThroughputLimitReached Timeline\",\"mergedName\":\"Throughput limit reached Timeline\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[query - ANF volumes throughput].Name\",\"mergedName\":\"Name\",\"fromId\":\"7ba092f5-3702-49e9-88ca-a2ad2b91fc65\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize Timeline\",\"mergedName\":\"microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize Timeline\",\"fromId\":\"unknown\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput\",\"mergedName\":\"microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput\",\"fromId\":\"unknown\"},{\"originalName\":\"[metric - ANF Volume Usage].microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput Timeline\",\"mergedName\":\"microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput Timeline\",\"fromId\":\"unknown\"}]}",
                    "size": 0,
                    "title": "ANF Volume Usage",
                    "showExportToExcel": true,
                    "queryType": 7,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Volume Name",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "75ch"
                          }
                        },
                        {
                          "columnMatch": "Used %",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "coldHot"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Allocated",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Consumed",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 3,
                              "maximumFractionDigits": 3
                            }
                          }
                        },
                        {
                          "columnMatch": "Snapshot consumed",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Throughput limit reached (Average)",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "reached"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "not reached"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "more",
                                "text": "{0}{1}"
                              }
                            ],
                            "compositeBarSettings": {
                              "labelText": "",
                              "columnSettings": []
                            }
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Throughput",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 13,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Percentage Volume Consumed Size Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Volume allocated size Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Volume Consumed Size Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Throughput limit reached Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeSnapshotSize Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_link_Throughput_6",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Volume Name",
                          "label": "Volume name"
                        },
                        {
                          "columnId": "Used %",
                          "label": "Used %"
                        },
                        {
                          "columnId": "Allocated",
                          "label": "Allocated"
                        },
                        {
                          "columnId": "Consumed",
                          "label": "Consumed"
                        },
                        {
                          "columnId": "Throughput limit reached (Average)",
                          "label": "Throughput limit reached"
                        },
                        {
                          "columnId": "Throughput",
                          "label": "Configured throughput MiB/s"
                        },
                        {
                          "columnId": "Subscription",
                          "label": "Snapshot consumed"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_link_Throughput_6",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfvolusage"
                    }
                  ],
                  "showPin": false,
                  "name": "metric merge - ANF volume usage"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook8cc23744-eb37-4707-b99e-ca32f50bcd93",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 0,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools",
                    "metricScope": 0,
                    "resourceParameter": "netappcapacitypool",
                    "resourceIds": [
                      "{netappcapacitypool}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedUsed",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalSnapshotSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolProvisionedThroughput",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedToVolumeThroughput",
                        "aggregation": 4
                      }
                    ],
                    "title": "ANF Capacity Pool Review",
                    "resourceLimit": 1000,
                    "showRefreshButton": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedUsed",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedUsed Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalSnapshotSize",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "coldHot"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalSnapshotSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolProvisionedThroughput",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 47,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolProvisionedThroughput Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedToVolumeThroughput",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 13,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedToVolumeThroughput Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize",
                          "label": "Pool Allocated Size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize Timeline",
                          "label": "Pool Allocated Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize",
                          "label": "Pool Consumed Size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize Timeline",
                          "label": "Pool Consumed Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedUsed",
                          "label": "Pool Allocated To Volume Size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedUsed Timeline",
                          "label": "Pool Allocated To Volume Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalSnapshotSize",
                          "label": "Total Snapshot size for the pool (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalSnapshotSize Timeline",
                          "label": "Total Snapshot size for the pool Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolProvisionedThroughput",
                          "label": "Provisioned throughput for the pool (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolProvisionedThroughput Timeline",
                          "label": "Provisioned throughput for the pool Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedToVolumeThroughput",
                          "label": "Pool allocated throughput (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedToVolumeThroughput Timeline",
                          "label": "Pool allocated throughput Timeline"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfcapacity"
                    }
                  ],
                  "name": "metric - ANF Capacity Pool Review"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools\"\r\n| project ANFAccount = tostring(split(name,\"/\",0)[0]), capacitypool = tostring(split(name,\"/\",1)[0]), Tier=properties.serviceLevel, Size=properties.size, PoolProvisionedThroughput= properties.totalThroughputMibps,PoolAllocatedVolumeThroughput= properties.utilizedThroughputMibps, QoS=properties.qosType",
                    "size": 0,
                    "title": "ANF Capacity Pool Overview",
                    "noDataMessage": "No ANF deployment found",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{netappaccounts}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ANFAccount",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "35ch"
                          }
                        },
                        {
                          "columnMatch": "capacitypool",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "Size",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "PoolProvisionedThroughput",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          },
                          "numberFormat": {
                            "unit": 13,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "PoolAllocatedVolumeThroughput",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          },
                          "numberFormat": {
                            "unit": 13,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "QoS",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "Totalthroughpt",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "UsedThroughpt",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "ANFAccount",
                          "label": "ANF Account"
                        },
                        {
                          "columnId": "capacitypool",
                          "label": "Capacity Pool"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Tier"
                        },
                        {
                          "columnId": "Size",
                          "label": "Pool Size"
                        },
                        {
                          "columnId": "PoolProvisionedThroughput",
                          "label": "Total Throughput"
                        },
                        {
                          "columnId": "PoolAllocatedVolumeThroughput",
                          "label": "Throughput Assigned"
                        },
                        {
                          "columnId": "QoS",
                          "label": "QoS"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfcapacity"
                    }
                  ],
                  "name": "query - ANF Capacity Pool"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.netapp/netappaccounts/capacitypools/volumes\"\r\n| mv-expand rules = properties.rules\r\n| mv-expand mountTargets = properties.mountTargets\r\n| mv-expand protocolTypes=properties.protocolTypes\r\n| mv-expand dataProtection=properties.dataProtection\r\n| project subscriptionId\r\n, id\r\n, name\r\n, resourceGroup\r\n, location\r\n, serviceLevel=tostring(properties.serviceLevel)\r\n, usageThreshold = tostring(properties.usageThreshold)\r\n, usedBytes  = tostring(properties.usedBytes)\r\n, protocolType = tostring(protocolTypes)\r\n, ipAddress = tostring(mountTargets.ipAddress)\r\n, CRRD = tostring(split(dataProtection.replication,\"/\",12)[0])\r\n, RemoteRegion = tostring(split(dataProtection.replication,\"/\",12)[0])\r\n, CRR = tostring(dataProtection.replication)\r\n",
                    "size": 0,
                    "title": "ANF Volume List (Based on ANF Account)",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{netappaccounts}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "usageThreshold",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "usedBytes",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "resourceGroup",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "ANF Volume Name"
                        },
                        {
                          "columnId": "name",
                          "label": "ANF Resource"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "serviceLevel",
                          "label": "Service Level"
                        },
                        {
                          "columnId": "usageThreshold",
                          "label": "Quota"
                        },
                        {
                          "columnId": "usedBytes",
                          "label": "Used"
                        },
                        {
                          "columnId": "ipAddress",
                          "label": "IP Address"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "resourceGroup",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anflist"
                    }
                  ],
                  "name": "query - ANF Volume List",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook4000e463-d454-47d4-8b98-c0ecaaf6c3fc",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 0,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                    "metricScope": 0,
                    "resourceParameter": "netappvolumes",
                    "resourceIds": [
                      "{netappvolumes}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageReadLatency",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageWriteLatency",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput",
                        "aggregation": 4
                      }
                    ],
                    "title": "Azure NetApp Files Volumes Overview",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "Metric",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Aggregation",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Value",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Timeline",
                          "formatter": 9
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageReadLatency",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 23,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageWriteLatency",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 23,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 11,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Storage Name"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                          "label": "Volume allocated size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize Timeline",
                          "label": "Volume allocated size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage",
                          "label": "Percentage Volume Consumed Size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeConsumedSizePercentage Timeline",
                          "label": "Percentage Volume Consumed Size Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageReadLatency",
                          "label": "Average read latency (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageReadLatency Timeline",
                          "label": "Average read latency Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageWriteLatency",
                          "label": "Average write latency (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--AverageWriteLatency Timeline",
                          "label": "Average write latency Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput",
                          "label": "Total throughput (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--TotalThroughput Timeline",
                          "label": "Total throughput Timeline"
                        }
                      ]
                    },
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfmonitor"
                    }
                  ],
                  "name": "metric - ANF Volume Metrics"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook89f3b84f-a315-4a44-8fff-b295323c8cc3",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                    "metricScope": 0,
                    "resourceParameter": "netappvolumes",
                    "resourceIds": [
                      "{netappvolumes}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeAllocatedSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--VolumeLogicalSize",
                        "aggregation": 4
                      }
                    ],
                    "title": "ANF Volume Specific Metric",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfmonitor"
                    }
                  ],
                  "name": "metric - Volume Specific Metric"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook2337e51f-970e-4153-92fa-68a48f15f2d6",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools",
                    "metricScope": 0,
                    "resourceParameter": "netappcapacitypool",
                    "resourceIds": [
                      "{netappcapacitypool}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolAllocatedSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools--VolumePoolTotalLogicalSize",
                        "aggregation": 4
                      }
                    ],
                    "title": "Azure NetApp Files Capacity Pool Overview",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfmonitor"
                    }
                  ],
                  "name": "metric - Capacity Pool Overview"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook7248e1f5-89ff-412d-898f-7638d7c572e4",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                    "metricScope": 0,
                    "resourceParameter": "netappvolumes",
                    "resourceIds": [
                      "{netappvolumes}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--ReadIops",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--WriteIops",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg Volume Read/Write IOPS",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    },
                    "exportToExcelOptions": "all"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfmonitor"
                    }
                  ],
                  "name": "metric - Volume Read/Write IOPS"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookefea841e-dddc-4d13-840e-babf759afa9c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                    "metricScope": 0,
                    "resourceParameter": "netappvolumes",
                    "resourceIds": [
                      "{netappvolumes}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 43200000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationTotalTransferBytes",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationLastTransferSize",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.netapp/netappaccounts/capacitypools/volumes",
                        "metric": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationRelationshipProgress",
                        "aggregation": 4
                      }
                    ],
                    "title": "ANF Volume Replication Stats",
                    "gridFormatType": 2,
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationTotalTransferBytes Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationTotalTransferBytes",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationLastTransferSize Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationLastTransferSize",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "Metric",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Aggregation",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Value",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Timeline",
                          "formatter": 9
                        }
                      ],
                      "rowLimit": 10000,
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Storage Name"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationTotalTransferBytes",
                          "label": "Volume replication total transfer (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationTotalTransferBytes Timeline",
                          "label": "Volume replication total transfer (Average) Timeline"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationLastTransferSize",
                          "label": "Volume replication last transfer size (Average)"
                        },
                        {
                          "columnId": "microsoft.netapp/netappaccounts/capacitypools/volumes--XregionReplicationLastTransferSize Timeline",
                          "label": "Volume replication last transfer size (Average) Timeline"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "anf"
                    },
                    {
                      "parameterName": "anf",
                      "comparison": "isEqualTo",
                      "value": "anfresources"
                    },
                    {
                      "parameterName": "anfresources",
                      "comparison": "isEqualTo",
                      "value": "anfmonitor"
                    }
                  ],
                  "name": "metric - Volume Replication Stats"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "a0373635-ad8d-4770-82bf-a6b6acc47a88",
                        "version": "KqlParameterItem/1.0",
                        "name": "Resources",
                        "label": "Storage accounts",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.storage/storageaccounts'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "resourceTypeFilter": {
                            "microsoft.storage/storageaccounts": true
                          },
                          "additionalResourceOptions": [
                            "value::5",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::5",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "34ecbb4e-158f-409d-8074-1c408be01c42",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 14400000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ]
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "bcd653bc-bc9d-49d2-b70d-9d4ed5174f8f",
                        "version": "KqlParameterItem/1.0",
                        "name": "Message",
                        "type": 1,
                        "query": "where type == 'microsoft.storage/storageaccounts' \r\n| summarize Selected = countif(id in ({Resources:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "value": null,
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "16a97aee-d216-46c6-8ebd-5d14acb1fcff",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceName",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "Storage account"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "32dcfd42-0bd6-4beb-a5c1-4b503e1b9a4a",
                        "version": "KqlParameterItem/1.0",
                        "name": "Performance",
                        "type": 2,
                        "isRequired": true,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"Yes\\\", \\\"No\\\"]\",\"transformers\":null}",
                        "value": "Yes",
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "queryType": 8,
                        "label": "Show Storage Performance"
                      }
                    ],
                    "style": "above",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "blob"
                    }
                  ],
                  "name": "parameters - Blob Overview"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Message}\r\n_Storage accounts_"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "blob"
                    }
                  ],
                  "name": "text - Blob text"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookccea5694-99c5-4e38-8b61-011c07d379f3",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 0,
                    "resourceType": "microsoft.storage/storageaccounts",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.storage/storageaccounts",
                        "metric": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts/blobservices",
                        "metric": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts/fileservices",
                        "metric": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts/queueservices",
                        "metric": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts/tableservices",
                        "metric": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity",
                        "aggregation": 4
                      }
                    ],
                    "title": "Storage Capacity Overview",
                    "resourceLimit": 10000,
                    "showExpandCollapseGrid": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "insights",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity$|microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity$|microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity$|microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity$|microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity$",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "linkColumn": "Name",
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "Name",
                              "resourceIdsSource": "column",
                              "resourceIds": "Name",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/Individual Storage/Capacity",
                              "typeSource": "static",
                              "type": "workbook",
                              "gallerySource": "static",
                              "gallery": "microsoft.storage/storageaccounts",
                              "locationSource": "default"
                            }
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity Timeline",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue",
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "Name",
                              "resourceIdsSource": "column",
                              "resourceIds": "Name",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/Individual Storage/Capacity",
                              "typeSource": "static",
                              "type": "workbook",
                              "gallerySource": "static",
                              "gallery": "microsoft.storage/storageaccounts",
                              "locationSource": "default"
                            }
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Subscription"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Storage Name"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                          "label": "Used capacity (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Capacity-UsedCapacity Timeline",
                          "label": "Used capacity Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity",
                          "label": "Blob Capacity (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity Timeline",
                          "label": "Blob Capacity Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity",
                          "label": "File Capacity (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity Timeline",
                          "label": "File Capacity Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity",
                          "label": "Queue Capacity (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity Timeline",
                          "label": "Queue Capacity Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity",
                          "label": "Table Capacity (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity Timeline",
                          "label": "Table Capacity Timeline"
                        }
                      ]
                    },
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "blob"
                    }
                  ],
                  "showPin": false,
                  "name": "metric - Storage Capacity Overview"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook14690fcf-55b7-484e-8efd-8df92c6a6446",
                    "version": "MetricsItem/2.0",
                    "size": 2,
                    "chartType": 0,
                    "resourceType": "microsoft.storage/storageaccounts",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.storage/storageaccounts",
                        "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts",
                        "metric": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts",
                        "metric": "microsoft.storage/storageaccounts-Transaction-Ingress",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.storage/storageaccounts",
                        "metric": "microsoft.storage/storageaccounts-Transaction-Egress",
                        "aggregation": 1
                      }
                    ],
                    "title": "Blob Perfomance Metrics",
                    "showExpandCollapseGrid": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Ingress",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Ingress Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Egress",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.storage/storageaccounts-Transaction-Egress Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Subscription"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Storage Name"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions",
                          "label": "Transactions (Sum)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline",
                          "label": "Transactions Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                          "label": "Success E2E Latency (Average)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline",
                          "label": "Success E2E Latency Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Ingress",
                          "label": "Ingress (Sum)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Ingress Timeline",
                          "label": "Ingress Timeline"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Egress",
                          "label": "Egress (Sum)"
                        },
                        {
                          "columnId": "microsoft.storage/storageaccounts-Transaction-Egress Timeline",
                          "label": "Egress Timeline"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "blob"
                    },
                    {
                      "parameterName": "Performance",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "metric - Overview"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "9977c432-ea8f-472d-af8e-98618ed254fd",
                        "cellValue": "stndlb",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancer Overview",
                        "subTarget": "stndlboverview",
                        "style": "link"
                      },
                      {
                        "id": "8f6c64f6-8b89-49be-a137-acb85513c5f9",
                        "cellValue": "stndlb",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancer Monitor",
                        "subTarget": "stndlbmonitor",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    }
                  ],
                  "name": "links - Standard Load Balancer"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡_Standard Load Balancer_\r\n\r\nTo prevent this, different settings on Azure ILB, the SAP ASCS/SCS instance, and Windows cluster nodes must be configured to enable the so-called “keep alive” functionality.\r\n\r\nThe keep alive functionality will prevent Azure ILB time out.\r\nSettings on Azure Basic ILB\r\nMake sure that ALL Azure ILB Load Balancing Rules have:\r\n“Idle timeout (minutes)” settings,  set to the maximum value of 30 minutes.\r\n“Floating IP (direct server return)” must be Enabled\r\n\r\nNOTE: You can enable Floating IP only during creation of an Azure ILB rule. Therefore, if “Floating IP” is disabled for an existing Azure ILB rules, you need to delete the Azure ILB rule and create them again with option “Enable Floating IP”"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - Load Balancer"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| extend sku = tostring(sku.name)\r\n| mv-expand lbrules = properties.loadBalancingRules\r\n| mv-expand feip = properties.frontendIPConfigurations\r\n| mv-expand probes = properties.probes\r\n| project subscriptionId\r\n, id\r\n, resourceGroup\r\n, lbName=name\r\n, sku\r\n, location\r\n, rulename=tostring(lbrules.name)\r\n, frontendIP=tostring(feip.properties.privateIPAddress)\r\n, probeport=tostring(probes.properties.port)\r\n, HA_Ports= tostring(lbrules.properties.protocol)\r\n, rule_idleTimeoutMinutes=tostring(lbrules.properties.idleTimeoutInMinutes)\r\n, rule_isFloatingIPEnabled = tostring(lbrules.properties.enableFloatingIP)\r\n, rule_isTCP_ResetEnabled = tostring(lbrules.properties.enableTcpReset)\r\n, rule_loadDistribution = tostring(lbrules.properties.loadDistribution)\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize by subscriptionId\r\n, id\r\n, lbName\r\n, resourceGroup\r\n, location\r\n, sku\r\n, rulename\r\n, frontendIP\r\n, probeport\r\n, HA_Ports\r\n, rule_idleTimeoutMinutes\r\n, rule_isFloatingIPEnabled\r\n, rule_isTCP_ResetEnabled\r\n, rule_loadDistribution",
                    "size": 2,
                    "title": "Standard Load Balancer Overview",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "lbName",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "rulename",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "frontendIP",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "probeport",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "HA_Ports",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "All",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "All",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "rule_idleTimeoutMinutes",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "rule_isFloatingIPEnabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "Available",
                                "text": "Enabled"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "true",
                                "representation": "2",
                                "text": "Review SAP Note 2743751"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "rule_isTCP_ResetEnabled",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "rule_loadDistribution",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "id",
                          "label": "LB Name"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "sku",
                          "label": "LB SKU"
                        },
                        {
                          "columnId": "rulename",
                          "label": "LB Rule name"
                        },
                        {
                          "columnId": "frontendIP",
                          "label": "LB FrontEnd IP"
                        },
                        {
                          "columnId": "probeport",
                          "label": "LB Probe Port"
                        },
                        {
                          "columnId": "HA_Ports",
                          "label": "HA Ports"
                        },
                        {
                          "columnId": "rule_idleTimeoutMinutes",
                          "label": "LB Idle Timeout"
                        },
                        {
                          "columnId": "rule_isFloatingIPEnabled",
                          "label": "LB Floating IP"
                        },
                        {
                          "columnId": "rule_isTCP_ResetEnabled",
                          "label": "LB TCP Reset"
                        },
                        {
                          "columnId": "rule_loadDistribution",
                          "label": "LB Load Distribution"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "stndlb",
                      "comparison": "isEqualTo",
                      "value": "stndlboverview"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Standard Load Balancer Overview"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "173cfcd1-93dd-4eb1-9d1d-c8f10bc9973c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Resources",
                        "label": "Load Balancer",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::5",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::5",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "ee1d322c-ed49-4840-94eb-a4f32d098f71",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 900000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ]
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "99b98a4e-6efd-4a94-9e67-3f86ff7c7b58",
                        "version": "KqlParameterItem/1.0",
                        "name": "Message",
                        "type": 1,
                        "query": "where type == \"microsoft.network/loadbalancers\"\r\n| summarize Selected = countif(id in ({Resources:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                        "crossComponentResources": [
                          "{Resources}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "4c0feecb-dbca-435a-bafe-ca307586017e",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceName",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "Load Balancer"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "stndlb",
                      "comparison": "isEqualTo",
                      "value": "stndlbmonitor"
                    }
                  ],
                  "name": "parameters - Selection of Load Balancer"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{Message}\r\n_Azure Load Balancer_"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "stndlb",
                      "comparison": "isEqualTo",
                      "value": "stndlbmonitor"
                    }
                  ],
                  "name": "text - Load Balancer Overview"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook8642f436-3fbb-4a96-ba03-5c5d4b0edbad",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 0,
                    "resourceType": "microsoft.network/loadbalancers",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 900000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--VipAvailability",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--DipAvailability",
                        "aggregation": 4
                      },
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--SnatConnectionCount",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--SYNCount",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--ByteCount",
                        "aggregation": 1
                      }
                    ],
                    "title": "Load Balancer Key Metrics",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--VipAvailability",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redGreen"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--VipAvailability Timeline",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--DipAvailability",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redGreen"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--DipAvailability Timeline",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--SYNCount",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--SYNCount Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--ByteCount",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.network/loadbalancers--ByteCount Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Subscription"
                        ],
                        "expandTopLevel": true
                      },
                      "sortBy": [
                        {
                          "itemKey": "$gen_heatmap_microsoft.network/loadbalancers--VipAvailability_3",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Load Balancer Name"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--VipAvailability",
                          "label": "Data Path Availability (Average)"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--VipAvailability Timeline",
                          "label": "Data Path Availability (Average) Timeline"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--DipAvailability",
                          "label": "Health Probe Status (Average)"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--DipAvailability Timeline",
                          "label": "Health Probe Status (Average) Timeline"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--SnatConnectionCount",
                          "label": "SNAT Connection Count (Sum)"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                          "label": "SNAT Connection Count (Sum) Timeline"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--SYNCount",
                          "label": "SYN Count (Sum)"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--SYNCount Timeline",
                          "label": "SYN Count (Sum) Timeline"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--ByteCount",
                          "label": "Byte Count (Sum)"
                        },
                        {
                          "columnId": "microsoft.network/loadbalancers--ByteCount Timeline",
                          "label": "Byte Count (Sum) Timeline"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_heatmap_microsoft.network/loadbalancers--VipAvailability_3",
                        "sortOrder": 2
                      }
                    ],
                    "showExportToExcel": true
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "stndlb",
                      "comparison": "isEqualTo",
                      "value": "stndlbmonitor"
                    }
                  ],
                  "showPin": true,
                  "name": "metric - Load Balancer Metrics"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook28b53b94-1ff2-4a06-a28d-9ec03e8e29e5",
                    "version": "MetricsItem/2.0",
                    "size": 3,
                    "chartType": 2,
                    "resourceType": "microsoft.network/loadbalancers",
                    "metricScope": 0,
                    "resourceParameter": "Resources",
                    "resourceIds": [
                      "{Resources}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 900000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/loadbalancers",
                        "metric": "microsoft.network/loadbalancers--DipAvailability",
                        "aggregation": 3
                      }
                    ],
                    "title": "Backend health probe by Backend IP",
                    "resourceLimit": 10000,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "100",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "stndlb"
                    },
                    {
                      "parameterName": "stndlb",
                      "comparison": "isEqualTo",
                      "value": "stndlbmonitor"
                    }
                  ],
                  "showPin": true,
                  "name": "metric - LB - Backend health probe by Backend IP"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "recoveryservicesresources \r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\" \r\n| extend BackupState = properties.status\r\n| extend BackupState = iif(isempty(BackupState), \"Backup State Unknown\", (BackupState))\r\n| summarize count() by BackupState",
                    "size": 2,
                    "title": "VM Backup Status Overview",
                    "noDataMessage": "Something went wrong!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Completed Backup",
                          "label": "VM's with Completed Backup",
                          "comment": ""
                        },
                        {
                          "seriesName": "Failed Backup",
                          "label": "VM's with Failed Backup"
                        }
                      ]
                    }
                  },
                  "customWidth": "70",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "backup"
                    },
                    {
                      "parameterName": "backup",
                      "comparison": "isEqualTo",
                      "value": "bckoverview"
                    }
                  ],
                  "name": "query - VM Backup Status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "recoveryservicesresources \r\n| where type == \"microsoft.recoveryservices/vaults/backupjobs\" \r\n| where properties.status=='Failed'\r\n| project name = tostring(properties.entityFriendlyName),properties.status, startTime1 = properties.startTime ,properties.endTime, properties.duration, properties.dataSourceLocation,properties.dataSourceType, tostring(properties.errorDetails.recommendations), resourceGroup\r\n| sort by name ,resourceGroup, todatetime(startTime1) asc",
                    "size": 2,
                    "title": "VM Last Backup Status",
                    "noDataMessage": "Oops! something went wrong",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "properties_status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "3",
                                "text": "Backup Failed"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "backupMgmtType",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "100",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "backup"
                    },
                    {
                      "parameterName": "backup",
                      "comparison": "isEqualTo",
                      "value": "bcklist"
                    }
                  ],
                  "name": "query - List of VM's backup status"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "8eb5861c-f5db-478f-8182-fd23f07232c0",
                        "cellValue": "appgw",
                        "linkTarget": "parameter",
                        "linkLabel": "Overview",
                        "subTarget": "overview",
                        "style": "link"
                      },
                      {
                        "id": "83ddb856-4bf8-4947-a55d-d9b5f0c4aa81",
                        "cellValue": "appgw",
                        "linkTarget": "parameter",
                        "linkLabel": "Monitor",
                        "subTarget": "appgwmonitor",
                        "style": "link"
                      },
                      {
                        "id": "72ad485a-34ae-49a9-b96f-cd4043f2b5c8",
                        "cellValue": "appgw",
                        "linkTarget": "parameter",
                        "linkLabel": "Parameter Checks",
                        "subTarget": "appgwparameters",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    }
                  ],
                  "name": "links - Application Gateway Overview"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{ApplicationGateway}"
                    ],
                    "parameters": [
                      {
                        "id": "892cfb5f-6614-4238-816c-03b47ad6a8ba",
                        "version": "KqlParameterItem/1.0",
                        "name": "ApplicationGateway",
                        "label": "Application Gateway",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "resourceTypeFilter": {
                            "microsoft.management/managementgroups/providers/privatelinkassociations": true,
                            "microsoft.network/applicationgateways": true
                          },
                          "additionalResourceOptions": [
                            "value::1",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "8e067db8-a2c2-4ff5-b9c7-6338c20a6811",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 1209600000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": true
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "7b97c690-e2da-4943-a0f1-9e2df1c32858",
                        "version": "KqlParameterItem/1.0",
                        "name": "Message",
                        "type": 1,
                        "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| summarize Selected = countif(id in ({Resources:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "ed16f298-5afe-4ac3-b233-4dbffde07f61",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceName",
                        "type": 1,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "Application Gateway"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "543e484a-7b4a-4a51-999b-046942f0033c",
                        "version": "KqlParameterItem/1.0",
                        "name": "sku",
                        "type": 1,
                        "query": "resources\r\n| where type =~ \"microsoft.network/applicationgateways\"\r\n| extend tier = parse_json(properties).sku.tier\r\n| project SKU = iff(tier contains \"v2\", \"v2\", \"v1\")",
                        "crossComponentResources": [
                          "{ApplicationGateway}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "above",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    }
                  ],
                  "name": "parameters - App GW"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend sku = tostring(properties.sku.name)\r\n| project subscriptionId\r\n, id\r\n, AppGWName=name\r\n, resourceGroup\r\n, sku_tier = tostring(properties.sku.tier)\r\n, sku_capacity = tostring(properties.sku.capacity)\r\n, location",
                    "size": 0,
                    "title": "Application Gateway Overview",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "AppGWName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "sku_capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "trendup",
                                "text": "Auto"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "right",
                                "text": "{0} (Manual)"
                              }
                            ]
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "AppGateway Name"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "sku_tier",
                          "label": "SKU"
                        },
                        {
                          "columnId": "sku_capacity",
                          "label": "Capacity Mode"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Location"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "showPin": true,
                  "name": "query - Application Gateway Overview"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookda4dcfe0-e85b-4914-ad14-d6ac507dec91",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--CurrentConnections",
                        "aggregation": 1
                      }
                    ],
                    "title": " Current Connections",
                    "showCreateAlertRule": true,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    }
                  ],
                  "name": "metric - Current Connections"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookc8b99f6d-0d3b-414e-8c9f-74e1ba552c90",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--NewConnectionsPerSecond",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg. New  Connections per second",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    }
                  ],
                  "name": "metric - Avg New Connection Every second"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookc9d71de0-846b-44b8-b7cd-57b5f5d1c973",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--TotalRequests",
                        "aggregation": 1
                      }
                    ],
                    "title": "Total Requests",
                    "gridSettings": {
                      "rowLimit": 10000
                    },
                    "exportToExcelOptions": "all"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    }
                  ],
                  "name": "metric - Total Requests"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook6eede7d4-47b4-44d2-a257-4fc172dcae95",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--Throughput",
                        "aggregation": 4
                      }
                    ],
                    "title": "Throughput",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    }
                  ],
                  "name": "metric - Throughput"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookad3303bb-0b23-4743-9915-ff4f38bcb026",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--ComputeUnits",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg Current Compute Units",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    },
                    {
                      "parameterName": "sku",
                      "comparison": "isEqualTo",
                      "value": "v2"
                    }
                  ],
                  "name": "metric - Current Compute Units"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookd5e563c6-28cf-409d-a42d-d27c2e34ce74",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/applicationgateways",
                    "metricScope": 0,
                    "resourceParameter": "ApplicationGateway",
                    "resourceIds": [
                      "{ApplicationGateway}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.network/applicationgateways",
                        "metric": "microsoft.network/applicationgateways--HealthyHostCount",
                        "aggregation": 4
                      }
                    ],
                    "title": "Avg Health Host count",
                    "gridSettings": {
                      "rowLimit": 10000
                    },
                    "exportToExcelOptions": "all"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwmonitor"
                    },
                    {
                      "parameterName": "sku",
                      "comparison": "isEqualTo",
                      "value": "v2"
                    }
                  ],
                  "name": "metric - Healthy Host Counts"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "192395b7-ec14-4f8d-abb9-42ebbbdb5a3e",
                        "cellValue": "appgwparameters",
                        "linkTarget": "parameter",
                        "linkLabel": "frontendIPConfigurations",
                        "subTarget": "frontendIPConfigurations",
                        "style": "link"
                      },
                      {
                        "id": "a3ebb676-0b6b-4462-bb13-e7e901cfd8cd",
                        "cellValue": "appgwparameters",
                        "linkTarget": "parameter",
                        "linkLabel": "httpListeners",
                        "subTarget": "httpListeners",
                        "style": "link"
                      },
                      {
                        "id": "073d180d-2e45-4884-be9b-740cb7c00f49",
                        "cellValue": "appgwparameters",
                        "linkTarget": "parameter",
                        "linkLabel": "backendHttpSettingsCollection",
                        "subTarget": "backendHttpSettingsCollection",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwparameters"
                    }
                  ],
                  "name": "links - AppGW Parameter Overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend sku = tostring(properties.sku.name)\r\n| mv-expand frontendIPConfigurations = properties.frontendIPConfigurations\r\n| project subscriptionId\r\n, resourceGroup\r\n, AppGWName=name\r\n, location\r\n, name = tostring(frontendIPConfigurations.name)\r\n, privateIPAllocationMethod = tostring(frontendIPConfigurations.properties.privateIPAllocationMethod)\r\n// publicIPAddress = tostring(frontendIPConfigurations.properties.publicIPAddress)",
                    "size": 0,
                    "title": "frontendIPConfigurations",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwparameters"
                    },
                    {
                      "parameterName": "appgwparameters",
                      "comparison": "isEqualTo",
                      "value": "frontendIPConfigurations"
                    }
                  ],
                  "name": "query - frontendIPConfigurations",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend sku = tostring(properties.sku.name)\r\n| mv-expand httpListeners = properties.httpListeners\r\n| project subscriptionId\r\n, AppGWName=name\r\n, resourceGroup\r\n, name = tostring(httpListeners.name)\r\n, protocol = tostring(httpListeners.properties.protocol)\r\n, requireServerNameIndication = tostring(httpListeners.properties.requireServerNameIndication)",
                    "size": 0,
                    "title": "httpListeners",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwparameters"
                    },
                    {
                      "parameterName": "appgwparameters",
                      "comparison": "isEqualTo",
                      "value": "httpListeners"
                    }
                  ],
                  "name": "query - httpListeners parameters",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend sku = tostring(properties.sku.name)\r\n| mv-expand backendHttpSettingsCollection = properties.backendHttpSettingsCollection\r\n| project subscriptionId\r\n, AppGWName=name\r\n, resourceGroup\r\n, name = tostring(backendHttpSettingsCollection.name)\r\n, provisioningState= tostring(backendHttpSettingsCollection.properties.provisioningState)\r\n, protocol = tostring(backendHttpSettingsCollection.properties.protocol)\r\n, port = tostring(backendHttpSettingsCollection.properties.port)\r\n, pickHostNameFromBackendAddress = tostring(backendHttpSettingsCollection.properties.pickHostNameFromBackendAddress)\r\n, cookieBasedAffinity = tostring(backendHttpSettingsCollection.properties.cookieBasedAffinity)\r\n, requestTimeout = tostring(backendHttpSettingsCollection.properties.requestTimeout)",
                    "size": 0,
                    "title": "backendHttpSettingsCollection",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "protocol",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Https",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Http",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "requestTimeout",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "30",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "30",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "appgw"
                    },
                    {
                      "parameterName": "appgw",
                      "comparison": "isEqualTo",
                      "value": "appgwparameters"
                    },
                    {
                      "parameterName": "appgwparameters",
                      "comparison": "isEqualTo",
                      "value": "backendHttpSettingsCollection"
                    }
                  ],
                  "name": "query - backendHttpSettingsCollection"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcechanges\r\n| extend props = todynamic(properties)\r\n| extend change_date = todatetime(props.changeAttributes.timestamp)\r\n| where props.targetResourceType contains \"virtualmachines\"\r\n| extend state_info = props.changes['properties.extended.instanceView.powerState.code']\r\n| where isnull(state_info) == false\r\n| extend last_state = state_info.newValue\r\n| extend previous_state = state_info.previousValue\r\n| summarize arg_max(change_date,*) by tostring(props.targetResourceId)\r\n| where last_state == \"PowerState/deallocated\"\r\n| project id1=props.targetResourceId, VMName=tostring(split(props.targetResourceId,\"/\",8)[0]), state_info=(split(last_state,\"/\",1)[0]), previous_state, last_state, change_date, location, resourceGroup",
                    "size": 2,
                    "title": "VM's transitioned into deallocated status in last 14 days",
                    "noDataMessage": "No VM found!",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id1",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "VMName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "id1",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Azure Region"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "deallocated"
                    }
                  ],
                  "name": "query - VM's in deallocated status",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "configchecks"
            },
            "name": "group - Configuration Checks"
          },
          {
            "type": 1,
            "content": {
              "json": "### Minitoring Group"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Monitoring & Security"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "parameters": [
                            {
                              "id": "dc57b0b5-7a55-4c09-80fa-67e563f616bf",
                              "version": "KqlParameterItem/1.0",
                              "name": "VirtualMachines",
                              "type": 5,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n\t| order by name asc\r\n\t| extend Rank = row_number()\r\n\t| project value = id, label = id, selected = Rank <= 25",
                              "crossComponentResources": [
                                "{Subscriptions}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::5",
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::5",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            {
                              "id": "d363d4b7-17ff-4aba-a14d-be338fdb42ad",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRange",
                              "type": 4,
                              "value": {
                                "durationMs": 1209600000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            },
                            {
                              "id": "45cbb9f2-adb3-4541-bfe1-0b631f683136",
                              "version": "KqlParameterItem/1.0",
                              "name": "Message",
                              "type": 1,
                              "query": "where type == 'microsoft.compute/virtualmachines' \r\n| summarize Selected = countif(id in ({VirtualMachines:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                              "crossComponentResources": [
                                "{Subscriptions}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "above",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedTab",
                          "comparison": "isEqualTo",
                          "value": "monitor"
                        },
                        "name": "parameters - Monitoring Overview"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "{Message}\r\n_Virtual machines_"
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedTab",
                          "comparison": "isEqualTo",
                          "value": "monitor"
                        },
                        "name": "Virtual Machine count"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "a3a9fa69-c558-4102-b3cb-584449380f19",
                              "cellValue": "monitor",
                              "linkTarget": "parameter",
                              "linkLabel": "Overview",
                              "subTarget": "overview",
                              "style": "link"
                            },
                            {
                              "id": "a9dcfa57-302a-4e37-871f-9affa3ba62b3",
                              "cellValue": "monitor",
                              "linkTarget": "parameter",
                              "linkLabel": "Key Metrics",
                              "subTarget": "keymetrics",
                              "style": "link"
                            },
                            {
                              "id": "e151c48d-8dcb-48d9-8969-cb0c22013d83",
                              "cellValue": "monitor",
                              "linkTarget": "parameter",
                              "linkLabel": "Regions",
                              "subTarget": "regions",
                              "style": "link"
                            },
                            {
                              "id": "025b5940-686e-4f97-95f5-cbc6f6f46d53",
                              "cellValue": "monitor",
                              "linkTarget": "parameter",
                              "linkLabel": "Azure Resource Health",
                              "subTarget": "health",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedTab",
                          "comparison": "isEqualTo",
                          "value": "monitor"
                        },
                        "name": "links - Monitoring overview"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook883c1316-9988-4bc5-8de8-cbbb39a00924",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": -3,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "VirtualMachines",
                          "resourceIds": [
                            "{VirtualMachines}"
                          ],
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4
                            }
                          ],
                          "title": "Virtual Machine CPU Usage",
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "Name",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": false
                              }
                            },
                            "centerContent": {
                              "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue",
                                "linkTarget": "WorkbookTemplate",
                                "linkIsContextBlade": true,
                                "workbookContext": {
                                  "componentIdSource": "column",
                                  "componentId": "Name",
                                  "resourceIdsSource": "column",
                                  "resourceIds": "Name",
                                  "templateIdSource": "static",
                                  "templateId": "Community-Workbooks/Virtual Machines/Virtual machine details",
                                  "typeSource": "static",
                                  "type": "workbook",
                                  "gallerySource": "static",
                                  "gallery": "microsoft.compute/virtualmachines",
                                  "locationSource": "default"
                                }
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "hivesContent": {
                              "columnMatch": "Subscription",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true
                              }
                            },
                            "nodeIdField": "Name",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "microsoft.compute/virtualmachines--Percentage CPU",
                              "type": 4,
                              "heatmapPalette": "greenRed",
                              "heatmapMin": 30,
                              "heatmapMax": 80,
                              "emptyValueColor": "gray"
                            },
                            "groupByField": "Subscription",
                            "hivesMargin": 5
                          },
                          "resourceLimit": 10000,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "sortBy": [
                              {
                                "itemKey": "$gen_number_microsoft.compute/virtualmachines--Percentage CPU_2",
                                "sortOrder": 1
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "Name",
                                "label": "Virtual Machine "
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU",
                                "label": "Percentage CPU (Average)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "label": "Percentage CPU Timeline"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_number_microsoft.compute/virtualmachines--Percentage CPU_2",
                              "sortOrder": 1
                            }
                          ],
                          "exportToExcelOptions": "all"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "overview"
                          }
                        ],
                        "name": "metric - VM CPU Overview"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "💡 _Click on the CPU usage metric in a cell to see more details about the virtual machine_\r\n<br />"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "overview"
                          }
                        ],
                        "name": "text - VM CPU Usage tip"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookecda832e-ec26-4656-a8f4-6edc293590cc",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "VirtualMachines",
                          "resourceIds": [
                            "{VirtualMachines}"
                          ],
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Disk Read Bytes",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Disk Write Bytes",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network In Total",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network Out Total",
                              "aggregation": 1
                            }
                          ],
                          "title": "VM  Monitoring Key Metrics",
                          "resourceLimit": 10000,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "formatter": 21,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Disk Read Bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "orange",
                                  "workbookContext": {
                                    "componentIdSource": "column",
                                    "componentId": "Name",
                                    "resourceIdsSource": "column",
                                    "resourceIds": "Name",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Virtual Machines/Virtual machine details",
                                    "typeSource": "static",
                                    "type": "workbook",
                                    "gallerySource": "static",
                                    "gallery": "microsoft.compute/virtualmachines",
                                    "locationSource": "default"
                                  }
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Disk Read Bytes Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Disk Write Bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Disk Write Bytes Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Network In Total",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Network In Total Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Network Out Total",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Subscription"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Name"
                            },
                            "labelSettings": [
                              {
                                "columnId": "Name",
                                "label": "Storage Name"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU",
                                "label": "Percentage CPU (Average)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "label": "Percentage CPU Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Disk Read Bytes",
                                "label": "Disk Read Bytes (Sum)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Disk Read Bytes Timeline",
                                "label": "Disk Read Bytes Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Disk Write Bytes",
                                "label": "Disk Write Bytes (Sum)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Disk Write Bytes Timeline",
                                "label": "Disk Write Bytes Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Network In Total",
                                "label": "Network In Total (Sum)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Network In Total Timeline",
                                "label": "Network In Total Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Network Out Total",
                                "label": "Network Out Total (Sum)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                                "label": "Network Out Total Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "keymetrics"
                          }
                        ],
                        "name": "metric - Monitroing Key Metrics"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "💡 Click on the CPU utilization cells to zoom into the metrics of the virtual machine\r\n\r\n"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "keymetrics"
                          }
                        ],
                        "name": "text - VM Key Metrics Tip"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook75b48d2b-8309-42cd-9064-f1953fb648d8",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": -2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "VirtualMachines",
                          "resourceIds": [
                            "{VirtualMachines}"
                          ],
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4
                            }
                          ],
                          "title": "Azure deployment across regions",
                          "mapSettings": {
                            "locInfo": "AzureResource",
                            "locInfoColumn": "Name",
                            "sizeSettings": "Name",
                            "sizeAggregation": "Count",
                            "legendMetric": "microsoft.compute/virtualmachines--Percentage CPU",
                            "legendAggregation": "Max",
                            "itemColorSettings": {
                              "nodeColorField": "microsoft.compute/virtualmachines--Percentage CPU",
                              "colorAggregation": "Max",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed",
                              "heatmapMin": 30,
                              "heatmapMax": 80
                            },
                            "numberFormatSettings": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "gridSettings": {
                            "rowLimit": 10000
                          },
                          "showExportToExcel": true
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "regions"
                          }
                        ],
                        "name": "metric - region overview"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "{\"version\":\"AzureHealthQuery/1.0\",\"queryType\":\"Detailed\"}",
                          "size": 2,
                          "title": "Virtual Machine Health",
                          "showExportToExcel": true,
                          "exportToExcelOptions": "all",
                          "queryType": 4,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "crossComponentResources": [
                            "{VirtualMachines}"
                          ],
                          "visualization": "graph",
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "Availability state",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Name",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "subTarget": "resourcehealth",
                                "showIcon": false
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "Reason type",
                              "formatter": 1
                            },
                            "nodeIdField": "Name",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "Availability state",
                              "type": 3,
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Available",
                                  "representation": "green"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "orange"
                                }
                              ]
                            },
                            "hivesMargin": 5
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "health"
                          }
                        ],
                        "showPin": true,
                        "name": "query - VM Resource Health"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "💡 _Click on the virtual machine name to see more details about the resource health_\r\n<br />\r\n<br />\r\nLearn about [Azure resource health](https://docs.microsoft.com/en-us/azure/service-health/resource-health-overview)"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "SelectedTab",
                            "comparison": "isEqualTo",
                            "value": "monitor"
                          },
                          {
                            "parameterName": "monitor",
                            "comparison": "isEqualTo",
                            "value": "health"
                          }
                        ],
                        "name": "text - VM Resource Health tip"
                      }
                    ]
                  },
                  "name": "group - 17"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 _Standard Load Balancer for SAP (A)SCS best practices_\r\n\r\nThe keep alive functionality will prevent Azure ILB time out.\r\n\r\nSettings on Azure Basic ILB\r\n\r\nMake sure that ALL Azure ILB Load Balancing Rules have:\r\n\r\nIdle timeout (minutes) settings,  set to the maximum value of 30 minutes.\r\nFloating IP (direct server return) must be Enabled\r\n\r\nNOTE: You can enable Floating IP only during creation of an Azure ILB rule. Therefore, if Floating IP is disabled for an existing Azure ILB rules, you need to delete the Azure ILB rule and create them again with option \"Enable Floating IP\".\r\n \r\nSettings on Windows Failover Cluster\r\nMake sure to create these two registry entries on BOTH ASCS /SCS cluster nodes:\r\n\r\nNOTE: To activate these changes, you need to reboot the Windows cluster nodes."
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "configchecks"
                    },
                    {
                      "parameterName": "configchecks",
                      "comparison": "isEqualTo",
                      "value": "standlb"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - Load Balancer help"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "monitor"
            },
            "name": "group - Monitoring & Security"
          },
          {
            "type": 1,
            "content": {
              "json": "### Security"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - Security Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SecurityResources\r\n| where type == 'microsoft.security/securescores/securescorecontrols'\r\n| extend controlName=properties.displayName,\r\n\tcontrolId=properties.definition.name,\r\n\tnotApplicableResourceCount=properties.notApplicableResourceCount,\r\n\tunhealthyResourceCount=properties.unhealthyResourceCount,\r\n\thealthyResourceCount=properties.healthyResourceCount,\r\n\tpercentageScore=properties.score.percentage,\r\n\tcurrentScore=properties.score.current,\r\n\tmaxScore=properties.definition.properties.maxScore,\r\n\tweight=properties.weight,\r\n\tcontrolType=properties.definition.properties.source.sourceType,\r\n\tcontrolRecommendationIds=properties.definition.properties.assessmentDefinitions\r\n| project tenantId, subscriptionId, controlName, controlId, unhealthyResourceCount, healthyResourceCount, notApplicableResourceCount, percentageScore, currentScore, maxScore, weight, controlType, controlRecommendationIds",
                    "size": 0,
                    "title": "Security Overview",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "tenantId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "controlName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "controlId",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "controlName"
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Report_check",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "security"
                    }
                  ],
                  "name": "query - security"
                }
              ]
            },
            "name": "group - 25"
          },
          {
            "type": 1,
            "content": {
              "json": "### SAP"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "NoShow"
            },
            "name": "text - SAP Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "f813f331-ea12-4570-b1ef-474b35952b77",
                        "cellValue": "SAP",
                        "linkTarget": "parameter",
                        "linkLabel": "Overview",
                        "subTarget": "overview",
                        "style": "link"
                      },
                      {
                        "id": "efd7256b-8032-4c88-bedd-748f04be4a11",
                        "cellValue": "SAP",
                        "linkTarget": "parameter",
                        "linkLabel": "Instance",
                        "subTarget": "Instance",
                        "style": "link"
                      },
                      {
                        "id": "fc4741ab-393a-478e-895a-1b9418349e03",
                        "cellValue": "SAP",
                        "linkTarget": "parameter",
                        "linkLabel": "SAP_SID",
                        "subTarget": "SID_SAP",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "SAP"
                  },
                  "name": "links - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "aa91df3e-9123-440e-9045-a6dea696d0c7",
                        "version": "KqlParameterItem/1.0",
                        "name": "SAP_Instance",
                        "type": 1,
                        "isRequired": true,
                        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| summarize Total = count()\r\n| project Message = strcat('SAP Instances # ', Total)",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "f876133a-d017-4735-a59b-148a5d8ea15e",
                        "version": "KqlParameterItem/1.0",
                        "name": "system_SID",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = name, label = name, selected = Rank <= 5",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1",
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::1",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::1"
                        ]
                      }
                    ],
                    "style": "above",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "SAP"
                  },
                  "name": "parameters - SAP"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| where name in ({system_SID}) or '*' in ({system_SID})\r\n| project id, Landscape= tostring(properties.environment), type = tostring(split(type,\"/\",1)[0]) , configtype= tostring(properties.configuration.configurationType), sapProduct = properties.sapProduct",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "SAP"
                    },
                    {
                      "parameterName": "SAP",
                      "comparison": "isEqualTo",
                      "value": "SID_SAP"
                    }
                  ],
                  "name": "query - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances' or type=~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n| project SID = tostring(split(id,\"/\",8)[0]), id, hostname=properties.hostname , InstanceNumber= properties.instanceNo, Instancename=name, type = tostring(split(type,\"/\",2)[0]), SAPKernel= properties.kernelVersion, SAPkernelPatch= properties.kernelPatch, resourceGroup, location, tags",
                    "size": 0,
                    "title": "SAP Instances",
                    "noDataMessage": "No SAP Instance exist",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "InstanceNumber",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 2
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "SAP"
                    },
                    {
                      "parameterName": "SAP",
                      "comparison": "isEqualTo",
                      "value": "Instance"
                    }
                  ],
                  "name": "query - SAP Instance"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances' or type=~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n| project  SID= tostring(split(id,\"/\",8)[0]), SAPVMName=tostring(split(properties.virtualMachineId,\"/\",8)[0]) , Instancename=name, type = tostring(split(type,\"/\",2)[0])\r\n| summarize count() by SID",
                    "size": 0,
                    "color": "lightBlue",
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "graph",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "SID",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "SID",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "SID",
                        "formatter": 1,
                        "formatOptions": {
                          "linkTarget": "Resource"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "hivesContent": {
                        "columnMatch": "SID",
                        "formatter": 1
                      },
                      "nodeIdField": "count_",
                      "sourceIdField": "count_",
                      "targetIdField": "SID",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "edgeSize": "SID",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "SID",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "orange"
                          }
                        ]
                      },
                      "groupByField": "SID",
                      "hivesMargin": 5
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedTab",
                      "comparison": "isEqualTo",
                      "value": "SAP"
                    },
                    {
                      "parameterName": "SAP",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    }
                  ],
                  "name": "query - SAP Overview"
                }
              ]
            },
            "name": "group -SAP Group"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Report_check",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "ResourceGroup"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "group - SAP Overview"
    },
    {
      "type": 1,
      "content": {
        "json": "### Report"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "text - Report"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Overview"
            },
            "name": "text - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name, vmsize = tostring(properties.hardwareProfile.vmSize)\r\n| summarize count() by vmsize",
              "size": 2,
              "title": "Virtual Machine SKU Overview",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "34",
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 2,
              "title": "Azure Managed Disk Overview",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "where type has \"microsoft.netapp\"\r\n| extend type = case(\r\n\ttype == 'microsoft.netapp/netappaccounts', \"ANF Accounts\",\r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools', \"Capacity Pools\", \r\n\ttype == 'microsoft.netapp/netappaccounts/capacitypools/volumes', \"Volumes\", \r\n\tstrcat(\"Not Translated: \", type))\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize count() by type",
              "size": 2,
              "title": "ANF Storage Overview",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "name": "query - ANF Storage Overview"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type =~ \"microsoft.network/applicationgateways\"\r\n| extend tier = parse_json(properties).sku.tier\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project SKU = iff(tier contains \"v2\", \"v2\", \"v1\")\r\n| summarize count() by SKU",
              "size": 2,
              "title": "Application Gateway Overview",
              "noDataMessage": "No App GW found in selected subscription.",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "34",
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 2,
              "title": "Azure Load Balancer Overview",
              "noDataMessage": "No Azure Load Balancer found in selected subscription.",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, name = tostring(sku.name), tier = tostring(sku.tier)\r\n| summarize count() by name",
              "size": 2,
              "title": "Azure Storage Accounts",
              "noDataMessage": "No Storage Account found in selected subscription.",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "33",
            "name": "query - 6"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\r\n| where type == 'microsoft.compute/virtualmachines'\r\n| extend\r\n    JoinID = toupper(id),\r\n    OSName = tostring(properties.osProfile.computerName),\r\n    OSType = tostring(properties.storageProfile.osDisk.osType),\r\n    VMSize = tostring(properties.hardwareProfile.vmSize)\r\n| join kind=leftouter(\r\n    Resources\r\n    | where type == 'microsoft.compute/virtualmachines/extensions'\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions')))\r\n        ,ExtensionName = name\r\n    , provisioningState = tostring(properties.provisioningState), autoUpgradeMinorVersion= tostring(properties.autoUpgradeMinorVersion), typeHandlerVersion= tostring(properties.typeHandlerVersion)\r\n) on $left.JoinID == $right.VMId\r\n| where provisioningState=='Failed'\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| summarize Extensions = make_list(ExtensionName) by id, VMSize, OSType, provisioningState, autoUpgradeMinorVersion, typeHandlerVersion",
              "size": 2,
              "title": "VM's with Failed VM Extensions",
              "noDataMessage": "No VM with failed VM Extensions. Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "VM Name"
                  },
                  {
                    "columnId": "VMSize",
                    "label": "VM SKU"
                  },
                  {
                    "columnId": "OSType",
                    "label": "OS"
                  },
                  {
                    "columnId": "provisioningState",
                    "label": "Provisioning State"
                  },
                  {
                    "columnId": "autoUpgradeMinorVersion",
                    "label": "AutoUpgrade"
                  },
                  {
                    "columnId": "typeHandlerVersion",
                    "label": "Version"
                  },
                  {
                    "columnId": "Extensions",
                    "label": "Extension Name"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - VM's with Failed VM Extensions",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "## Orphan Resources"
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - Orphan Resources"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Run query to see results.\r\nresources\r\n| where type =~ \"microsoft.network/networkinterfaces\"\r\n| extend networkSecurityGroup = coalesce(extract('Microsoft.Network/networkSecurityGroups/(.*)', 1, tostring(properties.networkSecurityGroup.id)), '-')\r\n| extend virtualMachineName = extract('Microsoft.Compute/virtualMachines/(.*)', 1, tostring(properties.virtualMachine.id))\r\n| extend hostedWorkloads = properties.hostedWorkloads\r\n| extend hostedWorkloadCount = array_length(properties.hostedWorkloads)\r\n| extend hostedWorkloadName = iff(hostedWorkloads[0] contains 'volumes',\r\n                                    strcat(hostedWorkloadCount, ' ', 'Azure NetApp Files volumes'),\r\n                                    coalesce(split(hostedWorkloads[0], '/')[(-1)], '-'))\r\n| extend attachedTo = iff(isnotempty(virtualMachineName), virtualMachineName, hostedWorkloadName)\r\n| extend macAddress = coalesce(properties.macAddress, '-')\r\n| extend ipConfigCount=array_length(properties.ipConfigurations)\r\n| extend ipConfigurations=iff(ipConfigCount == 0, dynamic(null), properties.ipConfigurations)\r\n| mvexpand ipConfiguration=ipConfigurations limit 400\r\n| extend isPrimary = (ipConfigCount == 1 or ipConfiguration.properties.primary =~ 'true' or isempty(ipConfiguration))\r\n| extend primarySubnetIds = iff(isPrimary, ipConfiguration.properties.subnet.id, '')\r\n| extend primaryPublicIpAddressIds = iff(isPrimary, tolower(ipConfiguration.properties.publicIPAddress.id), '')\r\n| extend primaryIPprivateIPs = iff(isPrimary, ipConfiguration.properties.privateIPAddress, '-')\r\n| extend secondaryIPprivateIPs = iff(not(isPrimary), ipConfiguration.properties.privateIPAddress, '')\r\n| summarize subnetId=any(primarySubnetIds),\r\n            publicIpAddressId=any(primaryPublicIpAddressIds),\r\n            primaryPrivateIPAddress=any(primaryIPprivateIPs),\r\n            secondaryPrivateIPAddress=makeset(secondaryIPprivateIPs),\r\n            tags=any(tags)\r\n            by name, id, type, kind, location, resourceGroup, subscriptionId, networkSecurityGroup, attachedTo, macAddress\r\n| extend secondaryPrivateIPAddress = case(isempty(secondaryPrivateIPAddress[0]), array_slice(secondaryPrivateIPAddress,1,-1),\r\n                                        isempty(secondaryPrivateIPAddress[(-1)]), array_slice(secondaryPrivateIPAddress,0,-2),\r\n                                        secondaryPrivateIPAddress)\r\n| extend secondaryPrivateIPAddress = strcat_array(secondaryPrivateIPAddress, ',')\r\n| extend secondaryPrivateIPAddress = coalesce(replace(',,', ',', secondaryPrivateIPAddress), '-')\r\n| parse kind=regex subnetId with 'Microsoft.Network/virtualNetworks/' virtualNetwork '/subnets/' subnet\r\n| join kind=leftouter hint.strategy=shuffle (data\r\n| where type =~ 'microsoft.network/publicipaddresses'\r\n| extend publicIpAddress = tostring(properties.ipAddress)\r\n| project publicIpAddressId=tolower(id), publicIpAddress)\r\n    on publicIpAddressId\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project name,\r\n        id,\r\n        type,\r\n        kind,\r\n        location,\r\n        resourceGroup,\r\n        subscriptionId,\r\n        tags,\r\n        networkSecurityGroup,\r\n        attachedTo,\r\n        macAddress,\r\n        virtualNetwork=coalesce(virtualNetwork, '-'),\r\n        subnet=coalesce(subnet, '-'),\r\n        primaryPrivateIPAddress,\r\n        secondaryPrivateIPAddress,\r\n        publicIpAddress=coalesce(publicIpAddress, '-')\r\n| where (type !~ ('dynatrace.observability/monitors'))\r\n| where (type !~ ('nginx.nginxplus/nginxdeployments'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portal/extensions/deployments'))\r\n| where (type !~ ('microsoft.portal/extensions'))\r\n| where (type !~ ('microsoft.portal/extensions/slots'))\r\n| where (type !~ ('microsoft.portal/extensions/versions'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.network/dnsforwardingrulesets'))\r\n| where (type !~ ('microsoft.network/dnsresolvers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.communication/emailservices'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters/sessionclusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.hpcworkbench/instances'))\r\n| where (type !~ ('microsoft.scvmm/vmmservers'))\r\n| where (type !~ ('microsoft.connectedvmwarevsphere/vcenters'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/assets'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/tests'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/executionplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins/testplans'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts/contacts'))\r\n| where (type !~ ('microsoft.orbital/contactprofiles'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.orbital/spacecrafts'))\r\n| where (type !~ ('microsoft.azurepercept/accounts'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.playfab/playeraccountpools'))\r\n| where (type !~ ('microsoft.playfab/playfabresources'))\r\n| where (type !~ ('microsoft.playfab/titles'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/applicationinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/centralinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances/databaseinstances'))\r\n| where (type !~ ('microsoft.workloads/sapvirtualinstances'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/sites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcorecontrolplanes'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks/services'))\r\n| where (type !~ ('microsoft.mobilenetwork/sims'))\r\n| where (type !~ ('microsoft.workloads/monitors'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where attachedTo == '-'\r\n| project id ,virtualNetwork,primaryPrivateIPAddress, resourceGroup, location\r\n| sort by (tolower(tostring(id))) asc",
              "size": 3,
              "title": "Orphan NIC's",
              "noDataMessage": "No orphan NICs for the selection, Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "NIC Name"
                  },
                  {
                    "columnId": "virtualNetwork",
                    "label": "Virtual Network"
                  },
                  {
                    "columnId": "primaryPrivateIPAddress",
                    "label": "IP Address"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "location",
                    "label": "Azure Region"
                  }
                ]
              }
            },
            "name": "query - Orphan NICs",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\r\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, location",
              "size": 2,
              "title": "Orphan NSG",
              "noDataMessage": "No orphan NSG for the selection, Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Resource",
                    "label": "NSG Name"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "location",
                    "label": "Azure Region"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - Orphan NSG",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\r\n| where type =~ 'microsoft.network/applicationsecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId, location",
              "size": 2,
              "title": "Orphan ASG",
              "noDataMessage": "No orphan ASG for the selection, Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - Orphan ASG",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources  \r\n| where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" \r\n    and (diskState == 'Unattached' or diskState != 'ActiveSAS')\r\n| project id, diskState, resourceGroup, location, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB)",
              "size": 2,
              "title": "Orphan Disks",
              "noDataMessage": "No orphan Disk for the selection, Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Disk Name"
                  },
                  {
                    "columnId": "diskState",
                    "label": "Disk State"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "location",
                    "label": "Azure Region"
                  },
                  {
                    "columnId": "disk_tier",
                    "label": "Disk Tier"
                  },
                  {
                    "columnId": "disk_size_GB",
                    "label": "Disk Size"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - Orphan Disks",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "## Configuration Checks"
            },
            "conditionalVisibility": {
              "parameterName": "Report_check",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - Config Checks"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources \r\n| where type =~ 'microsoft.compute/virtualmachines' \r\n| extend nics=array_length(properties.networkProfile.networkInterfaces) \r\n| mv-expand nic=properties.networkProfile.networkInterfaces \r\n//| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic) \r\n| project id, vmName = name, az = tostring(zones), vmSize = tostring(properties.hardwareProfile.vmSize), AvSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0]), ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]),  nicId = tostring(nic.id) \r\n| join kind=leftouter ( \r\n  Resources \r\n  | where type =~ 'microsoft.network/networkinterfaces' \r\n  | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n  | mv-expand ipconfig=properties.ipConfigurations\r\n  | where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n    | project nicId = id, ipaddress = tostring(ipconfig.properties.privateIPAddress), AcceleratedNetworkingOn = tostring(properties.enableAcceleratedNetworking)) on nicId \r\n| where AcceleratedNetworkingOn == \"false\"\r\n| summarize by id, nicId, vmName,vmSize,ipaddress, AvSet, ppg,  az, AcceleratedNetworkingOn",
              "size": 2,
              "title": "VM's with disabled Accelerated Networking",
              "noDataMessage": "No VM with disabled AN, Great job!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "vmName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Column1",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Virtual Machibe"
                  },
                  {
                    "columnId": "nicId",
                    "label": "NIC Name"
                  }
                ]
              }
            },
            "name": "query - VM's with disabled Accelerated Networking",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\r\n    | where type =~ 'microsoft.network/publicipaddresses' and isnotempty(properties.ipAddress)\r\n    | where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n    | project id, resourceGroup, sku=sku.name, Tier=sku.tier, location",
              "size": 0,
              "title": "Public IP ",
              "noDataMessage": "No Public IP resource found!",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "visualization": "table",
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Public IP Name"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "sku",
                    "label": "SKU"
                  },
                  {
                    "columnId": "Tier",
                    "label": "Tier"
                  },
                  {
                    "columnId": "location",
                    "label": "Azure Region"
                  }
                ]
              }
            },
            "name": "query - Public IP",
            "styleSettings": {
              "showBorder": true
            }
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "Report_check",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "group - Report Overview"
    },
    {
      "type": 1,
      "content": {
        "json": "### VIS"
      },
      "conditionalVisibility": {
        "parameterName": "show",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "text - VIS Group Start"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "VIS Group",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "20d179e1-fb3c-4407-b1f0-a17edda878c1",
                  "cellValue": "visoverview",
                  "linkTarget": "parameter",
                  "linkLabel": "VIS Overview",
                  "preText": "VIS Overview",
                  "style": "link"
                },
                {
                  "id": "9d7e9d85-2092-4d3f-8a5a-d2619bbd638d",
                  "cellValue": "vissaplandscape",
                  "linkTarget": "parameter",
                  "linkLabel": "SAP Landscape",
                  "preText": "VIS SAP Landscape",
                  "style": "link"
                },
                {
                  "id": "4b83ade7-2583-447a-a2ea-c51be3a26602",
                  "cellValue": "viscompute",
                  "linkTarget": "parameter",
                  "linkLabel": "Compute",
                  "preText": "VIS Compute",
                  "style": "link"
                },
                {
                  "id": "a47e4c3a-ffc1-4302-90aa-c9d7919a8044",
                  "cellValue": "visconfiguration",
                  "linkTarget": "parameter",
                  "linkLabel": "Configuration",
                  "preText": "VIS Configuration",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Resource_Filter",
              "comparison": "isEqualTo",
              "value": "VIS"
            },
            "name": "links - VIS Overview Links"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "show",
        "comparison": "isEqualTo",
        "value": "NoShow"
      },
      "name": "group -VIS Group"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "9f093954-c9e0-45fa-b1e1-91260a61cc4d",
            "cellValue": "vis",
            "linkTarget": "parameter",
            "linkLabel": "VIS Overview",
            "subTarget": "visoverview",
            "preText": "VIS Overview",
            "style": "link"
          },
          {
            "id": "322ba4d3-0527-4e5f-ad09-9b552d65eef4",
            "cellValue": "vis",
            "linkTarget": "parameter",
            "linkLabel": "VIS SAP Landscape",
            "subTarget": "saplandcape",
            "style": "link"
          },
          {
            "id": "73e6ea22-da63-4aff-8f56-2b8d75d2f4d4",
            "cellValue": "vis",
            "linkTarget": "parameter",
            "linkLabel": "VIS Compute",
            "subTarget": "viscompute",
            "preText": "VIS Compute",
            "style": "link"
          },
          {
            "id": "80a3f65f-55d4-4df8-ab5b-8fb593959e26",
            "cellValue": "vis",
            "linkTarget": "parameter",
            "linkLabel": "Platform Configuration",
            "subTarget": "visconfiguration",
            "preText": "VIS Configuraton",
            "style": "link"
          },
          {
            "id": "a2157006-30fd-42c4-a4dd-a683290994cf",
            "cellValue": "vis",
            "linkTarget": "parameter",
            "linkLabel": "Monitoring & Service Health",
            "subTarget": "vismonitoring",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "links - VIS Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| where name in ({system_SID}) or '*' in ({system_SID})\r\n| project id, Landscape= tostring(properties.environment)\r\n| summarize count() by Landscape",
        "size": 3,
        "title": "SAP Landscape Overview",
        "noDataMessage": "No VIS SAP Landscape found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visoverview"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "33",
      "name": "query - VIS SAP Overview Query",
      "styleSettings": {
        "maxWidth": "33"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances' or type=~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n| extend SID = tostring(split(id,\"/\",8)[0])\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n| project  id, hostname=properties.hostname , resourceGroup, type = tostring(split(type,\"/\",2)[0])\r\n| summarize count() by type",
        "size": 3,
        "title": "SAP Instance Type Overview",
        "noDataMessage": "N VIS SAP Instance Type found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visoverview"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "33",
      "name": "query - VIS Instance Overview Query",
      "styleSettings": {
        "maxWidth": "33%"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations' \r\n| where properties.lastUpdated >=ago(1d)\r\n| extend visId = split(split(split(id, '/centralInstances')[0], '/applicationInstances')[0], '/databaseInstances')[0]\r\n| extend SID= tostring(split(['id'], \"/\",8)[0])\r\n| extend resourceId = tostring(properties.resourceMetadata.resourceId)\r\n| extend impactedField = properties.impactedField\r\n| extend resourceTypeName = \"Database\"\r\n| extend impact = properties.impact\r\n| extend resourceTypeName = iff(impactedField has \"centralInstances\", \"Central service instance\", resourceTypeName)\r\n| extend resourceTypeName = iff(impactedField has \"applicationInstances\", \"App server instance\", resourceTypeName)\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n//| project resourceId, resourceTypeName, visId, impact, properties.shortDescription.solution, properties.category, properties.lastUpdated, SID\r\n| summarize count() by tostring(properties.category)",
        "size": 3,
        "title": "Well-Architected for SAP Summary",
        "noDataMessage": "No WAF related observations found for the selected SAP system",
        "exportMultipleValues": true,
        "exportedParameters": [
          {
            "parameterType": 1
          }
        ],
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visoverview"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "33",
      "name": "query - Well-Architected for SAP Summary",
      "styleSettings": {
        "maxWidth": "33"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| where name in ({system_SID}) or '*' in ({system_SID})\r\n| project id, configtype= tostring(properties.configuration.configurationType)\r\n| summarize count() by configtype\r\n",
        "size": 3,
        "title": "SAP Overview by configuration",
        "noDataMessage": "No VIS SAP Configuration foud",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visoverview"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "33",
      "name": "query - VIS SAP Configuration overview query",
      "styleSettings": {
        "maxWidth": "33"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| where name in ({system_SID}) or '*' in ({system_SID})\r\n| project id, location\r\n| summarize count() by location",
        "size": 3,
        "title": "Number of SAP Depoyment per region",
        "noDataMessage": "No VIS configuration found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visoverview"
        },
        {
          "parameterName": "Subscriptions",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "33",
      "name": "query -SAP Region deployment",
      "styleSettings": {
        "maxWidth": "33"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "994cb1bc-27de-48ea-8f38-7527d52f6935",
            "cellValue": "saplandscape",
            "linkTarget": "parameter",
            "linkLabel": "SAP Systems overview",
            "subTarget": "sapoverview",
            "preText": "SAP ",
            "style": "link"
          },
          {
            "id": "2613eef1-f693-4ee4-a857-3b2129af6362",
            "cellValue": "saplandscape",
            "linkTarget": "parameter",
            "linkLabel": "SAP Instance Overview",
            "subTarget": "sapinstanceoverview",
            "style": "link"
          },
          {
            "id": "0587c130-dabc-428d-9715-0f97b113e93a",
            "cellValue": "saplandscape",
            "linkTarget": "parameter",
            "linkLabel": "SAP SID Overview",
            "subTarget": "sapsidoverview",
            "style": "link"
          },
          {
            "id": "f93c0bb3-325e-4d2e-8e8d-796700b424e5",
            "cellValue": "saplandscape",
            "linkTarget": "parameter",
            "linkLabel": "OS Configuration Checks",
            "subTarget": "oschecks",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "saplandcape"
        }
      ],
      "name": "links - VIS SAP Landscape Links"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances' or type=~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n| extend SID = tostring(split(id,\"/\",8)[0])\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n| project  SID= tostring(split(id,\"/\",8)[0]), SAPVMName=tostring(split(properties.virtualMachineId,\"/\",8)[0]) , Instancename=name, type = tostring(split(type,\"/\",2)[0]), status=properties.status, health=tostring(properties.health)\r\n| summarize count() by SID",
        "size": 0,
        "title": "SAP System Overview",
        "noDataMessage": "VIS SAP Configuration not found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "graph",
        "graphSettings": {
          "type": 2,
          "topContent": {
            "columnMatch": "SID",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "nodeIdField": "SID",
          "graphOrientation": 3,
          "showOrientationToggles": false,
          "nodeSize": null,
          "staticNodeSize": 100,
          "colorSettings": {
            "nodeColorField": "health",
            "type": 3,
            "thresholdsGrid": [
              {
                "operator": "Default",
                "thresholdValue": null,
                "representation": "lightBlue"
              }
            ]
          },
          "hivesMargin": 5,
          "edgeColorSettings": null
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "saplandcape"
        },
        {
          "parameterName": "saplandscape",
          "comparison": "isEqualTo",
          "value": "sapoverview"
        }
      ],
      "name": "query - VIS SAP Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances' or type=~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n| extend SID = tostring(split(id,\"/\",8)[0])\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n| project  SID = tostring(split(id,\"/\",8)[0]), id, hostname=properties.hostname , resourceGroup, InstanceNumber= properties.instanceNo, Instancename=name, type = tostring(split(type,\"/\",2)[0]), SAPKernel= properties.kernelVersion, SAPkernelPatch= properties.kernelPatch, location, tags\r\n\r\n",
        "size": 2,
        "title": "SAP Instance Overview",
        "noDataMessage": "No VIS configuration",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Instancename",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Instance"
            },
            {
              "columnId": "hostname",
              "label": "Hostname"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "InstanceNumber",
              "label": "Instance No."
            },
            {
              "columnId": "Instancename",
              "label": "Name"
            },
            {
              "columnId": "type",
              "label": "Type"
            },
            {
              "columnId": "location",
              "label": "Azure Region"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "saplandcape"
        },
        {
          "parameterName": "saplandscape",
          "comparison": "isEqualTo",
          "value": "sapinstanceoverview"
        }
      ],
      "name": "query - VIS SAP Instance Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances'\r\n| where name in ({system_SID}) or '*' in ({system_SID})\r\n| project id, Landscape= tostring(properties.environment), type = tostring(split(type,\"/\",1)[0]) , configtype= tostring(properties.configuration.configurationType), sapProduct = properties.sapProduct, resourceGroup, tags",
        "size": 0,
        "title": "SAP SID Overview",
        "noDataMessage": "VIS SAP Configuration not found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "SID"
            },
            {
              "columnId": "type",
              "label": "Type"
            },
            {
              "columnId": "configtype",
              "label": "Configtype"
            },
            {
              "columnId": "sapProduct",
              "label": "SAP Product"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "saplandcape"
        },
        {
          "parameterName": "saplandscape",
          "comparison": "isEqualTo",
          "value": "sapsidoverview"
        }
      ],
      "name": "query - SAP SID Overview"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "9f074747-c5c9-4c79-bac1-76dde4810b2d",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "Compute Overview",
            "subTarget": "computeoverview",
            "style": "link"
          },
          {
            "id": "9b1e36a8-780e-4a9f-8847-46893f66faf6",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "Compute List",
            "subTarget": "VMList",
            "style": "link"
          },
          {
            "id": "bcd43e03-ea50-4b35-8639-f100b98fbed2",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "Compute+OS Disk",
            "subTarget": "computeos",
            "style": "link"
          },
          {
            "id": "970a0c00-222a-447f-9fe6-72bfb3b817ca",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "Managed Data Disk",
            "subTarget": "datadisk",
            "style": "link"
          },
          {
            "id": "8621b6d9-8dee-43ce-84a7-d95bebb57a3d",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "Compute Extension",
            "subTarget": "Extension",
            "style": "link"
          },
          {
            "id": "a45e3a03-086b-43e0-a23c-2cfbee127003",
            "cellValue": "compute",
            "linkTarget": "parameter",
            "linkLabel": "VM Stats",
            "subTarget": "vmstats",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        }
      ],
      "name": "links - compute overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| extend vmState = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n| extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n| summarize count() by vmState",
        "size": 3,
        "title": "Azure Compute Status  Overview",
        "noDataMessage": "No compute detected",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "ySettings": {
            "numberFormatSettings": {
              "unit": 0,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "computeoverview"
        }
      ],
      "customWidth": "50",
      "name": "VIS -Compute Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | where type =~ 'Microsoft.Compute/virtualMachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| extend licenseType = tostring(properties.['licenseType'])\r\n| extend HybridBenefit = iif(properties.licenseType == \"Windows_Server\", \"Azure Hybrid Benefit\", \"Not Enabled\")\r\n| project id,OStype =tostring(properties.storageProfile.osDisk.osType),licenseType,HybridBenefit,location, resourceGroup\r\n| extend licenseType = iif(isempty(licenseType), \"Blank/PAYG\", (licenseType))\r\n| summarize count() by licenseType",
        "size": 3,
        "title": "Azure Compute OS License Type",
        "noDataMessage": "No license data detected",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "computeoverview"
        }
      ],
      "customWidth": "50",
      "name": "VIS - VM OS License Type"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.compute/virtualMachines\"\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| project id, vmName = name, powerstate = tostring(properties.extended.instanceView.powerState.displayStatus), vmsize = tostring(properties.hardwareProfile.vmSize), \r\n os_type = tostring(properties.storageProfile.osDisk.osType),publisher= tostring(properties.storageProfile.imageReference.publisher), version= tostring(properties.storageProfile.imageReference.version), imagesku= tostring(properties.storageProfile.imageReference.sku) ,offer= tostring(properties.storageProfile.imageReference.offer),\r\n  location, bootDiagnostics =tostring(properties.diagnosticsProfile.bootDiagnostics.enabled) ,avSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0])\r\n, ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]), avZone = tostring(zones), resourceGroup, tags=tostring(tags)",
        "size": 2,
        "title": "VM Compute List",
        "noDataMessage": "No VM found for the selection",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "14ch"
              }
            },
            {
              "columnMatch": "vmName",
              "formatter": 5
            },
            {
              "columnMatch": "publisher",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "representation": "1",
                    "text": "{0}BYOL/BYOS"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "imagesku",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "gen2",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "gensecond",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "1",
                    "text": "{0}Review"
                  }
                ]
              }
            },
            {
              "columnMatch": "bootDiagnostics",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "true",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "!=",
                    "thresholdValue": "true",
                    "representation": "1",
                    "text": "{0}Review"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "powerstate",
              "label": "VM State"
            },
            {
              "columnId": "os_type",
              "label": "OS Type"
            },
            {
              "columnId": "publisher",
              "label": "Image Publisher"
            },
            {
              "columnId": "version",
              "label": "Image Version"
            },
            {
              "columnId": "imagesku",
              "label": "Image SKU"
            },
            {
              "columnId": "location",
              "label": "Azure Region"
            },
            {
              "columnId": "bootDiagnostics",
              "label": "Boot Diagnostic"
            },
            {
              "columnId": "avSet",
              "label": "AvSet"
            },
            {
              "columnId": "ppg",
              "label": "PPG"
            },
            {
              "columnId": "avZone",
              "label": "AvZone"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "VMList"
        }
      ],
      "name": "query - VM Compute List"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n//| mv-expand datadisks = properties.storageProfile.dataDisks\r\n| project id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), osDisk = tostring(properties.storageProfile.osDisk.name), ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]), caching= tostring(properties.storageProfile.osDisk.caching)\r\n, createOption=tostring(properties.storageProfile.osDisk.createOption), osType=tostring(properties.storageProfile.osDisk.osType), avSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0])\r\n| join ( \r\nresources\r\n| where type == \"microsoft.compute/disks\"\r\n| project id1=id, diskname=name, osDisk=tostring(split(id,\"/\",8)[0]), vmName=tostring(split(managedBy,\"/\",8)[0]), sku =sku.name, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB), \r\n diskbandwidthMBps = tostring(properties.diskMBpsReadWrite), disk_iops = tostring(properties.diskIOPSReadWrite),  managedBy, location, resourceGroup\r\n)\r\non vmName, osDisk\r\n| where resourceGroup in ({Resource_Group}) or '*' in ({Resource_Group})\r\n| project id, vmName, vmSize, osType, id1, diskname, sku, caching,disk_tier, disk_size_GB,diskbandwidthMBps, disk_iops, createOption, location, resourceGroup , ppg , avSet",
        "size": 0,
        "title": "Compute+OS Disk Overview",
        "noDataMessage": "No OS disk found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "vmName",
              "formatter": 5
            },
            {
              "columnMatch": "vmSize",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "18ch"
              }
            },
            {
              "columnMatch": "osType",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "8ch"
              }
            },
            {
              "columnMatch": "diskname",
              "formatter": 5
            },
            {
              "columnMatch": "sku",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Premium",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "caching",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "12ch"
              }
            },
            {
              "columnMatch": "disk_tier",
              "formatter": 5
            },
            {
              "columnMatch": "disk_size_GB",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "14ch"
              }
            },
            {
              "columnMatch": "disk_iops",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "createOption",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "vmName",
              "label": "Name"
            },
            {
              "columnId": "vmSize",
              "label": "SKU"
            },
            {
              "columnId": "osType",
              "label": "OS"
            },
            {
              "columnId": "id1",
              "label": "Disk Name"
            },
            {
              "columnId": "diskname",
              "label": "Disk name"
            },
            {
              "columnId": "sku",
              "label": "Disk SKU"
            },
            {
              "columnId": "caching",
              "label": "Caching"
            },
            {
              "columnId": "disk_tier",
              "label": "Tier"
            },
            {
              "columnId": "disk_size_GB",
              "label": "Size (GB)"
            },
            {
              "columnId": "diskbandwidthMBps",
              "label": "MBps"
            },
            {
              "columnId": "disk_iops",
              "label": "IOPS"
            },
            {
              "columnId": "createOption",
              "label": "CreateOption"
            },
            {
              "columnId": "location",
              "label": "Azure Region"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "ppg",
              "label": "PPG"
            },
            {
              "columnId": "avSet",
              "label": "AvSet"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "computeos"
        }
      ],
      "name": "VIS - Compute+OS Query"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources \r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| mv-expand datadisks = properties.storageProfile.dataDisks\r\n| project id, vmName = name, \r\n vmSize= tostring(properties.hardwareProfile.vmSize), os_type = tostring(properties.storageProfile.osDisk.osType),\r\n datadisk_lun = toint(datadisks.lun),  datadisk_name = tostring(datadisks.name), datadisksize = tostring(datadisks.diskSizeGB), \r\n datadisk_cache = tostring(datadisks.caching), datadisk_wa = tostring(datadisks.writeAcceleratorEnabled)\r\n//| summarize by vmName,  location, powerstate, avZone, avSet, ppg, vmSize, osname, vmgen, datadisklun, datadiskname, datadisksize, datadiskcache, datadiskwa\r\n| join kind = leftouter  ( \r\nresources\r\n| where type == \"microsoft.compute/disks\"\r\n| parse managedBy with * \"/virtualMachines/\" vmName\r\n| parse id with * \"/disks/\" datadisk_name \r\n| project id1=id, sku.name, disk_tier = tostring(properties.tier), disk_size_GB = tostring(properties.diskSizeGB), \r\n diskbandwidthMBps = tostring(properties.diskMBpsReadWrite), disk_iops = tostring(properties.diskIOPSReadWrite),  datadisk_name, vmName, managedBy, location, resourceGroup\r\n)\r\non vmName, datadisk_name\r\n| project-away datadisk_name, datadisk_name1, vmName1,  managedBy\r\n| sort by vmName asc , datadisk_lun asc\r\n//| distinct datadisk_name",
        "size": 2,
        "title": "Managed Data Disk Overview",
        "noDataMessage": "No Managed Data Disk found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "13ch"
              }
            },
            {
              "columnMatch": "vmName",
              "formatter": 5
            },
            {
              "columnMatch": "vmSize",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "vmSize",
              "label": "VM SKU"
            },
            {
              "columnId": "os_type",
              "label": "OS Type"
            },
            {
              "columnId": "datadisk_lun",
              "label": "LUN"
            },
            {
              "columnId": "datadisksize",
              "label": "Disk SKU"
            },
            {
              "columnId": "datadisk_cache",
              "label": "Disk Cache"
            },
            {
              "columnId": "datadisk_wa",
              "label": "WA"
            },
            {
              "columnId": "id1",
              "label": "Disk Name"
            },
            {
              "columnId": "sku_name",
              "label": "Disk SKU"
            },
            {
              "columnId": "disk_tier",
              "label": "Disk Tier"
            },
            {
              "columnId": "disk_size_GB",
              "label": "Disk Size"
            },
            {
              "columnId": "diskbandwidthMBps",
              "label": "Disk BW"
            },
            {
              "columnId": "disk_iops",
              "label": "Disk IOPS"
            },
            {
              "columnId": "location",
              "label": "Azure Region"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "datadisk"
        }
      ],
      "name": "query - Managed Data Disk Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == 'microsoft.compute/virtualmachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| extend\r\n    JoinID = toupper(id),\r\n    OSName = tostring(properties.osProfile.computerName),\r\n    OSType = tostring(properties.storageProfile.osDisk.osType),\r\n    VMSize = tostring(properties.hardwareProfile.vmSize)\r\n| join kind=leftouter(\r\n    Resources\r\n    | where type == 'microsoft.compute/virtualmachines/extensions'\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions')))\r\n        ,ExtensionName = name\r\n    , provisioningState = tostring(properties.provisioningState), autoUpgradeMinorVersion= tostring(properties.autoUpgradeMinorVersion), typeHandlerVersion= tostring(properties.typeHandlerVersion)\r\n) on $left.JoinID == $right.VMId\r\n| summarize Extensions = make_list(ExtensionName) by id, VMSize, OSType, provisioningState, autoUpgradeMinorVersion, typeHandlerVersion, resourceGroup",
        "size": 0,
        "title": "VM Extensions",
        "noDataMessage": "No VM Extension found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "id",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "14ch"
              }
            },
            {
              "columnMatch": "VMSize",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "OSType",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "resourceGroup",
              "formatter": 5
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "VMSize",
              "label": "VM SKU"
            },
            {
              "columnId": "OSType",
              "label": "OS Type"
            },
            {
              "columnId": "provisioningState",
              "label": "Status"
            },
            {
              "columnId": "autoUpgradeMinorVersion",
              "label": "Auto-Upgrade"
            },
            {
              "columnId": "typeHandlerVersion",
              "label": "Version"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "Extensions",
              "label": "Extension"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        },
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "Extension"
        }
      ],
      "name": "query - Extension List"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "6a64934e-9fed-4511-9677-9212c854cc6f",
                  "version": "KqlParameterItem/1.0",
                  "name": "VirtualMachines",
                  "type": 5,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| where type =~ 'Microsoft.Workloads/sapVirtualInstances/centralInstances' or type =~ 'Microsoft.Workloads/sapVirtualInstances/databaseInstances'\r\n| extend visId = split(split(id, '/centralInstances')[0], '/databaseInstances')[0] // getting the VIS id out of child resource\r\n| extend SID = tostring(split(visId,\"/\",8)[0])\r\n//| extend visList = split('{system_SID:id}', ', ') // split the selected vis list in array to search\r\n//| where set_has_element(visList, tostring(visId)) == 1 //check if the running vis exists in selected vis id.\r\n| mv-expand properties.vmDetails\r\n| extend vmID = tostring(properties_vmDetails.virtualMachineId)\r\n| where strlen(vmID) > 0\r\n| extend vmRole = split(type, \"/\")[2]\r\n//| extend vmRole = \"qwertyuiop\"\r\n//| project visVMId = strcat(tolower(vmID), \", \", SID, \", \", vmRole)\r\n| project visVMId = strcat(tolower(vmID)), SID, vmRole\r\n| union(\r\nresources\r\n        | where type =~ 'Microsoft.Workloads/sapVirtualInstances/applicationInstances'\r\n        | extend visId = split(id, '/applicationInstances')[0]\r\n //       | extend visList = split('{system_SID:id}', ', ') \r\n        | extend SID = tostring(split(visId,\"/\",8)[0])\r\n        // split the selected vis list in array to search\r\n//        | where set_has_element(visList, tostring(visId)) == 1\r\n        | extend vmID = tostring(properties.virtualMachineId)\r\n        | where strlen(vmID) > 0\r\n        | extend vmRole = split(type, \"/\")[2]\r\n        //| extend vmRole = \"qwertyuiop\"\r\n    //    | project visVMId = strcat(tolower(vmID), \", \",SID , \", \", vmRole)\r\n    | project visVMId = strcat(tolower(vmID)), SID, vmRole\r\n        )\r\n| extend VIS_VMs = tostring(split(visVMId,\"/\",8)[0])\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n//| project VIS_VMs\r\n| distinct visVMId\r\n| order by visVMId asc\r\n| extend Rank = row_number()\r\n| project value = visVMId, label = visVMId, selected = Rank <= 200\r\n\r\n",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "08131869-a1dc-4dd7-9047-85bd1e6b6825",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": false
                  },
                  "value": {
                    "durationMs": 2592000000
                  }
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbook810f4a4c-0149-4243-9976-cc4958d7b9d5",
              "version": "MetricsItem/2.0",
              "size": 0,
              "chartType": 0,
              "resourceType": "microsoft.compute/virtualmachines",
              "metricScope": 0,
              "resourceParameter": "VirtualMachines",
              "resourceIds": [
                "{VirtualMachines}"
              ],
              "timeContextFromParameter": "TimeRange",
              "timeContext": {
                "durationMs": 2592000000
              },
              "metrics": [
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                  "aggregation": 4,
                  "columnName": "%CPU Usage"
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Disk Read Bytes",
                  "aggregation": 1
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Disk Write Bytes",
                  "aggregation": 1
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Network In Total",
                  "aggregation": 1
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Network Out Total",
                  "aggregation": 1
                }
              ],
              "title": "VM Monitoring Key Metrics",
              "resourceLimit": 1000,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subscription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "%CPU Usage",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue",
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "%CPU Usage Timeline",
                    "formatter": 9,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Disk Read Bytes",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Disk Read Bytes Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Disk Write Bytes",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Disk Write Bytes Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network In Total",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network In Total Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network Out Total",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "%CPU Usage",
                    "label": "%CPU Usage"
                  },
                  {
                    "columnId": "%CPU Usage Timeline",
                    "label": "%CPU Usage Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Disk Read Bytes",
                    "label": "Disk Read Bytes (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Disk Read Bytes Timeline",
                    "label": "Disk Read Bytes Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Disk Write Bytes",
                    "label": "Disk Write Bytes (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Disk Write Bytes Timeline",
                    "label": "Disk Write Bytes Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network In Total",
                    "label": "Network In Total (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network In Total Timeline",
                    "label": "Network In Total Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network Out Total",
                    "label": "Network Out Total (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                    "label": "Network Out Total Timeline"
                  }
                ]
              }
            },
            "name": "VIS - Stats metric"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "compute",
          "comparison": "isEqualTo",
          "value": "vmstats"
        },
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "viscompute"
        }
      ],
      "name": "group - VM Stats"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "8935cfa5-b304-4d01-aac9-698460187241",
            "cellValue": "config",
            "linkTarget": "parameter",
            "linkLabel": "Accelerated Networking",
            "subTarget": "aan",
            "style": "link"
          },
          {
            "id": "8d909809-a0e3-42b9-bd9f-3682a0e1233d",
            "cellValue": "config",
            "linkTarget": "parameter",
            "linkLabel": "Backup",
            "subTarget": "backup",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visconfiguration"
        }
      ],
      "name": "links - Configuration Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources \r\n| where type =~ 'microsoft.compute/virtualmachines' \r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces) \r\n| mv-expand nic=properties.networkProfile.networkInterfaces \r\n//| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic) \r\n| project id, vmName = name, az = tostring(zones), vmSize = tostring(properties.hardwareProfile.vmSize), AvSet= tostring(split(properties.availabilitySet.id,\"/\",8)[0]), ppg = tostring(split(properties.proximityPlacementGroup.id,\"/\",8)[0]),  nicId = tostring(nic.id) \r\n| join kind=leftouter ( \r\n  Resources \r\n  | where type =~ 'microsoft.network/networkinterfaces' \r\n  | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n  | mv-expand ipconfig=properties.ipConfigurations \r\n  //| where ipconfig.properties.primary =~ 'true' \r\n  | project nicId = id, ipaddress = tostring(ipconfig.properties.privateIPAddress), AcceleratedNetworkingOn = tostring(properties.enableAcceleratedNetworking)) on nicId \r\n| summarize by id, nicId, vmName,vmSize,AcceleratedNetworkingOn,ipaddress, AvSet, ppg,  az   ",
        "size": 2,
        "title": "Accelerated Networking",
        "noDataMessage": "No data found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "vmName",
              "formatter": 5
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "nicId",
              "label": "NIC"
            },
            {
              "columnId": "vmSize",
              "label": "VM SKU"
            },
            {
              "columnId": "ipaddress",
              "label": "IP Address"
            },
            {
              "columnId": "az",
              "label": "AvZone"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visconfiguration"
        },
        {
          "parameterName": "config",
          "comparison": "isEqualTo",
          "value": "aan"
        }
      ],
      "name": "query - Accelerated Networking Overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type in~ ('microsoft.compute/virtualmachines','microsoft.classiccompute/virtualmachines') \r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| extend resourceId=tolower(id) \r\n| join kind = leftouter ( RecoveryServicesResources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.backupManagementType == \"AzureIaasVM\"\r\n| project resourceId = tolower(tostring(properties.sourceResourceId)), backupItemid = id, isBackedUp = isnotempty(id) ) on resourceId \r\n| extend isProtected = isnotempty(backupItemid)\r\n| where (isProtected == (0))\r\n| project id,name,resourceGroup,location,tags",
        "size": 2,
        "title": "VMs with no Azure Backup",
        "noDataMessage": "No VM found without Azure Backup",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "tags",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "100ch"
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Azure Region"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "visconfiguration"
        },
        {
          "parameterName": "config",
          "comparison": "isEqualTo",
          "value": "backup"
        }
      ],
      "name": "query - VM's with no backup Backup"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations' \r\n| where properties.lastUpdated >=ago(1d)\r\n| extend visId = split(split(split(id, '/centralInstances')[0], '/applicationInstances')[0], '/databaseInstances')[0]\r\n| extend SID= tostring(split(['id'], \"/\",8)[0])\r\n| extend resourceId = tostring(properties.resourceMetadata.resourceId)\r\n| extend impactedField = properties.impactedField\r\n| extend resourceTypeName = \"Database\"\r\n| extend impact = properties.impact\r\n| extend resourceTypeName = iff(impactedField has \"centralInstances\", \"Central service instance\", resourceTypeName)\r\n| extend resourceTypeName = iff(impactedField has \"applicationInstances\", \"App server instance\", resourceTypeName)\r\n| where SID in ({system_SID}) or '*' in ({system_SID})\r\n| project resourceId, resourceTypeName, visId, impact, properties.shortDescription.solution, properties.category, properties.lastUpdated, SID",
        "size": 0,
        "title": "OS Configuration Checks",
        "noDataMessage": "No OS configuration observations found for the selected SAP system",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "resourceId",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "18ch"
              }
            },
            {
              "columnMatch": "resourceTypeName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "visId",
              "formatter": 5
            },
            {
              "columnMatch": "properties_shortDescription_solution",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "100ch"
              }
            },
            {
              "columnMatch": "SID",
              "formatter": 5
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "resourceId",
              "label": "SAP Instance"
            },
            {
              "columnId": "resourceTypeName",
              "label": "Type"
            },
            {
              "columnId": "impact",
              "label": "Impact"
            },
            {
              "columnId": "properties_shortDescription_solution",
              "label": "Description"
            },
            {
              "columnId": "properties_category",
              "label": "WAF Pillar"
            },
            {
              "columnId": "properties_lastUpdated",
              "label": "Last Updated"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "saplandcape"
        },
        {
          "parameterName": "saplandscape",
          "comparison": "isEqualTo",
          "value": "oschecks"
        }
      ],
      "name": "query - WAF"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "890a9d4f-bb4f-4846-bf1a-4f534033c464",
                  "version": "KqlParameterItem/1.0",
                  "name": "VirtualMachines",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where type =~ 'microsoft.compute/virtualmachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n\t| order by name asc\r\n\t| extend Rank = row_number()\r\n\t| project value = id, label = id, selected = Rank <= 25",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1",
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "bf0e62cf-f2dd-491f-988e-782b334c4522",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": {
                    "durationMs": 5184000000
                  }
                },
                {
                  "id": "02b03e23-7c0c-4909-89c5-8b1b62b687d3",
                  "version": "KqlParameterItem/1.0",
                  "name": "Message",
                  "type": 1,
                  "query": "where type == 'microsoft.compute/virtualmachines'\r\n| where name in ({VIS_VMs}) or '*' in ({VIS_VMs})\r\n| summarize Selected = countif(id in ({VirtualMachines:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "{Message}\r\n_Virtual machines_"
            },
            "name": "VIS Monitoring - VM Message"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "83583394-3202-4227-a74a-0dfda8e91d26",
                  "cellValue": "vismonitor",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "visoverview",
                  "preText": "Overview",
                  "style": "link"
                },
                {
                  "id": "9e591696-0138-407f-a7c4-df3881b555e4",
                  "cellValue": "vismonitor",
                  "linkTarget": "parameter",
                  "linkLabel": "Key Metrics",
                  "subTarget": "viskeymetrics",
                  "preText": "Key Metrics",
                  "style": "link"
                },
                {
                  "id": "9682d94f-a7f8-4fbc-8f71-362e6ed87951",
                  "cellValue": "vismonitor",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Resource Health",
                  "subTarget": "visresourcehealth",
                  "style": "link"
                },
                {
                  "id": "da31164b-f557-4f55-9cef-26636717ba1b",
                  "cellValue": "vismonitor",
                  "linkTarget": "parameter",
                  "linkLabel": "Compute Change Analysis",
                  "subTarget": "viscomputechange",
                  "style": "link"
                }
              ]
            },
            "name": "VIS Monitor - Links"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbook27f9ed5d-a85d-42b3-afa6-f6738ff3dcb5",
              "version": "MetricsItem/2.0",
              "size": 0,
              "chartType": -3,
              "resourceType": "microsoft.compute/virtualmachines",
              "metricScope": 0,
              "resourceParameter": "VirtualMachines",
              "resourceIds": [
                "{VirtualMachines}"
              ],
              "timeContext": {
                "durationMs": 3600000
              },
              "metrics": [
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                  "aggregation": 4
                }
              ],
              "title": "Virtual Machine CPU Usage",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "Name",
                  "formatter": 13,
                  "formatOptions": {
                    "linkTarget": "Resource",
                    "showIcon": false
                  }
                },
                "centerContent": {
                  "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "hivesContent": {
                  "columnMatch": "Subscription",
                  "formatter": 1
                },
                "nodeIdField": "Name",
                "graphOrientation": 3,
                "showOrientationToggles": false,
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "microsoft.compute/virtualmachines--Percentage CPU",
                  "type": 4,
                  "heatmapPalette": "greenRed",
                  "heatmapMin": 30,
                  "heatmapMax": 80,
                  "emptyValueColor": "gray"
                },
                "groupByField": "Subscription",
                "hivesMargin": 5,
                "edgeColorSettings": null
              },
              "resourceLimit": 1000,
              "gridSettings": {
                "rowLimit": 10000
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Resource_Filter",
                "comparison": "isEqualTo",
                "value": "VIS"
              },
              {
                "parameterName": "vis",
                "comparison": "isEqualTo",
                "value": "vismonitoring"
              },
              {
                "parameterName": "vismonitor",
                "comparison": "isEqualTo",
                "value": "visoverview"
              }
            ],
            "name": "VIS Monitor - CPU Usage"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureHealthQuery/1.0\",\"queryType\":\"Detailed\"}",
              "size": 0,
              "title": "Azure Compute Resource Health",
              "noDataMessage": "No Azure Resource Health data found",
              "showExportToExcel": true,
              "queryType": 4,
              "resourceType": "microsoft.compute/virtualmachines",
              "crossComponentResources": [
                "{VirtualMachines}"
              ],
              "visualization": "graph",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "Availability state",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Name",
                  "formatter": 13,
                  "formatOptions": {
                    "linkTarget": "Resource",
                    "subTarget": "resourcehealth",
                    "linkIsContextBlade": true,
                    "showIcon": false
                  }
                },
                "nodeIdField": "Name",
                "graphOrientation": 3,
                "showOrientationToggles": false,
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "Availability state",
                  "type": 3,
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Available",
                      "representation": "green"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "brown"
                    }
                  ]
                },
                "hivesMargin": 5,
                "edgeColorSettings": null
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Resource_Filter",
                "comparison": "isEqualTo",
                "value": "VIS"
              },
              {
                "parameterName": "vis",
                "comparison": "isEqualTo",
                "value": "vismonitoring"
              },
              {
                "parameterName": "vismonitor",
                "comparison": "isEqualTo",
                "value": "visresourcehealth"
              }
            ],
            "name": "VIS Monitor - Azure Resource Health"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"ChangeAnalysis/1.0\",\"changeLevels\":[\"Important\"]}",
              "size": 0,
              "showAnalytics": true,
              "title": "Compute Change Analysis - Select one VM at a time",
              "noDataMessage": "No data found",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 13,
              "resourceType": "microsoft.compute/virtualmachines",
              "crossComponentResources": [
                "{VirtualMachines}"
              ],
              "visualization": "table",
              "gridSettings": {
                "rowLimit": 1000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Level",
                    "label": "Level"
                  },
                  {
                    "columnId": "Resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "Time",
                    "label": "Time"
                  },
                  {
                    "columnId": "Category",
                    "label": "Category"
                  },
                  {
                    "columnId": "PropertyChanged",
                    "label": "Property Changed"
                  },
                  {
                    "columnId": "JsonPath",
                    "label": "JSON Path"
                  },
                  {
                    "columnId": "Description",
                    "label": "Description"
                  },
                  {
                    "columnId": "OldValue",
                    "label": "Old Value"
                  },
                  {
                    "columnId": "NewValue",
                    "label": "New Value"
                  },
                  {
                    "columnId": "InitiatedBy",
                    "label": "Initiated By"
                  },
                  {
                    "columnId": "FakeAggregation",
                    "label": "Tally"
                  },
                  {
                    "columnId": "ChangeDetails",
                    "label": "Change Details"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Resource_Filter",
                "comparison": "isEqualTo",
                "value": "VIS"
              },
              {
                "parameterName": "vis",
                "comparison": "isEqualTo",
                "value": "vismonitoring"
              },
              {
                "parameterName": "vismonitor",
                "comparison": "isEqualTo",
                "value": "viscomputechange"
              }
            ],
            "name": "VIS Monitor - Change Analysis"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbookd6fc1bfa-3416-43fb-a49e-f3cb76fd23d9",
              "version": "MetricsItem/2.0",
              "size": 3,
              "chartType": 0,
              "resourceType": "microsoft.compute/virtualmachines",
              "metricScope": 0,
              "resourceParameter": "VirtualMachines",
              "resourceIds": [
                "{VirtualMachines}"
              ],
              "timeContext": {
                "durationMs": 3600000
              },
              "metrics": [
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                  "aggregation": 4
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec",
                  "aggregation": 7
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Data Disk Write Bytes/sec",
                  "aggregation": 7
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Network In Total",
                  "aggregation": 1
                },
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--Network Out Total",
                  "aggregation": 1
                }
              ],
              "title": "Compute Key Metrics",
              "resourceLimit": 1000,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subscription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Data Disk Write Bytes/sec",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 11,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Data Disk Write Bytes/sec Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network In Total",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network In Total Timeline",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network Out Total",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "microsoft.compute/virtualmachines--Percentage CPU",
                    "label": "Percentage CPU (Average)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                    "label": "Percentage CPU Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec",
                    "label": "Data Disk Read Operations/Sec (Count)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec Timeline",
                    "label": "Data Disk Read Operations/Sec Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Data Disk Write Bytes/sec",
                    "label": "Data Disk Write Bytes/Sec (Count)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Data Disk Write Bytes/sec Timeline",
                    "label": "Data Disk Write Bytes/Sec Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network In Total",
                    "label": "Network In Total (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network In Total Timeline",
                    "label": "Network In Total Timeline"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network Out Total",
                    "label": "Network Out Total (Sum)"
                  },
                  {
                    "columnId": "microsoft.compute/virtualmachines--Network Out Total Timeline",
                    "label": "Network Out Total Timeline"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Resource_Filter",
                "comparison": "isEqualTo",
                "value": "VIS"
              },
              {
                "parameterName": "vis",
                "comparison": "isEqualTo",
                "value": "vismonitoring"
              },
              {
                "parameterName": "vismonitor",
                "comparison": "isEqualTo",
                "value": "viskeymetrics"
              }
            ],
            "name": "VIS Monitor - Key Metrics"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Resource_Filter",
          "comparison": "isEqualTo",
          "value": "VIS"
        },
        {
          "parameterName": "vis",
          "comparison": "isEqualTo",
          "value": "vismonitoring"
        }
      ],
      "name": "VIS Group - Monitoring & Service Health"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}