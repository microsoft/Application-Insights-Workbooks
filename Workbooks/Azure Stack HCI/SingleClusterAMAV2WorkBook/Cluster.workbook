{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2c3bd553-1307-4363-97c7-e2b1bc3d543e",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 14400000
            }
          },
          {
            "id": "837cf92d-3c98-44df-9657-3545ee0c9301",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "value": "overviewTab"
          },
          {
            "id": "9b253dd6-24fa-4c72-bc24-0018d2e12ad2",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.azurestackhci/clusters": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false,
              "componentIdOnly": true
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "defaultValue": "value::1"
          },
          {
            "id": "a2819ef5-be31-4529-84d3-80fe6c549d25",
            "version": "KqlParameterItem/1.0",
            "name": "workspaceId",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 14400000
            }
          },
          {
            "id": "7df63c3f-33eb-446d-b905-f577d4292769",
            "version": "KqlParameterItem/1.0",
            "name": "loganalytics",
            "label": "Log analytics",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'Microsoft.OperationalInsights/workspaces'\r\n| where properties.customerId =~ \"{workspaceId}\"\r\n| project id",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f0ad1bbb-e939-4e63-9327-56e7aaf86ab8",
            "version": "KqlParameterItem/1.0",
            "name": "lastCorrelationId",
            "type": 2,
            "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterArmId = '{resource}'\r\n| extend description = parse_json(RenderedDescription)\r\n| where description.ArmId =~ ClusterArmId\r\n| where description.IsLastMessage =~ 'true'\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| summarize arg_max(TimeGenerated, CorrelationId) by ClusterArmId\r\n| project lastCorrelationId = CorrelationId",
            "crossComponentResources": [
              "{loganalytics}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "62ac704f-082f-4b32-97d6-13a956339e05",
            "version": "KqlParameterItem/1.0",
            "name": "isHealthy",
            "type": 1,
            "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterArmId = '{resource}'\r\n| extend description = parse_json(RenderedDescription)\r\n| where description.ArmId =~ ClusterArmId\r\n| where description.IsLastMessage =~ 'true'\r\n| where description.CorrelationId =~ '{lastCorrelationId}'\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| project isHealthy = tostring(description.Fault == \"{}\")",
            "crossComponentResources": [
              "{loganalytics}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "acdae744-8f8b-422c-9e3b-9555687072d2",
            "version": "KqlParameterItem/1.0",
            "name": "version",
            "type": 1,
            "query": "Resources\r\n| where id =~ '{resource}'\r\n| extend clusterVersion = tostring(properties.reportedProperties.clusterVersion)\r\n| extend version = iff(parse_version(clusterVersion) < parse_version(\"10.0.20348\"), \"old\", iff(parse_version(clusterVersion) < parse_version(\"10.0.20349\"), \"21H2\", \"22H2\"))\r\n| project version",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": "old"
          },
          {
            "id": "752d8209-940a-4c8e-8cac-9b8c960df54b",
            "version": "KqlParameterItem/1.0",
            "name": "isMsiConfigured",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "supportedCapabilities",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{resource}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2022-12-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.reportedProperties.supportedCapabilities\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 12,
            "id": "229d8fba-15ba-4993-8a52-d654fc18586e"
          },
          {
            "id": "272574cf-a731-4c5a-b680-45e366567c8b",
            "version": "KqlParameterItem/1.0",
            "name": "prerequisite",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "version",
                  "operator": "!=",
                  "rightValType": "static",
                  "rightVal": "22H2",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "supportedCapabilities",
                  "operator": "notContains",
                  "rightValType": "static",
                  "rightVal": "ManagedIdentity",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "supportedCapabilities",
                  "operator": "notContains",
                  "rightValType": "static",
                  "rightVal": "CloudManagement",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "param",
                  "resultVal": "isMsiConfigured"
                }
              }
            ]
          },
          {
            "id": "3d63b25c-5ca9-44e9-909f-1df494d835af",
            "version": "KqlParameterItem/1.0",
            "name": "hideBanner",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": "false"
          },
          {
            "id": "f2c4af3c-730b-45d1-8986-bbb2a149c4c7",
            "version": "KqlParameterItem/1.0",
            "name": "DCR",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "ee5fd721-5e27-4497-bbac-a81365c6f0c2",
            "version": "KqlParameterItem/1.0",
            "name": "logAnalyticsWorkSpace",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "619700a3-0add-43da-8f98-de45f832f605",
            "version": "KqlParameterItem/1.0",
            "name": "allNodesMonitored",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "01f2fb60-5289-436a-9858-21906562e789",
            "version": "KqlParameterItem/1.0",
            "name": "isMMAInstalled",
            "type": 1,
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "HCI Parameters",
      "styleSettings": {
        "margin": "10",
        "padding": "10"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "The Azure Stack HCI cluster is configured using Microsoft Monitoring Agent and Azure Monitor Agent, it will result in duplication of data. Please uninstall Microsoft Monitoring Agent to avoid paying for duplicated data.  [Learn more](https://learn.microsoft.com/en-us/azure-stack/hci/manage/monitor-hci-single)",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isMMAInstalled",
          "comparison": "isEqualTo",
          "value": "true"
        },
        {
          "parameterName": "hideBanner",
          "comparison": "isEqualTo",
          "value": "false"
        }
      ],
      "name": "install AMA banner"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "You have added a new node in your cluster. To view data for this node, please visit the resource overview page and update your Insights configuration for the new node. [Learn more](https://learn.microsoft.com/en-us/azure-stack/hci/manage/monitor-hci-single?tabs=22h2-and-later#update-insights)",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "allNodesMonitored",
              "comparison": "isEqualTo",
              "value": "false"
            },
            "name": "text - 7"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "bc3e906a-6ccc-462f-8aab-334c69098cce",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "overviewTab",
                  "style": "link"
                },
                {
                  "id": "6338feb7-5d30-4390-9a06-5de43131ee29",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Health",
                  "subTarget": "health",
                  "preText": "Overview",
                  "style": "link"
                },
                {
                  "id": "77337040-0e9f-4848-8ad8-4ecf61d11ae1",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Servers",
                  "subTarget": "server",
                  "preText": "Overview",
                  "style": "link"
                },
                {
                  "id": "5e6ba817-0355-406e-897f-e83d763f2d2a",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual machines",
                  "subTarget": "virtualMachines",
                  "style": "link"
                },
                {
                  "id": "98d18adc-ac1d-4b2e-ba1f-de5734b33f77",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Storage",
                  "subTarget": "storage",
                  "style": "link"
                }
              ]
            },
            "name": "Tabs"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "b201fb5c-3f22-4220-b573-c9befa2326b2",
                        "version": "KqlParameterItem/1.0",
                        "name": "connectionStatePill",
                        "label": "Monitoring status",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t{\\\"Connection states\\\": \\\"Enabled\\\"},\\r\\n\\t{\\\"Connection states\\\": \\\"Not enabled\\\"},\\r\\n\\t{\\\"Connection states\\\": \\\"Needs update\\\"}\\r\\n]\",\"transformers\":null}",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 8
                      },
                      {
                        "id": "70d4cab4-4c2d-48e2-827a-0d2030e13bb8",
                        "version": "KqlParameterItem/1.0",
                        "name": "emptyParam",
                        "label": "EmptyParam",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "dc42adc2-27ad-4e34-a0a9-1f49b90371ae",
                        "version": "KqlParameterItem/1.0",
                        "name": "WorkbookConnectionStatus",
                        "label": "workbook connection status",
                        "type": 9,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "28711880-c6f3-47df-b9c5-42f5b3ffdd7f",
                        "version": "KqlParameterItem/1.0",
                        "name": "enableWorkbook",
                        "label": "Enable Workbook",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "leftOperand": "WorkbookConnectionStatus",
                              "operator": "contains",
                              "rightValType": "static",
                              "rightVal": "Not enabled",
                              "resultValType": "static",
                              "resultVal": "abc"
                            }
                          },
                          {
                            "criteriaContext": {
                              "leftOperand": "WorkbookConnectionStatus",
                              "operator": "contains",
                              "rightValType": "static",
                              "rightVal": "Needs update",
                              "resultValType": "static",
                              "resultVal": "abc"
                            }
                          },
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "param",
                              "resultVal": "emptyParam"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "a7eee962-3b93-421c-ab3e-b8366c7f5cc0",
                        "version": "KqlParameterItem/1.0",
                        "name": "disableWorkbook",
                        "label": "Disable Workbook",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "leftOperand": "WorkbookConnectionStatus",
                              "operator": "contains",
                              "rightValType": "static",
                              "rightVal": "Enabled",
                              "resultValType": "static",
                              "resultVal": "xyz"
                            }
                          },
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "param",
                              "resultVal": "emptyParam"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "8a25bd1e-c03c-4872-8620-554b4efc1430",
                        "version": "KqlParameterItem/1.0",
                        "name": "WindowsEvents",
                        "type": 9,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{DCR}?api-version=2021-09-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.dataSources.windowsEventLogs[0].xPathQueries\",\"columns\":[]}}]}",
                        "isHiddenWhenLocked": true,
                        "queryType": 12
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "PerfCounters",
                        "type": 9,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{DCR}?api-version=2021-09-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.dataSources.performanceCounters[0].counterSpecifiers\",\"columns\":[]}}]}",
                        "isHiddenWhenLocked": true,
                        "queryType": 12,
                        "id": "687df58c-cd65-434c-9126-5aac52bac4d6"
                      },
                      {
                        "id": "834b1182-2964-4c19-ae07-e35e46cfcce0",
                        "version": "KqlParameterItem/1.0",
                        "name": "Events",
                        "type": 9,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "isHiddenWhenLocked": true
                      },
                      {
                        "id": "c4ea9ef7-a1f8-48a8-a51f-10ea567f459c",
                        "version": "KqlParameterItem/1.0",
                        "name": "EventsList",
                        "type": 1,
                        "query": "let events = dynamic([{Events}]);\r\n\r\nprint Column1 = events\r\n| mv-apply Column1 on (\r\n    summarize Column1 = make_list(Column1)\r\n);",
                        "crossComponentResources": [
                          "{loganalytics}"
                        ],
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "a6a3f592-fba5-4365-ae48-a22718a0b9b3",
                        "version": "KqlParameterItem/1.0",
                        "name": "EventsToPush",
                        "type": 1,
                        "query": "let eventsList = dynamic({EventsList});\r\nlet windowEvents = split(\"{WindowsEvents}\", \",\");\r\nprint set_union(eventsList, windowEvents);",
                        "crossComponentResources": [
                          "{loganalytics}"
                        ],
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "4022c476-3360-47cd-85a0-c898bed0b3bd",
                        "version": "KqlParameterItem/1.0",
                        "name": "EventsToPushForDisable",
                        "type": 1,
                        "query": "print set_difference(split(\"{WindowsEvents}\", \",\"), dynamic({EventsList}));",
                        "crossComponentResources": [
                          "{loganalytics}"
                        ],
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "20d31983-b05d-4238-9285-de49081a90e8",
                        "version": "KqlParameterItem/1.0",
                        "name": "DCRresponse",
                        "type": 1,
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{DCR}?api-version=2021-09-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":null}",
                        "isHiddenWhenLocked": true,
                        "queryType": 12
                      },
                      {
                        "id": "9cc14616-999b-4cdd-9022-2d6cfc5be955",
                        "version": "KqlParameterItem/1.0",
                        "name": "SelectedWorkbookName",
                        "type": 9,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "\"",
                        "delimiter": ",",
                        "isHiddenWhenLocked": true
                      },
                      {
                        "id": "1e7cf987-d77a-4b62-93d8-dee8e20264e6",
                        "version": "KqlParameterItem/1.0",
                        "name": "SelectedWorkbookDescription",
                        "type": 9,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "\"",
                        "delimiter": ",",
                        "isHiddenWhenLocked": true
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "action",
                        "type": 1,
                        "isGlobal": true,
                        "isHiddenWhenLocked": true,
                        "id": "ec11cd7e-b3af-4ac8-953a-5bab87bad1d0"
                      }
                    ],
                    "style": "pills",
                    "queryType": 12
                  },
                  "name": "overviewTab parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Enable monitoring for Azure Stack HCI features. [Learn more ](https://aka.ms/enable-hci-monitoring)\r\n"
                  },
                  "name": "overview text"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "4d083c54-32d2-4c4c-aa4b-7b5ecd0cb31a",
                        "cellValue": "{enableWorkbook}",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Enable selected",
                        "postText": "Enable selected",
                        "style": "link",
                        "icon": "Add",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{DCR}?api-version=2021-09-01-preview",
                          "headers": [],
                          "params": [],
                          "body": "{\r\n  \"location\": \"{DCRresponse:$.location}\",\r\n  \"name\": \"{DCRresponse:$.name}\",\r\n  \"properties\": {\r\n    \"dataFlows\": {DCRresponse:$.properties.dataFlows},\r\n    \"dataSources\": {\r\n      \"performanceCounters\": {DCRresponse:$.properties.dataSources.performanceCounters},\r\n      \"windowsEventLogs\": [{\r\n        \"name\": \"{DCRresponse:$.properties.dataSources.windowsEventLogs[0].name}\",\r\n        \"streams\": {DCRresponse:$.properties.dataSources.windowsEventLogs[0].streams},\r\n        \"xPathQueries\": {EventsToPush}\r\n      }]\r\n    },\r\n    \"destinations\": {DCRresponse:$.properties.destinations}\r\n  }\r\n}",
                          "responseType": "json",
                          "httpMethod": "PUT",
                          "description": "# Actions can potentially modify resources.\n## Please use caution and include a confirmation message in this description when authoring this command."
                        },
                        "bladeOpenContext": {
                          "bladeName": "WorkbookContextPane.ReactView",
                          "extensionName": "Microsoft_AzureStackHCI_PortalExtension",
                          "bladeJsonParameters": "{\r\n\t\t\"resourceId\": \"{resource}\",\r\n\t\t\"workbookName\": [{SelectedWorkbookName}],\r\n\t\t\"workbookDescription\": [{SelectedWorkbookDescription}],\r\n\t\t\"dcrData\": {DCRresponse},\r\n\t\t\"updatedWindowsEvents\": {EventsToPush},\r\n\t\t\"updatedPerformanceCounters\": {EventsToPush},\r\n\t\t\"action\": \"Enable\"\r\n}"
                        }
                      },
                      {
                        "id": "b57a554a-ffa7-466d-9a50-cd6f2ec45db9",
                        "cellValue": "{disableWorkbook}",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Disable selected",
                        "postText": "Disable selected",
                        "style": "link",
                        "icon": "Canceled",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{DCR}?api-version=2021-09-01-preview",
                          "headers": [],
                          "params": [],
                          "body": "{\r\n  \"location\": \"{DCRresponse:$.location}\",\r\n  \"name\": \"{DCRresponse:$.name}\",\r\n  \"properties\": {\r\n    \"dataFlows\": {DCRresponse:$.properties.dataFlows},\r\n    \"dataSources\": {\r\n      \"performanceCounters\": {DCRresponse:$.properties.dataSources.performanceCounters},\r\n      \"windowsEventLogs\": [{\r\n        \"name\": \"{DCRresponse:$.properties.dataSources.windowsEventLogs[0].name}\",\r\n        \"streams\": {DCRresponse:$.properties.dataSources.windowsEventLogs[0].streams},\r\n        \"xPathQueries\": {EventsToPushForDisable}\r\n      }]\r\n    },\r\n    \"destinations\": {DCRresponse:$.properties.destinations}\r\n  }\r\n}",
                          "httpMethod": "PUT",
                          "description": "# Actions can potentially modify resources.\n## Please use caution and include a confirmation message in this description when authoring this command."
                        },
                        "bladeOpenContext": {
                          "bladeName": "WorkbookContextPane.ReactView",
                          "extensionName": "Microsoft_AzureStackHCI_PortalExtension",
                          "bladeJsonParameters": "{\r\n\t\t\"resourceId\": \"{resource}\",\r\n\t\t\"workbookName\": [{SelectedWorkbookName}],\r\n\t\t\"workbookDescription\": [{SelectedWorkbookDescription}],\r\n\t\t\"dcrData\": {DCRresponse},\r\n\t\t\"updatedWindowsEvents\": {EventsToPush},\r\n\t\t\"updatedPerformanceCounters\": {EventsToPush},\r\n\t\t\"action\": \"Disable\"\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "overviewTab CommandBar"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let WorkbookTable = datatable(Name:string, Description:string, Events:dynamic, Template:dynamic)\r\n[\r\n    \"ReFS Deduplication and Compression\", \"Monitor ReFS deduplication and compression savings, performance impact and jobs.\", dynamic([\"Microsoft-Windows-ReFsDedupSvc/Operational!*\", \"\\\\Cluster CSVFS(*)\\\\Reads/sec\", \"\\\\Cluster CSVFS(*)\\\\Writes/sec\", \"\\\\Cluster CSVFS(*)\\\\Avg. sec/Read\", \"\\\\Cluster CSVFS(*)\\\\Avg. sec/Write\"]), \"Community-Workbooks/Azure Stack HCI/RefsWorkbook\",\r\n    \"Event Monitoring for Dell APEX Cloud Platform for Microsoft Azure\", \"Dell workbook for visualizing real-time hardware and software events resulting in accelerated issue detection and resolution.\", dynamic([\"Microsoft-Windows-Hyper-V-Dell-APEX-CP/Admin!*\"]), \"Community-Workbooks/Azure Stack HCI/Dell/SingleCluster\"\r\n];\r\n\r\nWorkbookTable\r\n| extend EventArr = split(\"{WindowsEvents}\", \",\")\r\n| extend PerfArr = split(\"{PerfCounters:escape}\", \",\")\r\n| extend dataSources = set_union(EventArr, PerfArr)\r\n| extend EventReq = set_intersect(Events, dataSources)\r\n| extend Info = iff(array_length(Events) == array_length(EventReq), 'Enabled', iff(array_length(EventReq)>0, 'Needs update', 'Not enabled'))\r\n| extend action = iff(Info == 'Enabled', 'Disable', iff(Info == 'Not enabled', 'Enable', 'NeedsUpdate'))\r\n| where set_has_element(split(\"{connectionStatePill}\", \",\"), Info)\r\n| extend TemplateLink = iff(Info != 'Enabled', dynamic(null), Template)\r\n| extend InfoLink = iff(Info == 'Enabled', dynamic(null), Template)\r\n| project Name, Description, Info, Events, TemplateLink, InfoLink, action",
                    "size": 3,
                    "noDataMessage": "No workbooks found",
                    "timeContext": {
                      "durationMs": 604800000
                    },
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "Info",
                        "parameterName": "WorkbookConnectionStatus",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Events",
                        "parameterName": "Events",
                        "parameterType": 1,
                        "quote": ""
                      },
                      {
                        "fieldName": "Name",
                        "parameterName": "SelectedWorkbookName",
                        "parameterType": 1,
                        "delimiter": "",
                        "quote": ""
                      },
                      {
                        "fieldName": "Description",
                        "parameterName": "SelectedWorkbookDescription",
                        "parameterType": 1,
                        "delimiter": "",
                        "quote": ""
                      },
                      {
                        "fieldName": "action",
                        "parameterName": "action",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkColumn": "TemplateLink",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": false,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "column",
                              "templateId": "TemplateLink",
                              "typeSource": "static",
                              "type": "hci-insights",
                              "gallerySource": "static",
                              "gallery": "Microsoft.AzureStackHCI/clusters",
                              "locationSource": "workbook",
                              "workbookName": "{SelectedWorkbookName}",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "Resource",
                                  "source": "parameter",
                                  "value": "resource"
                                },
                                {
                                  "name": "logAnalyticsWorkSpaceArmId",
                                  "source": "parameter",
                                  "value": "logAnalyticsWorkSpace"
                                }
                              ]
                            },
                            "bladeOpenContext": {
                              "bladeName": "{Template.bladeName}",
                              "extensionName": "{Template.extension}",
                              "bladeJsonParameters": "\"{Template.parameter}\""
                            }
                          }
                        },
                        {
                          "columnMatch": "Description",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "600px"
                          }
                        },
                        {
                          "columnMatch": "Info",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "InfoLink",
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "Enabled"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Needs update",
                                "representation": "2",
                                "text": "Needs update"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Not enabled",
                                "representation": "1",
                                "text": "Not enabled"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "Unknown"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "WorkbookContextPane.ReactView",
                              "extensionName": "Microsoft_AzureStackHCI_PortalExtension",
                              "bladeJsonParameters": "{\r\n\t\t\"resourceId\": \"{resource}\",\r\n\t\t\"workbookName\": [\"{SelectedWorkbookName}\"],\r\n\t\t\"workbookDescription\": [\"{SelectedWorkbookDescription}\"],\r\n\t\t\"dcrData\": {DCRresponse},\r\n\t\t\"updatedWindowsEvents\": {EventsToPush},\r\n\t\t\"updatedPerformanceCounters\": {EventsToPush},\r\n\t\t\"action\": {action}\r\n}"
                            },
                            "customColumnWidthSetting": "200px"
                          }
                        },
                        {
                          "columnMatch": "Events",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TemplateLink",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "InfoLink",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "action",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Name",
                          "label": "Feature name"
                        },
                        {
                          "columnId": "Info",
                          "label": "Monitoring status"
                        }
                      ]
                    }
                  },
                  "name": "workbook list"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "overviewTab"
            },
            "name": "overview group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "There is no health fault on this cluster."
                  },
                  "conditionalVisibility": {
                    "parameterName": "isHealthy",
                    "comparison": "isEqualTo",
                    "value": "True"
                  },
                  "name": "no alert text"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "View health faults on the cluster—select the fault to see the details and remediation actions. The reported time is the time the fault first occurred.\r\n"
                        },
                        "name": "health text"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.RootObjectType) == 'Microsoft.Health.EntityType.Cluster'\r\n| extend Severity = toint(description.Fault.Severity)\r\n| summarize Total = count(), Warning = countif(Severity == 1), Critical = countif(Severity == 2), Other = countif(Severity == 255)\r\n| evaluate narrow()\r\n| extend Column = iff(Column == \"Total\", \"Total faults\", Column)",
                          "size": 3,
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Column",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "rightContent": {
                              "columnMatch": "Column",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Total faluts",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Critical",
                                    "representation": "4",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Warning",
                                    "representation": "2",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Other",
                                    "representation": "unknown",
                                    "text": ""
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": ""
                                  }
                                ]
                              }
                            },
                            "showBorder": false,
                            "size": "auto"
                          }
                        },
                        "name": "health query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.RootObjectType) == 'Microsoft.Health.EntityType.Cluster'\r\n| extend Fault = description.Fault\r\n| extend ShortDescription = split(tostring(Fault.Type), '.')[-1]\r\n| extend Severity = toint(Fault.Severity)\r\n| extend FaultingResourceType = split(tostring(Fault.ObjectType), '.')[-1]\r\n| extend FaultingResourceId = tostring(Fault.ObjectId)\r\n| extend ReportedTime = datetime_add('Microsecond', tolong(Fault.Timestamp)/10, make_datetime(1601,1,1))\r\n| extend Detail = pack(\r\n\"Severity\", iff(Severity == 0, \"Healthy\", iff(Severity == 1, \"Warning\", iff(Severity == 2, \"Critical\", \"Unknown\"))),\r\n\"Faulting Resource ID\", FaultingResourceId,\r\n\"Faulting Resource Type\", FaultingResourceType,\r\n\"Reported Time\", ReportedTime,\r\n\"Short Description\", ShortDescription,\r\n\"Description\", tostring(Fault.Description),\r\n\"Remediation\", tostring(Fault.Remediation))\r\n| sort by ReportedTime asc\r\n| project ShortDescription, Detail, FaultingResourceType, FaultingResourceId, Severity, ReportedTime",
                          "size": 3,
                          "showAnalytics": true,
                          "noDataMessage": "There are no health faults on this cluster.",
                          "noDataMessageStyle": 3,
                          "timeContextFromParameter": "timeRange",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ShortDescription",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkColumn": "Detail",
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "Detail",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkColumn": "Detail",
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "Open",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "success",
                                      "text": "Healthy"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "2",
                                      "text": "Warning"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "2",
                                      "representation": "4",
                                      "text": "Critical"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "unknown",
                                      "text": "Unknown"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "ShortDescription",
                                "label": "Fault",
                                "comment": ""
                              },
                              {
                                "columnId": "FaultingResourceType",
                                "label": "Faulting resource type"
                              },
                              {
                                "columnId": "FaultingResourceId",
                                "label": "Faulting resource ID"
                              },
                              {
                                "columnId": "ReportedTime",
                                "label": "Initial fault time"
                              }
                            ]
                          }
                        },
                        "name": "health detail query"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "isHealthy",
                    "comparison": "isEqualTo",
                    "value": "False"
                  },
                  "name": "alerts group"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "health"
              },
              {
                "parameterName": "lastCorrelationId",
                "comparison": "isNotEqualTo",
                "value": "value::1"
              }
            ],
            "name": "health group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "View health and usage info for the servers in the cluster."
                  },
                  "name": "server text"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let Health = Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.ObjectType) == 'Microsoft.Health.EntityType.Server'\r\n| extend NodeId = tolower(tostring(description.Fault.ObjectId))\r\n| extend Severity = toint(description.Fault.Severity)\r\n| extend Severity = iff(Severity > 2, -1, Severity)\r\n| summarize Status = max(Severity) by NodeId;\r\n\r\nEvent\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| extend NodeId = tolower(Nodename)\r\n| join kind=leftouter Health on NodeId\r\n| extend serverArmId = strcat(ArmPrefix, Nodename)\r\n| extend UsedCpu = toint(servers_information.m_totalProcessorsUsedPercentage)\r\n| extend AvailableCpu = 100 - UsedCpu\r\n| extend TotalMemory = todecimal(servers_information.m_totalPhysicalMemoryInBytes)\r\n| extend UsedMemory = iff(TotalMemory == 0.0, todecimal(0.0), todecimal(servers_information.m_usedPhysicalMemoryInBytes))\r\n| extend AvailableMemory = iff(TotalMemory == 0.0, todecimal(1.0), todecimal(TotalMemory - UsedMemory))\r\n| extend MemoryUsage = iff(TotalMemory == 0.0, todecimal(0.0), todecimal(round(UsedMemory/TotalMemory*100, 0)))\r\n| extend LogicalProcessors = toint(servers_information.m_totalLogicalProcessors)\r\n| extend PhysicalProcessors = toint(servers_information.m_totalPhysicalProcessors)\r\n| extend Site = tostring(servers_information.m_site)\r\n| extend Uptime = tolong(servers_information.m_uptimeInSeconds)\r\n| extend DomainGroup = extract(@'[^\\.]+\\.(.+)', 1, Computer)\r\n| order by tolower(Nodename) asc\r\n| project serverArmId, Nodename, LastUpdated = TimeGenerated, Status, UsedCpu, AvailableCpu, MemoryUsage, UsedMemory, AvailableMemory, LogicalProcessors, PhysicalProcessors, Uptime, Site, DomainGroup",
                    "size": 3,
                    "showAnalytics": true,
                    "timeContextFromParameter": "timeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "serverArmId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "insights",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Nodename",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "Warning"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "4",
                                "text": "Critical"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "-1",
                                "representation": "unknown",
                                "text": "Unknown"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "Healthy"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "UsedCpu",
                          "formatter": 22,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"UsedCpu\"] %",
                              "columnSettings": [
                                {
                                  "columnName": "UsedCpu",
                                  "color": "blue"
                                },
                                {
                                  "columnName": "AvailableCpu",
                                  "color": "gray"
                                }
                              ],
                              "noRowsScaling": true
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailableCpu",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MemoryUsage",
                          "formatter": 22,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"MemoryUsage\"] %",
                              "columnSettings": [
                                {
                                  "columnName": "UsedMemory",
                                  "color": "blue"
                                },
                                {
                                  "columnName": "AvailableMemory",
                                  "color": "gray"
                                }
                              ],
                              "noRowsScaling": true
                            }
                          }
                        },
                        {
                          "columnMatch": "UsedMemory",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "AvailableMemory",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "LogicalProcessors",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "21.2857ch"
                          }
                        },
                        {
                          "columnMatch": "PhysicalProcessors",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10.1429ch"
                          }
                        },
                        {
                          "columnMatch": "Uptime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "CpuUsage",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "aggregation": "Max"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "percent",
                              "useGrouping": false
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "serverArmId",
                          "label": "Servers"
                        },
                        {
                          "columnId": "LastUpdated",
                          "label": "Last updated"
                        },
                        {
                          "columnId": "UsedCpu",
                          "label": "CPU usage"
                        },
                        {
                          "columnId": "MemoryUsage",
                          "label": "Memory usage"
                        },
                        {
                          "columnId": "LogicalProcessors",
                          "label": "Logical processors"
                        },
                        {
                          "columnId": "PhysicalProcessors",
                          "label": "CPUs"
                        },
                        {
                          "columnId": "DomainGroup",
                          "label": "Domain name"
                        }
                      ]
                    }
                  },
                  "name": "server query"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "parameters": [
                      {
                        "id": "9f6238f3-f31a-4ce9-aa78-6581830843c3",
                        "version": "KqlParameterItem/1.0",
                        "name": "serverTimeRange",
                        "label": "Time range for chart",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 14400000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            }
                          ]
                        },
                        "timeContext": {
                          "durationMs": 14400000
                        }
                      },
                      {
                        "id": "39d73fd2-3199-4146-a053-3357e4ff11db",
                        "version": "KqlParameterItem/1.0",
                        "name": "servers",
                        "label": "Servers",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n|  where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| sort by Nodename asc\r\n| project Nodename",
                        "crossComponentResources": [
                          "{loganalytics}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "serverTimeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "server parameters"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "CPU and memory usage",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let ArmId = Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename in~ ({servers})\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where CounterName == \"% Processor Time\"\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], CpuUsage = CounterValue, TimeGenerated\r\n\r\n",
                          "size": 0,
                          "aggregation": 3,
                          "title": "CPU usage",
                          "noDataMessage": "There are no CPU performance data or CPU performance counters are not configured",
                          "timeContextFromParameter": "serverTimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart",
                          "sortBy": [],
                          "chartSettings": {
                            "yAxis": [
                              "CpuUsage"
                            ],
                            "group": "NodeName",
                            "createOtherGroup": null,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "cpu usage query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let ArmId = Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename in~ ({servers})\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename)), TotalMemoryInBytes = todecimal(servers_information.m_totalPhysicalMemoryInBytes);\r\n\r\nPerf\r\n| where ObjectName == \"Memory\"\r\n| where CounterName == \"Available Bytes\"\r\n| join kind=inner ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], MemoryUsage = (TotalMemoryInBytes - todecimal(CounterValue))/TotalMemoryInBytes*100, TimeGenerated",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Memory usage",
                          "noDataMessage": "There are no memory performance data or memory performance counters are not configured",
                          "timeContextFromParameter": "serverTimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "MemoryUsage"
                            ],
                            "group": "NodeName",
                            "createOtherGroup": null,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "memory usage query"
                      }
                    ]
                  },
                  "name": "Cpu and memory usage group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Network usage",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let ArmId = Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename in~ ({servers})\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where ObjectName == \"RDMA Activity\"\r\n| summarize Computer = any(Computer), _ResourceId = any(_ResourceId), RdmaUsage = sum(CounterValue) by TimeGenerated\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], RdmaUsage, TimeGenerated",
                          "size": 0,
                          "title": "RDMA",
                          "noDataMessage": "There are no RDMA performance data or RDMA performance counters are not configured",
                          "timeContextFromParameter": "serverTimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "RdmaUsage"
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 11,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "rdma query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let ArmId = Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename in~ ({servers})\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where ObjectName == \"Network Interface\"\r\n| summarize Computer = any(Computer), _ResourceId = any(_ResourceId), NetworkUsage = sum(CounterValue) by TimeGenerated\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], NetworkUsage, TimeGenerated",
                          "size": 0,
                          "title": "Non RDMA",
                          "noDataMessage": "There are no networking performance data or networking performance counters are not configured",
                          "timeContextFromParameter": "serverTimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "NetworkUsage"
                            ],
                            "group": "NodeName",
                            "createOtherGroup": null,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 11,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumFractionDigits": 0
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "memory usage query"
                      }
                    ]
                  },
                  "name": "rdma group"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "server"
              },
              {
                "parameterName": "lastCorrelationId",
                "comparison": "isNotEqualTo",
                "value": "value::1"
              }
            ],
            "name": "server group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "View the state of virtual machines on each server in the cluster. \r\n\r\n**Other VMs** could be in one of the following states: Starting, Snapshotting, Saving, Stopping, Pausing, Resuming, Paused, Suspended, or Unknown."
                  },
                  "name": "Virtual Machine Description"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3003\"\r\n| extend ClusterName = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId in~ ('{resource}')\r\n| summarize arg_max(TimeGenerated,*) by ClusterName\r\n| extend description = parse_json(RenderedDescription)\r\n| extend VmsUnknown = toint(description.m_totalVmsUnknown)\r\n| extend VmsRunning = toint(description.m_totalVmsRunning)\r\n| extend VmsStopped = toint(description.m_totalVmsStopped)\r\n| extend VmsFailed = toint(description.m_totalVmsFailed)\r\n| extend VmsPaused = toint(description.m_totalVmsPaused)\r\n| extend VmsSuspended = toint(description.m_totalVmsSuspended)\r\n| extend VmsStarting = toint(description.m_totalVmsStarting)\r\n| extend VmsSnapshoting = toint(description.m_totalVmsSnapshotting)\r\n| extend VmsSaving = toint(description.m_totalVmsSaving)\r\n| extend VmsStopping = toint(description.m_totalVmsStopping)\r\n| extend VmsPausing = toint(description.m_totalVmsPausing)\r\n| extend VmsResuming = toint(description.m_totalVmsResuming)\r\n| project VmsRunning, VmsStopped, VmsFailed, VmsOther = VmsUnknown + VmsStarting + VmsSnapshoting + VmsSaving + VmsStopping + VmsPausing + VmsResuming + VmsPaused + VmsSuspended\r\n| evaluate narrow()\r\n| project Column, tolong(Value)",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "VM states",
                    "noDataMessage": "There is no virtual machine in this cluster.",
                    "timeContextFromParameter": "timeRange",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "VmsStopped",
                          "label": "Stopped VMs",
                          "color": "orange"
                        },
                        {
                          "seriesName": "VmsRunning",
                          "label": "Running VMs",
                          "color": "green"
                        },
                        {
                          "seriesName": "VmsFailed",
                          "label": "Failed VMs",
                          "color": "red"
                        },
                        {
                          "seriesName": "VmsOther",
                          "label": "Other VMs",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedTab",
                    "comparison": "isEqualTo",
                    "value": "virtualMachines"
                  },
                  "showPin": false,
                  "name": "Virtual Machine Chart"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\"\r\n| extend ClusterName = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId in~ ('{resource}')\r\n| extend ServerResourceId = strcat_array(array_slice(split(_ResourceId,\"/\"), 0, -2), \"/\")\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| mv-expand servers_information\r\n| extend VmsFailed = toint(servers_information.m_vm.m_totalVmsFailed)\r\n| extend VmsRunning = toint(servers_information.m_vm.m_totalVmsRunning)\r\n| extend VmsStopped = toint(servers_information.m_vm.m_totalVmsStopped)\r\n| extend VmsOther = toint(toint(servers_information.m_vm.m_totalVmsPaused) + toint(servers_information.m_vm.m_totalVmsPausing) + toint(servers_information.m_vm.m_totalVmsResuming) + toint(servers_information.m_vm.m_totalVmsSaving) + toint(servers_information.m_vm.m_totalVmsSnapshotting) + toint(servers_information.m_vm.m_totalVmsStarting) + toint(servers_information.m_vm.m_totalVmsStopping) + toint(servers_information.m_vm.m_totalVmsSuspended) + toint(servers_information.m_vm.m_totalVmsUnknown))\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| extend Hostname = strcat(ServerResourceId, \"/\", Nodename)\r\n| order by tolower(Nodename) asc\r\n| project Hostname, Nodename, LastUpdated = TimeGenerated, VmsTotal = VmsFailed + VmsRunning + VmsStopped + VmsOther, VmsRunning, VmsStopped, VmsFailed, VmsOther",
                    "size": 3,
                    "showAnalytics": true,
                    "timeContextFromParameter": "timeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Hostname",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "insights",
                            "showIcon": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/Azure Stack HCI/Server",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "server",
                                  "source": "column",
                                  "value": "Nodename"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Nodename",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "LastUpdated",
                          "formatter": 6,
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "VmsTotal",
                          "formatter": 22,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"VmsRunning\"] of [\"VmsTotal\"] running",
                              "columnSettings": [
                                {
                                  "columnName": "VmsRunning",
                                  "color": "green"
                                },
                                {
                                  "columnName": "VmsFailed",
                                  "color": "red"
                                },
                                {
                                  "columnName": "VmsStopped",
                                  "color": "orange"
                                },
                                {
                                  "columnName": "VmsOther",
                                  "color": "gray"
                                }
                              ],
                              "noRowsScaling": true
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Hostname",
                          "label": "Servers"
                        },
                        {
                          "columnId": "LastUpdated",
                          "label": "Last updated"
                        },
                        {
                          "columnId": "VmsTotal",
                          "label": "Total VMs"
                        },
                        {
                          "columnId": "VmsRunning",
                          "label": "Running"
                        },
                        {
                          "columnId": "VmsStopped",
                          "label": "Stopped"
                        },
                        {
                          "columnId": "VmsFailed",
                          "label": "Failed"
                        },
                        {
                          "columnId": "VmsOther",
                          "label": "Other"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedTab",
                    "comparison": "isEqualTo",
                    "value": "virtualMachines"
                  },
                  "showPin": false,
                  "name": "Virtual Machines Grid View"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "virtualMachines"
              },
              {
                "parameterName": "lastCorrelationId",
                "comparison": "isNotEqualTo",
                "value": "value::1"
              }
            ],
            "name": "Virtual Machines Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<p> View the health of volumes and drives in the cluster. Drive health is at the bottom of the page.\r\n"
                  },
                  "name": "storage text"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Volumes",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let Health = Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.ObjectType) == 'Microsoft.Health.EntityType.Volume'\r\n| extend ObjectId = tolower(tostring(description.Fault.ObjectId))\r\n| extend VolumeId = extract(\"volume{([^}]+)}\", 1, ObjectId)\r\n| extend Severity = toint(description.Fault.Severity)\r\n| extend Severity = iff(Severity > 2, -1, Severity)\r\n| summarize Status = max(Severity) by VolumeId;\r\n\r\nEvent\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterName = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| summarize arg_max(TimeGenerated,*) by ClusterName\r\n| mv-expand volumes_information\r\n| extend VolumeId = tostring(volumes_information.m_Id)\r\n| join kind=leftouter Health on VolumeId\r\n| extend VolumeWarning = iif(Status == 1, 1, 0)\r\n| extend VolumeCritical = iif(Status == 2, 1, 0)\r\n| extend VolumeUnknown = iif(Status == -1, 1, 0)\r\n| summarize Total = count(), Critical = sum(VolumeCritical), Warning = sum(VolumeWarning), Other = sum(VolumeUnknown)\r\n| project Total, Healthy = Total - (Critical + Warning + Other), Warning, Critical, Other\r\n| evaluate narrow()\r\n| extend Column = iff(Column == \"Total\", \"Total volumes\", Column)\r\n| project Column, tolong(Value)",
                          "size": 3,
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Column",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "rightContent": {
                              "columnMatch": "Column",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Warning",
                                    "representation": "2",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Critical",
                                    "representation": "4",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Other",
                                    "representation": "unknown",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Healthy",
                                    "representation": "success",
                                    "text": ""
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": ""
                                  }
                                ]
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "name": "volume health query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let Health = Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.ObjectType) == 'Microsoft.Health.EntityType.Volume'\r\n| extend ObjectId = tolower(tostring(description.Fault.ObjectId))\r\n| extend VolumeId = extract(\"volume{([^}]+)}\", 1, ObjectId)\r\n| extend Severity = toint(description.Fault.Severity)\r\n| extend Severity = iff(Severity > 2, -1, Severity)\r\n| summarize Status = max(Severity) by VolumeId;\r\n\r\nEvent\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| mv-expand volumes_information\r\n| extend VolumeId = tostring(volumes_information.m_Id)\r\n| join kind=leftouter Health on VolumeId\r\n| extend TotalCap = tolong(volumes_information.m_Size)\r\n| extend AvailableCap = TotalCap - tolong(volumes_information.m_SizeUsed)\r\n| extend Resiliency = toint(volumes_information.m_Resiliency)\r\n| extend Resiliency = case(Resiliency == 1, \"Simple\", Resiliency == 2, \"Single Parity\", Resiliency == 3, \"Dual Parity\", Resiliency == 4, \"Two Way Mirror\", Resiliency == 5, \"Three Way Mirror\", Resiliency == 6, \"MRT\", \"Unknown\")\r\n| extend Iops = todouble(volumes_information.m_TotalIops)\r\n| extend Throughput = todouble(volumes_information.m_TotalThroughput)\r\n| extend Latency = todouble(volumes_information.m_AverageLatency)\r\n| project Volumes = tostring(volumes_information.m_Label), LastUpdated = TimeGenerated, Status, TotalCap, AvailableCap, Iops = iff(Iops < 0, 0.0, Iops), Throughput = iff(Throughput < 0, 0.0, Throughput), Latency = iff(Latency < 0, 0.0, Latency), Resiliency, Deduplication = iff(tobool(volumes_information.m_IsDedupEnabled), \"Yes\", \"No\"), FileSystem = tostring(volumes_information.m_FileSystem)",
                          "size": 3,
                          "showAnalytics": true,
                          "timeContextFromParameter": "timeRange",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Volumes",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "2",
                                      "text": "Warning"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "2",
                                      "representation": "4",
                                      "text": "Critical"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "-1",
                                      "representation": "unknown",
                                      "text": "Unknown"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "Healthy"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "TotalCap",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "AvailableCap",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Iops",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Throughput",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 11,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Latency",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "IOPS",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "ThroughPut",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 11,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "Volumes",
                                "sortOrder": 1
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "LastUpdated",
                                "label": "Last updated"
                              },
                              {
                                "columnId": "TotalCap",
                                "label": "Total capacity"
                              },
                              {
                                "columnId": "AvailableCap",
                                "label": "Available capacity"
                              },
                              {
                                "columnId": "FileSystem",
                                "label": "File system"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Volumes",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "name": "volume info query"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "d5adce37-1bdb-4c6b-91c7-02ed15d5ae78",
                              "version": "KqlParameterItem/1.0",
                              "name": "timeRangeForChart",
                              "label": "Time range for chart",
                              "type": 4,
                              "isRequired": true,
                              "value": {
                                "durationMs": 14400000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  }
                                ]
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              }
                            },
                            {
                              "id": "15e4aa47-e8e7-43c1-b587-666848241b29",
                              "version": "KqlParameterItem/1.0",
                              "name": "selectedVolumes",
                              "label": "Volumes",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| mv-expand volumes_information\r\n| extend Label = tostring(volumes_information.m_Label)\r\n| distinct Label",
                              "crossComponentResources": [
                                "{loganalytics}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRangeForChart",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "chart parameters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\" \r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| mv-expand volumes_information\r\n| extend Label = tostring(volumes_information.m_Label)\r\n| where Label in~ ({selectedVolumes})\r\n| extend Iops = todouble(volumes_information.m_TotalIops)\r\n| extend Iops = iff(Iops < 0, 0.0, Iops)\r\n| make-series IopsTrend = sum(Iops) default = 0 on TimeGenerated from {timeRangeForChart:start} to {timeRangeForChart:end} step 1h by Label\r\n| order by Label asc\r\n",
                          "size": 0,
                          "title": "IOPS",
                          "timeContextFromParameter": "timeRangeForChart",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart"
                        },
                        "customWidth": "33",
                        "name": "iops query",
                        "styleSettings": {
                          "padding": "10",
                          "maxWidth": "33%"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\"\r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| mv-expand volumes_information\r\n| extend Label = tostring(volumes_information.m_Label)\r\n| where Label in~ ({selectedVolumes})\r\n| extend Throughput = todouble(volumes_information.m_TotalThroughput)\r\n| extend Throughput = iff(Throughput < 0, 0.0, Throughput)\r\n| make-series ThroughputTrend = sum(Throughput) default = 0 on TimeGenerated from {timeRangeForChart:start} to {timeRangeForChart:end} step 1h by Label\r\n| order by Label asc\r\n",
                          "size": 0,
                          "title": "Throughput",
                          "timeContextFromParameter": "timeRangeForChart",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart"
                        },
                        "customWidth": "33",
                        "name": "throughput query",
                        "styleSettings": {
                          "padding": "10",
                          "maxWidth": "33%"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3002\" \r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend volumes_information = parse_json(RenderedDescription).VolumeList\r\n| mv-expand volumes_information\r\n| extend Label = tostring(volumes_information.m_Label)\r\n| where Label in~ ({selectedVolumes})\r\n| extend Latency = todouble(volumes_information.m_AverageLatency)\r\n| extend Latency = iff(Latency < 0, 0.0, Latency)\r\n| make-series LatencyTrend = avg(Latency) default = 0 on TimeGenerated from {timeRangeForChart:start} to {timeRangeForChart:end} step 1h by Label\r\n| order by Label asc\r\n",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Latency",
                          "timeContextFromParameter": "timeRangeForChart",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "linechart"
                        },
                        "customWidth": "33",
                        "name": "latency query",
                        "styleSettings": {
                          "padding": "10",
                          "maxWidth": "33%"
                        }
                      }
                    ]
                  },
                  "name": "volumes group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Drives",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "parameters": [
                            {
                              "id": "40b3d7b9-bb19-4978-8bdc-4c2f7af19ff7",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastCorrelationId",
                              "type": 2,
                              "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3001\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterName = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend Description = parse_json(RenderedDescription)\r\n| where tostring(Description.m_isLastElement) == \"true\"\r\n| extend CorrelationId = tostring(Description.m_correlationId)\r\n| summarize arg_max(TimeGenerated, CorrelationId) by ClusterArmId\r\n| project CorrelationId;",
                              "crossComponentResources": [
                                "{loganalytics}"
                              ],
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "f23b8776-9931-4338-916b-f77df5371a87",
                              "version": "KqlParameterItem/1.0",
                              "name": "totalDrives",
                              "type": 2,
                              "isRequired": true,
                              "query": "Event\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3001\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend Description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(Description.m_correlationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| extend drives_information = Description.m_drives\r\n| where array_length(drives_information) > 0\r\n| mv-expand drives_information\r\n| summarize Total = count()",
                              "crossComponentResources": [
                                "{loganalytics}"
                              ],
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "drive parameters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.RootObjectType) == 'Microsoft.Health.EntityType.PhysicalDisk'\r\n| extend Severity = toint(description.Fault.Severity)\r\n| summarize Total = {totalDrives}, Critical = countif(Severity == 2), Warning = countif(Severity == 1), Other = countif(Severity == 255)\r\n| project Total, Healthy = Total - (Critical + Warning + Other), Warning, Critical, Other\r\n| evaluate narrow()",
                          "size": 3,
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Column",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "rightContent": {
                              "columnMatch": "Column",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Total",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Critical",
                                    "representation": "4",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Warning",
                                    "representation": "2",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Other",
                                    "representation": "unknown",
                                    "text": ""
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Healthy",
                                    "representation": "success",
                                    "text": ""
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": ""
                                  }
                                ]
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "name": "drive health query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let Health = Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| where tostring(description.Fault.RootObjectType) == 'Microsoft.Health.EntityType.PhysicalDisk'\r\n| extend driveId = tostring(description.Fault.RootObjectId)\r\n| extend Severity = toint(description.Fault.Severity)\r\n| extend Severity = iff(Severity > 2, -1, Severity)\r\n| summarize Status = max(Severity) by driveId;\r\n\r\nEvent\r\n| where _ResourceId !contains '/Microsoft.AzureStackHCI/'\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3001\"\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| extend Description = parse_json(RenderedDescription)\r\n| extend CorrelationId = tostring(Description.m_correlationId)\r\n| where CorrelationId =~ '{lastCorrelationId}'\r\n| extend drives_information = Description.m_drives\r\n| where array_length(drives_information) > 0\r\n| mv-expand drives_information\r\n| extend driveId = tostring(drives_information.m_uniqueId)\r\n| join kind=leftouter Health on driveId\r\n| extend TotalCapacity = tolong(drives_information.m_sizeInBytes)\r\n| extend AvailableCapacity = TotalCapacity - tolong(drives_information.m_sizeUsedInBytes)\r\n| project Drives = driveId, LastUpdated = TimeGenerated, Status, AvailableCapacity, TotalCapacity, CanPool = iff(tobool(drives_information.m_canPool), \"Yes\", \"No\")",
                          "size": 0,
                          "showAnalytics": true,
                          "noDataMessage": "Install the latest OS update on this cluster to show complete drive info. Learn more: https://docs.microsoft.com/en-us/azure-stack/hci/manage/update-cluster",
                          "noDataMessageStyle": 4,
                          "timeContextFromParameter": "timeRange",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{loganalytics}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Drives",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "81.1429ch"
                                }
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "2",
                                      "text": "Warning"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "2",
                                      "representation": "4",
                                      "text": "Critical"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "-1",
                                      "representation": "unknown",
                                      "text": "Unknown"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "Healthy"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AvailableCapacity",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "TotalCapacity",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "LastUpdated",
                                "label": "Last updated"
                              },
                              {
                                "columnId": "AvailableCapacity",
                                "label": "Available capacity"
                              },
                              {
                                "columnId": "TotalCapacity",
                                "label": "Total capacity"
                              },
                              {
                                "columnId": "CanPool",
                                "label": "Can pool?"
                              }
                            ]
                          }
                        },
                        "name": "drive info query"
                      }
                    ]
                  },
                  "name": "drives group"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "storage"
              },
              {
                "parameterName": "lastCorrelationId",
                "comparison": "isNotEqualTo",
                "value": "value::1"
              }
            ],
            "name": "storage group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "Health and performance data is not available at this time. If you recently configured insights, please check again in a few minutes, as the agent may still be collecting data. If you are a returning customer, please review your configuration or see the troubleshooting guide. [Learn more](https://learn.microsoft.com/en-us/azure-stack/hci/manage/monitor-hci-single?tabs=22h2-and-later#troubleshooting)"
                  },
                  "name": "health warning text"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "lastCorrelationId",
                "comparison": "isEqualTo",
                "value": "value::1"
              },
              {
                "parameterName": "selectedTab",
                "comparison": "isNotEqualTo",
                "value": "overviewTab"
              }
            ],
            "name": "no health group"
          }
        ]
      },
      "name": "Tabs Group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}