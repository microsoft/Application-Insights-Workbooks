{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2c3bd553-1307-4363-97c7-e2b1bc3d543e",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "54788f5d-0e4c-4dfb-937b-6e80af8572fa",
            "version": "KqlParameterItem/1.0",
            "name": "resourceId",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "9b253dd6-24fa-4c72-bc24-0018d2e12ad2",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'microsoft.azurestackhci/clusters'\r\n| where id =~ '{resourceId}'",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.azurestackhci/clusters": true
              },
              "nameFilter": "'n26-20-01-c3'",
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f0ad1bbb-e939-4e63-9327-56e7aaf86ab8",
            "version": "KqlParameterItem/1.0",
            "name": "server",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "timeRange"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "HCI Parameters",
      "styleSettings": {
        "margin": "10",
        "padding": "10"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "# {server}\r\nServer\r\n"
      },
      "name": "server text"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resourceId}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| extend serverArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename == '{server}'\r\n| order by tolower(Nodename) asc\r\n| extend serverArmId = strcat(serverArmPrefix, Nodename)\r\n| project LogicalProcessors = toint(servers_information.m_totalLogicalProcessors), PhysicalProcessors = toint(servers_information.m_totalPhysicalProcessors), Site = tostring(servers_information.m_site), Uptime = tolong(servers_information.m_uptimeInSeconds) * 1sec, DomainGroup = extract(@'[^\\.]+\\.(.+)', 1, Computer), Location = tostring(servers_information.m_location)\r\n| evaluate narrow()",
        "size": 3,
        "timeContext": {
          "durationMs": 86400000
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Row",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "Column",
              "label": "Property"
            }
          ]
        },
        "tileSettings": {
          "titleContent": {
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Column",
            "formatter": 1
          },
          "rightContent": {
            "columnMatch": "Value",
            "formatter": 1
          },
          "showBorder": false
        },
        "mapSettings": {
          "locInfo": "AzureResource",
          "sizeSettings": "EventLevel",
          "sizeAggregation": "Sum",
          "legendMetric": "EventLevel",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "EventLevel",
            "heatmapPalette": "greenRed"
          },
          "locInfoColumn": "ClusterArmId"
        },
        "textSettings": {
          "style": "markdown"
        }
      },
      "name": "server info query"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let ArmId = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resourceId}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename =~ '{server}'\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where CounterName == \"% Processor Time\"\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], CpuUsage = CounterValue, TimeGenerated",
                          "size": 0,
                          "aggregation": 3,
                          "title": "CPU Utilization %",
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.resources/subscriptions",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "CpuUsage"
                            ],
                            "group": "NodeName",
                            "createOtherGroup": null,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "name": "cpu query"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "cpu group"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ArmId = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resourceId}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename =~ '{server}'\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename)), TotalMemoryInBytes = todecimal(servers_information.m_totalPhysicalMemoryInBytes);\r\n\r\nPerf\r\n| where ObjectName == \"Memory\"\r\n| where CounterName == \"Available Bytes\"\r\n| join kind=inner ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], MemoryUsage = (TotalMemoryInBytes - todecimal(CounterValue))/TotalMemoryInBytes*100, TimeGenerated",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Available memory",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.resources/subscriptions",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "yAxis": [
                        "MemoryUsage"
                      ],
                      "group": "NodeName",
                      "createOtherGroup": null,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 0
                          }
                        },
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "memory query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ArmId = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resourceId}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename =~ '{server}'\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where ObjectName == \"RDMA Activity\"\r\n| summarize Computer = any(Computer), _ResourceId = any(_ResourceId), RdmaUsage = sum(CounterValue) by TimeGenerated\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], RdmaUsage, TimeGenerated",
                    "size": 0,
                    "title": "RDMA",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.resources/subscriptions",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "yAxis": [
                        "TotalRdmaUsage"
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 11,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "rdma query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ArmId = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resourceId}'\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| where Nodename =~ '{server}'\r\n| project _ResourceId = tolower(strcat(ArmPrefix, Nodename));\r\n\r\nPerf\r\n| where ObjectName == \"Network Interface\"\r\n| summarize Computer = any(Computer), _ResourceId = any(_ResourceId), NetworkUsage = sum(CounterValue) by TimeGenerated\r\n| join kind=leftsemi ArmId on _ResourceId\r\n| project NodeName = split(Computer, \".\")[0], NetworkUsage, TimeGenerated",
                    "size": 0,
                    "title": "Non RDMA",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.resources/subscriptions",
                    "visualization": "linechart",
                    "chartSettings": {
                      "yAxis": [
                        "NetworkUsage"
                      ],
                      "group": "NodeName",
                      "createOtherGroup": null,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 11,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "non rdma query"
                }
              ]
            },
            "name": "usage group"
          }
        ]
      },
      "name": "Tabs Group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}