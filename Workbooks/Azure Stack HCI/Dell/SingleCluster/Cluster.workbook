{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2c3bd553-1307-4363-97c7-e2b1bc3d543e",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 2419200000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 14400000
            }
          },
          {
            "id": "837cf92d-3c98-44df-9657-3545ee0c9301",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "value": "health"
          },
          {
            "id": "9b253dd6-24fa-4c72-bc24-0018d2e12ad2",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.azurestackhci/clusters": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false,
              "componentIdOnly": true
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "defaultValue": "value::1"
          },
          {
            "id": "7df63c3f-33eb-446d-b905-f577d4292769",
            "version": "KqlParameterItem/1.0",
            "name": "loganalytics",
            "label": "Log analytics",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f0ad1bbb-e939-4e63-9327-56e7aaf86ab8",
            "version": "KqlParameterItem/1.0",
            "name": "lastCorrelationId",
            "type": 2,
            "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterArmId = '{resource}'\r\n| extend description = parse_json(RenderedDescription)\r\n| where description.ArmId =~ ClusterArmId\r\n| where description.IsLastMessage =~ 'true'\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| summarize arg_max(TimeGenerated, CorrelationId) by ClusterArmId\r\n| project lastCorrelationId = CorrelationId",
            "crossComponentResources": [
              "{loganalytics}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "62ac704f-082f-4b32-97d6-13a956339e05",
            "version": "KqlParameterItem/1.0",
            "name": "isHealthy",
            "type": 1,
            "query": "Event\r\n| where EventLog =~ \"Microsoft-Windows-Health/Operational\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterArmId = '{resource}'\r\n| extend description = parse_json(RenderedDescription)\r\n| where description.ArmId =~ ClusterArmId\r\n| where description.IsLastMessage =~ 'true'\r\n| where description.CorrelationId =~ '{lastCorrelationId}'\r\n| extend CorrelationId = tostring(description.CorrelationId)\r\n| project isHealthy = tostring(description.Fault == \"{}\")",
            "crossComponentResources": [
              "{loganalytics}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "acdae744-8f8b-422c-9e3b-9555687072d2",
            "version": "KqlParameterItem/1.0",
            "name": "version",
            "type": 1,
            "query": "Resources\r\n| where id =~ '{resource}'\r\n| extend clusterVersion = tostring(properties.reportedProperties.clusterVersion)\r\n| extend version = iff(parse_version(clusterVersion) < parse_version(\"10.0.20348\"), \"old\", iff(parse_version(clusterVersion) < parse_version(\"10.0.20349\"), \"21H2\", \"22H2\"))\r\n| project version",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "supportedCapabilities",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{resource}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2022-12-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.reportedProperties.supportedCapabilities\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 12,
            "id": "229d8fba-15ba-4993-8a52-d654fc18586e"
          },
          {
            "id": "3d63b25c-5ca9-44e9-909f-1df494d835af",
            "version": "KqlParameterItem/1.0",
            "name": "hideBanner",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": "false"
          },
          {
            "id": "619700a3-0add-43da-8f98-de45f832f605",
            "version": "KqlParameterItem/1.0",
            "name": "allNodesMonitored",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": "true"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.azurestackhci/clusters"
      },
      "name": "HCI Parameters",
      "styleSettings": {
        "margin": "10",
        "padding": "10"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "e8b4c63e-023d-4705-99f3-dcb5bb8064eb",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "overview",
            "style": "link"
          },
          {
            "id": "6338feb7-5d30-4390-9a06-5de43131ee29",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Health",
            "subTarget": "health",
            "preText": "Overview",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "loadType": "always",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let node = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClsuterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClsuterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClsuterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| extend NodeId = tolower(Nodename)\r\n|project  NodeId;\r\nEvent\r\n| where EventLog =~ \"Microsoft-Windows-Hyper-V-Dell-APEX-CP/Admin\"\r\n| extend description = parse_json(RenderedDescription)\r\n| extend Severity = toint(EventLevel)\r\n| extend servers_information = split(Computer, \".\")\r\n| extend Nodename = tostring(servers_information[0])\r\n| extend NodeId = tolower(Nodename)\r\n| where NodeId in (node)\r\n| summarize Total_q2 = count(), Warning_q2 = countif(Severity == 3), Critical_q2 = countif(Severity == 1), Other_q2 = countif(Severity == 4)\r\n| project Column = iff('Total_q2' == \"Total\", \"Total faults\", 'Total_q2'), Total = Total_q2, Warning = Warning_q2, Critical = Critical_q2, Other = Other_q2\r\n| summarize  Critical = sum(Critical), Warning = sum(Warning), Information = sum(Other)\r\n|evaluate narrow()",
                    "size": 3,
                    "title": "Overview",
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.resources/subscriptions",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Column",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Column",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Total faluts",
                              "text": ""
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Critical",
                              "representation": "4",
                              "text": ""
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Warning",
                              "representation": "2",
                              "text": ""
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Information",
                              "representation": "info",
                              "text": ""
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Blank",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "showBorder": false,
                      "size": "auto"
                    }
                  },
                  "name": "health query"
                }
              ]
            },
            "name": "alerts group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "Health Status reflects the Health of each Node for the selected Time range."
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let q1 = Event\r\n| where EventLog =~ \"Microsoft-Windows-Hyper-V-Dell-APEX-CP/Admin\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend description = parse_json(RenderedDescription)\r\n| extend ClusterName = tostring(parse_xml(EventData).DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend Severity = toint(EventLevel)\r\n| extend servers_information = split(Computer, \".\")\r\n| extend Nodename = tostring(servers_information[0])\r\n| extend NodeId = tolower(Nodename)\r\n| summarize HealthStatus = min(Severity) by NodeId;\r\n\r\nEvent\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| extend NodeId = tolower(Nodename)\r\n| extend serverArmId = strcat(ArmPrefix, Nodename)\r\n| join kind=leftouter q1 on NodeId\r\n| extend ParentId = _ResourceId, Id = Nodename, MergeId = _ResourceId\r\n| extend NodeState = toint(servers_information.m_status[0]),  Uptime = servers_information.m_uptimeInSeconds\r\n| extend Site = tostring(servers_information.m_site)\r\n| extend DomainGroup = extract(@'[^\\.]+\\.(.+)', 1, Computer)\r\n| order by tolower(Nodename) asc\r\n| project Id, MergeId, ClusterName, Nodename, LastUpdated = TimeGenerated, HealthStatus, NodeState, Uptime = servers_information.m_uptimeInSeconds, Site, DomainGroup, ResourceLink = '{resource}', serverArmId",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Nodes",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.resources/subscriptions",
                    "crossComponentResources": [
                      "{loganalytics}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MergeId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClusterName",
                          "formatter": 5,
                          "formatOptions": {
                            "linkColumn": "ResourceLink",
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "Nodename",
                          "formatter": 13,
                          "formatOptions": {
                            "linkColumn": "serverArmId",
                            "linkTarget": "Resource",
                            "linkIsContextBlade": false,
                            "showIcon": false
                          }
                        },
                        {
                          "columnMatch": "HealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "4",
                                "text": "Critical"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "3",
                                "representation": "2",
                                "text": "Warning"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "4",
                                "representation": "1",
                                "text": "Information"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "Healthy"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "NodeState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "up",
                                "text": "Up"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "down",
                                "text": "Down"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "2",
                                "text": "In maintenance"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "4",
                                "representation": "Blank",
                                "text": "[\"UpNodes\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "3",
                                "representation": "pending",
                                "text": "Joining"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Uptime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "ResourceLink",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ParentId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Cluster Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkColumn": "ResourceLink",
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": false,
                            "aggregation": "Count"
                          }
                        },
                        {
                          "columnMatch": "Last Updated",
                          "formatter": 6,
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "TotalNodes",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "UpNodes",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Version",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}"
                              },
                              {
                                "operator": "startsWith",
                                "thresholdValue": "Difference",
                                "representation": "2",
                                "text": "{0}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Hostname",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "aggregation": "Count"
                          }
                        },
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClusterArmId",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "ParentId",
                        "treeType": 0,
                        "expanderColumn": "Id"
                      },
                      "labelSettings": [
                        {
                          "columnId": "ClusterName",
                          "label": "Cluster Name"
                        },
                        {
                          "columnId": "Nodename",
                          "label": "Node Name"
                        },
                        {
                          "columnId": "LastUpdated",
                          "label": "Last Updated"
                        },
                        {
                          "columnId": "HealthStatus",
                          "label": "Health Status"
                        },
                        {
                          "columnId": "NodeState",
                          "label": "Node State"
                        },
                        {
                          "columnId": "DomainGroup",
                          "label": "Domain Group"
                        }
                      ]
                    }
                  },
                  "name": "ClustersGridView"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "health"
            },
            "name": "NodesGridViewGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let node = Event\r\n| where EventLog =~ \"Microsoft-Windows-SDDC-Management/Operational\" and EventID == \"3000\" \r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterData = parse_xml(EventData)\r\n| extend ClusterName = tostring(ClusterData.DataItem.UserData.EventData[\"ClusterName\"])\r\n| extend ClusterArmId = tostring(ClusterData.DataItem.UserData.EventData[\"ArmId\"])\r\n| where ClusterArmId =~ '{resource}'\r\n| summarize arg_max(TimeGenerated,*) by ClusterArmId\r\n| extend ArmPrefix = extract(@'(.+/)[^/]+$', 1, _ResourceId)\r\n| extend servers_information = parse_json(RenderedDescription).m_servers\r\n| mv-expand servers_information\r\n| extend Nodename = tostring(servers_information.m_name)\r\n| extend NodeId = tolower(Nodename)\r\n|project  NodeId;\r\n\r\nEvent\r\n| where EventLog =~ \"Microsoft-Windows-Hyper-V-Dell-APEX-CP/Admin\"\r\n| where TimeGenerated {timeRange:query}\r\n| extend description = parse_json(RenderedDescription)\r\n| extend servers_information = split(Computer, \".\")\r\n| extend Nodename = tostring(servers_information[0])\r\n| extend NodeId = tolower(Nodename)\r\n| where NodeId in (node)\r\n| extend NodeName = split(tostring(Computer), '.')[0]\r\n| extend EvData = parse_xml(EventData)\r\n| extend EvDataList = EvData.DataItem.EventData.Data\r\n| extend FaultCode = tostring(EvDataList.[0][\"#text\"])\r\n| extend Detail = tostring(EvDataList.[1][\"#text\"])\r\n| extend KB = split(tostring(EvDataList.[6][\"#text\"]), ',')[1]\r\n| extend Component = split(tostring(EvDataList.[4][\"#text\"]), ',')[0]\r\n| extend SubComponent = iff(isnull(tostring(EvDataList.[5][\"#text\"])), Component , tostring(EvDataList.[5][\"#text\"]))\r\n| extend ServiceTag = split(tostring(EvDataList.[4][\"#text\"]), ',')[1] \r\n| extend Severity = iff(EventLevel == 1, 1, iff(EventLevel == 2, 2, iff(EventLevel == 3, 3, 0)))\r\n| extend SeverityOrder = case(\r\n            Severity == 1, 1,\r\n            Severity == 3, 2,\r\n            Severity == 0, 3,\r\n            4)\r\n| extend ReportedTime = TimeGenerated\r\n| extend ShortDescription1 = split(tostring(description), '.')[0]\r\n| extend SD = split(ShortDescription1, ' ')\r\n| extend ShortDescription = Detail\r\n| extend Acknowledged = split(tostring(description), ' ')[-1]\r\n| sort by ReportedTime asc\r\n| extend _ResourceId\r\n| project  NodeName, SeverityOrder, FaultCode, ReportedTime, ShortDescription, Component, SubComponent, ServiceTag, KB, Acknowledged, _ResourceId",
              "size": 3,
              "title": "Alerts",
              "noDataMessage": "There are no Alerts for selected Time range",
              "queryType": 0,
              "resourceType": "microsoft.resources/subscriptions",
              "crossComponentResources": [
                "{loganalytics}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "NodeName",
                    "formatter": 13,
                    "formatOptions": {
                      "linkColumn": "_ResourceId",
                      "linkTarget": "Resource",
                      "linkIsContextBlade": false,
                      "showIcon": false
                    }
                  },
                  {
                    "columnMatch": "SeverityOrder",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "1",
                          "representation": "4",
                          "text": "Critical"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "2",
                          "representation": "2",
                          "text": "Warning"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "3",
                          "representation": "1",
                          "text": "Information"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Information"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "KB",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_SeverityOrder_1",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "NodeName",
                    "label": "Node Name"
                  },
                  {
                    "columnId": "SeverityOrder",
                    "label": "Severity"
                  },
                  {
                    "columnId": "FaultCode",
                    "label": "Fault Code"
                  },
                  {
                    "columnId": "ReportedTime",
                    "label": "Reported Time"
                  },
                  {
                    "columnId": "ShortDescription",
                    "label": "Short Description"
                  },
                  {
                    "columnId": "Component",
                    "label": "Component"
                  },
                  {
                    "columnId": "SubComponent",
                    "label": "Sub Component"
                  },
                  {
                    "columnId": "ServiceTag",
                    "label": "Service Tag"
                  },
                  {
                    "columnId": "KB",
                    "label": "Knowledgebase"
                  },
                  {
                    "columnId": "Acknowledged",
                    "label": "Acknowledged"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_SeverityOrder_1",
                  "sortOrder": 1
                }
              ]
            },
            "name": "HealthDetailQuery"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "health"
      },
      "name": "HealthGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "##### **What's this workbook?**\r\n\r\nThe Health Tab within the workbook is dedicated to showcasing visual representations that highlight the collective alerts occurring across all nodes within the chosen **Dell APEX Cloud Platform for Microsoft Azure** Cluster. These visualizations are tailored specifically for the selected Time Range, offering an insightful overview of issues affecting the cluster's performance.\r\n\r\nMoreover, this tab presents the health status of individual nodes within the cluster, providing users with a comprehensive display of node health. Detailed information regarding the alerts impacting these nodes during the selected Time Range is also included. This comprehensive breakdown encompasses error specifics, timestamps, and affected services or components, offering users a deeper understanding of the cluster's health status.\r\n\r\nFor further guidance and comprehensive details about utilizing the workbook's functionalities, users can refer to the User Guide for **Dell APEX Cloud Platform for Microsoft Azure**.\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "overview"
            },
            "name": "text - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "overviewgroup"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}