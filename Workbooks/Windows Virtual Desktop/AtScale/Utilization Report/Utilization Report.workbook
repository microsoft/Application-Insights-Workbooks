{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type startswith 'Microsoft.DesktopVirtualization/'\r\n    | summarize Count = count() by subscriptionId\r\n    | order by Count desc\r\n    | extend Rank = row_number()\r\n    | project value = subscriptionId, label = subscriptionId, selected = Rank == 1\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2e3dfd9b-2d0f-4feb-94e8-107f220c4e28",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroups",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type contains  \"desktopvirtualization\"\r\n| summarize Count = count() by resourceGroup\r\n| project Label = resourceGroup, Id = resourceGroup, Selected = Count >= 0",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "951b5870-e216-45c6-b159-34150868a46e",
            "version": "KqlParameterItem/1.0",
            "name": "HostPools",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/hostpools\" and resourceGroup in ({ResourceGroups})\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "04a8ead2-1fb2-4666-a7b0-6d92e3c29b46",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 172800000
            },
            "label": "Time range"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters_general"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "279f5594-117d-416c-ab51-4fa91a0aea45",
                  "version": "KqlParameterItem/1.0",
                  "name": "HostPoolDetails",
                  "type": 1,
                  "query": "resources \r\n| where id in ({HostPools})\r\n| extend id = tolower(id)\r\n| join (desktopvirtualizationresources\r\n| extend hpId = tolower(trim_end(\"/sessionhosts/.+\", id) ), vmRsourceId = tolower(properties.resourceId) \r\n| summarize  vmRsourceId=any(vmRsourceId),shCount = count() by hpId ) on $left.id == $right.hpId\r\n| join (resources \r\n    | extend sku = tostring(properties.hardwareProfile.vmSize)\r\n    | project id=tolower(id), cores = toint(extract(\"_[[:alpha:]]+([0-9]+)\",1, sku))\r\n    ) on $left.vmRsourceId == $right.id\r\n| extend sessionLimit = toint(properties.maxSessionLimit)\r\n| extend sessionLimit = iff(sessionLimit<=1000, sessionLimit, cores*4)  \r\n| project bag=pack(\"id\", id,\"resourceGroup\", resourceGroup, \"sessionLimit\", sessionLimit, \"shCount\", shCount, \"cores\", cores) \r\n| summarize tostring(make_list(bag))",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 4"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Sessions",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "WVDAgentHealthStatus\r\n| summarize\r\n    Sessions= max(toint(ActiveSessions) + toint(InactiveSessions)),\r\n    InactiveSessions=max(toint(InactiveSessions))\r\n    by bin(TimeGenerated, 1m), SessionHostName, _ResourceId\r\n| summarize Sessions= sum(Sessions), InactiveSessions = sum(InactiveSessions) by TimeGenerated, _ResourceId\r\n| make-series\r\n    Sessions = max(Sessions), [\"Idle Sessions\"] = max(InactiveSessions)\r\n    on TimeGenerated\r\n    step 1h by _ResourceId    \r\n| extend series_stats(Sessions)\r\n| project Sessions, TimeGenerated, Average=series_stats_Sessions_avg, _ResourceId\r\n| mvexpand Sessions, TimeGenerated\r\n| project Sessions=todouble(Sessions), TimeGenerated= todatetime(TimeGenerated), Average, _ResourceId\r\n| summarize\r\n    arg_max(MaxSessions=Sessions, MaxTime=TimeGenerated),\r\n    arg_min(MinSessions=Sessions, MinTime=TimeGenerated),\r\n    Average =any(Average) by _ResourceId\r\n| project [\"Res. group\"]= trim_end(\"/providers/.*\", _ResourceId),[\"Host pool\"]=_ResourceId, [\"Max\"]= MaxSessions, MaxTime, [\"Min\"]= MinSessions, MinTime, Average, Metric=\"Sessions\"    ",
                          "size": 1,
                          "title": "Sessions summary",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "Host pool",
                          "exportParameterName": "selectedHP",
                          "exportDefaultValue": "not_selected",
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Max",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                }
                              },
                              {
                                "columnMatch": "MaxTime",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "Min",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                }
                              },
                              {
                                "columnMatch": "MinTime",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "minimumFractionDigits": 1,
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 5
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "MaxTime",
                                "label": "Max time"
                              },
                              {
                                "columnId": "MinTime",
                                "label": "Min time"
                              },
                              {
                                "columnId": "Average",
                                "label": "Avg"
                              }
                            ]
                          },
                          "chartSettings": {
                            "group": null,
                            "createOtherGroup": 0
                          }
                        },
                        "name": "SessionSummary"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "\r\nWVDAgentHealthStatus\r\n| where ( \"{selectedHP}\"== \"not_selected\" or _ResourceId == \"{selectedHP}\")\r\n| summarize Sessions= max(toint(ActiveSessions) + toint(InactiveSessions)), InactiveSessions=max(toint(InactiveSessions)) by bin(TimeGenerated, 1m), SessionHostName\r\n| summarize Sessions= sum(Sessions), InactiveSessions = sum(InactiveSessions) by TimeGenerated\r\n| make-series\r\n    Sessions = max(Sessions),[\"Idle Sessions\"] = max(InactiveSessions)\r\n    on TimeGenerated\r\n    step {TimeRange:grain}\r\n| where array_length(TimeGenerated) > 0\r\n",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Session history",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "group": null,
                            "createOtherGroup": 0,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "minimumFractionDigits": 1,
                                  "maximumFractionDigits": 1
                                }
                              },
                              "min": 0
                            }
                          }
                        },
                        "name": "SessionHistoryGraph",
                        "styleSettings": {
                          "padding": "2%"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let hpProps =  materialize(datatable(row:string) ['{HostPoolDetails}']\r\n| project row = todynamic(row)\r\n| mv-expand  row\r\n| evaluate bag_unpack(row));\r\nWVDAgentHealthStatus\r\n| where ( \"{selectedHP}\"== \"not_selected\" or _ResourceId == \"{selectedHP}\")\r\n| summarize Sessions= max(toint(ActiveSessions) + toint(InactiveSessions)) by bin(TimeGenerated, 1m), SessionHostName,_ResourceId\r\n| join kind=inner hpProps on $left._ResourceId == $right.id\r\n| summarize Sessions= sum(Sessions) by TimeGenerated, sessionLimit, shCount, _ResourceId\r\n| project Val = (sessionLimit*shCount) - Sessions, TimeGenerated, _ResourceId\r\n| summarize Val = sum(Val) by TimeGenerated\r\n| make-series [\"Available Sessions\"] = min(Val) on TimeGenerated step {TimeRange:grain}\r\n| where array_length(TimeGenerated) > 0",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Available sessions",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "name": "AvailableSessionsGraph",
                        "styleSettings": {
                          "padding": "2%"
                        }
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "SessionCharts"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Cores Info",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let hpProps =  materialize(datatable(row:string) ['{HostPoolDetails}']\r\n| project row = todynamic(row)\r\n| mv-expand  row\r\n| evaluate bag_unpack(row));\r\nWVDAgentHealthStatus\r\n| extend Sessions= todouble(ActiveSessions) + todouble(InactiveSessions)\r\n| join hpProps on $left._ResourceId == $right.id\r\n| make-series [\"Users/cores\"] = max(Sessions/cores) on TimeGenerated step {TimeRange:grain} by _ResourceId\r\n| extend series_stats([\"Users/cores\"])\r\n| project [\"Users/cores\"], TimeGenerated, Average = [\"series_stats_Users/cores_avg\"], _ResourceId\r\n| mv-expand [\"Users/cores\"], TimeGenerated\r\n| extend TimeGenerated = todatetime(TimeGenerated)\r\n| summarize arg_max(MaxSessions=todouble([\"Users/cores\"]), MaxTime=TimeGenerated), arg_min(MinSessions=todouble([\"Users/cores\"]), MinTime=TimeGenerated), Average=any(Average) by _ResourceId\r\n| project [\"Res. group\"]= trim_end(\"/providers/.*\", _ResourceId), [\"Host pool\"]=_ResourceId, [\"Max User/Cores\"]= MaxSessions, MaxTime, [\"Min User/Coures\"]= MinSessions, MinTime, Average\r\n\r\n",
                          "size": 1,
                          "title": "User per core summary",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "Host pool",
                          "exportParameterName": "selectedHP",
                          "exportDefaultValue": "not_selected",
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Max User/Cores",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                }
                              },
                              {
                                "columnMatch": "MaxTime",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "Min User/Coures",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                }
                              },
                              {
                                "columnMatch": "MinTime",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "9ch"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "minimumFractionDigits": 2,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            ],
                            "sortBy": [
                              {
                                "itemKey": "Max User/Cores",
                                "sortOrder": 1
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "Max User/Cores",
                                "label": "Max"
                              },
                              {
                                "columnId": "MaxTime",
                                "label": "Max time"
                              },
                              {
                                "columnId": "Min User/Coures",
                                "label": "Min"
                              },
                              {
                                "columnId": "MinTime",
                                "label": "Min Time"
                              },
                              {
                                "columnId": "Average",
                                "label": "Avg"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Max User/Cores",
                              "sortOrder": 1
                            }
                          ],
                          "chartSettings": {
                            "group": null,
                            "createOtherGroup": 0
                          }
                        },
                        "name": "CoreSummary"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let hpProps =  materialize(datatable(row:string) ['{HostPoolDetails}']\r\n| project row = todynamic(row)\r\n| mv-expand  row\r\n| evaluate bag_unpack(row));\r\nWVDAgentHealthStatus\r\n| where ( \"{selectedHP}\"== \"not_selected\" or _ResourceId == \"{selectedHP}\")\r\n| extend Sessions= todouble(ActiveSessions) + todouble(InactiveSessions)\r\n| join kind=inner hpProps on $left._ResourceId == $right.id\r\n| make-series [\"Users/cores\"] = max(Sessions/cores) on TimeGenerated step {TimeRange:grain}\r\n//| where array_length(TimeGenerated) > 0",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Max users per core",
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "minimumIntegerDigits": 1,
                                  "minimumSignificantDigits": 2,
                                  "maximumSignificantDigits": 2
                                }
                              },
                              "min": 0
                            }
                          }
                        },
                        "name": "MaxUserPerCore",
                        "styleSettings": {
                          "padding": "2%"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "WVDAgentHealthStatus\r\n| where ( \"{selectedHP}\"== \"not_selected\" or _ResourceId == \"{selectedHP}\")\r\n| extend idle = iif( (toint(ActiveSessions) + toint(InactiveSessions)) == 0, 1, 0)\r\n| summarize idle = max(idle) by bin(TimeGenerated, 1m), SessionHostName\r\n| summarize idle = countif(idle > 0) , SessionHosts = dcount(SessionHostName) by TimeGenerated\r\n| make-series [\"Session host\"] = round(avg(SessionHosts)), [\"Idle host\"] = round(avg(idle)) on TimeGenerated step {TimeRange:grain}",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Session host count",
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "name": "SessionHostCount"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "CoresQuery"
                }
              ]
            },
            "name": "SessionAndCores",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday(iff({TimeRange:start}+1d <= {TimeRange:end} , {TimeRange:start}+1d, {TimeRange:start})); //adjust # of days displayed\r\nlet EndWin = endofday({TimeRange:end});\r\nlet lookbackWindow = 28d;  // 4 even weeks\r\nlet StartCountDay = StartWin - lookbackWindow;\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin) // if connection not ended yet use lastday\r\n| where EndTime >= StartCountDay  // chop out connections the ended before our window started\r\n| extend StartTime = coalesce(StartTime, StartCountDay)  // if start aged off set at start of lookbackwindow\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)\r\n| project StartTime, EndTime, CorrelationId, UserName  // chop down colms to just what we need\r\n| extend StartTime=max_of(StartTime, StartCountDay), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartCountDay)  // #1 start of first day connection appears\r\n| extend _endRange = iff(EndTime + lookbackWindow > EndWin, EndWin,\r\n                             iff(EndTime + lookbackWindow - 1d < StartTime, StartTime,\r\n                                    iff(EndTime + lookbackWindow - 1d < _bin, _bin, _bin + lookbackWindow - 1d))) // #2 last day connection will appear\r\n| extend _range = range(_bin, _endRange, 1d) // #3 create a start of day timestamp for every day connection existed and/or day it will be counted\r\n| mv-expand _range to typeof(datetime) // #4 \r\n| summarize Users = dcount(UserName) by Days=bin_at(_range, 1d, StartCountDay) // #5 sum startofday timestamps\r\n| where Days>= StartWin // #6 chop off days we dont want to display\r\n| sort by Days asc\r\n\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Monthly active users (MAU)",
                    "noDataMessage": "No users detected",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "MAU",
                          "label": "Users"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "100",
                  "showPin": true,
                  "name": "MonthlyUsers",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday({TimeRange:start});    // each day to start at midnight\r\nlet EndWin = startofday({TimeRange:end}+1d);\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off use 1st day\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State)\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartWin) // first bin must be at start of day\r\n| extend TimeSlot = range(_bin, EndTime, 1d)\r\n| mv-expand TimeSlot to typeof(datetime)\r\n| make-series Sessions = dcount(CorrelationId) default=0 on TimeSlot from StartWin to EndWin step 1d by State\r\n| project Days = TimeSlot, Sessions, State, series_stats(Sessions)",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily connections and reconnections",
                    "noDataMessage": "No sessions detected",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Days",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Sessions",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "180px"
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          }
                        },
                        {
                          "columnMatch": "series_stats_Sessions_min",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "9ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Sessions_min_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Sessions_max",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Sessions_max_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Sessions_avg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Sessions_stdev",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Sessions_variance",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "series_stats_Sessions_min",
                          "label": "Min"
                        },
                        {
                          "columnId": "series_stats_Sessions_max",
                          "label": "Max"
                        },
                        {
                          "columnId": "series_stats_Sessions_avg",
                          "label": "Avg"
                        },
                        {
                          "columnId": "series_stats_Sessions_stdev",
                          "label": "Std dev"
                        }
                      ]
                    },
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "DailyConnects",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday({TimeRange:start});    // each day to start at midnight\r\nlet EndWin = startofday({TimeRange:end}+1d);\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off use 1st day\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State)\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartWin) // first bin must be at start of day\r\n| extend TimeSlot = range(_bin, EndTime, 1d)\r\n| mv-expand TimeSlot to typeof(datetime)\r\n| extend StartTm = iff(StartTime > TimeSlot, StartTime, TimeSlot)\r\n| extend EndTm = iff(EndTime < TimeSlot + 1d, EndTime, TimeSlot + 1d)\r\n| extend Hours = (EndTm - StartTm) / 1h\r\n| make-series Hours = sum(Hours) default=0 on TimeSlot from StartWin to EndWin step 1d\r\n| project Hours, series_stats(Hours)\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily connected hours",
                    "noDataMessage": "No users detected",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Hours",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_max",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_max_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_avg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_stdev",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_variance",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "series_stats_Hours_min",
                          "label": "Min"
                        },
                        {
                          "columnId": "series_stats_Hours_max",
                          "label": "Max"
                        },
                        {
                          "columnId": "series_stats_Hours_avg",
                          "label": "Avg"
                        },
                        {
                          "columnId": "series_stats_Hours_stdev",
                          "label": "Std dev"
                        }
                      ]
                    },
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Daily Connected Hours",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = {TimeRange:start};\r\nlet EndWin = {TimeRange:end};\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n|  summarize TimeGenerated=min(TimeGenerated) by CorrelationId, State, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off use 1st day\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)  // if start aged off use 1st day\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State), UserName\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop time for connections to window\r\n| extend Duration = (EndTime - StartTime)/1h\r\n| summarize Hours = sum(Duration) by UserName\r\n| top 10 by Hours desc nulls last",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Top 10 users by connection time",
                    "noDataMessage": "No connections found",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Hours",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_max",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_max_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_avg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_stdev",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_variance",
                          "formatter": 5
                        }
                      ]
                    },
                    "chartSettings": {
                      "xAxis": "UserName",
                      "yAxis": [
                        "Hours"
                      ],
                      "createOtherGroup": 10,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 26,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        },
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "User Usage Distibution",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = {TimeRange:start};\r\nlet EndWin = {TimeRange:end};\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName, SessionHostName\r\n| summarize TimeGenerated=min(TimeGenerated) by CorrelationId, State, UserName, SessionHostName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off use 1st day\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)  // if start aged off use 1st day\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State), UserName, SessionHostName\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop time for connections to window\r\n| extend Duration = (EndTime - StartTime)/1h\r\n| summarize Hours = sum(Duration) by Computer = trim_end(@'\\..*', SessionHostName)\r\n| top 10 by Hours desc nulls last",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Top 10 hosts by connection time",
                    "noDataMessage": "No connections found",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Hours",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_min_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_max",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_max_idx",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "series_stats_Hours_avg",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_stdev",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "series_stats_Hours_variance",
                          "formatter": 5
                        }
                      ]
                    },
                    "chartSettings": {
                      "createOtherGroup": 10,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 26,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        },
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Host Usage Distibution",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Connection time for all users",
                    "expandable": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let StartWin = {TimeRange:start};\r\nlet EndWin = {TimeRange:end};\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName,_ResourceId\r\n| summarize TimeGenerated=min(TimeGenerated) by CorrelationId, State, UserName,_ResourceId\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)  // if start aged off use 1st day\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State), UserName, _ResourceId\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop time for connections to window\r\n| extend Duration = (EndTime - StartTime)/1h\r\n| summarize Hours = sum(Duration) by UserName, _ResourceId\r\n| project UserName, ResourceGroup = trim_end(@'/providers/microsoft.desktopvirtualization/hostpools/.+', _ResourceId), _ResourceId, Hours\r\n| sort by Hours desc nulls last",
                          "size": 1,
                          "aggregation": 5,
                          "showAnalytics": true,
                          "noDataMessage": "No connections found",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.desktopvirtualization/hostpools",
                          "crossComponentResources": [
                            "{HostPools}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "35ch"
                                }
                              },
                              {
                                "columnMatch": "Usage by resource group",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "35ch"
                                }
                              },
                              {
                                "columnMatch": "UserName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "ResourceGroup",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Hours",
                                "formatter": 0,
                                "formatOptions": {
                                  "aggregation": "Sum",
                                  "customColumnWidthSetting": "12ch"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "minimumFractionDigits": 1,
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "User",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "35ch"
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "UserName"
                              ],
                              "finalBy": "ResourceGroup"
                            },
                            "labelSettings": [
                              {
                                "columnId": "UserName",
                                "label": "Usage by resource group"
                              },
                              {
                                "columnId": "_ResourceId",
                                "label": "Host pool"
                              }
                            ]
                          },
                          "chartSettings": {
                            "xAxis": "UserName",
                            "yAxis": [
                              "Hours"
                            ],
                            "createOtherGroup": 10,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 26,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumSignificantDigits": 2
                                }
                              },
                              "min": 0
                            }
                          }
                        },
                        "customWidth": "50",
                        "showPin": true,
                        "name": "AllUserUsageDistibution",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "AllusersUsageGroup",
                  "styleSettings": {
                    "padding": "10px"
                  }
                }
              ]
            },
            "name": "Trends",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n|where ConnectionType != \"<>\" and State == \"Completed\"\r\n|summarize count() by ConnectionType",
                    "size": 0,
                    "title": "Connection type",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "ConnectionType",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where State == \"Completed\" and GatewayRegion !=  \"<>\"\r\n| summarize Sessions = count() by GatewayRegion\r\n",
                    "size": 0,
                    "title": "Gateway regions",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "GatewayRegion",
                    "exportParameterName": "selectedGW",
                    "exportDefaultValue": "not_selected",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "Sessions",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "GatewayRegion",
                          "label": "Gateway region"
                        },
                        {
                          "columnId": "Sessions",
                          "label": "Sessions"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "Sessions",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "33",
                  "name": "GatewayRegions",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where (\"{selectedGW}\" == \"not_selected\" or GatewayRegion == \"{selectedGW}\" )\r\n| where State == \"Completed\" and GatewayRegion !=  \"<>\"\r\n|summarize Users = dcount(UserName), Hosts = dcount(SessionHostName) by ResourceAlias",
                    "size": 0,
                    "title": "Resources",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "Users",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "Users",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "33",
                  "name": "Resources",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "GroupSummary",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "Utilization"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
