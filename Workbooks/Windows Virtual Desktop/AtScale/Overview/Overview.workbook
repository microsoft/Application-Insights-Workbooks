{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type startswith 'Microsoft.DesktopVirtualization/'\r\n    | summarize Count = count() by subscriptionId\r\n    | order by Count desc\r\n    | extend Rank = row_number()\r\n    | project value = subscriptionId, label = subscriptionId, selected = Rank == 1\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2e3dfd9b-2d0f-4feb-94e8-107f220c4e28",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroups",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type contains  \"desktopvirtualization\"\r\n| summarize Count = count() by resourceGroup\r\n| project Label = resourceGroup, Id = resourceGroup, Selected = Count >= 0",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "951b5870-e216-45c6-b159-34150868a46e",
            "version": "KqlParameterItem/1.0",
            "name": "HostPools",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/hostpools\" and resourceGroup in ({ResourceGroups})\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "b47458ef-e685-4940-b59b-33815ec9bc75",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 172800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters_general"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Snapshot",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/resourcegroups/{ResourceGroup}/providers/Microsoft.DesktopVirtualization/hostpools/{HostPool:label}/sessionhosts?api-version=2019-01-23-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.status\",\"columnid\":\"Status\"},{\"path\":\"$.name\",\"columnid\":\"Name\"},{\"path\":\"$.properties.lastHeartBeat\",\"columnid\":\"LastHeartbeat\"},{\"path\":\"$.properties.sessions\",\"columnid\":\"Sessions\"}]}}]}",
                    "size": 0,
                    "title": "Host Status and Current Active Sessions",
                    "queryType": 12,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "LastHeartbeat"
                        },
                        {
                          "columnId": "Sessions",
                          "label": "Active Session Count"
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Name",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Status"
                      },
                      "leftContent": {
                        "columnMatch": "Sessions",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false,
                      "sortCriteriaField": "Sessions",
                      "sortOrderField": 2,
                      "size": "auto"
                    }
                  },
                  "customWidth": "66",
                  "name": "hostpooloverview2",
                  "styleSettings": {
                    "margin": "1px",
                    "padding": "1px",
                    "progressStyle": "none"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| extend VMSKU = properties.hardwareProfile.vmSize\r\n| project name, VMSKU, resourceGroup, location, subscriptionId\r\n\r\n",
                    "size": 1,
                    "noDataMessage": "No Azure Virtual Desktop resources detected. Please select the subscription that contains your AVD resources",
                    "noDataMessageStyle": 4,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "VMSKU",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "HostCount",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "33",
                  "conditionalVisibility": {
                    "parameterName": "TEST",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "showPin": true,
                  "name": "VMSkus_Prep1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where _ResourceId =~ '{HostPool}'\r\n| extend ShortName = trim_end(@'\\..*', SessionHostName)\r\n| summarize Users = dcount(UserName) by ComputerName, SessionHostName, ShortName\r\n| project Users, ComputerName, SessionHostName, ShortName",
                    "size": 0,
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "table"
                  },
                  "conditionalVisibility": {
                    "parameterName": "TEST",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "name": "VMSkus_Prep2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\",\"mergeType\":\"innerunique\",\"leftTable\":\"VMSkus_Prep1\",\"rightTable\":\"VMSkus_Prep2\",\"leftColumn\":\"name\",\"rightColumn\":\"ShortName\"}],\"projectRename\":[{\"originalName\":\"[VMSkus_Prep1].location\",\"mergedName\":\"location\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep1].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep1].VMSKU\",\"mergedName\":\"VMSKU\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep1].name\",\"mergedName\":\"name\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep2].ShortName\",\"mergedName\":\"ShortName\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].TenantId\",\"mergedName\":\"TenantId\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SourceSystem\",\"mergedName\":\"SourceSystem\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].TimeGenerated\",\"mergedName\":\"TimeGenerated\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].CorrelationId\",\"mergedName\":\"CorrelationId\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].UserName\",\"mergedName\":\"UserName\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].State\",\"mergedName\":\"State\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ClientOS\",\"mergedName\":\"ClientOS\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ClientVersion\",\"mergedName\":\"ClientVersion\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ClientType\",\"mergedName\":\"ClientType\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ClientIPAddress\",\"mergedName\":\"ClientIPAddress\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].PredecessorConnectionId\",\"mergedName\":\"PredecessorConnectionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ConnectionType\",\"mergedName\":\"ConnectionType\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].ResourceAlias\",\"mergedName\":\"ResourceAlias\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostIPAddress\",\"mergedName\":\"SessionHostIPAddress\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostOSVersion\",\"mergedName\":\"SessionHostOSVersion\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostOSDescription\",\"mergedName\":\"SessionHostOSDescription\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostAgentVersion\",\"mergedName\":\"SessionHostAgentVersion\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostSxSStackVersion\",\"mergedName\":\"SessionHostSxSStackVersion\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2].Type\",\"mergedName\":\"Type\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep2]._ResourceId\",\"mergedName\":\"_ResourceId\",\"fromId\":\"unknown\"},{\"originalName\":\"[VMSkus_Prep1].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep2].ComputerName\",\"mergedName\":\"ComputerName\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep2].SessionHostName\",\"mergedName\":\"SessionHostName\",\"fromId\":\"c53bb8b4-4573-4ab6-b6bc-c84a0bc4410a\"},{\"originalName\":\"[VMSkus_Prep2].Users\",\"mergedName\":\"Users\",\"fromId\":\"unknown\"}]}",
                    "size": 0,
                    "title": "Host SKUs by Location",
                    "noDataMessage": "No Hosts selected",
                    "queryType": 7,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "location",
                          "formatter": 5,
                          "formatOptions": {
                            "aggregation": "Count"
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 5,
                          "formatOptions": {
                            "aggregation": "Unique"
                          }
                        },
                        {
                          "columnMatch": "VMSKU",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Count"
                          }
                        },
                        {
                          "columnMatch": "ShortName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ComputerName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SessionHostName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Users",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "location",
                          "VMSKU",
                          "resourceGroup"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "resourceGroup"
                      },
                      "labelSettings": [
                        {
                          "columnId": "location"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "AVD Workspace"
                        },
                        {
                          "columnId": "VMSKU"
                        },
                        {
                          "columnId": "name",
                          "label": "Host Name"
                        },
                        {
                          "columnId": "ShortName"
                        },
                        {
                          "columnId": "subscriptionId"
                        },
                        {
                          "columnId": "ComputerName"
                        },
                        {
                          "columnId": "SessionHostName"
                        },
                        {
                          "columnId": "Users"
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "VMSKU"
                      },
                      "subtitleContent": {
                        "columnMatch": "location"
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "100",
                  "showPin": false,
                  "name": "HostVMSkus"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TEST",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "SummarySnap",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "e5270ba3-5c4a-43ce-856a-d09ce45b8253",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertLevel",
                  "type": 2,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    { \"value\":\"0\", \"label\":\"Sev0\", \"selected\":\"false\"},\r\n    { \"value\":\"1\", \"label\":\"Sev1\", \"selected\":\"true\" },\r\n    { \"value\":\"2\", \"label\":\"Sev2\", \"selected\":\"true\" },\r\n    { \"value\":\"3\", \"label\":\"Sev3\", \"selected\":\"true\" },\r\n    { \"value\":\"4\", \"label\":\"Sev4\", \"selected\":\"true\" }\r\n]"
                },
                {
                  "id": "91f5eabf-1cf1-4cd1-9040-3c3bbc4a2249",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertsCount",
                  "type": 2,
                  "query": "alertsmanagementresources\r\n| extend Details = parse_json(properties).essentials\r\n| project Time = todatetime(Details.startDateTime), State = tostring(Details.alertState), Severity = tostring(Details.severity)\r\n| where Time {TimeRange:query} and State == \"New\" and Severity == \"{AlertLevel:label}\"\r\n| summarize Value = count()\r\n| extend label=Value, selected=1",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "conditionalVisibility": {
              "parameterName": "TEST",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "NumOfAlertsToDisplay"
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"color:#006100;font-weight:bold\">No new Severity {AlertLevel} alerts</span> in {TimeRange:label}",
              "style": "success"
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "AlertsCount",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "NoNewAlertsTitle",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<span style=\"color:#E00000;font-weight:bold\">{AlertsCount} new severity {AlertLevel} alerts</span> in {TimeRange:label}",
                    "style": "warning"
                  },
                  "customWidth": "100",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "AlertsCount",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    {
                      "parameterName": "AlertsCount",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "NewAlertsTitle"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "alertsmanagementresources\r\n| extend Details = parse_json(properties).essentials\r\n| project Severity= Details.severity, id, Alert=name, Rule = tostring(Details.alertRule), State = Details.alertState, Condition=Details.monitorCondition, Time = todatetime(Details.startDateTime), Message = Details.description, TargetResource=Details.targetResource\r\n| where Severity == \"{AlertLevel:label}\" and State == \"New\"\r\n| where Time {TimeRange:query}\r\n| project Time, Severity, State, Alert, Message, id",
                    "size": 0,
                    "title": "Severity {AlertLevel} alert details",
                    "noDataMessage": "No Alerts in selected timeframe",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Severity",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Alert",
                          "formatter": 1,
                          "formatOptions": {
                            "linkColumn": "id",
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "id"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "emailcommonschema"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "40ch"
                          }
                        },
                        {
                          "columnMatch": "Rule",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Condition",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Time",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "22ch"
                          }
                        },
                        {
                          "columnMatch": "Message",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "65ch"
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "templateRunContext": {
                              "componentIdSource": "parameter",
                              "templateUriSource": "static",
                              "templateParameters": [],
                              "titleSource": "static",
                              "descriptionSource": "static",
                              "description": "",
                              "runLabelSource": "static"
                            }
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "showBorder": false
                    }
                  },
                  "customWidth": "100",
                  "name": "AlertDetails",
                  "styleSettings": {
                    "padding": "10px"
                  }
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AlertsCount",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "AlertsCount",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "AlertsGroup",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Capacity",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where id in ({HostPools})\r\n| summarize value=count()\r\n| project metric=\"Total host pools\", value\r\n| union (\r\nresources\r\n| where id in ({HostPools})\r\n| project id = tolower(id)\r\n| join (desktopvirtualizationresources\r\n    |  project id = tolower(trim_end(\"/sessionhosts/.+\", id))) on id\r\n| summarize value = count()\r\n| project metric=\"Total session hosts\", value\r\n)\r\n\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "nevershow",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "SummaryPart1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "\r\n    resources\r\n    | where id in ({HostPools})\r\n    | where properties.hostPoolType == \"Pooled\"\r\n    | summarize value=count()\r\n    | project metric=\"Total pooled host pools\", value\r\n    | union (\r\n    resources\r\n    | where id in ({HostPools})\r\n    | where properties.hostPoolType == \"Personal\"\r\n    | summarize value=count()\r\n    | project metric=\"Total personal host pools\", value\r\n    )\r\n\r\n\r\n\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "nevershow",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "SummaryPart2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "a657052f-5589-4ff3-937c-508589f18aef",
                        "version": "KqlParameterItem/1.0",
                        "name": "HostPoolDetails",
                        "type": 1,
                        "isRequired": true,
                        "query": "resources \r\n| where id in ({HostPools})\r\n| extend id = tolower(id)\r\n| join (desktopvirtualizationresources\r\n| extend hpId = tolower(trim_end(\"/sessionhosts/.+\", id))\r\n| summarize shCount = count(), drainModeCount=countif(properties.allowNewSession==\"false\"), Sessions=sum(toint(properties.sessions)) by hpId ) on $left.id == $right.hpId\r\n| project bag=pack(\"name\",name,\"id\", id,\"resourceGroup\", resourceGroup, \"sessionLimit\", toint(properties.maxSessionLimit), \"shCount\", shCount, \"ARGSessions\", Sessions,\"drainModeCount\", drainModeCount)\r\n| summarize tostring(make_list(bag))",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"8ffe296e-603b-4afe-981d-7bc083adf12e\",\"mergeType\":\"union\",\"leftTable\":\"SummaryPart1\",\"rightTable\":\"SummaryPart2\"}],\"projectRename\":[{\"originalName\":\"[SummaryPart1].metric\",\"mergedName\":\"metric\",\"fromId\":\"8ffe296e-603b-4afe-981d-7bc083adf12e\"},{\"originalName\":\"[SummaryPart1].value\",\"mergedName\":\"value\",\"fromId\":\"8ffe296e-603b-4afe-981d-7bc083adf12e\"},{\"originalName\":\"metric\",\"mergedName\":\"metric\",\"fromId\":\"unknown\"},{\"originalName\":\"value\",\"mergedName\":\"value\",\"fromId\":\"unknown\"}]}",
                    "size": 0,
                    "showRefreshButton": true,
                    "queryType": 7,
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "metric",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "value",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "15",
                  "showPin": false,
                  "name": "HostPool Counts",
                  "styleSettings": {
                    "margin": "2px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let hpProps =  materialize(datatable(row:string) ['{HostPoolDetails}']\r\n| project row = todynamic(row)\r\n| mv-expand  row\r\n| evaluate bag_unpack(row));\r\nhpProps\r\n| join kind=leftouter(\r\n    WVDAgentHealthStatus\r\n    | summarize arg_max(TimeGenerated, Sessions = toint(ActiveSessions)+toint(InactiveSessions)) by _ResourceId, SessionHostName\r\n    | summarize CurrentSessions = sum(Sessions) by _ResourceId\r\n) on $left.id == $right._ResourceId\r\n| project name, resourceGroup =  trim_end(\"(?:/resourceGroups/.*/)*\",id), id, shCount, ACapacity = (1 -CurrentSessions/toreal(sessionLimit*shCount))*100, Users=CurrentSessions, sessionLimit, drainModeCount\r\n| join kind = leftouter ( \r\n    WVDAgentHealthStatus\r\n    | summarize Sessions = max(toint(ActiveSessions)+toint(InactiveSessions)) by _ResourceId, SessionHostName, bin(TimeGenerated, {TimeRange:grain})\r\n    | summarize Sessions = sum(Sessions) by _ResourceId, TimeGenerated\r\n    | join kind=inner hpProps on $right.id == $left._ResourceId\r\n    | make-series Sessions=avg(1-Sessions/toreal(sessionLimit*shCount)) default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by _ResourceId\r\n) on $left.id == $right._ResourceId\r\n| project-away TimeGenerated\r\n| project name,id, shCount,drainModeCount, Users, resourceGroup, ACapacity=coalesce(ACapacity,0.0), Sessions\r\n",
                    "size": 0,
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "exportedParameters": [
                      {
                        "fieldName": "_ResourceId",
                        "parameterName": "SelectedHostPool",
                        "parameterType": 5,
                        "defaultValue": "NotSelected"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkColumn": "id",
                            "linkTarget": "Resource",
                            "subTarget": "Insights",
                            "customColumnWidthSetting": "24ch"
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "24ch"
                          }
                        },
                        {
                          "columnMatch": "shCount",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "drainModeCount",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "18ch"
                          }
                        },
                        {
                          "columnMatch": "Users",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": false,
                            "customColumnWidthSetting": "26ch"
                          }
                        },
                        {
                          "columnMatch": "ACapacity",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "24ch"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "Sessions",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "redGreen",
                            "customColumnWidthSetting": "400px"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Host Pool"
                        },
                        {
                          "columnId": "shCount",
                          "label": "Hosts"
                        },
                        {
                          "columnId": "drainModeCount",
                          "label": "Drain mode"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource group"
                        },
                        {
                          "columnId": "ACapacity",
                          "label": "Available capacity",
                          "comment": "Current capacity of the host pool"
                        },
                        {
                          "columnId": "Sessions",
                          "label": "Historical capacity"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "65",
                  "showPin": false,
                  "name": "HostPool Overview",
                  "styleSettings": {
                    "margin": "2px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "desktopvirtualizationresources\r\n| extend VMRid = tolower(properties.resourceId), Sessions = toint(properties.sessions)\r\n|project id=VMRid, Sessions\r\n| join kind=inner (resources\r\n    | where type =~ \"microsoft.compute/virtualmachines\"\r\n    | extend id = tolower(id)\r\n    ) on id\r\n| summarize  Count = count(), Sessions=sum(Sessions) by location\r\n",
                    "size": 0,
                    "showRefreshButton": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "labelSettings": [
                        {
                          "columnId": "location",
                          "label": "Location"
                        },
                        {
                          "columnId": "Count",
                          "label": "Hosts"
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "Session Hosts: [\"Count\"]",
                            "columnSettings": [
                              {
                                "columnName": "Count",
                                "color": "blue"
                              }
                            ]
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Sessions",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "Sessions: [\"Sessions\"]",
                            "columnSettings": [
                              {
                                "columnName": "Sessions",
                                "color": "blue"
                              }
                            ]
                          }
                        }
                      },
                      "showBorder": false,
                      "sortCriteriaField": "location",
                      "size": "full"
                    }
                  },
                  "customWidth": "20",
                  "name": "VMRegions",
                  "styleSettings": {
                    "margin": "2px",
                    "padding": "5px",
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "CapacityGroup",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Connection diagnostics: % of users able to connect",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// % of users able to reach a session host\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n| summarize Connected=countif(Connected)>0 by UserName, TimeGenerated=bin_at(TimeGenerated, {TimeRange:grain}, {TimeRange:start})\r\n| make-series UsersConnecting=dcountif(UserName, Connected) default=0, TotalUsers=dcount(UserName) default=toint(0) on TimeGenerated step {TimeRange:grain}\r\n| project TimeGenerated, UsersAbleToConnect=series_fill_const(series_divide(UsersConnecting, TotalUsers), 1)",
                    "size": 1,
                    "aggregation": 5,
                    "color": "turquoise",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "percent",
                            "useGrouping": true,
                            "maximumFractionDigits": 1
                          }
                        },
                        "min": 0,
                        "max": 1
                      }
                    }
                  },
                  "customWidth": "70",
                  "name": "UserConnectRateGraph",
                  "styleSettings": {
                    "margin": "0",
                    "padding": "10px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let FullList = datatable(Value:string)[\"Host\", \"User\", \"Resource\", \"Client\"];\r\nlet GetConnectionFailures = (BaseData:(Slicer:string, CorrelationId:string, UserName:string, ResourceAlias:string, SessionHostName:string, Client:string, TimeGenerated:datetime , Connected:bool), ViewName:string)\r\n{\r\n    BaseData\r\n    | summarize Users=dcount(UserName), Resources=dcount(ResourceAlias), Hosts=dcount(SessionHostName), Clients=dcount(Client), LastAttempt=max(TimeGenerated), Attempts=dcount(CorrelationId), View=ViewName, Activities=makeset(CorrelationId) by Slicer, Connected\r\n    | as BySlicer\r\n    | where Connected != true\r\n    | join kind=leftanti\r\n    (\r\n        BySlicer\r\n        | where Connected\r\n    ) on Slicer\r\n    | project-away Connected\r\n};\r\nWVDConnections\r\n| where State == \"Completed\"\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend SessionHostName==trim_end(@\"\\..*\", SessionHostName), Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| as BaseData\r\n| extend Slicer=UserName\r\n| invoke GetConnectionFailures(\"User\")\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=Client\r\n    | invoke GetConnectionFailures(\"Client\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=SessionHostName\r\n    | invoke GetConnectionFailures(\"Host\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=ResourceAlias\r\n    | invoke GetConnectionFailures(\"Resource\")\r\n)\r\n| where strlen(Slicer) > 2\r\n| sort by View, Attempts desc \r\n| summarize Items=dcount(Slicer) by Value=View\r\n| join kind=fullouter FullList on Value\r\n| project Value=strcat(coalesce(Value, Value1), \"s\"), Items=coalesce(Items, 0), Subtitle=\"with potential issues\"",
                    "size": 1,
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Value",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Subtitle"
                      },
                      "leftContent": {
                        "columnMatch": "Items",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false,
                      "sortCriteriaField": "Items",
                      "sortOrderField": 2
                    }
                  },
                  "customWidth": "30",
                  "name": "ConnectionDiagnostics"
                }
              ]
            },
            "customWidth": "100",
            "name": "ConnectionDiagnosticsGroup",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Connection performance: Time to connect (new sessions)",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | evaluate bag_unpack(Parameters)   \r\n    | where LoadBalanceOutcome == \"NewSession\"\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    ConnectionData\r\n    | where State in (\"Connected\")\r\n    | project ConnectedTime=TimeGenerated, CorrelationId, UserName, State\r\n) on CorrelationId\r\n| extend ConnectionTime = (ConnectedTime - TimeGenerated) / 1s\r\n| make-series Median=percentile(ConnectionTime, 50) default=int(null) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n| extend Median=series_fill_linear(Median, int(null))",
                    "size": 1,
                    "aggregation": 5,
                    "color": "blue",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "70",
                  "name": "TimeToConnectNewSessionGraph",
                  "styleSettings": {
                    "padding": "10px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| as ConnectionData\r\n| where State in (\"Started\")\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId\r\n) on CorrelationId\r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | evaluate bag_unpack(Parameters)   \r\n    | where LoadBalanceOutcome == \"NewSession\" //Include both Disconnected & Active as reesablishing a session\r\n    | summarize ConnectedTime=min(TimeGenerated) by CorrelationId\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    ConnectionData\r\n    | where State in (\"Connected\")\r\n    | project ConnectedTime=TimeGenerated, CorrelationId, UserName, State\r\n) on CorrelationId\r\n| extend ConnectionTime = (ConnectedTime - TimeGenerated) / 1s\r\n//| make-series Average=avg(ConnectionTime) default=int(null), Median=percentile(ConnectionTime, 50) default=int(null), p95=percentile(ConnectionTime, 95) default=int(null) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n| summarize Min=min(ConnectionTime), Median=percentile(ConnectionTime, 50), Average=avg(ConnectionTime), p95=percentile(ConnectionTime, 95)\r\n| evaluate narrow()\r\n| project Title=\"Time to connect\", Metric=Column, Value",
                    "size": 1,
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Metric"
                      },
                      "subtitleContent": {
                        "columnMatch": "Title"
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 30,
                          "max": 60,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumSignificantDigits": 2
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "30",
                  "name": "ConnectionDiagnostics tiles"
                }
              ]
            },
            "customWidth": "100",
            "name": "ConnectionPerformanceSummary",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Utilization",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday(iff({TimeRange:start}+1d <= {TimeRange:end} , {TimeRange:start}+1d, {TimeRange:start})); //adjust # of days displayed\r\nlet EndWin = endofday({TimeRange:end});\r\nlet lookbackWindow = 28d;  // 4 even weeks\r\nlet StartCountDay = StartWin - lookbackWindow;\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName  //chop down rows to just what we need\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin) // if connection not ended yet use lastday\r\n| where EndTime >= StartCountDay  // chop out connections the ended before our window started\r\n| extend StartTime = coalesce(StartTime, StartCountDay)  // if start aged off set at start of lookbackwindow\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)\r\n| project StartTime, EndTime, CorrelationId, UserName  // chop down colms to just what we need\r\n| extend StartTime=max_of(StartTime, StartCountDay), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartCountDay)  // #1 start of first day connection appears\r\n| extend _endRange = iff(EndTime + lookbackWindow > EndWin, EndWin,\r\n                             iff(EndTime + lookbackWindow - 1d < StartTime, StartTime,\r\n                                    iff(EndTime + lookbackWindow - 1d < _bin, _bin, _bin + lookbackWindow - 1d))) // #2 last day connection will appear\r\n| extend _range = range(_bin, _endRange, 1d) // #3 create a start of day timestamp for every day connection existed and/or day it will be counted\r\n| mv-expand _range to typeof(datetime) // #4 \r\n| summarize Users = dcount(UserName) by Days=bin_at(_range, 1d, StartCountDay) // #5 sum startofday timestamps\r\n| where Days>= StartWin // #6 chop off days we dont want to display\r\n| sort by Days asc\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Monthly users (MAU)",
                    "noDataMessage": "No users detected",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "yAxis": [
                        "Users"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "RollingMAU",
                          "label": "Users"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "MonthlyUsers",
                  "styleSettings": {
                    "padding": "10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday(iff({TimeRange:start}+1d <= {TimeRange:end} , {TimeRange:start}+1d, {TimeRange:start})); //adjust # of days displayed\r\nlet EndWin = endofday({TimeRange:end}); \r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin)  // if no end use end of window\r\n| where EndTime >= StartWin\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off use 1st day\r\n| where StartTime <= EndWin\r\n| project StartTime, EndTime, CorrelationId, UserName\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartWin) // first bin must be at start of day\r\n| extend TimeSlots = range(_bin, EndTime, 1d)\r\n| mv-expand TimeSlots to typeof(datetime)\r\n| make-series Users = dcount(UserName) default=0 on TimeSlots from StartWin to EndWin step 1d\r\n| project Days = TimeSlots, Users\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily users (DAU)",
                    "noDataMessage": "No users detected",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "DailyUsers",
                  "styleSettings": {
                    "padding": "10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday(iff({TimeRange:start}+1d <= {TimeRange:end} , {TimeRange:start}+1d, {TimeRange:start})); //adjust # of days displayed\r\nlet EndWin = startofday({TimeRange:end}+1d);\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin) // if connection not ended yet use lastday\r\n| where EndTime >= StartWin  // chop out connections the ended before our window started\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off set at start of lookbackwindow\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State)\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartWin) // first bin must be at start of day\r\n| extend TimeSlot = range(_bin, EndTime, 1d)\r\n| mv-expand TimeSlot to typeof(datetime)\r\n| make-series Sessions = dcount(CorrelationId) default=0 on TimeSlot from StartWin to EndWin step 1d by State\r\n| project Days = TimeSlot, Sessions, State",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily connections and reconnections",
                    "noDataMessage": "No sessions detected",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "DailyConnects",
                  "styleSettings": {
                    "padding": "10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let StartWin = startofday(iff({TimeRange:start}+1d <= {TimeRange:end} , {TimeRange:start}+1d, {TimeRange:start})); //adjust # of days displayed\r\nlet EndWin = startofday({TimeRange:end}+1d);\r\nWVDConnections\r\n| project CorrelationId, State, TimeGenerated, UserName\r\n| as Connections\r\n| where State == \"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    Connections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, EndWin) // if connection not ended yet use lastday\r\n| where EndTime >= StartWin  // chop out connections the ended before our window started\r\n| extend StartTime = coalesce(StartTime, StartWin)  // if start aged off set at start of lookbackwindow\r\n| where StartTime <= EndWin\r\n| extend CorrelationId = coalesce(CorrelationId, CorrelationId1)  // fix fields that only came from a completed record\r\n| extend UserName = coalesce(UserName, UserName1)\r\n| project StartTime, EndTime, CorrelationId, State = coalesce(State1, State)\r\n| extend StartTime=max_of(StartTime, StartWin), EndTime=min_of(EndTime, EndWin)  // chop connections to window\r\n| extend _bin = bin_at(StartTime, 1d, StartWin) // first bin must be at start of day\r\n| extend TimeSlot = range(_bin, EndTime, 1d)\r\n| mv-expand TimeSlot to typeof(datetime)\r\n| extend StartTm = iff(StartTime > TimeSlot, StartTime, TimeSlot)\r\n| extend EndTm = iff(EndTime < TimeSlot + 1d, EndTime, TimeSlot + 1d)\r\n| extend Hours = (EndTm - StartTm) / 1h\r\n| make-series Hours = sum(Hours)  default=0 on TimeSlot from StartWin to EndWin step 1d\r\n| project Days = TimeSlot, Hours\r\n\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily connected hours",
                    "noDataMessage": "No users detected",
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Daily Connected Hours",
                  "styleSettings": {
                    "padding": "10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "alertsmanagementresources\r\n| extend Details = parse_json(properties).essentials\r\n| project id, name, Time = todatetime(Details.startDateTime), State = tostring(Details.alertState), Severity= tostring(Details.severity)\r\n| where Time {TimeRange:query}\r\n| summarize Alerts = count(id) by bin(Time, 1d), Severity\r\n| project Date = format_datetime(Time, \"MM-dd\"), Severity, Alerts\r\n| sort by Date asc",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Daily alerts",
                    "color": "blue",
                    "noDataMessage": "No new alerts in this time range",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "categoricalbar",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Date",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Alerts",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "xAxis": "Date",
                      "yAxis": [
                        "Alerts"
                      ],
                      "group": null,
                      "createOtherGroup": 0,
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Daily Alerts",
                  "styleSettings": {
                    "padding": "10px",
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "UtilizationTrends",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "OverviewGroup"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
