{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "summarize Count = count() by subscriptionId\r\n| project value = strcat('/subscriptions/', subscriptionId), label = subscriptionId, Selected = Count >= 0",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2e3dfd9b-2d0f-4feb-94e8-107f220c4e28",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroups",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type contains  \"desktopvirtualization\"\r\n| summarize Count = count() by resourceGroup\r\n| project Label = resourceGroup, Id = resourceGroup, Selected = Count >= 0",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "951b5870-e216-45c6-b159-34150868a46e",
            "version": "KqlParameterItem/1.0",
            "name": "HostPools",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/hostpools\" and resourceGroup in ({ResourceGroups})\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "04a8ead2-1fb2-4666-a7b0-6d92e3c29b46",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 172800000
            },
            "label": "Time range"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters_general"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "550b4213-7293-48f0-affa-2473fc66ba79",
            "version": "KqlParameterItem/1.0",
            "name": "FocusFailures",
            "label": "Focus on failures",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\"label\": \"Yes\", \"value\": \"| project-away Success*  // Focus on failures\"},\r\n    {\"label\": \"No\",  \"value\": \"//\", \"selected\": true}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters_debug"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Success rate of (re)establishing a connection (% of connections)",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Success rate of establishing a connection state when attempted by the user\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n//| where State ==\"Completed\"// in (\"Connected\", \"Completed\")\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n// Split the activity ID into the \"session ID\" (first 36-4=32 characters of the GUID, same value for all reconnections) and the last 4 characters are the attempt index (0 for initial connection, increment for each reconnect)\r\n| extend SessionId=substring(CorrelationId, 0, 36 - 4),\r\n         AttemptIndex=toint(strcat(\"0x\", substring(CorrelationId, 36 - 2), substring(CorrelationId, 36 - 4, 2))) // Swap the last two pairs of characters, and intrepret as hex\r\n// For each attempt in a session, verify that checkpoints from the host confirm the connection\r\n| summarize Success=countif(Connected)>0, StartTime=min(TimeGenerated) by SessionId\r\n| make-series \r\n    SuccessSessions=dcountif(SessionId, Success) default=0,\r\n    ErrorSessions=dcountif(SessionId, not(Success)) default=0\r\n    on StartTime step {TimeRange:grain}\r\n{FocusFailures}",
              "size": 0,
              "aggregation": 5,
              "title": "Volume of connections by connection result",
              "timeBrushParameterName": "ConnectionTimeBrush",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "SuccessSessions",
                    "label": "Connections reaching a host",
                    "color": "green"
                  },
                  {
                    "seriesName": "ErrorSessions",
                    "label": "Connections unable to reach a host",
                    "color": "redBright"
                  }
                ]
              }
            },
            "name": "Volume of connections by connection result"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Success rate of establishing a connection state when attempted by the user\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n// Split the activity ID into the \"session ID\" (first 36-4=32 characters of the GUID, same value for all reconnections) and the last 4 characters are the attempt index (0 for initial connection, increment for each reconnect)\r\n| extend SessionId=substring(CorrelationId, 0, 36 - 4),\r\n         AttemptIndex=toint(strcat(\"0x\", substring(CorrelationId, 36 - 2), substring(CorrelationId, 36 - 4, 2))) // Swap the last two pairs of characters, and intrepret as hex\r\n// For each attempt in a session, verify that checkpoints from the host confirm the connection\r\n| summarize Success=countif(Connected)>0, StartTime=min(TimeGenerated) by SessionId\r\n| make-series \r\n    SuccessSessions=dcountif(SessionId, Success) default=0,\r\n    TotalSessions=dcount(SessionId) default=toint(0) // Cast to prevent double.nan which is more difficult to fill in with series_fill_const\r\n    on StartTime step {TimeRange:grain}\r\n| project StartTime, AnyAttemptSuccessRate=series_fill_const(series_divide(SuccessSessions,TotalSessions), 1)\r\n//{FocusFailures} // Reference parameter to force refresh on change",
              "size": 1,
              "aggregation": 5,
              "title": "Connection success rate",
              "color": "blue",
              "noDataMessage": "No connections were started in the selected time range",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "AnyAttemptSuccessRate",
                    "label": "Connections reaching a session host"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "min": 0,
                  "max": 1
                }
              }
            },
            "name": "Connection success rate"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Success rate of establishing a connection state when attempted by the user\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n// Split the activity ID into the \"session ID\" (first 36-4=32 characters of the GUID, same value for all reconnections) and the last 4 characters are the attempt index (0 for initial connection, increment for each reconnect)\r\n| extend SessionId=substring(CorrelationId, 0, 36 - 4),\r\n         AttemptIndex=toint(strcat(\"0x\", substring(CorrelationId, 36 - 2), substring(CorrelationId, 36 - 4, 2))) // Swap the last two pairs of characters, and intrepret as hex\r\n// For each attempt in a session, verify that checkpoints from the host confirm the connection\r\n| summarize Attempts=dcount(CorrelationId), Success=countif(Connected)>0, FirstAttempt=min(TimeGenerated) by UserName, SessionId\r\n| where bin_at(FirstAttempt, {TimeRange:grain}, {TimeRange:start}) between(({ConnectionTimeBrush:start})..({ConnectionTimeBrush:end}))\r\n| sort by FirstAttempt asc\r\n| where not(Success) or not(\"{FocusFailures}\" contains \"Focus on failures\")\r\n| project FirstAttempt, SessionId=strcat(iif(Success, \"🟢\", \"🔴\"), \" \", SessionId, \"*\"), UserName, Attempts\r\n| take 250 // prevent the tooltip that takes up vertical space. is 250 reasonable? can be adjusted by customers by editing the query and visual config",
              "size": 1,
              "aggregation": 5,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "FirstAttempt",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "SessionId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "UserName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "90fr"
                    }
                  },
                  {
                    "columnMatch": "Attempts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "customColumnWidthSetting": "10fr"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "UserName",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "FirstAttempt",
                    "label": "First attempt"
                  },
                  {
                    "columnId": "SessionId",
                    "label": "Connection Id"
                  },
                  {
                    "columnId": "UserName",
                    "label": "User"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "UserName",
                  "sortOrder": 1
                }
              ],
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "AnyAttemptSuccessRate",
                    "label": "Connections reaching a session host"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "max": 1
                }
              }
            },
            "name": "Connection outcome listing"
          }
        ]
      },
      "customWidth": "50",
      "name": "Reconnect Success Rate",
      "styleSettings": {
        "margin": "10px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Success rate of establishing a connection (% of users able to connect)",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// % of users able to reach a session host\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n// For each user in each time bin, find out if they were able to connect\r\n| summarize Connected=countif(Connected)>0 by UserName, TimeGenerated=bin_at(TimeGenerated, {TimeRange:grain}, {TimeRange:start})\r\n| make-series SuccessUsers=dcountif(UserName, Connected), Total=dcount(UserName) on TimeGenerated step {TimeRange:grain}\r\n| project TimeGenerated, SuccessUsers, ErrorUsers=series_subtract(Total, SuccessUsers)\r\n{FocusFailures}",
              "size": 0,
              "aggregation": 5,
              "title": "Volume of users by connection result",
              "timeBrushParameterName": "ConnectionTimeBrush",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "SuccessUsers",
                    "label": "Users able to connect",
                    "color": "green"
                  },
                  {
                    "seriesName": "ErrorUsers",
                    "label": "Users unable to connect",
                    "color": "redBright"
                  }
                ]
              }
            },
            "name": "Volume of users by connection result"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// % of users able to reach a session host\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n| summarize Connected=countif(Connected)>0 by UserName, TimeGenerated=bin_at(TimeGenerated, {TimeRange:grain}, {TimeRange:start})\r\n| make-series UsersConnecting=dcountif(UserName, Connected) default=0, TotalUsers=dcount(UserName) default=toint(0) on TimeGenerated step {TimeRange:grain}\r\n| project TimeGenerated, UsersAbleToConnect=series_fill_const(series_divide(UsersConnecting, TotalUsers), 1)\r\n//{FocusFailures} // Reference parameter to force refresh on change",
              "size": 1,
              "aggregation": 5,
              "title": "User-based success rate",
              "color": "turquoise",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "LastAttemptSuccessRate",
                    "label": "Final reconnection succeeded"
                  },
                  {
                    "seriesName": "AnyAttemptSuccessRate",
                    "label": "Any reconnection succeeded"
                  },
                  {
                    "seriesName": "AllUpSuccessRate",
                    "label": "Success of each attempt"
                  },
                  {
                    "seriesName": "UsersAbleToConnect",
                    "label": "Users able to connect"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "min": 0,
                  "max": 1
                }
              }
            },
            "name": "User-based success rate"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// % of users able to reach a session host\r\nWVDConnections\r\n| join kind=leftsemi\r\n(\r\n    WVDConnections\r\n    | where TimeGenerated {TimeRange}\r\n    | distinct CorrelationId\r\n) on CorrelationId\r\n| summarize arg_max(TimeGenerated, *) by CorrelationId\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend Connected=coalesce(Connected, false)\r\n// Split the activity ID into the \"session ID\" (first 36-4=32 characters of the GUID, same value for all reconnections) and the last 4 characters are the attempt index (0 for initial connection, increment for each reconnect)\r\n| extend SessionId=substring(CorrelationId, 0, 36 - 4),\r\n         AttemptIndex=toint(strcat(\"0x\", substring(CorrelationId, 36 - 2), substring(CorrelationId, 36 - 4, 2))) // Swap the last two pairs of characters, and intrepret as hex\r\n| summarize FirstAttempt=min(TimeGenerated), TotalAttempts=dcount(CorrelationId), Success=dcountif(CorrelationId, Connected)>0, SampleSession=any(SessionId) by UserName, BinnedTime=bin_at(TimeGenerated, {TimeRange:grain}, {TimeRange:start})\r\n| where BinnedTime between(({ConnectionTimeBrush:start})..({ConnectionTimeBrush:end}))\r\n| where not(Success) or not(\"{FocusFailures}\" contains \"Focus on failures\")\r\n| sort by FirstAttempt desc, Success asc, UserName asc\r\n| project FirstAttempt, SampleSession=strcat(SampleSession, \"*\"), UserName=strcat(iif(Success, \"🟢\", \"🔴\"), \" \", UserName), Attempts=TotalAttempts\r\n| take 250 // prevent the tooltip that takes up vertical space. is 250 reasonable? can be adjusted by customers by editing the query and visual config",
              "size": 1,
              "aggregation": 5,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "FirstAttempt",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "UserName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "90fr"
                    }
                  },
                  {
                    "columnMatch": "SampleSession",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "Attempts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "customColumnWidthSetting": "10fr"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "UserName",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "FirstAttempt",
                    "label": "First attempt"
                  },
                  {
                    "columnId": "SampleSession",
                    "label": "Sample connection Id"
                  },
                  {
                    "columnId": "UserName",
                    "label": "User"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "UserName",
                  "sortOrder": 1
                }
              ],
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "AnyAttemptSuccessRate",
                    "label": "Connections reaching a session host"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  },
                  "max": 1
                }
              }
            },
            "name": "Connection outcome listing1"
          }
        ]
      },
      "customWidth": "50",
      "name": "User-based connection success rate",
      "styleSettings": {
        "margin": "10px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Potential connectivity issues in {TimeRange:label}",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "parameters": [
                {
                  "id": "5382e3d1-e3bd-4b1e-87be-7e4a9748b39a",
                  "version": "KqlParameterItem/1.0",
                  "name": "ReportBy",
                  "label": "Report by",
                  "type": 10,
                  "isRequired": true,
                  "query": "let FullList = datatable(Value:string)[\"Host\", \"User\", \"Resource\", \"Client\"];\r\nlet GetConnectionFailures = (BaseData:(Slicer:string, CorrelationId:string, UserName:string, ResourceAlias:string, SessionHostName:string, Client:string, TimeGenerated:datetime , Connected:bool), ViewName:string)\r\n{\r\n    BaseData\r\n    | summarize Users=dcount(UserName), Resources=dcount(ResourceAlias), Hosts=dcount(SessionHostName), Clients=dcount(Client), LastAttempt=max(TimeGenerated), Attempts=dcount(CorrelationId), View=ViewName, Activities=makeset(CorrelationId) by Slicer, Connected\r\n    | as BySlicer\r\n    | where Connected != true\r\n    | join kind=leftanti\r\n    (\r\n        BySlicer\r\n        | where Connected\r\n    ) on Slicer\r\n    | project-away Connected\r\n};\r\nWVDConnections\r\n| where State == \"Completed\"\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend SessionHostName=trim_end(@\"\\..*\", SessionHostName), Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| as BaseData\r\n| extend Slicer=UserName\r\n| invoke GetConnectionFailures(\"User\")\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=Client\r\n    | invoke GetConnectionFailures(\"Client\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=SessionHostName\r\n    | invoke GetConnectionFailures(\"Host\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=ResourceAlias\r\n    | invoke GetConnectionFailures(\"Resource\")\r\n)\r\n| where strlen(Slicer) > 2\r\n| sort by View, Attempts desc \r\n| summarize Items=dcount(Slicer) by Value=View\r\n| as summary\r\n| extend maxValue = toscalar (summary |summarize max(Items))\r\n| join kind=fullouter FullList on Value\r\n| project Value=coalesce(Value, Value1), Items=coalesce(Items, 0), Selected=Items==maxValue\r\n| project Value, Label=strcat(Value, \" (\", Items, \")\"), Selected",
                  "crossComponentResources": [
                    "{HostPools}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.desktopvirtualization/hostpools"
                }
              ],
              "style": "formHorizontal",
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools"
            },
            "name": "parameters_connectivity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let GetConnectionFailures = (BaseData:(Slicer:string, CorrelationId:string, UserName:string, ResourceAlias:string, SessionHostName:string, Client:string, TimeGenerated:datetime , Connected:bool), ViewName:string)\r\n{\r\n    BaseData\r\n    | summarize Users=dcount(UserName), Resources=dcount(ResourceAlias), Hosts=dcount(SessionHostName), Clients=dcount(Client), LastAttempt=max(TimeGenerated), Attempts=dcount(CorrelationId), View=ViewName, Activities=makeset(CorrelationId)\r\n             by Slicer, Connected\r\n    | as BySlicer\r\n    | where Connected != true\r\n    | join kind=leftanti // Exclude the users that managed to connect\r\n    (\r\n        BySlicer\r\n        | where Connected\r\n    ) on Slicer\r\n    | project-away Connected\r\n};\r\nWVDConnections\r\n| where State == \"Completed\"\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n) on CorrelationId\r\n| extend SessionHostName=trim_end(@\"\\..*\", SessionHostName), Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| as BaseData\r\n| extend Slicer=UserName\r\n| invoke GetConnectionFailures(\"User\")\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=Client\r\n    | invoke GetConnectionFailures(\"Client\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=SessionHostName\r\n    | invoke GetConnectionFailures(\"Host\")\r\n)\r\n| union \r\n(\r\n    BaseData\r\n    | extend Slicer=ResourceAlias\r\n    | invoke GetConnectionFailures(\"Resource\")\r\n)\r\n| where strlen(Slicer) > 2\r\n| where View == \"{ReportBy}\"\r\n| sort by View, Attempts desc \r\n| project {ReportBy}=Slicer, Attempts, LastAttempt, Users, Resources, Hosts, Clients, Activities, Slicer\r\n| project-away {ReportBy}s // Remove the count of the dimension used as a slicer, since it will always be 1\r\n          ",
              "size": 0,
              "aggregation": 5,
              "title": "{ReportBy}s unable to connect in {TimeRange:label}",
              "noDataMessage": "There are no instances of inability to connect for the chosen view and time frame",
              "noDataMessageStyle": 3,
              "timeContextFromParameter": "TimeRange",
              "exportedParameters": [
                {
                  "fieldName": "Activities",
                  "parameterName": "ExpandActivities"
                },
                {
                  "fieldName": "Slicer",
                  "parameterName": "SelectedSlicer",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Attempts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "redBright",
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": [
                          {
                            "columnName": "Attempts",
                            "color": "blue"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Users",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    }
                  },
                  {
                    "columnMatch": "Hosts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "magenta"
                    }
                  },
                  {
                    "columnMatch": "Clients",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange"
                    }
                  },
                  {
                    "columnMatch": "Activities",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Slicer",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resources",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "yellow"
                    }
                  },
                  {
                    "columnMatch": "View",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ClientType",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "LastAttempt",
                    "label": "Last attempt"
                  }
                ]
              },
              "sortBy": [],
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "UsersConnecting",
                    "color": "green"
                  },
                  {
                    "seriesName": "UsersNotConnecting",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "45",
            "name": "Inability To Connect",
            "styleSettings": {
              "padding": "10"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Details for selected {ReportBy}: {SelectedSlicer}. Activities {ExpandActivities}",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SelectedActivities = dynamic([{ExpandActivities}]);\r\nWVDConnections\r\n| where SelectedActivities contains CorrelationId\r\n| extend SessionHostName=trim_end(@\"\\..*\", SessionHostName), Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| summarize Activities=dcount(CorrelationId) by Host=SessionHostName, User=UserName, Resource=ResourceAlias, Client\r\n",
                    "size": 1,
                    "aggregation": 5,
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Activities",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Activities",
                          "label": "Attempts"
                        }
                      ]
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "UsersConnecting",
                          "color": "green"
                        },
                        {
                          "seriesName": "UsersNotConnecting",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "ExpandActivities",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 7"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SelectedActivities = dynamic([{ExpandActivities}]);\r\nlet GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDErrors\r\n| where SelectedActivities contains CorrelationId\r\n| extend Error=GetPrettyError(CodeSymbolic, Code)\r\n| summarize MessageSample=any(Message), Activities=dcount(CorrelationId) by ErrorKind=iif(ServiceError, \"Service\", \"Deployment\"), Source, Error\r\n",
                    "size": 4,
                    "aggregation": 5,
                    "noDataMessage": "No errors were found for the selection",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Activities",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "ErrorKind",
                          "label": "Error Kind"
                        },
                        {
                          "columnId": "MessageSample",
                          "label": "Sample Error Message"
                        }
                      ]
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "UsersConnecting",
                          "color": "green"
                        },
                        {
                          "seriesName": "UsersNotConnecting",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "ExpandActivities",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 8"
                }
              ]
            },
            "customWidth": "55",
            "conditionalVisibility": {
              "parameterName": "ExpandActivities",
              "comparison": "isNotEqualTo"
            },
            "name": "SelectedActivityGroup",
            "styleSettings": {
              "padding": "10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Please select a {ReportBy} on the left to display further details\r\n",
              "style": "info"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "ExpandActivities",
              "comparison": "isEqualTo"
            },
            "name": "NoSelectedActivity_Instruction"
          }
        ]
      },
      "name": "Potential connectivity issues",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where TimeGenerated {TimeRange}\r\n| extend Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| extend PredecessorConnectionId=replace(\"<>\", \"\", trim(@\"{|}\", PredecessorConnectionId))\r\n| as Connections\r\n| where State==\"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=leftouter\r\n(\r\n    Connections\r\n    | summarize (EndTime, State)=arg_max(TimeGenerated, State) by CorrelationId\r\n) on CorrelationId\r\n| extend State=coalesce(State1, State)\r\n| join kind=leftouter\r\n(\r\n    WVDErrors\r\n    | project CorrelationId, ServiceError, Source, Error = GetPrettyError(CodeSymbolic, Code)\r\n    | distinct *\r\n    | summarize Errors=count() by CorrelationId\r\n) on CorrelationId\r\n| project CorrelationId, SessionId=strcat(substring(CorrelationId, 0, strlen(CorrelationId) - 4), \"*\"), UserName, SessionHostName, Errors=coalesce(Errors, 0), StartTime, EndTime, Duration=bin(EndTime-StartTime, 1s), ClientType, ClientVersion\r\n| summarize StartTime=min(StartTime), EndTime=max(EndTime), Duration=sum(Duration), Attempts=dcount(CorrelationId), Errors=sum(Errors), CorrelationId=makeset(CorrelationId)\r\n         by UserName, SessionHostName, SessionId, Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| project UserName, SessionHostName, SessionId, Attempts, Errors, Client, StartTime, Duration, CorrelationId\r\n",
              "size": 2,
              "title": "Connection activity browser for {TimeRange:label}",
              "noDataMessage": "No Connected Sessions detected in the selected time period",
              "exportedParameters": [
                {
                  "fieldName": "SessionId",
                  "parameterName": "GroupedCorrelationId"
                },
                {
                  "fieldName": "UserName",
                  "parameterName": "CorrelationUser",
                  "parameterType": 1
                },
                {
                  "fieldName": "SessionHostName",
                  "parameterName": "CorrelationHost",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "100fr"
                    }
                  },
                  {
                    "columnMatch": "UserName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SessionHostName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SessionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Attempts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum",
                      "customColumnWidthSetting": "13ch"
                    }
                  },
                  {
                    "columnMatch": "Errors",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "redBright",
                      "aggregation": "Sum",
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Client",
                    "formatter": 0,
                    "formatOptions": {
                      "aggregation": "Unique",
                      "customColumnWidthSetting": "28ch"
                    }
                  },
                  {
                    "columnMatch": "StartTime",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "22ch"
                    }
                  },
                  {
                    "columnMatch": "Duration",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "14ch"
                    }
                  },
                  {
                    "columnMatch": "CorrelationId",
                    "formatter": 5
                  }
                ],
                "rowLimit": 2000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "UserName",
                    "SessionHostName"
                  ],
                  "finalBy": "SessionId"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_count_$gen_group_0",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "UserName",
                    "label": "Activity by User and Host"
                  },
                  {
                    "columnId": "StartTime",
                    "label": "Start time"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_count_$gen_group_0",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "wvdconnectedsessionsdetails",
            "styleSettings": {
              "padding": "10px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nlet IsSelectedCorrelation = (Selected:string, Current:string)\r\n{\r\n    let GuidStart = substring(Selected, 0, strlen(Selected)-1);\r\n    (Selected contains \"*\" and Current startswith GuidStart)     or    Current == Selected\r\n};\r\nWVDCheckpoints\r\n| where TimeGenerated {TimeRange} and IsSelectedCorrelation(\"{GroupedCorrelationId}\", CorrelationId)\r\n| project CorrelationId, TimeGenerated, Kind=\"Checkpoint\", Source, Information=Name, Parameters\r\n| as ResultSet\r\n| union\r\n(\r\n    WVDErrors\r\n    | where IsSelectedCorrelation(\"{GroupedCorrelationId}\", CorrelationId)\r\n    | project CorrelationId,TimeGenerated, Kind=iif(ServiceError, \"Service\", \"Deployment\"), Source, Information = GetPrettyError(CodeSymbolic, Code)\r\n    | distinct *\r\n)\r\n| join kind = leftouter\r\n(\r\n    ResultSet\r\n    | where Source == \"RDStack\" and Information == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n    | summarize Success=dcountif(CorrelationId, Connected)>0 by CorrelationId\r\n) on CorrelationId\r\n| extend CorrelationId=strcat(iif(Success, \"🟢\", \"🔴\"), \" \", CorrelationId)\r\n| project-away Success\r\n| sort by CorrelationId asc, TimeGenerated asc\r\n",
              "size": 2,
              "title": "Details for {CorrelationUser} connecting to {CorrelationHost}",
              "noDataMessage": "No errors were found for the selected session.",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "CorrelationId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Kind",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Checkpoint",
                          "representation": "Normal",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Deployment",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Service",
                          "representation": "Important",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Parameters",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "100fr"
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "CorrelationId"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "TimeGenerated"
                },
                "labelSettings": [
                  {
                    "columnId": "CorrelationId",
                    "label": "Attempt and timestamp"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "GroupedCorrelationId",
              "comparison": "isNotEqualTo"
            },
            "name": "DetailsCorrelationUser_Group",
            "styleSettings": {
              "padding": "10px"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Please select a connection on the left for further details here",
              "style": "info"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "GroupedCorrelationId",
              "comparison": "isEqualTo"
            },
            "name": "SelectedActivity_Instructions"
          }
        ]
      },
      "name": "Activity browser",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "parameters": [
                {
                  "id": "8809818d-1aa3-4a27-ac0b-b1808000be06",
                  "version": "KqlParameterItem/1.0",
                  "name": "wvdActivityType",
                  "label": "Activity type",
                  "type": 10,
                  "description": "Scope top errors by activity type",
                  "isRequired": true,
                  "query": "WVDErrors\r\n| distinct ActivityType\r\n| sort by ActivityType asc",
                  "crossComponentResources": [
                    "{HostPools}"
                  ],
                  "value": "Connection",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.desktopvirtualization/hostpools"
                },
                {
                  "id": "2660c262-528a-4897-8631-94acd157c3c0",
                  "version": "KqlParameterItem/1.0",
                  "name": "TopNErrors",
                  "label": "Display top N errors",
                  "type": 2,
                  "isRequired": true,
                  "value": "10",
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[ 10, 20, 30]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools"
            },
            "name": "parameters_activity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where \"{wvdActivityType}\" == \"Connection\"\r\n| union (WVDManagement        | where \"{wvdActivityType}\" == \"Management\" )\r\n| union (WVDHostRegistrations | where \"{wvdActivityType}\" == \"RegistrationToken\" )\r\n| join kind=rightouter\r\n(\r\n    WVDErrors\r\n    | where TimeGenerated {TimeRange} and ActivityType == \"{wvdActivityType}\"\r\n    | extend Error=GetPrettyError(CodeSymbolic, Code)\r\n) on CorrelationId\r\n| as ErrorList\r\n| make-series ActivitiesImpactedOverTime=dcount(CorrelationId) default=0,\r\n              UsersImpactedOverTime=dcountif(UserName, strlen(UserName) > 2) default=0,\r\n              HostsImpactedOverTime=dcountif(SessionHostName, strlen(SessionHostName) > 2) default=0\r\n           on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActivityType, ServiceError, Source, Error\r\n| join kind=inner\r\n(\r\n    ErrorList\r\n    | summarize MessageSample=any(Message), TotalActivitiesImpacted=dcount(CorrelationId), TotalUsersImpacted=dcountif(UserName, strlen(UserName) > 2), TotalHostsImpacted=dcountif(SessionHostName, strlen(SessionHostName) > 2)\r\n             by ActivityType, ServiceError, Source, Error\r\n) on ActivityType, ServiceError, Source, Error\r\n| project Kind=iif(ServiceError, \"Service\", \"Deployment\"), Source, Error, MessageSample, TotalActivitiesImpacted, ActivitiesImpactedOverTime, TotalUsersImpacted, UsersImpactedOverTime, TotalHostsImpacted, HostsImpactedOverTime,ServiceError\r\n| sort by TotalUsersImpacted, TotalActivitiesImpacted, TotalHostsImpacted\r\n| top {TopNErrors} by TotalActivitiesImpacted",
              "size": 0,
              "aggregation": 3,
              "title": "Ranking of Errors impacting {wvdActivityType} activities in {TimeRange:label}",
              "noDataMessage": "No errors reported in the selected time period",
              "exportedParameters": [
                {
                  "fieldName": "Error",
                  "parameterName": "SelectedError",
                  "parameterType": 1
                },
                {
                  "fieldName": "Source",
                  "parameterName": "SelectedSource",
                  "parameterType": 1
                },
                {
                  "fieldName": "ServiceError",
                  "parameterName": "SelectedServiceError",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.desktopvirtualization/hostpools",
              "crossComponentResources": [
                "{HostPools}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Kind",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Service",
                          "representation": "Important",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Deployment",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Error",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40fr"
                    }
                  },
                  {
                    "columnMatch": "MessageSample",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "60fr"
                    }
                  },
                  {
                    "columnMatch": "TotalActivitiesImpacted",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "ActivitiesImpactedOverTime",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "blue",
                      "customColumnWidthSetting": "210px"
                    }
                  },
                  {
                    "columnMatch": "TotalUsersImpacted",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    }
                  },
                  {
                    "columnMatch": "UsersImpactedOverTime",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "turquoise",
                      "customColumnWidthSetting": "210px"
                    }
                  },
                  {
                    "columnMatch": "TotalHostsImpacted",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "magenta"
                    }
                  },
                  {
                    "columnMatch": "HostsImpactedOverTime",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "magenta",
                      "customColumnWidthSetting": "210px"
                    }
                  },
                  {
                    "columnMatch": "ServiceError",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "MessageSample",
                    "label": "Message sample"
                  },
                  {
                    "columnId": "TotalActivitiesImpacted",
                    "label": "Activities"
                  },
                  {
                    "columnId": "ActivitiesImpactedOverTime",
                    "label": "Over time"
                  },
                  {
                    "columnId": "TotalUsersImpacted",
                    "label": "Users"
                  },
                  {
                    "columnId": "UsersImpactedOverTime",
                    "label": "Over time"
                  },
                  {
                    "columnId": "TotalHostsImpacted",
                    "label": "Hosts"
                  },
                  {
                    "columnId": "HostsImpactedOverTime",
                    "label": "Over time"
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "CodeSymbolic",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "ErrorRate",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "CodeSymbolic",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "usercount",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "showPin": true,
            "name": "Ranking Errors"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where \"{wvdActivityType}\" == \"Connection\"\r\n| union (WVDManagement        | where \"{wvdActivityType}\" == \"Management\" )\r\n| union (WVDHostRegistrations | where \"{wvdActivityType}\" == \"RegistrationToken\" )\r\n| join kind=rightouter\r\n(\r\n    WVDErrors\r\n    | where TimeGenerated {TimeRange} and ActivityType == \"{wvdActivityType}\"\r\n    | extend Error=GetPrettyError(CodeSymbolic, Code)\r\n) on CorrelationId\r\n| where  strlen(UserName) > 2\r\n| where Error == \"{SelectedError}\" and Source==\"{SelectedSource}\" and ServiceError == tobool(\"{SelectedServiceError}\")\r\n| as hint.materialized=true ErrorList\r\n| make-series OverTime=dcount(CorrelationId) default=0,\r\n              HostsImpactedOverTime=dcountif(SessionHostName, strlen(SessionHostName) > 2) default=0\r\n           on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActivityType, UserName\r\n| join kind=inner\r\n(\r\n    ErrorList\r\n    | summarize TotalActivitiesImpacted=dcount(CorrelationId), TotalHostsImpacted=dcountif(SessionHostName, strlen(SessionHostName) > 2)\r\n             by ActivityType, UserName\r\n) on ActivityType, UserName\r\n| project UserName, TotalActivitiesImpacted, OverTime, TotalHostsImpacted, HostsImpactedOverTime\r\n| sort by TotalActivitiesImpacted, TotalHostsImpacted",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Users impacted by selected error",
                    "noDataMessage": "No errors reported in the selected time period",
                    "exportFieldName": "label",
                    "exportParameterName": "wvderror",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TotalActivitiesImpacted",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "OverTime",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "210px"
                          }
                        },
                        {
                          "columnMatch": "TotalHostsImpacted",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "magenta"
                          }
                        },
                        {
                          "columnMatch": "HostsImpactedOverTime",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "magenta",
                            "customColumnWidthSetting": "210px"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "labelSettings": [
                        {
                          "columnId": "UserName",
                          "label": "User name"
                        },
                        {
                          "columnId": "TotalActivitiesImpacted",
                          "label": "Activities"
                        },
                        {
                          "columnId": "OverTime",
                          "label": "Over time"
                        },
                        {
                          "columnId": "TotalHostsImpacted",
                          "label": "Hosts"
                        },
                        {
                          "columnId": "HostsImpactedOverTime",
                          "label": "Over time"
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "CodeSymbolic",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "ErrorRate",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "CodeSymbolic",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "usercount",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "percent",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "UsersAffected",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where \"{wvdActivityType}\" == \"Connection\"\r\n| union (WVDManagement        | where \"{wvdActivityType}\" == \"Management\" )\r\n| union (WVDHostRegistrations | where \"{wvdActivityType}\" == \"RegistrationToken\" )\r\n| join kind=rightouter\r\n(\r\n    WVDErrors\r\n    | where TimeGenerated {TimeRange} and ActivityType == \"{wvdActivityType}\"\r\n    | extend Error=GetPrettyError(CodeSymbolic, Code)\r\n) on CorrelationId\r\n| where strlen(SessionHostName) > 2\r\n| where Error == \"{SelectedError}\" and Source==\"{SelectedSource}\" and ServiceError == tobool(\"{SelectedServiceError}\")\r\n| as hint.materialized=true ErrorList\r\n| make-series OverTime=dcount(CorrelationId) default=0,\r\n              UsersImpactedOverTime=dcountif(UserName, strlen(UserName) > 2) default=0\r\n           on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActivityType, SessionHostName\r\n| join kind=inner\r\n(\r\n    ErrorList\r\n    | summarize TotalActivitiesImpacted=dcount(CorrelationId), TotalUsersImpacted=dcountif(UserName, strlen(UserName) > 2)\r\n             by ActivityType, SessionHostName\r\n) on ActivityType, SessionHostName\r\n| project SessionHostName, TotalActivitiesImpacted, OverTime, TotalUsersImpacted, UsersImpactedOverTime \r\n| sort by TotalActivitiesImpacted,  TotalUsersImpacted\r\n| top {TopNErrors} by TotalActivitiesImpacted",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Session hosts impacted by selected error",
                    "noDataMessage": "No errors reported in the selected time period",
                    "exportFieldName": "label",
                    "exportParameterName": "wvderror",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.desktopvirtualization/hostpools",
                    "crossComponentResources": [
                      "{HostPools}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TotalActivitiesImpacted",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "OverTime",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "210px"
                          }
                        },
                        {
                          "columnMatch": "TotalUsersImpacted",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "turquoise"
                          }
                        },
                        {
                          "columnMatch": "UsersImpactedOverTime",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "turquoise",
                            "customColumnWidthSetting": "210px"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SessionHostName",
                          "label": "Session host"
                        },
                        {
                          "columnId": "TotalActivitiesImpacted",
                          "label": "Activities"
                        },
                        {
                          "columnId": "OverTime",
                          "label": "Over time"
                        },
                        {
                          "columnId": "TotalUsersImpacted",
                          "label": "Users"
                        },
                        {
                          "columnId": "UsersImpactedOverTime",
                          "label": "Over time"
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "CodeSymbolic",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "ErrorRate",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "CodeSymbolic",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "usercount",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "percent",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "HostsAffected",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedError",
              "comparison": "isNotEqualTo"
            },
            "name": "Hosts and Users affected"
          },
          {
            "type": 1,
            "content": {
              "json": "Please select an error above to display impacted users and session hosts.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedError",
              "comparison": "isEqualTo"
            },
            "name": "text - 3"
          }
        ]
      },
      "name": "ErrorRankingGroup",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [
    "Microsoft_Azure_WVD"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
