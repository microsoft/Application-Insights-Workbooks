{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "query": "summarize Count = count() by subscriptionId\r\n| project value = strcat('/subscriptions/', subscriptionId), label = subscriptionId, Selected = Count >= 0",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2e3dfd9b-2d0f-4feb-94e8-107f220c4e28",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type contains  \"desktopvirtualization\"\r\n| summarize Count = count() by resourceGroup\r\n| project Label = resourceGroup, Id = resourceGroup, Selected = Count >= 0",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "951b5870-e216-45c6-b159-34150868a46e",
            "version": "KqlParameterItem/1.0",
            "name": "HostPool",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/hostpools\" and resourceGroup == \"{ResourceGroup}\"\r\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "966a75f4-f4a4-4404-b649-67da45ddf636",
            "version": "KqlParameterItem/1.0",
            "name": "WVDHosts",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/resourcegroups/{ResourceGroup}/providers/Microsoft.DesktopVirtualization/hostpools/{HostPool:label}/sessionhosts?api-version=2019-01-23-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.name\",\"columnid\":\"Name\"}]}}]}",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 12
          },
          {
            "id": "04a8ead2-1fb2-4666-a7b0-6d92e3c29b46",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 2592000000
            },
            "label": "Time range"
          },
          {
            "id": "ff8c2838-aaf0-40f6-a604-d4bfe72fc92f",
            "version": "KqlParameterItem/1.0",
            "name": "poolla",
            "type": 5,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/{HostPool}/providers/microsoft.insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.workspaceId\",\"columnid\":\"id\"},{\"path\":\"$.id\",\"columnid\":\"selected\"}]}}]}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 12
          },
          {
            "id": "08f46c2a-f080-40c5-b36f-acd0e80c6259",
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceId",
            "type": 1,
            "query": "resources\r\n| where resourceGroup =~ \"WVDSelfhost\"\r\n| where type =~ \"Microsoft.Compute/virtualMachines/extensions\"and properties.type == \"MicrosoftMonitoringAgent\"\r\n| project Value = parse_json(properties.settings).workspaceId, selected=true\r\n| limit 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "29c8282b-4c11-409c-b4e9-1049edbaf67a",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where properties.customerId == \"{WorkspaceId}\"",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "c6d8e696-51fd-4306-95b7-e7be2e6acec0",
            "version": "KqlParameterItem/1.0",
            "name": "wvdworkspace",
            "type": 7,
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/applicationgroups\"\r\n| project id, workspace= properties.workspaceArmPath, hp=properties.hostPoolArmPath\r\n| where isnotnull(workspace)\r\n| where hp =~ \"{HostPool}\"\r\n| project workspace, label=workspace,selected=1",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 12
      },
      "name": "parameters_general"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{poolla}"
              ],
              "parameters": [
                {
                  "id": "8d92d80e-75b9-429c-acd9-182fcc3a6eb0",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserNameSearchString",
                  "label": "UPN to search for",
                  "type": 1,
                  "description": "Enter a full or partial user principal name to filter the list of user names",
                  "value": "",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "e1e164a5-c5e8-4219-997a-fc580dc3f593",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserName",
                  "label": "Matching users",
                  "type": 2,
                  "description": "List of matching users with some activity in the selected time period",
                  "isRequired": true,
                  "query": "WVDConnections\r\n| where isnotempty(\"{UserNameSearchString}\") and _ResourceId =~ '{HostPool}'\r\n| project UserName\r\n| union\r\n(\r\n    WVDFeeds\r\n    | where isnotempty(\"{UserNameSearchString}\") and _ResourceId =~ '{wvdworkspace}'\r\n    | project UserName\r\n)\r\n| union\r\n(\r\n    WVDManagement\r\n    | where isnotempty(\"{UserNameSearchString}\") and (_ResourceId =~ '{wvdworkspace}' or _ResourceId =~ '{HostPool}')\r\n    | project UserName\r\n)\r\n| where UserName has \"@\" and tolower(UserName) contains \"{UserNameSearchString}\"\r\n| distinct UserName\r\n| extend Lowercased=tolower(UserName)\r\n| sort by Lowercased asc\r\n| project Label=UserName, Value=UserName, Selected=(row_number()==1)",
                  "crossComponentResources": [
                    "{poolla}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "50",
            "name": "parameters - 1",
            "styleSettings": {
              "maxWidth": "500px"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{poolla}"
              ],
              "parameters": [
                {
                  "id": "ffe3e22b-a2b9-4a6c-90e7-92ce3419c150",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserStatus",
                  "type": 2,
                  "isRequired": true,
                  "query": "let GetHumanTimestamp = (Duration:timespan) {\r\n    let Weeks   = Duration/7d;\r\n    let Days    = Duration/1d;\r\n    let Hours   = Duration/1h;\r\n    let Minutes = Duration/1m;\r\n    case(\r\n        Weeks   > 1, strcat(      round(Weeks,   1),  \" weeks\"),\r\n        Days    > 1, strcat(      round(Days,    1),  \" days\"),\r\n        Hours   > 1, strcat(      round(Hours,   1),  \" hours\"),\r\n        Minutes > 1, strcat(toint(round(Minutes, 0)), \" minutes\"),\r\n                         \"less than 1 minute\"\r\n        )                  \r\n};\r\nWVDConnections\r\n| where UserName == \"{UserName}\" and _ResourceId =~ '{HostPool}'\r\n| summarize arg_max(TimeGenerated, ClientType, ClientVersion, SessionHostName, ResourceAlias) by State\r\n| extend HumanTimestamp = GetHumanTimestamp(now()-TimeGenerated), Host=trim_end(@\"\\..*\", SessionHostName), ClientType = replace(\"com.microsoft.rdc.\", \"\", ClientType)\r\n| as SourceData\r\n| where State == \"Started\"\r\n| project State, TimeGenerated, Message=strcat(\"Is currently **attempting to connect** to **\", Host, \"** (for about **\", HumanTimestamp, \"**), using **\", ClientType, \"** version **\", ClientVersion, \"** and the **\", ResourceAlias, \"** resource.\")\r\n| union\r\n(\r\n    SourceData\r\n    | where State == \"Completed\"\r\n    | project State, TimeGenerated, Message=strcat(\"Last seen after **disconnecting** from **\", Host, \"** about **\", HumanTimestamp, \"** ago, having used **\", ClientType, \"** version **\", ClientVersion, \"** to launch **\", ResourceAlias, \"**\")\r\n)\r\n| union\r\n(\r\n    SourceData\r\n    | where State == \"Connected\"\r\n    | project State, TimeGenerated, Message=strcat(\"**Currently connected** to **\", Host, \"** for about **\", HumanTimestamp, \"** using **\", ClientType, \"** version **\", ClientVersion, \"** via the **\", ResourceAlias, \"** resource.\")\r\n)\r\n| summarize arg_max(TimeGenerated, State, Message) by Selected=true\r\n| project Value=State, Label=Message, Selected\r\n// TODO: If a connection was established to pool A before a connection to pool B is terminated (overlapping connections), the former should be reported, as it's an ongoing activity",
                  "crossComponentResources": [
                    "{poolla}"
                  ],
                  "value": null,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "false",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "parameters - 15"
          },
          {
            "type": 1,
            "content": {
              "json": "Enter a full or partial user name above and select a match from the dropdown to see a report of user activity.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "UserName",
              "comparison": "isEqualTo",
              "value": ""
            },
            "name": "text16",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "{UserStatus:label}",
                    "style": "success"
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserStatus",
                    "comparison": "isEqualTo",
                    "value": "Connected"
                  },
                  "name": "text17",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{UserStatus:label}",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserStatus",
                    "comparison": "isEqualTo",
                    "value": "Completed"
                  },
                  "name": "text18",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "{UserStatus:label}",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserStatus",
                    "comparison": "isEqualTo",
                    "value": "Started"
                  },
                  "name": "text19",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**No connections** found for **{UserName}** in the last **30 days**.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "UserStatus",
                    "comparison": "isEqualTo",
                    "value": ""
                  },
                  "name": "text20",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where UserName == '{UserName}'\r\n| where _ResourceId =~ '{HostPool}'\r\n| as SourceData\r\n| where State==\"Started\"\r\n| project-rename StartTime=TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    SourceData\r\n    | where State == \"Completed\"\r\n    | project CorrelationId, SessionHostName, EndTime=TimeGenerated\r\n) on CorrelationId\r\n| project CorrelationId=coalesce(CorrelationId, CorrelationId1), StartTime=coalesce(StartTime, {TimeRange:start}), EndTime=coalesce(EndTime, {TimeRange:end}), SessionHostName=coalesce(SessionHostName, SessionHostName1)\r\n| extend ProbeTime = range(bin_at(StartTime, {TimeRange:grain}, {TimeRange:start}), bin_at(EndTime + {TimeRange:grain}, {TimeRange:grain}, {TimeRange:end}), {TimeRange:grain})\r\n| mv-expand ProbeTime to typeof(datetime)\r\n| extend ConnectionContainsProbe = (StartTime < ProbeTime and EndTime > ProbeTime),\r\n         ConnectionEndedInPreviousBucket = (StartTime < ProbeTime and EndTime + {TimeRange:grain} >= ProbeTime)\r\n| make-series Connections=dcountif(CorrelationId, ConnectionContainsProbe or ConnectionEndedInPreviousBucket) on ProbeTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Host=trim_end(@\"\\..*\", SessionHostName)",
                    "size": 1,
                    "title": "Connections over time for {UserName}",
                    "noDataMessage": "No connections detected for this user in the specified time frame.",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "areachart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "customWidth": "50",
                  "name": "ConnectionsbyUser"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDFeeds\r\n| where UserName == '{UserName}' and _ResourceId =~ '{wvdworkspace}'\r\n| make-series FeedCount = dcount(CorrelationId) default=long(0) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}",
                    "size": 1,
                    "title": "Feed refreshes over time for {UserName}",
                    "noDataMessage": "No feed refreshes for this user in the specified time frame.",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "showMetrics": false
                    }
                  },
                  "customWidth": "50",
                  "name": "FeedRefreshesByUser"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDFeeds\r\n| where UserName == \"{UserName}\" and _ResourceId =~ '{wvdworkspace}'\r\n| summarize LastSeen=max(TimeGenerated), FeedRefreshes=dcount(CorrelationId) by ClientType\r\n| join kind=fullouter\r\n(\r\n    WVDConnections\r\n    | where UserName == \"{UserName}\" and _ResourceId =~ '{HostPool}'\r\n    | summarize LastSeen=max(TimeGenerated), Connections=dcount(CorrelationId) by ClientType\r\n) on ClientType\r\n| project ClientType=coalesce(ClientType, ClientType1), Subtitle=\"Connections / Feed refrehes\", LastSeen=max_of(LastSeen, LastSeen1), FeedRefreshes=coalesce(FeedRefreshes, 0), Connections=coalesce(Connections, 0)\r\n| extend ClientTypeShort=replace(\"com.microsoft.rdc.\", \"\", ClientType)\r\n| sort by Connections desc",
                    "size": 0,
                    "title": "Select a client",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "ClientType",
                    "exportParameterName": "SelectedClientType",
                    "exportDefaultValue": "*",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "LastSeen",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "LastSeen",
                        "sortOrder": 2
                      }
                    ],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "ClientTypeShort",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Subtitle"
                      },
                      "leftContent": {
                        "columnMatch": "Connections",
                        "formatter": 12,
                        "formatOptions": {
                          "min": -1,
                          "max": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "FeedRefreshes",
                        "formatter": 12,
                        "formatOptions": {
                          "min": -1,
                          "max": 0,
                          "palette": "orange"
                        },
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "maximumSignificantDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "LastSeen",
                        "formatter": 6,
                        "dateFormat": {
                          "formatName": "shortDateTimePattern"
                        },
                        "tooltipFormat": {
                          "tooltip": "Last seen time"
                        }
                      },
                      "showBorder": true
                    }
                  },
                  "customWidth": "16",
                  "name": "ClientTiles",
                  "styleSettings": {
                    "maxWidth": "250px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where _ResourceId =~ '{HostPool}' and UserName == '{UserName}' and (\"{SelectedClientType}\" == \"*\" or ClientType == \"{SelectedClientType}\")\r\n| as SourceData\r\n| where State==\"Started\"\r\n| project-rename StartTime=TimeGenerated\r\n| join kind=fullouter\r\n(\r\n    SourceData\r\n    | where State == \"Completed\"\r\n    | project CorrelationId, ClientVersion, ClientType, EndTime=TimeGenerated\r\n) on CorrelationId\r\n| project CorrelationId=coalesce(CorrelationId, CorrelationId1), StartTime=coalesce(StartTime, {TimeRange:start}), EndTime=coalesce(EndTime, {TimeRange:end}), ClientType=coalesce(ClientType, ClientType1), ClientVersion=coalesce(ClientVersion, ClientVersion1)\r\n| extend ClientTypeShort=replace(\"com.microsoft.rdc.\", \"\", ClientType), ProbeTime = range(bin_at(StartTime, {TimeRange:grain}, {TimeRange:start}), bin_at(EndTime + {TimeRange:grain}, {TimeRange:grain}, {TimeRange:end}), {TimeRange:grain})\r\n| mv-expand ProbeTime to typeof(datetime)\r\n| extend ConnectionContainsProbe = (StartTime < ProbeTime and EndTime > ProbeTime),\r\n         ConnectionEndedInPreviousBucket = (StartTime < ProbeTime and EndTime + {TimeRange:grain} >= ProbeTime)\r\n| make-series Connections=dcountif(CorrelationId, ConnectionContainsProbe or ConnectionEndedInPreviousBucket) on ProbeTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Client=strcat(ClientTypeShort, \" v\", ClientVersion)\r\n\r\n",
                    "size": 0,
                    "title": "Connections by client and version",
                    "noDataMessage": "No connections found for the configured filters.",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "areachart",
                    "sortBy": [],
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "customWidth": "42",
                  "name": "ConnectionsByClientAndVersion",
                  "styleSettings": {
                    "margin": "6px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDFeeds\r\n| where UserName == \"{UserName}\" and _ResourceId =~ '{wvdworkspace}' and (\"{SelectedClientType}\" == \"*\" or ClientType == \"{SelectedClientType}\")\r\n| extend ClientTypeShort=replace(\"com.microsoft.rdc.\", \"\", ClientType)\r\n| make-series FeedRefreshes=dcount(CorrelationId) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by strcat(ClientTypeShort, \" v\", ClientVersion)\r\n",
                    "size": 0,
                    "title": "Feed refreshes by client and version",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "areachart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ClientType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClientVersion",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "LastSeen",
                          "formatter": 6,
                          "formatOptions": {
                            "aggregation": "Max",
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "FeedRefreshes",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "gray",
                            "aggregation": "Sum",
                            "customColumnWidthSetting": "128px"
                          }
                        },
                        {
                          "columnMatch": "Connections",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum",
                            "customColumnWidthSetting": "115px"
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "ClientType"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "ClientVersion"
                      }
                    },
                    "sortBy": []
                  },
                  "customWidth": "42",
                  "name": "FeedRefreshesByClientAndVersion",
                  "styleSettings": {
                    "margin": "6px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where UserName == '{UserName}' and _ResourceId =~ '{HostPool}'\r\n| as Connections\r\n| where State == \"Connected\" and TimeGenerated <= {TimeRange:end}\r\n| join kind=inner\r\n(\r\n    WVDCheckpoints\r\n    | where Name == \"LaunchExecutable\"\r\n    | extend Parameters=parse_json(Parameters)\r\n    | where tostring(Parameters.connectionStage) == \"RdpShellAppExecuted\" // or RdpShellAppExecution, depending what you need\r\n    | project CorrelationId, Parameters=tostring(Parameters.filename)\r\n    | extend Parameters=trim('\"', Parameters) // remove quotes for paths with spaces in them\r\n    | extend Parameters=replace(@\"^(.*[\\\\\\/])\", \"\", tolower(Parameters)) // remove binary path to only keep file name\r\n    | extend Parameters=replace(@\"microsoft.windows(.+)_8wekyb3d8bbwe!app\", @\"\\1\", Parameters) //inbox apps to readable format\r\n) on CorrelationId\r\n| summarize TotalLaunches=dcount(CorrelationId), DaysLaunched=dcount(bin(TimeGenerated, 1d)), Clients=dcount(ClientType) by Parameters\r\n| extend Subtitle=\"Launches / Days with usage\", Clients=strcat(\"Used on \", Clients, iif(Clients > 1, \" different \", \" \"), \"client\", iif(Clients > 1, \"s\", \"\"))\r\n| sort by TotalLaunches desc",
                    "size": 1,
                    "title": "Remote apps used",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Parameters",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Clients"
                      },
                      "leftContent": {
                        "columnMatch": "TotalLaunches",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "rightContent": {
                        "columnMatch": "DaysLaunched",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Subtitle",
                        "formatter": 1
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "50",
                  "name": "PopularResourceByUser"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where UserName == '{UserName}' and _ResourceId =~ '{HostPool}'\r\n| as Connections\r\n| where State == \"Started\" and TimeGenerated <= {TimeRange:end}\r\n| extend StartTime = TimeGenerated\r\n| join kind=leftouter\r\n(\r\n    Connections\r\n    | where UserName == \"{UserName}\" and State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n)\r\non CorrelationId\r\n| extend EndTime = coalesce(EndTime, {TimeRange:end})\r\n| where EndTime >= {TimeRange:start}\r\n// limit duration hours to our timeframe even if connection spanned the edges...\r\n| extend Duration = min_of(EndTime, {TimeRange:end}) - max_of(StartTime, {TimeRange:start})\r\n| summarize Duration = sum(Duration) by Host=trim_end(@\"\\..*\", SessionHostName)\r\n| project Host, UsageHours = Duration / 1h\r\n",
                    "size": 1,
                    "title": "Connection time by host",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "yAxis": [
                        "UsageHours"
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 26,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 1
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "HostUsageByUser"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let GetDaysInTimeRange = (Period:timespan) {\r\n    // Get the number of days in the period, note the period MUST be longer than 1 day, and in full days\r\n    max_of(toint(round(Period/1d, 0)), 1);\r\n};\r\nlet GetTimespanAverage = (Time:timespan, Period:timespan) {\r\n    // Get the number of days in the period, note the period MUST be longer than 1 day, and in full days\r\n    let Days = GetDaysInTimeRange(Period);\r\n    // Total hours is the number of days*24, plus the hours\r\n    let TotalHours = toint(format_timespan(Time, \"d\")) * 24 + toint(format_timespan(Time, \"H\"));\r\n    // Calculate the average hours\r\n    let AvgHours = TotalHours / Days;\r\n    // We're rounding down for the average, figure out fractional hours left \r\n    let MinuteResidue = toint(((1.0*TotalHours/Days) - AvgHours) * 60);\r\n    // Total minutes is the number of minutes plus the residue from above\r\n    let TotalMinutes = toint(format_timespan(Time, \"m\")) + MinuteResidue;\r\n    // Calculate average minutes\r\n    let AvgMinutes =  toint(round(todouble(TotalMinutes) / Days));\r\n    // Pad with zero if necessary\r\n    let MinuteStr = iif(AvgMinutes < 10, strcat(\"0\", AvgMinutes), tostring(AvgMinutes));\r\n    let Result = strcat(\"~ \", AvgHours, \":\", MinuteStr, \" h\");\r\n    iif(Time/1s > 0, Result, '');\r\n};\r\nlet ProbeRange = range ProbeDay from {TimeRange:start} to {TimeRange:end} step 1d | extend JoinKey=1;\r\nWVDConnections\r\n| where UserName == \"{UserName}\" and _ResourceId =~ '{HostPool}'\r\n| as UserConnections\r\n| where State == \"Started\" and TimeGenerated <= {TimeRange:end}\r\n| extend StartTime = TimeGenerated\r\n| join kind=rightouter\r\n(\r\n    UserConnections\r\n    | where State == \"Completed\"\r\n    | extend EndTime = TimeGenerated\r\n) on CorrelationId\r\n| extend StartTime = min_of(coalesce(StartTime, {TimeRange:start}), EndTime) // If the start time has fallen out of retention, it should not be set to after the EndTime\r\n| where StartTime between ({TimeRange:start} .. {TimeRange:end}) or // Connections starting in our date range\r\n        EndTime   between ({TimeRange:start} .. {TimeRange:end}) or // Connections ending in our date range\r\n        (StartTime <= {TimeRange:start} and EndTime >= {TimeRange:end}) // Connections that started before and ended after the range\r\n| extend EndTime=min_of(EndTime, {TimeRange:end})-1s, StartTime=max_of(StartTime,{TimeRange:start})+1s // Crop connections to within the report boundary\r\n| extend Duration = EndTime-StartTime\r\n| sort by ClientType asc // Sort for Clients string to be homogenous\r\n| as UserUsage\r\n| join kind=leftouter\r\n(\r\n    WVDCheckpoints\r\n    | where Name == \"LaunchExecutable\"\r\n    | extend Parameters=parse_json(Parameters)\r\n    | where tostring(Parameters.connectionStage) == \"RdpShellAppExecuted\"\r\n    | project CorrelationId, Parameters=tostring(Parameters.filename)\r\n) on CorrelationId\r\n| summarize AppsToStartConnection=dcount(ResourceAlias),\r\n            AppsUsed=dcount(Parameters),\r\n            Connections=dcount(CorrelationId),\r\n            Time=sum(Duration),\r\n            ClientCount=dcount(ClientType)\r\n            by UserName\r\n| join kind=leftouter \r\n(\r\n    // Count days with usage\r\n    UserUsage\r\n    | extend JoinKey = 1\r\n    | join kind=fullouter ProbeRange on JoinKey\r\n    | make-series ConnectedToday=dcountif(CorrelationId, bin(ProbeDay, 1d) == bin(StartTime, 1d) or \r\n                                                bin(ProbeDay, 1d) == bin(EndTime, 1d) or \r\n                                                bin(ProbeDay, 1d) between (bin(StartTime, 1d)..bin(EndTime, 1d)))\r\n                on ProbeDay from {TimeRange:start} to {TimeRange:end} step 1d by UserName\r\n    | mv-expand ProbeDay to typeof(datetime), ConnectedToday to typeof(int)\r\n    | summarize Days=countif(ConnectedToday > 0) by UserName\r\n) on UserName\r\n| project\r\n    ['Days in time range']=GetDaysInTimeRange({TimeRange:end} - {TimeRange:start}),\r\n    ['Days with usage']=coalesce(Days, 0),\r\n    ['Apps to start connection']=coalesce(AppsToStartConnection, 0),\r\n    ['Apps used']=coalesce(AppsUsed, 0),\r\n    ['Connection count']=coalesce(Connections, 0),\r\n    ['Connection time']=strcat(\"~ \", toint(format_timespan(Time, 'd'))*24+toint(format_timespan(Time, 'H')), \":\", format_timespan(Time, 'mm'), \" h\"),\r\n    ['Average daily time']=GetTimespanAverage(Time,{TimeRange:end} - {TimeRange:start}),\r\n    ['Client count']=coalesce(ClientCount, 0)\r\n| evaluate narrow()\r\n| project Metric=replace(@\"\\[|'|\\]\", \"\", Column), Value",
                    "size": 1,
                    "title": "Key usage numbers",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Days",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 27,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "ConnectionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumSignificantDigits": 2
                            }
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Metric",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 26,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 1
                          }
                        }
                      }
                    }
                  },
                  "name": "KeyUsageNumbersTiles"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "WVDConnections\r\n| where _ResourceId =~ \"{HostPool}\" and UserName == \"{UserName}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name =~ \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | project CorrelationId, ConnectionBackground=case(LoadBalanceOutcome == \"NewSession\", \"New session\", LoadBalanceOutcome in (\"Active\", \"Disconnected\", \"Pending\"), \"Existing session\", LoadBalanceOutcome)\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints // new session\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"ShellReady\" or (Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\") or Name=~\"RdpShellAppExecuted\"\r\n    | project TimeNewSessions=TimeGenerated, CorrelationId\r\n    | summarize TimeNewSessions=min(TimeNewSessions) by CorrelationId\r\n\r\n) on CorrelationId\r\n| join kind = inner ( \r\n        ConnectionData // existent Sessions\r\n        | where State == \"Connected\"\r\n        | project TimeConnected=TimeGenerated, CorrelationId\r\n) on CorrelationId\r\n| extend ProductiveTime = iff(ConnectionBackground==\"New session\",TimeNewSessions, TimeConnected)\r\n| join kind = leftouter\r\n(  \r\n    //OnCredentialsAcquisitionCompleted\t2021-09-13T16:48:50.4440000Z\tClient\t{\"CredentialType\":\"SavedPassword\",\"DurationMS\":\"9\",\"Success\":\"True\"}\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS   \r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId\r\n| extend ProductiveTime = (ProductiveTime - TimeGenerated) / 1s - (coalesce(credaquire,0)/1000) - (coalesce(ssotokeretrieval,0)/1000)\r\n| make-series Median=percentile(ProductiveTime, 50) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ConnectionBackground\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Time to connect",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "unstackedbar",
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "TimeToConnectGraph"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where TimeGenerated {TimeRange} and UserName == \"{UserName}\" and _ResourceId =~ '{HostPool}'\r\n| extend Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" \", ClientVersion)\r\n| extend  PredecessorConnectionId=replace(\"<>\", \"\", trim(@\"{|}\", PredecessorConnectionId))\r\n| as Connections\r\n| where State==\"Started\"\r\n| extend StartTime = TimeGenerated\r\n| join kind=leftouter\r\n(\r\n    Connections\r\n    | summarize (EndTime, State)=arg_max(TimeGenerated, State) by CorrelationId\r\n) on CorrelationId\r\n| extend State=coalesce(State1, State)\r\n| join kind=leftouter\r\n(\r\n    WVDErrors\r\n    | project CorrelationId, ServiceError, Source, Error = GetPrettyError(CodeSymbolic, Code)\r\n    | distinct *\r\n    | summarize Errors=count() by CorrelationId\r\n) on CorrelationId\r\n| project CorrelationId, SessionId=strcat(substring(CorrelationId, 0, strlen(CorrelationId) - 4), \"*\"), UserName, SessionHostName, Errors=coalesce(Errors, 0), StartTime, EndTime, Duration=bin(EndTime-StartTime, 1s), ClientType, ClientVersion\r\n| summarize InitialConnection=min(StartTime), EndTime=max(EndTime), Duration=sum(Duration)/1s, Attempts=dcount(CorrelationId), Errors=sum(Errors), CorrelationId=makeset(CorrelationId)\r\n         by SessionHostName, SessionId, Client=strcat(replace(\"com.microsoft.rdc.\", \"\", ClientType), \" v\", ClientVersion)\r\n| project HostName=trim_end(@\"\\..*\", SessionHostName), SessionId, Attempts, Errors, Client, Duration, InitialConnection, CorrelationId\r\n",
                          "size": 0,
                          "title": "Connection activity browser for {TimeRange:label}",
                          "noDataMessage": "No Connected Sessions detected in the selected time period",
                          "exportedParameters": [
                            {
                              "fieldName": "SessionId",
                              "parameterName": "GroupedCorrelationId"
                            },
                            {
                              "fieldName": "HostName",
                              "parameterName": "CorrelationHost",
                              "parameterType": 1
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{poolla}"
                          ],
                          "visualization": "table",
                          "showExpandCollapseGrid": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "43ch"
                                }
                              },
                              {
                                "columnMatch": "HostName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "SessionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Attempts",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "blue",
                                  "aggregation": "Sum"
                                }
                              },
                              {
                                "columnMatch": "Errors",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "redBright",
                                  "aggregation": "Sum"
                                }
                              },
                              {
                                "columnMatch": "Client",
                                "formatter": 5,
                                "formatOptions": {
                                  "aggregation": "Unique"
                                }
                              },
                              {
                                "columnMatch": "Duration",
                                "formatter": 1,
                                "formatOptions": {
                                  "aggregation": "Sum"
                                },
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumSignificantDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "InitialConnection",
                                "formatter": 6,
                                "formatOptions": {
                                  "aggregation": "Min",
                                  "customColumnWidthSetting": "24ch"
                                }
                              },
                              {
                                "columnMatch": "CorrelationId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "43ch"
                                }
                              }
                            ],
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Client",
                                "HostName"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "SessionId"
                            },
                            "sortBy": [
                              {
                                "itemKey": "InitialConnection",
                                "sortOrder": 1
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "HostName"
                              },
                              {
                                "columnId": "SessionId"
                              },
                              {
                                "columnId": "Attempts"
                              },
                              {
                                "columnId": "Errors"
                              },
                              {
                                "columnId": "Client",
                                "label": "Connections by client and host"
                              },
                              {
                                "columnId": "Duration"
                              },
                              {
                                "columnId": "InitialConnection",
                                "label": "Initial connection"
                              },
                              {
                                "columnId": "CorrelationId"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "InitialConnection",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "customWidth": "50",
                        "name": "wvdconnectedsessionsdetails",
                        "styleSettings": {
                          "padding": "10px"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nlet IsSelectedCorrelation = (Selected:string, Current:string)\r\n{\r\n    let GuidStart = substring(Selected, 0, strlen(Selected)-1);\r\n    (Selected contains \"*\" and Current startswith GuidStart)     or    Current == Selected\r\n};\r\nWVDCheckpoints\r\n| where TimeGenerated {TimeRange} and IsSelectedCorrelation(\"{GroupedCorrelationId}\", CorrelationId)\r\n| project CorrelationId, TimeGenerated, Kind=\"Checkpoint\", Source, Information=Name, Parameters\r\n| as ResultSet\r\n| union\r\n(\r\n    WVDErrors\r\n    | where IsSelectedCorrelation(\"{GroupedCorrelationId}\", CorrelationId)\r\n    | project CorrelationId,TimeGenerated, Kind=iif(ServiceError, \"Service\", \"Deployment\"), Source, Information = GetPrettyError(CodeSymbolic, Code)\r\n    | distinct *\r\n)\r\n| join kind = leftouter\r\n(\r\n    ResultSet\r\n    | where Source == \"RDStack\" and Information == \"RdpStackConnectionEstablished\"\r\n    | project CorrelationId, Connected=true\r\n    | summarize Success=dcountif(CorrelationId, Connected)>0 by CorrelationId\r\n) on CorrelationId\r\n| extend CorrelationId=strcat(iif(Success, \"🟢\", \"🔴\"), \" \", CorrelationId)\r\n| project-away Success\r\n| sort by CorrelationId asc, TimeGenerated asc\r\n",
                                "size": 2,
                                "title": "Connecting to {CorrelationHost}",
                                "noDataMessage": "No errors were found for the selected session.",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{poolla}"
                                ],
                                "visualization": "table",
                                "showExpandCollapseGrid": true,
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "CorrelationId",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "TimeGenerated",
                                      "formatter": 5,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Kind",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Checkpoint",
                                            "representation": "Normal",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Deployment",
                                            "representation": "3",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Service",
                                            "representation": "Important",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "Blank",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "hierarchySettings": {
                                    "treeType": 1,
                                    "groupBy": [
                                      "CorrelationId"
                                    ],
                                    "expandTopLevel": true,
                                    "finalBy": "TimeGenerated"
                                  },
                                  "labelSettings": [
                                    {
                                      "columnId": "CorrelationId",
                                      "label": "Attempt and timestamp"
                                    },
                                    {
                                      "columnId": "TimeGenerated"
                                    },
                                    {
                                      "columnId": "Kind"
                                    },
                                    {
                                      "columnId": "Parameters"
                                    },
                                    {
                                      "columnId": "CorrelationId1"
                                    }
                                  ]
                                },
                                "sortBy": []
                              },
                              "conditionalVisibility": {
                                "parameterName": "GroupedCorrelationId",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "ConnectingByHost",
                              "styleSettings": {
                                "padding": "10px"
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "Use the search box or browse for a connection ID and select it to display details here. ",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "GroupedCorrelationId",
                                "comparison": "isEqualTo"
                              },
                              "name": "text - 1",
                              "styleSettings": {
                                "margin": "10px",
                                "padding": "10px"
                              }
                            }
                          ]
                        },
                        "customWidth": "50",
                        "name": "group - 2"
                      }
                    ]
                  },
                  "name": "Activity browser",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "8809818d-1aa3-4a27-ac0b-b1808000be06",
                              "version": "KqlParameterItem/1.0",
                              "name": "wvdActivityType",
                              "label": "Activity Type",
                              "type": 10,
                              "description": "Scope top errors by activity type",
                              "isRequired": true,
                              "query": "WVDErrors\r\n| distinct ActivityType\r\n| sort by ActivityType asc\r\n| project label=ActivityType, value=ActivityType, selected=(row_number() == 1)",
                              "crossComponentResources": [
                                "{poolla}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "timeContext": {
                                "durationMs": 2592000000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "2660c262-528a-4897-8631-94acd157c3c0",
                              "version": "KqlParameterItem/1.0",
                              "name": "TopNErrors",
                              "label": "Display top N errors",
                              "type": 2,
                              "description": "The number of errors (by count of activities impacted) returned",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[ \r\n    {\r\n        \"label\": \"10\",\r\n        \"value\": \"10\",\r\n        \"selected\": true\r\n    },\r\n    {\r\n        \"label\": \"25\",\r\n        \"value\": \"25\"\r\n    },\r\n    {\r\n        \"label\": \"All\",\r\n        \"value\": \"99999\"\r\n    }\r\n]",
                              "timeContext": {
                                "durationMs": 2592000000
                              },
                              "timeContextFromParameter": "TimeRange"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 12"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let GetPrettyError=(ErrorName:string, ErrorCode:string)\r\n{\r\n    iif(ErrorName !in ('', '<>'), strcat(ErrorName, ' (', ErrorCode, ')'), ErrorCode)\r\n};\r\nWVDConnections\r\n| where \"{wvdActivityType}\" == \"Connection\" and UserName == \"{UserName}\" and _ResourceId =~ '{HostPool}' \r\n| union (WVDFeeds             | where \"{wvdActivityType}\" == \"Feed\"             and UserName == \"{UserName}\" and _ResourceId =~ '{wvdworkspace}')\r\n| union (WVDManagement        | where \"{wvdActivityType}\" == \"Management\"       and UserName == \"{UserName}\" and (_ResourceId =~ '{wvdworkspace}' or _ResourceId =~ '{HostPool}'))\r\n| join kind=rightouter\r\n(\r\n    WVDErrors\r\n    | where TimeGenerated {TimeRange} and ActivityType == \"{wvdActivityType}\" and (_ResourceId =~ '{wvdworkspace}' or _ResourceId =~ '{HostPool}')\r\n    | extend Error=GetPrettyError(CodeSymbolic, Code)\r\n) on CorrelationId\r\n| as ErrorList\r\n| make-series ActivitiesImpactedOverTime=dcount(CorrelationId) default=0,\r\n              HostsImpactedOverTime=dcountif(SessionHostName, strlen(SessionHostName) > 2) default=0\r\n           on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActivityType, ServiceError, Source, Error\r\n| join kind=inner\r\n(\r\n    ErrorList\r\n    | summarize MessageSample=any(Message), TotalActivitiesImpacted=dcount(CorrelationId), TotalUsersImpacted=dcountif(UserName, strlen(UserName) > 2), TotalHostsImpacted=dcountif(SessionHostName, strlen(SessionHostName) > 2)\r\n             by ActivityType, ServiceError, Source, Error\r\n) on ActivityType, ServiceError, Source, Error\r\n| project Kind=iif(ServiceError, \"Service\", \"Deployment\"), Source, Error, MessageSample, TotalActivitiesImpacted, ActivitiesImpactedOverTime, TotalHostsImpacted, HostsImpactedOverTime\r\n// Hosts count not applicable for Feed activities, so blank out the columns\r\n| extend TotalHostsImpacted=iif(\"{wvdActivityType}\" != \"Feed\", TotalHostsImpacted, int(null)), HostsImpactedOverTime=iif(\"{wvdActivityType}\" != \"Feed\", HostsImpactedOverTime, series_divide(HostsImpactedOverTime, todouble(0/0)))\r\n| sort by TotalActivitiesImpacted, TotalHostsImpacted\r\n| top {TopNErrors} by TotalActivitiesImpacted",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Ranking of errors impacting {wvdActivityType} activities for {UserName} in {TimeRange:label}",
                          "noDataMessage": "No errors reported in the selected time period",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "label",
                          "exportParameterName": "wvderror",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{poolla}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Kind",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Service",
                                      "representation": "Important",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Deployment",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Blank",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "TotalActivitiesImpacted",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "ActivitiesImpactedOverTime",
                                "formatter": 21,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "210px"
                                }
                              },
                              {
                                "columnMatch": "TotalHostsImpacted",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "magenta"
                                }
                              },
                              {
                                "columnMatch": "HostsImpactedOverTime",
                                "formatter": 21,
                                "formatOptions": {
                                  "palette": "magenta",
                                  "customColumnWidthSetting": "210px"
                                }
                              },
                              {
                                "columnMatch": "TotalUsersImpacted",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "turquoise"
                                }
                              },
                              {
                                "columnMatch": "UsersImpactedOverTime",
                                "formatter": 21,
                                "formatOptions": {
                                  "palette": "turquoise"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "Kind"
                              },
                              {
                                "columnId": "Source"
                              },
                              {
                                "columnId": "Error"
                              },
                              {
                                "columnId": "MessageSample",
                                "label": "Message sample"
                              },
                              {
                                "columnId": "TotalActivitiesImpacted",
                                "label": "Activities"
                              },
                              {
                                "columnId": "ActivitiesImpactedOverTime",
                                "label": "Over time"
                              },
                              {
                                "columnId": "TotalHostsImpacted",
                                "label": "Hosts"
                              },
                              {
                                "columnId": "HostsImpactedOverTime",
                                "label": "Over time"
                              }
                            ]
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "CodeSymbolic",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "ErrorRate",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "CodeSymbolic",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "usercount",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 0,
                                "options": {
                                  "style": "percent",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "showPin": true,
                        "name": "Ranking Errors"
                      }
                    ]
                  },
                  "name": "ErrorRankingGroup",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "UserName",
              "comparison": "isNotEqualTo"
            },
            "name": "UserSelectedGroup"
          }
        ]
      },
      "name": "User_Group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
