{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "query": "where type startswith 'Microsoft.DesktopVirtualization/'\r\n    | summarize Count = count() by subscriptionId\r\n    | order by Count desc\r\n    | extend Rank = row_number()\r\n    | project value = subscriptionId, label = subscriptionId, selected = Rank == 1\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "2e3dfd9b-2d0f-4feb-94e8-107f220c4e28",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type contains  \"desktopvirtualization\"\r\n| summarize Count = count() by resourceGroup\r\n| project Label = resourceGroup, Id = resourceGroup, Selected = Count >= 0",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "951b5870-e216-45c6-b159-34150868a46e",
            "version": "KqlParameterItem/1.0",
            "name": "HostPool",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type == \"microsoft.desktopvirtualization/hostpools\" and resourceGroup == \"{ResourceGroup}\"\r\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "966a75f4-f4a4-4404-b649-67da45ddf636",
            "version": "KqlParameterItem/1.0",
            "name": "WVDHosts",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/resourcegroups/{ResourceGroup}/providers/Microsoft.DesktopVirtualization/hostpools/{HostPool:label}/sessionhosts?api-version=2019-01-23-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.name\",\"columnid\":\"Name\"}]}}]}",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "defaultValue": "value::all",
            "queryType": 12
          },
          {
            "id": "04a8ead2-1fb2-4666-a7b0-6d92e3c29b46",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 172800000
            },
            "label": "Time range"
          },
          {
            "id": "ff8c2838-aaf0-40f6-a604-d4bfe72fc92f",
            "version": "KqlParameterItem/1.0",
            "name": "poolla",
            "type": 5,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/{HostPool}/providers/microsoft.insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.workspaceId\",\"columnid\":\"id\"},{\"path\":\"$.id\",\"columnid\":\"selected\"}]}}]}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 12
          },
          {
            "id": "08f46c2a-f080-40c5-b36f-acd0e80c6259",
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceId",
            "type": 1,
            "query": "resources\r\n| where resourceGroup =~ \"WVDSelfhost\"\r\n| where type =~ \"Microsoft.Compute/virtualMachines/extensions\"and properties.type == \"MicrosoftMonitoringAgent\"\r\n| project Value = parse_json(properties.settings).workspaceId, selected=true\r\n| limit 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "29c8282b-4c11-409c-b4e9-1049edbaf67a",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where properties.customerId == \"{WorkspaceId}\"",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 12
      },
      "name": "parameters_general"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Time to connect",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "c37c1466-6b26-4168-9a6d-92e2fa5927eb",
                        "version": "KqlParameterItem/1.0",
                        "name": "NewSessions",
                        "label": "Session State",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n\t{\r\n\t\t\"value\": \"true\",\r\n\t\t\"label\": \"New sessions\",\r\n\t\t\"selected\": true\r\n\t},\r\n\t{\r\n\t\t\"value\": \"false\",\r\n\t\t\"label\": \"Existing sessions\"\r\n\t}\r\n]"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "ConnectionPerformanceQueryParameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let newSessions = {NewSessions};\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints // new session\r\n    | where newSessions\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"ShellReady\" or\r\n    ( Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\" or Name=~\"RdpShellAppExecuted\")\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n    | summarize ProductiveTime=min(ProductiveTime) by CorrelationId\r\n    | union ( \r\n        ConnectionData // existent Sessions\r\n        | where not(newSessions)\r\n        | where State == \"Connected\"\r\n        | project ProductiveTime=TimeGenerated, CorrelationId\r\n        )\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS\r\n    //OnCredentialsAcquisitionCompleted\t2021-09-13T16:48:50.4440000Z\tClient\t{\"CredentialType\":\"SavedPassword\",\"DurationMS\":\"9\",\"Success\":\"True\"}\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId\r\n| extend ProductiveTime = (ProductiveTime - TimeGenerated) / 1s - (coalesce(credaquire,0)/1000) - (coalesce(ssotokeretrieval,0)/1000)\r\n| where ProductiveTime > 0\r\n|  summarize Metrics = pack(\"Median\",percentile(ProductiveTime, 50), \"p95\",percentile(ProductiveTime, 95)), Connections=dcount(CorrelationId)\r\n| mv-expand Metrics\r\n| extend Metric=tostring(bag_keys(Metrics)[0])\r\n| project Metric, Value = Metrics[Metric], Title=\"Time to connect E2E\", Subtitle=strcat(\"Connections: \", Connections)\r\n| sort by Metric asc\r\n",
                    "size": 1,
                    "aggregation": 3,
                    "noDataMessage": "No connections found for the selected scope",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Metric"
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 30,
                          "max": 60,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumSignificantDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Subtitle"
                      },
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "15",
                  "name": "TimeToConnectSummary"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let newSessions = {NewSessions};\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name =~ \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind=leftsemi // remove connections that do not have LogonDelay as we cannot show details\r\n(    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"  and Name =~ \"LogonDelay\"\r\n    | extend LogonType = tostring(Parameters.LogonType)\r\n    | where (newSessions and LogonType == \"DirectSession\") or (not(newSessions) and LogonType ==\"TemporarySession\")\r\n    | project LogonDelay= TimeGenerated, CorrelationId\r\n) on CorrelationId \r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints // new session\r\n    | where newSessions\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"ShellReady\" or (Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\") or Name=~\"RdpShellAppExecuted\"\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n    | summarize ProductiveTime=min(ProductiveTime) by CorrelationId\r\n    | union ( \r\n        ConnectionData // existent Sessions\r\n        | where not(newSessions)\r\n        | where State == \"Connected\"\r\n        | project ProductiveTime=TimeGenerated, CorrelationId\r\n        )\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    //OnCredentialsAcquisitionCompleted\t2021-09-13T16:48:50.4440000Z\tClient\t{\"CredentialType\":\"SavedPassword\",\"DurationMS\":\"9\",\"Success\":\"True\"}\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS   \r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId\r\n| extend ProductiveTime = (ProductiveTime - TimeGenerated) / 1s - (coalesce(credaquire,0)/1000) - (coalesce(ssotokeretrieval,0)/1000)\r\n| where ProductiveTime > 0\r\n| make-series Median=percentile(ProductiveTime, 50), p95=percentile(ProductiveTime, 95) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Time to connect and sign in, end-to-end",
                    "noDataMessage": "No connections found for the selected scope",
                    "timeContextFromParameter": "TimeRange",
                    "timeBrushParameterName": "timedrilldown",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "unstackedbar",
                    "gridSettings": {
                      "filter": true
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "85",
                  "name": "TimeToConnectOverall",
                  "styleSettings": {
                    "margin": "10px",
                    "padding": "10px"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "6709ee11-cf64-4a29-9ed8-76b18aca604c",
                              "version": "KqlParameterItem/1.0",
                              "name": "logonStageMap",
                              "type": 1,
                              "isRequired": true,
                              "value": "let renameStage = (stage:string) { \r\n case( stage =~ \"frxsvc\", \"Fslogix\",\r\n\t stage =~ \"GPClient\", \"Group policy\",\r\n\t stage =~ \"WinLogon_StartShell\", \"Shell\",\r\n\t stage =~ \"AuthenticateUser\", \"User Auth.\",\r\n       \"Others\")\r\n};",
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "multiLineText": true,
                                "editorLanguage": "text"
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters_logonMaps"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let newSessions = {NewSessions};\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| where TimeGenerated {timedrilldown}\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind=leftsemi // remove connections that do not have LogonDelay as we cannot show details\r\n(    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"  and Name == \"LogonDelay\"\r\n    | extend LogonType = tostring(Parameters.LogonType)\r\n    | where (newSessions and LogonType == \"DirectSession\") or (not(newSessions) and LogonType ==\"TemporarySession\")\r\n    | project LogonDelay= TimeGenerated, CorrelationId\r\n) on CorrelationId \r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints // new session\r\n    | where newSessions\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"ShellReady\" or\r\n    ( Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\" or Name=~\"RdpShellAppExecuted\")\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n    | summarize ProductiveTime=min(ProductiveTime) by CorrelationId\r\n    | union ( \r\n        ConnectionData // existent Sessions\r\n        | where not(newSessions)\r\n        | where State == \"Connected\"\r\n        | project ProductiveTime=TimeGenerated, CorrelationId\r\n        )\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS\r\n    //OnCredentialsAcquisitionCompleted\t2021-09-13T16:48:50.4440000Z\tClient\t{\"CredentialType\":\"SavedPassword\",\"DurationMS\":\"9\",\"Success\":\"True\"}\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId\r\n| extend ProductiveTime = (ProductiveTime - TimeGenerated) / 1s - (coalesce(credaquire,0)/1000) - (coalesce(ssotokeretrieval,0)/1000)\r\n| where ProductiveTime >= 0\r\n| summarize Connections=dcount(CorrelationId), Users=dcount(UserName), (Median, p95)=percentiles(ProductiveTime, 50, 95), Average=avg(ProductiveTime) by Host=trim_end(@\"\\..*\", SessionHostName)\r\n| project Host, Connections, Users, Median, Average, p95\r\n| top 10 by Median desc",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Top 10 hosts with highest median time to connect",
                          "noDataMessage": "No connections found for the selected scope",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "Host",
                          "exportParameterName": "SelectedHost",
                          "exportDefaultValue": "no_host_selected",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{poolla}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Host",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "100fr"
                                }
                              },
                              {
                                "columnMatch": "Connections",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "blue",
                                  "customColumnWidthSetting": "17ch"
                                }
                              },
                              {
                                "columnMatch": "Users",
                                "formatter": 4,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "turquoise",
                                  "customColumnWidthSetting": "13ch"
                                }
                              },
                              {
                                "columnMatch": "Median|p95",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 30,
                                  "max": 60,
                                  "palette": "greenRed",
                                  "compositeBarSettings": {
                                    "labelText": "",
                                    "columnSettings": []
                                  },
                                  "customColumnWidthSetting": "12ch"
                                },
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumSignificantDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 5
                              }
                            ],
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_Median|p95_5",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_Median|p95_5",
                              "sortOrder": 2
                            }
                          ],
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 24,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "40",
                        "name": "TopHostsByMedianTimeToConnect",
                        "styleSettings": {
                          "margin": "10px",
                          "padding": "10px"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "c714f248-8dd0-49e9-bfff-4a3a6d246c7c",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "HostnameText",
                                    "type": 1,
                                    "isRequired": true,
                                    "isHiddenWhenLocked": true,
                                    "criteriaData": [
                                      {
                                        "criteriaContext": {
                                          "leftOperand": "SelectedHost",
                                          "operator": "!=",
                                          "rightValType": "static",
                                          "rightVal": "no_host_selected",
                                          "resultValType": "static",
                                          "resultVal": "{SelectedHost}"
                                        }
                                      },
                                      {
                                        "criteriaContext": {
                                          "operator": "Default",
                                          "resultValType": "static",
                                          "resultVal": " All hosts"
                                        }
                                      }
                                    ],
                                    "timeContext": {
                                      "durationMs": 86400000
                                    }
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "customWidth": "0",
                              "name": "parameters_hostsText"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let newSessions = {NewSessions};\r\nlet checkpoints =  WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | summarize arg_min(TimeGenerated, *) by CorrelationId, Name;\r\nlet Checkpoints = (name: string) {\r\n    checkpoints\r\n    | where Name == name \r\n    | project CorrelationId, bag = pack(name, TimeGenerated)\r\n    | evaluate bag_unpack(bag)\r\n};\r\nlet ChartInfo = datatable (Stage: string, label: string, stageOrder: int) [\r\n    \"UserRoute\", \"User Route\", 1,\r\n    \"TransportConnected\", \"Stack Connected\", 3,\r\n    \"OnCredentialsAcquisitionCompleted\", \"creds\", 4,\r\n    \"RdpStackConnectionEstablished\", \"Stack Connected\", 5,\r\n    \"LogonDelay\", \"Logon\", 6,\r\n    \"ShellStart\", \"Shell Start\", 7,\r\n    \"ProductiveTime\", \"Shell Ready\", 8\r\n];\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| where TimeGenerated {timedrilldown}\r\n| where (\"{SelectedHost}\" == \"no_host_selected\" or trim_end(\"[.].*\",SessionHostName)==\"{SelectedHost}\")\r\n| distinct TimeGenerated, CorrelationId\r\n| join kind = leftsemi\r\n    (\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    checkpoints\r\n    | where Source == \"RDStack\"\r\n        and Name == \"RdpStackConnectionEstablished\"\r\n    )\r\n    on CorrelationId\r\n| project CorrelationId, TimeGenerated\r\n| join kind = inner // UserRoute\r\n    (\r\n    checkpoints\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n    | project CorrelationId, UserRoute=TimeGenerated\r\n    | distinct CorrelationId, UserRoute\r\n    )\r\n    on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind=innerunique Checkpoints(\"RdpStackConnectionEstablished\") on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind=leftouter \r\n    (\r\n    checkpoints\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = tolong(Parameters.DurationMS)\r\n    )\r\n    on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind=leftouter //SSO token\r\n    (\r\n    checkpoints\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotoken = tolong(Parameters.DurationMS)\r\n    )\r\n    on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind=innerunique // Logon Delay\r\n    (checkpoints\r\n    | where Name == \"LogonDelay\"\r\n    | extend LogonType = tostring(Parameters.LogonType)\r\n    | where (newSessions and LogonType == \"DirectSession\") or (not(newSessions) and LogonType == \"TemporarySession\")\r\n    | project LogonDelay=TimeGenerated, CorrelationId\r\n    )\r\n    on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind=leftouter Checkpoints(\"ShellStart\") on CorrelationId\r\n| project-away CorrelationId1\r\n| join kind = leftouter\r\n    (\r\n    checkpoints // new session\r\n    | where newSessions\r\n    | where Name =~ \"ShellReady\" or\r\n        (Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\" or Name =~ \"RdpShellAppExecuted\")\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n    )\r\n    on CorrelationId\r\n| project-away CorrelationId1\r\n| where not(newSessions) or isnotnull(ProductiveTime)\r\n| where (datetime_diff(\"millisecond\", UserRoute, TimeGenerated) - coalesce(ssotoken, 0)) >= 0\r\n| project CorrelationId, TimeGenerated, credaquire, ssotoken, bag=pack_all()\r\n| mv-expand bag\r\n| project\r\n    CorrelationId, \r\n    TimeGenerated,\r\n    credaquire,\r\n    ssotoken,\r\n    Stage= tostring(bag_keys(bag)[0]),\r\n    Value=bag[tostring(bag_keys(bag)[0])]\r\n| where Stage != \"CorrelationId\"\r\n| where isnotnull(Value)\r\n| project \r\n    CorrelationId,\r\n    TimeGenerated,\r\n    credaquire,\r\n    ssotoken,\r\n    Stage,\r\n    Value=todatetime(Value)\r\n| order by CorrelationId, Value asc \r\n| extend prev=prev(Value)\r\n| project\r\n    Stage,\r\n    Value = datetime_diff(\"Second\", Value, prev) - iif(Stage == \"RdpStackConnectionEstablished\", coalesce(credaquire / 1000, 0), 0) - iif(Stage == \"UserRoute\", coalesce(ssotoken / 1000, 0), 0)\r\n| where Stage != \"TimeGenerated\"\r\n    and Stage != \"OnCredentialsAcquisitionCompleted\"\r\n    and Stage != \"ssotoken\"\r\n| summarize (Median, p95) = percentiles(Value, 50, 95) by Stage\r\n| join kind=inner ChartInfo on Stage\r\n| order by stageOrder asc\r\n| project label, Median, p95",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Connection stages: {HostnameText}",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{poolla}"
                                ],
                                "visualization": "unstackedbar",
                                "sortBy": [],
                                "chartSettings": {
                                  "xAxis": "label",
                                  "group": null,
                                  "createOtherGroup": 0,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "UserRoute",
                                      "label": "User Route"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 24,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  }
                                }
                              },
                              "name": "ConnectStagesAll"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let newSessions = {NewSessions};\r\n{logonStageMap}\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| where State == \"Connected\"\r\n| where TimeGenerated {timedrilldown}\r\n| where (\"{SelectedHost}\" == \"no_host_selected\" or trim_end(\"[.].*\",SessionHostName)==\"{SelectedHost}\")\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| project TimeGenerated, CorrelationId, UserName, SessionHostName\r\n| join kind=inner \r\n    (\r\n        WVDCheckpoints\r\n        | where Name == \"LogonDelay\"\r\n    )\r\n    on CorrelationId\r\n| extend Type = tostring(Parameters.LogonType), Parameters = bag_remove_keys(Parameters, dynamic([\"LogonType\", \"WinLogonPid\"]))\r\n| mv-expand bagexpansion=array Parameters\r\n| extend Stage = tostring(Parameters[0]), Time = toreal(Parameters[1])/1000\r\n| where Stage != \"WinLogon_Total\" and Stage != \"WinLogon_Logon\"\r\n| extend Stage = renameStage(trim_start(\"WinLogon_Logon_\", Stage))\r\n| summarize Time=sum(Time),TimeGenerated=min(TimeGenerated) by Stage, UserName, SessionHostName, _ResourceId\r\n| summarize (Median,p95) = percentiles(Time, 50,95) by Stage\r\n\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Winlogon stages: {HostnameText}",
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{poolla}"
                                ],
                                "visualization": "unstackedbar",
                                "chartSettings": {
                                  "xAxis": "Stage",
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 24,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  }
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "NewSessions",
                                "comparison": "isEqualTo",
                                "value": "true"
                              },
                              "name": "LogonStagesAll"
                            }
                          ]
                        },
                        "customWidth": "60",
                        "name": "StageCharts"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let newSessions = {NewSessions};\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| where TimeGenerated {timedrilldown}\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind=leftsemi // remove connections that do not have LogonDelay as we cannot show details\r\n(    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"  and Name == \"LogonDelay\"\r\n    | extend LogonType = tostring(Parameters.LogonType)\r\n    | where (newSessions and LogonType == \"DirectSession\") or (not(newSessions) and LogonType ==\"TemporarySession\")\r\n    | project LogonDelay= TimeGenerated, CorrelationId\r\n) on CorrelationId \r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints // new session\r\n    | where newSessions\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"ShellReady\" or\r\n    ( Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\" or Name=~\"RdpShellAppExecuted\")\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n    | summarize ProductiveTime=min(ProductiveTime) by CorrelationId\r\n    | union ( \r\n        ConnectionData // existent Sessions\r\n        | where not(newSessions)\r\n        | where State == \"Connected\"\r\n        | project ProductiveTime=TimeGenerated, CorrelationId\r\n        )\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS\r\n    //OnCredentialsAcquisitionCompleted\t2021-09-13T16:48:50.4440000Z\tClient\t{\"CredentialType\":\"SavedPassword\",\"DurationMS\":\"9\",\"Success\":\"True\"}\r\n) on CorrelationId\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId\r\n| extend ProductiveTime = (ProductiveTime - TimeGenerated) / 1s - (coalesce(credaquire,0)/1000) - (coalesce(ssotokeretrieval,0)/1000)\r\n| where ProductiveTime > 0\r\n| project UserName, TimeGenerated, Hostname = trim_end(\"[.].*\", SessionHostName), ProductiveTime, CorrelationId\r\n| top 20 by ProductiveTime desc\r\n",
                          "size": 0,
                          "title": "Top 20 instances of highest time to connect",
                          "timeContextFromParameter": "TimeRange",
                          "exportFieldName": "CorrelationId",
                          "exportParameterName": "SelectedCorrelationId",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{poolla}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserName",
                                "formatter": 1,
                                "formatOptions": {
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "default",
                                    "templateIdSource": "static",
                                    "templateId": "community-Workbooks/Windows Virtual Desktop/shared/Connection Details",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "CorrelationId",
                                        "source": "column",
                                        "value": "CorrelationId"
                                      },
                                      {
                                        "name": "TimeRange",
                                        "source": "parameter",
                                        "value": "TimeRange"
                                      },
                                      {
                                        "name": "HostPoolText",
                                        "source": "parameter",
                                        "value": "HostPool"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "32ch"
                                }
                              },
                              {
                                "columnMatch": "TimeGenerated",
                                "formatter": 6,
                                "formatOptions": {
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Hostname",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "ProductiveTime",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 30,
                                  "max": 60,
                                  "palette": "greenRed",
                                  "customColumnWidthSetting": "11.7143ch"
                                },
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "CorrelationId",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkLabel": "🔎︎",
                                  "linkIsContextBlade": true,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "community-Workbooks/Windows Virtual Desktop/shared/Connection Details",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "CorrelationId",
                                        "source": "column",
                                        "value": "CorrelationId"
                                      },
                                      {
                                        "name": "TimeRange",
                                        "source": "parameter",
                                        "value": "TimeRange"
                                      },
                                      {
                                        "name": "HostPoolText",
                                        "source": "parameter",
                                        "value": "HostPool"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "11ch"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "UserName",
                                "label": "User Name"
                              },
                              {
                                "columnId": "TimeGenerated",
                                "label": "Start Time"
                              },
                              {
                                "columnId": "Hostname",
                                "label": "Host name"
                              },
                              {
                                "columnId": "ProductiveTime",
                                "label": "Time"
                              },
                              {
                                "columnId": "CorrelationId",
                                "label": "Details"
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "customWidth": "50",
                        "name": "LongerConnections"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Please select a connection to display connection stages.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "SelectedCorrelationId",
                          "comparison": "isEqualTo"
                        },
                        "name": "text - 5"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let newSessions = {NewSessions};\r\nlet checkpoints =  WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | summarize arg_min(TimeGenerated, *) by CorrelationId, Name;\r\nlet Checkpoints = (name:string) {\r\n    checkpoints\r\n    |where Name == name \r\n    | project CorrelationId, bag = pack(name, TimeGenerated)\r\n    | evaluate bag_unpack(bag)\r\n};\r\nlet ChartInfo = datatable (Stage:string, label:string, stageOrder:int)\r\n    [\"UserRoute\",\"User Route\", 1,\r\n     \"ssotoken\",\"SSO Token\", 2,\r\n     \"TransportConnected\", \"Stack Connected\", 3,\r\n     \"OnCredentialsAcquisitionCompleted\",\"creds\", 4,\r\n     \"RdpStackConnectionEstablished\",\"Stack Connected\", 5,\r\n     \"LogonDelay\", \"Logon\", 6,\r\n     \"ShellStart\", \"Shell Start\", 7,\r\n     \"ProductiveTime\", \"Shell Ready\", 8];\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| as ConnectionData\r\n| where State == \"Started\"\r\n| where CorrelationId == \"{SelectedCorrelationId}\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    checkpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\"\r\n) on CorrelationId | project CorrelationId, TimeGenerated\r\n| join kind = inner // UserRoute\r\n(\r\n    checkpoints\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n    | project CorrelationId, UserRoute=TimeGenerated\r\n) on CorrelationId | project-away CorrelationId1\r\n| join kind=inner Checkpoints(\"RdpStackConnectionEstablished\") on CorrelationId  | project-away CorrelationId1\r\n| join kind=leftouter \r\n(\r\n    checkpoints\r\n    | where Name =~ \"OnCredentialsAcquisitionCompleted\"\r\n    | project CorrelationId, credaquire = Parameters.DurationMS\r\n) on CorrelationId  | project-away CorrelationId1\r\n| join kind=leftouter //SSO token\r\n(\r\n    checkpoints\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotoken = tolong(Parameters.DurationMS)\r\n) on CorrelationId  | project-away CorrelationId1\r\n| join kind=inner\r\n(   checkpoints\r\n    | where Name == \"LogonDelay\"\r\n    | extend LogonType = tostring(Parameters.LogonType)\r\n    | where (newSessions and LogonType == \"DirectSession\") or (not(newSessions) and LogonType ==\"TemporarySession\")\r\n    | project LogonDelay= TimeGenerated, CorrelationId\r\n) on CorrelationId | project-away CorrelationId1\r\n| join kind=leftouter Checkpoints(\"ShellStart\") on CorrelationId | project-away CorrelationId1\r\n| join kind = leftouter\r\n(\r\n    checkpoints // new session\r\n    | where newSessions\r\n    | where Name =~ \"ShellReady\" or ( Name =~ \"LaunchExecutable\" and Parameters.connectionStage == \"RdpShellAppExecuted\") or Name=~\"RdpShellAppExecuted\"\r\n    | project ProductiveTime=TimeGenerated, CorrelationId\r\n) on CorrelationId | project-away CorrelationId1\r\n| where not(newSessions) or isnotnull(ProductiveTime)\r\n| project  CorrelationId,TimeGenerated, credaquire, ssotoken, bag=pack_all()\r\n| mv-expand  bag\r\n| project\r\n    CorrelationId, \r\n    TimeGenerated,\r\n    credaquire,\r\n    ssotoken,\r\n    Stage= tostring(bag_keys(bag)[0]),\r\n    Value=bag[tostring(bag_keys(bag)[0])]\r\n| where Stage != \"CorrelationId\"\r\n| where isnotnull(Value)\r\n| project CorrelationId, TimeGenerated, credaquire, ssotoken, Stage, Value=todatetime(Value)\r\n| order by CorrelationId, Value asc \r\n| extend prev=prev(Value)\r\n| project Stage, Value = datetime_diff(\"Second\", Value, prev) -iif(Stage==\"RdpStackConnectionEstablished\",coalesce(credaquire / 1000,0), 0) - iif(Stage == \"UserRoute\", coalesce(ssotoken / 1000, 0), 0)\r\n| where Stage  != \"TimeGenerated\" and Stage != \"OnCredentialsAcquisitionCompleted\" and Stage != \"ssotoken\"\r\n| join kind=inner ChartInfo on Stage\r\n| order by stageOrder asc\r\n| project label, Value",
                                "size": 0,
                                "title": "Connection stages",
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{poolla}"
                                ],
                                "visualization": "piechart",
                                "chartSettings": {
                                  "xAxis": "Stage",
                                  "yAxis": [
                                    "Value"
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 24,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  }
                                }
                              },
                              "name": "ConnectionStagesUser"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let newSessions = {NewSessions};\r\n{logonStageMap}\r\nWVDConnections\r\n| where CorrelationId == \"{SelectedCorrelationId}\"\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| where State == \"Connected\"\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| join kind = leftsemi\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n) on CorrelationId\r\n| project TimeGenerated, CorrelationId, UserName, SessionHostName\r\n| join kind=inner \r\n    (\r\n    WVDCheckpoints\r\n    | where Name == \"LogonDelay\"// or Name == \"ShellStart\"\r\n    )\r\n    on CorrelationId\r\n| extend Type = tostring(Parameters.LogonType), Parameters = bag_remove_keys(Parameters, dynamic([\"LogonType\", \"WinLogonPid\"]))\r\n| mv-expand bagexpansion=array Parameters\r\n| extend Stage = tostring(Parameters[0]), Time = toreal(Parameters[1])/1000\r\n| where Stage != \"WinLogon_Total\" and Stage != \"WinLogon_Logon\"\r\n| extend Stage = renameStage(trim_start(\"WinLogon_Logon_\", Stage))\r\n| summarize Time=sum(Time),TimeGenerated=min(TimeGenerated) by Stage\r\n| project Stage, Time\r\n| order by Stage\r\n\r\n\r\n",
                                "size": 0,
                                "title": "Winlogon stages",
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{poolla}"
                                ],
                                "visualization": "piechart",
                                "chartSettings": {
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 24,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  }
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "NewSessions",
                                "comparison": "isEqualTo",
                                "value": "true"
                              },
                              "name": "LogonStageUser",
                              "styleSettings": {
                                "padding": "5px"
                              }
                            }
                          ]
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "SelectedCorrelationId",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "StagesChartsUser",
                        "styleSettings": {
                          "padding": "5px"
                        }
                      }
                    ]
                  },
                  "name": "LogonTables"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let newSessions = {NewSessions};\r\nlet WVDHosts = dynamic([{WVDHosts}]);\r\nWVDConnections\r\n| where _ResourceId =~ \"{HostPool}\"\r\n| where State in (\"Started\")\r\n| join kind = leftsemi\r\n(\r\n    // Only include connections that actually reached the host to prevent short (failed) attempts from skewing the data\r\n    WVDCheckpoints\r\n    | where Source == \"RDStack\" and Name == \"RdpStackConnectionEstablished\" and _ResourceId =~ \"{HostPool}\"\r\n) on CorrelationId\r\n| project StartTime=TimeGenerated, CorrelationId, UserName, State\r\n| join kind = inner\r\n(\r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name == \"LoadBalancedNewConnection\"\r\n    | extend LoadBalanceOutcome=Parameters.LoadBalanceOutcome\r\n    | where (newSessions and LoadBalanceOutcome == \"NewSession\") or (not(newSessions) and LoadBalanceOutcome in ('Disconnected', 'Active'))\r\n    | summarize ConnectedTime=min(TimeGenerated) by CorrelationId\r\n) on CorrelationId  | project-away CorrelationId1\r\n| join kind = leftouter\r\n(  \r\n    WVDCheckpoints\r\n    | where _ResourceId =~ \"{HostPool}\"\r\n    | where Name =~ \"SSOTokenRetrieval\"\r\n    | project CorrelationId, ssotokeretrieval = Parameters.DurationMS\r\n) on CorrelationId | project-away CorrelationId1\r\n| extend ConnectionTime = (ConnectedTime - StartTime)/1ms - coalesce(ssotokeretrieval,0)\r\n| where ConnectionTime > 0\r\n| make-series Median=percentile(ConnectionTime, 50), p95=percentile(ConnectionTime, 95) on StartTime from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Time for service to route user to a host",
                    "noDataMessage": "No connections found for the selected scope",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{poolla}"
                    ],
                    "visualization": "unstackedbar",
                    "gridSettings": {
                      "filter": true
                    },
                    "chartSettings": {
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumSignificantDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "ServiceConnectionRoutingLatency",
                  "styleSettings": {
                    "margin": "10px",
                    "padding": "10px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Time to connect is characterized for median and p95 as green at 30sec up to red at 60sec.",
                    "style": "info"
                  },
                  "name": "Connect Time Color Description"
                }
              ]
            },
            "name": "Time to connect",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Round-trip time",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//aligning to this: https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-rdsh-performance-counters\r\nlet WVDHosts = dynamic([{WVDHosts}]);\r\nPerf\r\n| extend HostPool = '{HostPool:label}'\r\n| extend HostPool = strcat(HostPool, \"/\")\r\n| extend ComputerName = strcat(HostPool, Computer)\r\n| where ComputerName in~ (WVDHosts)\r\n//| where ObjectName == \"RemoteFX Graphics\"\r\n// CounterName in (\"Frames Skipped/Second - Insufficient Server Resources\" \"Frames Skipped/Second - Insufficient Client Resources\")\r\n| where ObjectName == \"RemoteFX Network\" and CounterName in (\"Current TCP RTT\")//, \"Current UDP RTT\")\r\n| where CounterValue > 0\r\n| project TimeGenerated, Computer, _ResourceId, ObjectName, CounterName, InstanceName, CounterValue=toint(bin(CounterValue, 10))\r\n| summarize Samples=count(), (Median, p95)=percentiles(CounterValue, 50, 95), StdDev=sqrt(variance(CounterValue)), (Peak, PeakTime)=arg_max(CounterValue, TimeGenerated), Average=avg(CounterValue) by Host=_ResourceId, Computer=trim_end(@\"\\..*\", Computer)\r\n| project Host, Computer, Samples, Median, Average, p95, StdDev, Peak, PeakTime",
                    "size": 0,
                    "aggregation": 3,
                    "title": "RTT by host",
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Host",
                        "parameterName": "RttHost",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "Computer",
                        "parameterName": "RttComputer",
                        "parameterType": 1,
                        "defaultValue": "all hosts"
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Computer",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Samples",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "13ch"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumSignificantDigits": 3
                            }
                          }
                        },
                        {
                          "columnMatch": "Median|p95",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 100,
                            "max": 200,
                            "palette": "greenRed",
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "StdDev",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "Peak",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10ch"
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "PeakTime",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "100fr"
                          },
                          "dateFormat": {
                            "formatName": "shortDateTimePattern"
                          },
                          "tooltipFormat": {
                            "tooltip": "The time when the peak RTT occurred"
                          }
                        }
                      ],
                      "rowLimit": 25,
                      "labelSettings": [
                        {
                          "columnId": "StdDev",
                          "label": "Std dev"
                        },
                        {
                          "columnId": "PeakTime",
                          "label": "Peak time"
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "CounterName",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "CounterValue",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "TimeGenerated"
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "xAxis": "CounterValue",
                      "yAxis": [
                        "Instances"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Value",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "outliers_removed",
                          "label": "No outliers"
                        }
                      ],
                      "xSettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "40",
                  "name": "RTT by Host1",
                  "styleSettings": {
                    "padding": "10px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//aligning to this: https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-rdsh-performance-counters\r\nlet WVDHosts = dynamic([{WVDHosts}]);\r\nPerf\r\n| where \"{RttHost}\" == \"*\" or _ResourceId == \"{RttHost}\"\r\n| extend HostPool = '{HostPool:label}'\r\n| extend HostPool = strcat(HostPool, \"/\")\r\n| extend ComputerName = strcat(HostPool, Computer)\r\n| where ComputerName in~ (WVDHosts)\r\n//| where ObjectName == \"RemoteFX Graphics\"\r\n// CounterName in (\"Frames Skipped/Second - Insufficient Server Resources\" \"Frames Skipped/Second - Insufficient Client Resources\")\r\n| where ObjectName == \"RemoteFX Network\" and CounterName in (\"Current TCP RTT\") //, \"Current UDP RTT\")\r\n| where CounterValue > 0 //and CounterValue != 2366 //InstanceName endswith \" 43\"\r\n| project TimeGenerated, Computer, _ResourceId, ObjectName, CounterName, InstanceName, CounterValue=toint(bin(CounterValue, 10))\r\n| make-series Median=percentile(CounterValue, 50), p95=percentile(CounterValue, 95) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Host=_ResourceId\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "RTT median and 95th percentile for {RttComputer}",
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "timechart",
                    "gridSettings": {
                      "rowLimit": 25
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "CounterName",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "CounterValue",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "TimeGenerated"
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Value",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "outliers_removed",
                          "label": "No outliers"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 0
                          }
                        },
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "60",
                  "name": "Rtt Time Chart",
                  "styleSettings": {
                    "padding": "10px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "RTT for median and p95 are characterized as green below or equal to 100ms up to red equal or above 200ms.",
                    "style": "info"
                  },
                  "name": "RTT Color Description"
                }
              ]
            },
            "name": "Round-trip time group",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "ConnectionPerformanceGroup"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
