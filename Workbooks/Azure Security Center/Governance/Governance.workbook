{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Governance"
      },
      "name": "Title"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "ca214f0d-aa7a-464a-b693-c22db46ae52f",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "4168a8b2-a522-4f0d-9575-893d70d9239d",
            "version": "KqlParameterItem/1.0",
            "name": "RulesCount",
            "type": 1,
            "description": "Count of the governance rule, when there is no rules, empty state will be shown",
            "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\" and properties.isDisabled == false\r\n| count",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "Tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": []
      },
      "name": "group - 11"
    },
    {
      "type": 1,
      "content": {
        "json": "### Security governance in Microsoft Defender for Cloud\r\n\r\n   Microsoft Defender for Cloud continuously assesses your hybrid and multi-cloud workloads and     provides you with recommendations to harden your assets and enhance your security posture. <br>Central security teams often experience challenges when driving the personnel within their organizations to implement recommendations. The organizations' security posture can suffer as a result.<br>\r\nWe're introducing a brand-new, built-in governance experience to set ownership and expected remediation timeframes to resolve recommendations.\r\n\r\nTo use this governance report, you need to create security governance rules.\r\n<br>[Learn more >](https://aka.ms/GovernanceDocumentation)\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "RulesCount",
        "comparison": "isEqualTo"
      },
      "name": "text - 13"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Select one or more governance rules from the list to see a list of affected recommendations",
              "style": "info"
            },
            "name": "RulesGridExplination"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n  and isnull(properties.resourceDetails.AwsResourceId)\r\n  and isnull(properties.resourceDetails.GcpResourceId)\r\n  and isnotempty(properties.displayName)\r\n| project id, statusCode = tostring(properties.status.code)\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | project id = tostring(properties.assignedResourceId),\r\n              remediationDueDate = bin(todatetime(properties.remediationDueDate), 1d)\r\n) on id\r\n| extend assignmentStatus = case(\r\n        statusCode != \"Unhealthy\", \"Completed\",\r\n        isnull(remediationDueDate), \"Unassigned\",\r\n        remediationDueDate < bin(now(), 1d), \"Overdue\",\r\n        \"Ontime\"\r\n    )\r\n| summarize count() by assignmentStatus\r\n",
              "size": 3,
              "title": "Resource status",
              "noDataMessage": "No unhealthy resources found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "OsType",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": true
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "OsType",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Ontime",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Completed",
                    "color": "green"
                  },
                  {
                    "seriesName": "Unassigned",
                    "color": "orange"
                  },
                  {
                    "seriesName": "Overdue",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "20",
            "name": "statusePerAssessment"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n      and properties.isDisabled == false\r\n| extend\r\n    displayName = tostring(properties.displayName),\r\n    ownerType = iff(properties.ownerSource.type == \"Manually\", \"Email\", \"ByTag\"),\r\n    ownerValue = tostring(properties.ownerSource.value),\r\n    isGracePeriod = tostring(properties.isGracePeriod),\r\n    remediationTimeframe_raw = todynamic(properties.remediationTimeframe),\r\n    conditionSets = todynamic(properties.conditionSets),\r\n    rulePriority = toint(properties.rulePriority),\r\n    idForSummariz = coalesce(tostring(properties.rootRuleDetails.resourceId), tolower(id)),\r\n    mainScope = tostring(split(coalesce(tostring(properties.rootRuleDetails.resourceId), tolower(id)), \"/providers/microsoft.security/governancerules\")[0])\r\n| extend Days = tolong(totimespan(remediationTimeframe_raw) / 1d)\r\n| extend DaysDisplay = iff(Days <= 0, \"\", iff(Days == 1, \"1 day\", strcat(Days, \" days\")))\r\n| extend \r\n    property = tostring(conditionSets[0].conditions[0].property),\r\n    operator = tostring(conditionSets[0].conditions[0].operator)\r\n| summarize\r\n    rules = make_set(id),\r\n    arg_max(\r\n        rulePriority,\r\n        Scope = iff(tolower(id) has \"securityconnectors\", split(id, \"/providers/Microsoft.Security/governancerules\")[0], tostring(subscriptionId)),\r\n        DisplayName = displayName,\r\n        RemediationTimeframe = DaysDisplay,\r\n        OwnerType = ownerType,\r\n        Owner = ownerValue,\r\n        GracePeriodEnabled = isGracePeriod,\r\n        Rule = id,\r\n        RuleConditionSet = tostring(properties.conditionSets),\r\n        property,\r\n        operator\r\n    ) by idForSummariz, mainScope\r\n| join kind=leftouter (\r\n    resources\r\n    | where type == \"microsoft.security/securityconnectors\"\r\n    | project mainScope = tolower(id), Cloud = tostring(properties.environmentName)\r\n) on mainScope\r\n| extend Cloud = coalesce(Cloud, \"Azure\")\r\n| project\r\n    Scope,\r\n    DisplayName,\r\n    Priority = rulePriority,\r\n    RemediationTimeframe,\r\n    OwnerType,\r\n    Owner,\r\n    GracePeriodEnabled,\r\n    Rule,\r\n    RuleConditionSet,\r\n    property,\r\n    operator,\r\n    Cloud,\r\n    rules",
              "size": 0,
              "title": "Governance rules",
              "noDataMessage": "No Rules found",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "Rule",
                  "parameterName": "Rule",
                  "parameterType": 1,
                  "quote": ""
                },
                {
                  "fieldName": "RuleConditionSet",
                  "parameterName": "RuleConditionSet",
                  "parameterType": 1,
                  "quote": ""
                },
                {
                  "fieldName": "Owner",
                  "parameterName": "Owner",
                  "parameterType": 1,
                  "quote": ""
                },
                {
                  "fieldName": "rules",
                  "parameterName": "rules",
                  "parameterType": 1,
                  "quote": ""
                }
              ],
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "rules",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Scope",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Display name",
                    "formatter": 1,
                    "formatOptions": {
                      "bladeOpenContext": {
                        "bladeName": "CreateGovernanceRuleContextBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "",
                            "source": "column",
                            "value": "properties"
                          },
                          {
                            "name": "subscriptionId",
                            "source": "column",
                            "value": "subscriptionId"
                          },
                          {
                            "name": "governanceRuleToEdit",
                            "source": "column",
                            "value": "properties"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Priority",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Remediation timeframe",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "DD.HH.MM.SS"
                    }
                  },
                  {
                    "columnMatch": "Grace period enabled",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "true",
                          "representation": "success",
                          "text": ""
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "false",
                          "representation": "4",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Rule",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "name",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "DisplayName",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ownerDetails",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "isGracePeriod",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "remediationTimeframe",
                    "formatter": 1
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Owner",
                    "label": "Owner details"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "80",
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isNotEqualTo"
            },
            "name": "Rules",
            "styleSettings": {
              "maxWidth": "100"
            }
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "RulesCount",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "100",
      "name": "subscriptionOverView"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "resourceView"
      },
      "name": "LineSeparator1"
    },
    {
      "type": 1,
      "content": {
        "json": "💡 Selected filter for **RuleConditionSet:** {RuleConditionSet}\r\n💡 Selected filter for **Rule:** {Rule}\r\n💡 Selected filter for **Rules:** {Rules}\r\n\r\n💡 Selected filter for **Owner:** {Owner}\r\n",
        "style": "{selectedTab}"
      },
      "conditionalVisibility": {
        "parameterName": "parameter1",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "ResourceFilter"
    },
    {
      "type": 1,
      "content": {
        "json": " \r\n---"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "resourceView"
      },
      "name": "LineSeparator2"
    },
    {
      "type": 1,
      "content": {
        "json": "Select a recommendation from the list to see a list of affected resources",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Rule",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DisplayName",
          "comparison": "isEqualTo"
        }
      ],
      "name": "assessmentsExplaination"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n      and isnull(properties.resourceDetails.AwsResourceId)\r\n      and isnull(properties.resourceDetails.GcpResourceId)\r\n      and isnotempty(tostring(properties.displayName))\r\n| extend RuleConditionSet = '{RuleConditionSet}', metadataSeverity = tostring(properties.metadata.severity), rules = '{rules}'\r\n| where rules contains name \r\n      or RuleConditionSet contains name \r\n      or RuleConditionSet contains metadataSeverity\r\n| project id, displayName = tostring(properties.displayName), \r\n          statusCode = tostring(properties.status.code)\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | project id = tostring(properties.assignedResourceId),\r\n              remediationDueDate = bin(todatetime(properties.remediationDueDate), 1d),\r\n              hasAssignment = true\r\n) on id\r\n| extend hasAssignment = coalesce(hasAssignment, false)\r\n| extend assignmentStatus = case(\r\n    statusCode != \"Unhealthy\", \"Completed\",\r\n    hasAssignment == false, \"Unassigned\",\r\n    remediationDueDate <bin(now(), 1d) , \"Overdue\",\r\n    \"Ontime\"\r\n)\r\n| summarize count() by assignmentStatus",
        "size": 3,
        "title": "Status per rule",
        "noDataMessage": "No unhealthy resources found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "rowLimit": 10000
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "OsType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "OsType",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Ontime",
              "color": "blue"
            },
            {
              "seriesName": "Completed",
              "color": "green"
            },
            {
              "seriesName": "Unassigned",
              "color": "orange"
            },
            {
              "seriesName": "Overdue",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "Rule",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "20",
      "name": "statusPerRule"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n      and isnull(properties.resourceDetails.AwsResourceId)\r\n      and isnull(properties.resourceDetails.GcpResourceId)\r\n      and isnotempty(tostring(properties.displayName))\r\n| where '{rules}' contains name \r\n      or '{RuleConditionSet}' contains name \r\n      or '{RuleConditionSet}' contains tostring(properties.metadata.severity)\r\n| project id, displayName = tostring(properties.displayName),\r\n          statusCode = tostring(properties.status.code)\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend \r\n        assignedResourceId = tostring(todynamic(properties).assignedResourceId),\r\n        remediationDueDate = bin(todatetime(properties.remediationDueDate), 1d),\r\n        owner = iif(isnotempty(tostring(todynamic(properties).owner)), tostring(todynamic(properties).owner), \"Unspecified\")\r\n    | project id = assignedResourceId, hasAssignment = true, remediationDueDate, owner\r\n) on id\r\n| extend hasAssignment = coalesce(hasAssignment, false)\r\n| extend assignmentStatus = case(\r\n    statusCode != \"Unhealthy\", \"Completed\",\r\n    remediationDueDate < bin(now(), 1d), \"Overdue\",\r\n    \"Ontime\"\r\n)\r\n| where hasAssignment\r\n| summarize Ontime = countif(assignmentStatus == \"Ontime\"), \r\n            Overdue = countif(assignmentStatus == \"Overdue\") \r\n            by selectedOwner = owner\r\n| sort by Overdue desc",
        "size": 0,
        "title": "Status per owner",
        "exportMultipleValues": true,
        "exportedParameters": [
          {
            "fieldName": "selectedOwner",
            "parameterName": "selectedOwner",
            "quote": ""
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Ontime",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "info",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Overdue",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "selectedOwner",
              "label": "Owner"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Owner",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "RuleConditionSet",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "30",
      "name": "Owner status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n      and isnull(properties.resourceDetails.AwsResourceId)\r\n      and isnull(properties.resourceDetails.GcpResourceId)\r\n      and isnotempty(tostring(properties.displayName))\r\n| where '{rules}' contains name \r\n      or '{RuleConditionSet}' contains name \r\n      or '{RuleConditionSet}' contains tostring(properties.metadata.severity)\r\n| project id,\r\n          displayName_ = tostring(properties.displayName),\r\n          statusCode_ = tostring(properties.status.code)\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend assignedResourceId = tostring(todynamic(properties).assignedResourceId),\r\n             remediationDueDate = bin(todatetime(properties.remediationDueDate), 1d)\r\n    | project id = assignedResourceId, hasAssignment = true, remediationDueDate\r\n) on id\r\n| extend hasAssignment = coalesce(hasAssignment, false)\r\n| extend assignmentStatus = case(\r\n    statusCode_ != \"Unhealthy\", \"Completed\",\r\n    hasAssignment == false, \"Unassigned\",\r\n    remediationDueDate < bin(now(), 1d), \"Overdue\",\r\n    \"Ontime\"\r\n)\r\n| summarize Completed = countif(assignmentStatus == \"Completed\"),\r\n            Ontime = countif(assignmentStatus == \"Ontime\"),\r\n            Overdue = countif(assignmentStatus == \"Overdue\"),\r\n            Unassigned = countif(assignmentStatus == \"Unassigned\")\r\n          by displayName_\r\n| sort by Overdue desc",
        "size": 0,
        "title": "Recommendations",
        "noDataMessage": "No Assessments found",
        "exportedParameters": [
          {
            "fieldName": "id",
            "parameterName": "id",
            "parameterType": 1
          },
          {
            "fieldName": "DisplayName",
            "parameterName": "DisplayName",
            "parameterType": 1
          }
        ],
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "DisplayName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "75ch"
              }
            },
            {
              "columnMatch": "Completed",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Ontime",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "representation": "Unknown",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Overdue",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Unassigned",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "0",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "0"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 1
            },
            {
              "columnMatch": "id",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "90ch"
              }
            },
            {
              "columnMatch": "owner",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "DueDate",
              "formatter": 6
            },
            {
              "columnMatch": "Severity",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "OpenBlade",
                "linkIsContextBlade": false,
                "showIcon": true,
                "bladeOpenContext": {
                  "bladeName": "GenericResourceHealthDetailsBlade",
                  "extensionName": "Microsoft_Azure_Security",
                  "bladeParameters": [
                    {
                      "name": "resourceId",
                      "source": "cell",
                      "value": "%2Fsubscriptions%2F3b5bc982-20bc-4b59-b1ca-f8488bb86736%2FresourceGroups%2Fdemo%2Fproviders%2FMicrosoft.HybridCompute%2Fmachines%2FW2019"
                    }
                  ]
                },
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "Source",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "OperatingSystem",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "Category",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Remediation",
              "formatter": 5
            },
            {
              "columnMatch": "RemediationSteps",
              "formatter": 11,
              "formatOptions": {
                "linkColumn": "Remediation",
                "linkTarget": "Url"
              },
              "tooltipFormat": {
                "tooltip": "Click to view remediation steps"
              }
            },
            {
              "columnMatch": "Code",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Healthy",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Unhealthy",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "resourceGroup",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_thresholds_Ontime_2",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "DisplayName",
              "label": "Display name"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_thresholds_Ontime_2",
            "sortOrder": 2
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Rule",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "50",
      "name": "Assessmetns"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "RuleConditionSet",
              "comparison": "isNotEqualTo"
            },
            "name": "empty text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n  and isnull(properties.resourceDetails.AwsResourceId)\r\n  and isnull(properties.resourceDetails.GcpResourceId)\r\n| where tostring(properties.displayName) == \"{DisplayName}\"\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend assignedResourceId = tostring(todynamic(properties).assignedResourceId),\r\n             remediationDueDate = bin(todatetime(properties.remediationDueDate), 1d),\r\n             owner = tostring(properties.owner),\r\n             isGrace = properties.isGracePeriod,\r\n             hasAssignment = true\r\n    | project id = assignedResourceId, owner, remediationDueDate, isGrace, hasAssignment\r\n) on id\r\n| extend hasAssignment = coalesce(hasAssignment, false)\r\n| extend assignmentStatus = case(\r\n        tostring(properties.status.code) != \"Unhealthy\", \"Completed\",\r\n        hasAssignment == false, \"Unassigned\",\r\n        remediationDueDate < bin(now(), 1d), \"Overdue\",\r\n        \"Ontime\"\r\n    )\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n| extend owner = iif(isnotempty(owner) and hasAssignment, owner, iif(hasAssignment == false, owner, \"Unspecified\"))\r\n| extend resourceId = case(\r\n        source == \"azure\", properties.resourceDetails.Id,\r\n        source == \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n        source == \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n        source == \"aws\", properties.resourceDetails.AzureResourceId,\r\n        source == \"gcp\", properties.resourceDetails.AzureResourceId,\r\n        properties.resourceDetails.Id\r\n    )\r\n| extend splitedId = split(tolower(id), \"microsoft.security/securityconnectors\")\r\n| where '{selectedOwner}' == '' or (selectedOwner contains owner and hasAssignment)\r\n| project \r\n    [\"Resource\"] = resourceId,\r\n    Scope = iff(\r\n        tolower(id) has \"securityconnectors\",\r\n        strcat(splitedId[0], \"microsoft.security/securityconnectors\", split(splitedId[1], \"/securityentitydata\")[0]),\r\n        tostring(subscriptionId)\r\n    ),\r\n    Status = assignmentStatus,\r\n    Owner = owner,\r\n    [\"Due date\"] = remediationDueDate,\r\n    [\"Grace period enabled\"] = isGrace\r\n| sort by Status desc",
                    "size": 0,
                    "title": "List of resources for: {DisplayName}",
                    "noDataMessage": "No Assessments found",
                    "exportFieldName": "id",
                    "exportParameterName": "id",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Resource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "showIcon": true,
                            "bladeOpenContext": {
                              "bladeName": "ResourceHealthBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "resourceId",
                                  "source": "column",
                                  "value": "Resource"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "70ch"
                          }
                        },
                        {
                          "columnMatch": "Scope",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Completed",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unassigned",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Overdue",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Ontime",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Grace period enabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Resource id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true,
                            "customColumnWidthSetting": "90ch"
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "owner",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "40ch"
                          }
                        },
                        {
                          "columnMatch": "DueDate",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "90ch"
                          }
                        },
                        {
                          "columnMatch": "DisplayName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "100ch"
                          }
                        },
                        {
                          "columnMatch": "Completed",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "green",
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Ontime",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue",
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Overdue",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "redBright",
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Unassigned",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "orange",
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ResourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Source",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "OperatingSystem",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Category",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "Remediation",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "RemediationSteps",
                          "formatter": 11,
                          "formatOptions": {
                            "linkColumn": "Remediation",
                            "linkTarget": "Url"
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view remediation steps"
                          }
                        },
                        {
                          "columnMatch": "Code",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unhealthy",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "DisplayName",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Assignments"
                }
              ]
            },
            "name": "assessmentsWithExplaination"
          },
          {
            "type": 1,
            "content": {
              "json": "💡 Selected filter for **DisplayName:** {DisplayName}\r\n💡 Selected filter for **selectedOwner:** {selectedOwner}\r\n",
              "style": "{selectedTab}"
            },
            "conditionalVisibility": {
              "parameterName": "parameter1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "ResourceFilter - Copy"
          }
        ]
      },
      "name": "assessmentsGrid"
    }
  ],
  "styleSettings": {
    "paddingStyle": "narrow"
  },
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}