{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Vulnerability Assessment Findings"
      },
      "name": "Headline"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "206f87e8-2616-4d26-a94f-a97eb4cee619",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "ae1f45ba-9275-44fe-a0b0-0f60ab5a8690",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "description": "Show insturctions for using this workbook",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "#### Welcome to vulnerability assessment findings workbook\r\nThis workbook is based on the following recommendations provided by Defender for Cloud:\r\n* [Machines should have vulnerability findings resolved](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/1195afff-c881-495e-9bc5-1486211ae03f)\r\n* [Container registry images should have vulnerability findings resolved](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/dbd0cb49-b563-45e7-9724-889e799fa648)\r\n* [SQL databases should have vulnerability findings resolved](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/82e20e14-edc5-4373-bfc4-f13121257c37)\r\n* [SQL servers on machines should have vulnerability findings resolved](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/f97aa83c-9b63-4f9a-99f6-b22c4398f936)",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "Help"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 2"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "81073874-f7e3-4b99-9bb2-6fac88e2b726",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "OverviewTab",
            "style": "link"
          },
          {
            "id": "414bfeff-09a7-499e-95fc-c3adbf05dff5",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Machines",
            "subTarget": "ServersTab",
            "style": "link"
          },
          {
            "id": "d835a04d-17a7-4e50-b77a-9a8f0a8b3fba",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Containers",
            "subTarget": "ACRTab",
            "style": "link"
          },
          {
            "id": "ca82a8a1-f3c8-439d-afa0-07707dedd555",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "SQL",
            "subTarget": "SQLTab",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 2 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project ResourceType=tostring(split(id,\"/\").[6]), ResourceName=tostring(properties.resourceDetails.id)\r\n| summarize Count=dcount(ResourceName) by ResourceType",
        "size": 4,
        "title": "Unhealthy machines",
        "noDataMessage": "No unhealthy machines found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ResourceType",
            "formatter": 7,
            "formatOptions": {
              "linkTarget": "Resource"
            }
          },
          "leftContent": {
            "columnMatch": "count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "ResourceType",
          "sortOrderField": 1,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "ResourceType",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count",
          "sizeAggregation": "Sum",
          "legendMetric": "count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-VMCount"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n| project ResourceType=tolower(split(id,\"/\").[6]), resourceName=tolower(split(id,\"/\").[8]), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count=dcount(resourceName) by ResourceType",
        "size": 4,
        "title": "Unhealthy container registries",
        "noDataMessage": "No unhealthy container registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        },
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-ContainerCount"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments\"\r\n | where name == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or name == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project ResourceType=tolower(split(id,\"/\").[6]), resourceName=tolower(split(id,\"/\").[8])\r\n | summarize Count=dcount(resourceName) by ResourceType",
        "size": 4,
        "title": "Unhealthy SQL resources by type",
        "noDataMessage": "No unhealthy SQL resources found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        },
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-SQLCount"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 1,
        "title": "Distinct vulnerabilities by severity",
        "noDataMessage": "No unhealthy machines found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-ServersPie"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.additionalData.vulnerabilityDetails.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 1,
        "title": "Distinct vulnerabilities by severity",
        "noDataMessage": "No unhealthy container registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "orange"
            },
            {
              "seriesName": "Unknown",
              "color": "gray"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            },
            {
              "seriesName": "Critical",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-ContainersPie"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project subassessmentKey=name, parse_json(properties) \r\n | extend VulnId = tostring(properties.id), description = tostring(properties.displayName), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n | where Status == 'Unhealthy'\r\n | summarize dcount(VulnId) by Severity",
        "size": 1,
        "title": "Distinct SQL vulnerabilities by severity",
        "noDataMessage": "No unhealthy SQL resources found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview-SQLPie"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project Resource = tostring(properties.resourceDetails.id), subscriptionId, Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id)\r\n| where Status == 'Unhealthy'\r\n| summarize dcount(VulnId) by Resource, Severity, VulnId\r\n| summarize Total=count(Severity), sevH=countif(Severity=='High'), sevM=countif(Severity=='Medium'), sevL=countif(Severity=='Low') by Resource\r\n| order by sevH desc",
        "size": 0,
        "title": "Vulnerabilities by severity per machine",
        "noDataMessage": "No unhealthy machines found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              },
              "tooltipFormat": {
                "tooltip": "[\"Total\"] fndings in total"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 500,
          "labelSettings": [
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview - ServerTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n| project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), subscriptionId, Severity = tostring(properties.additionalData.vulnerabilityDetails.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id)\r\n| where Status == 'Unhealthy'\r\n| summarize dcount(VulnId) by Resource, Severity, VulnId\r\n| summarize Total=count(VulnId), sevC=countif(Severity=='Critical'),sevH=countif(Severity=='High'), sevM=countif(Severity=='Medium'), sevL=countif(Severity=='Low') by Resource\r\n//| order by sevC desc",
        "size": 0,
        "title": "Vulnerabilities by severity per container registry",
        "noDataMessage": "No unhealthy container registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Resource",
              "label": "Resource"
            },
            {
              "columnId": "Total",
              "label": "Total"
            },
            {
              "columnId": "sevC",
              "label": "Critical"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview - ACRTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName)\r\n | where status == 'Unhealthy'\r\n | summarize dcount(VulnId) by Resource, severity, VulnId, description\r\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource\r\n | order by sevH desc",
        "size": 0,
        "title": "Vulnerabilities by severity per SQL resource",
        "noDataMessage": "No unhealthy SQL resources found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "33",
      "name": "Overview - SQLTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\r\n | where status == 'Unhealthy'\r\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\r\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\r\n | order by sevH desc",
        "size": 0,
        "title": "Overview | Select a machine to view the list of vulnerabilities",
        "exportFieldName": "Resource",
        "exportParameterName": "selectedServer",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkColumn": "Resource",
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "30ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright",
                "customColumnWidthSetting": "12ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "13ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Available patches"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "customWidth": "60",
      "name": "MachinesSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| extend Category = tostring(properties.category), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize count() by tostring(Category)",
        "size": 0,
        "title": "Vulnerabilities by category",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Category",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "customWidth": "40",
      "name": "MachinesCategoryTiles"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Vulnerabilities",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, Severity = tostring(parse_json(properties).status.severity), Status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Description = tostring(parse_json(properties).displayName), Patchable = parse_json(properties.additionalData).patchable, CVE = properties.additionalData.cve, Category = tostring(properties.category), TimeGenerated = tostring(properties.timeGenerated), Remediation = tostring(properties.remediation), Impact = tostring(properties.impact), Threat = tostring(properties.additionalData.threat)\r\n| where Status == 'Unhealthy'\r\n| where '{selectedServer}' == 'All' or Resource == '{selectedServer}'\r\n| project Severity, VulnId, Description, tostring(Patchable), Category, Resource, ResourceGroup, CVE, TimeGenerated, Remediation, Impact, Threat\r\n| mv-expand CveExpand = split (CVE, \"},\") to typeof(string)\r\n| parse CveExpand with * '\"title\":\"' singleCve '\"' *\r\n| summarize CVEs = tostring(make_list(singleCve)) by Severity, VulnId, Description, tostring(Patchable), Category, Resource, ResourceGroup, TimeGenerated, Threat, Impact, Remediation",
              "size": 2,
              "title": "Use the search box to filter vulnerabilities by resource, resource group, CVE, severity, etc.",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Severity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "VulnId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Remediation",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Severity"
                  ],
                  "finalBy": "VulnId"
                }
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "ServersTab"
            },
            "name": "Servers - FullListTable"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "name": "VulnerabilitiesView"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n | project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).softwareDetails.fixStatus, cve = parse_json(properties.additionalData).cve\r\n | where status == 'Unhealthy'\r\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\r\n | summarize Total = count(dcount_VulnId), sevC=countif(severity=='Critical'), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='FixAvailable'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\r\n | order by sevC desc",
        "size": 0,
        "title": "Vulnerable container registries |  Select a container registry to view the list of vulnerabilities",
        "noDataMessage": "No unhealthy registries found",
        "exportFieldName": "Resource",
        "exportParameterName": "selectedACR",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkColumn": "Resource",
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "30ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevC",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "Resource",
              "label": "Resource"
            },
            {
              "columnId": "Total",
              "label": "Total"
            },
            {
              "columnId": "sevC",
              "label": "Critical"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Available patch"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "customWidth": "50",
      "name": "Containers - ACR Repos Table"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n | project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).softwareDetails.fixStatus, cve = parse_json(properties.additionalData).cve, Repo = tostring(parse_json(properties.additionalData).repositoryName), imageURI = tostring(parse_json(properties.resourceDetails).id)\r\n | where status == 'Unhealthy'\r\n | summarize dcount(VulnId) by Resource, severity, VulnId, description, tostring(patchable), tostring(cve), Repo, imageURI\r\n | summarize Total = count(dcount_VulnId), sevC=countif(severity=='Critical'), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='FixAvailable'), CVEcount =countif(cve!='[]') by Resource, Repo, imageURI\r\n | order by sevC desc",
        "size": 0,
        "title": "Vulnerable images",
        "noDataMessage": "No vulnerable images found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Repo",
              "formatter": 5
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevC",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "12ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "12ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "14ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "imageDigest",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "18ch"
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource"
            ],
            "expandTopLevel": true,
            "finalBy": "Repo"
          },
          "labelSettings": [
            {
              "columnId": "Resource",
              "label": "Resource"
            },
            {
              "columnId": "Repo",
              "label": "Repository"
            },
            {
              "columnId": "imageURI",
              "label": "Image URI"
            },
            {
              "columnId": "Total",
              "label": "Total"
            },
            {
              "columnId": "sevC",
              "label": "Critical"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Patch available"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "customWidth": "50",
      "name": "Containers - ACRImages Table"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Vulnerabilities",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n| project \tsubscriptionId,\r\n\t\t\tResource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)),\r\n\t\t\tResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)),\r\n\t\t\tVulnId = tostring(parse_json(properties).id),\r\n\t\t\tPublishedTime=format_datetime(todatetime(properties.additionalData.vulnerabilityDetails.publishedDate), 'MM/d/yyyy h:m:s tt'),\r\n\t\t\tTimeGenerated=properties.timeGenerated,\r\n\t\t\tStatus = tostring(parse_json(properties).status.code),\r\n\t\t\tSeverity=properties.additionalData.vulnerabilityDetails.severity,\r\n\t\t\tPatchable=tostring(properties.additionalData.softwareDetails.fixStatus),\r\n\t\t\tRepositoryName=tostring(properties.additionalData.artifactDetails.repositoryName),\r\n\t\t\tCVSS2Score = properties.[\"additionalData\"].[\"vulnerabilityDetails\"].[\"cvss\"].[\"3.0\"].[\"base\"],\r\n\t\t\tCVSS3Score = properties.[\"additionalData\"].[\"vulnerabilityDetails\"].[\"cvss\"].[\"3.0\"].[\"cvssVectorString\"],\r\n\t\t\tImageURI=tostring(properties.resourceDetails.id)\r\n | where Status == 'Unhealthy'\r\n | where '{selectedACR}' == 'All' or Resource == '{selectedACR}'\r\n | project-away Status ",
              "size": 2,
              "title": "Use the search box to filter vulnerabilities by resource, resource group, CVE, severity, etc.",
              "noDataMessage": "No unhealthy registries and images found",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "PublishedTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Issue",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "RepositoryName"
                  ]
                },
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription name"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "VulnId",
                    "label": "Vulnerability ID"
                  },
                  {
                    "columnId": "PublishedTime",
                    "label": "Published time"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  },
                  {
                    "columnId": "RepositoryName",
                    "label": "Repository name"
                  },
                  {
                    "columnId": "CVSS2Score",
                    "label": "CVSS score 2.0"
                  },
                  {
                    "columnId": "CVSS3Score",
                    "label": "CVSS score 3.0"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "ACRTab"
            },
            "name": "Containers - FullListTable"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "name": "Containers - ACR Vulnerabilities Table"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id)\r\n | where status == 'Unhealthy'\r\n | summarize Total = count(VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by ResourceGroup, Resource\r\n | order by sevH desc",
        "size": 0,
        "title": "Vulnerable SQL resources | Select a resource to view the list of vulnerabilities",
        "exportFieldName": "Resource",
        "exportParameterName": "selectedSQL",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkColumn": "Resource",
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "30ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SQLTab"
      },
      "customWidth": "50",
      "name": "SQLSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), Severity = tostring(parse_json(properties).status.severity), Status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Database = parse_json(properties.resourceDetails).id\r\n | where Status == 'Unhealthy'\r\n | summarize dcount(VulnId) by Resource, Severity, VulnId, tostring(Database)\r\n | summarize Total = count(dcount_VulnId), sevH=countif(Severity=='High'), sevM=countif(Severity=='Medium'), sevL=countif(Severity=='Low') by Resource, Database\r\n | order by sevH desc",
        "size": 0,
        "title": "Vulnerable databases per server",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Database",
              "formatter": 5
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark"
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource"
            ],
            "expandTopLevel": true,
            "finalBy": "Database"
          },
          "labelSettings": [
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SQLTab"
      },
      "customWidth": "50",
      "name": "DatabaseSummary"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d2a731c6-cfc4-43da-8886-ff60a47623a1",
            "version": "KqlParameterItem/1.0",
            "name": "GroupBy",
            "label": "Group by",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"resource\", \"label\":\"Resource\", \"selected\":true },\r\n    { \"value\":\"severity\", \"label\":\"Severity\" },\r\n    { \"value\":\"category\", \"label\":\"Category\" },\r\n    { \"value\":\"benchmark\", \"label\":\"Benchmark\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "benchmark"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SQLTab"
      },
      "name": "Grouping"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Vulnerabilities",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, Severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Description = tostring(parse_json(properties).displayName), Category = tostring(properties.category), TimeGenerated = tostring(properties.timeGenerated), Remediation = tostring(properties.remediation), Impact = tostring(properties.impact), Database = parse_json(properties.resourceDetails).id, Benchmarks = parse_json(properties.additionalData).benchmarks,Query = parse_json(properties.additionalData).query\r\n | mvexpand Benchmarks\r\n | extend Benchmark = parse_json(Benchmarks).benchmark \r\n | where status == 'Unhealthy'\r\n | where '{selectedSQL}' == 'All' or Resource == '{selectedSQL}'\r\n | project Severity, VulnId, Description, Category, Resource, Database, ResourceGroup, TimeGenerated, tostring(Benchmark), Remediation, Impact, Query",
              "size": 2,
              "title": "Grouped by benchmark | Use the search box to filter vulnerabilities by resource, resource group, severity, etc.",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Benchmark"
                  ],
                  "expandTopLevel": false
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "GroupBy",
              "comparison": "isEqualTo",
              "value": "benchmark"
            },
            "name": "GroupByBenchmark"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, Severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Description = tostring(parse_json(properties).displayName), Category = tostring(properties.category), TimeGenerated = tostring(properties.timeGenerated), Remediation = tostring(properties.remediation), Impact = tostring(properties.impact), Database = parse_json(properties.resourceDetails).id, Query = parse_json(properties.additionalData).query\r\n | where status == 'Unhealthy'\r\n | where '{selectedSQL}' == 'All' or Resource == '{selectedSQL}'\r\n | project Severity, VulnId, Description, Category, Resource, Database, ResourceGroup, TimeGenerated, Remediation, Impact, Query",
              "size": 2,
              "title": "Grouped by resource | Use the search box to filter vulnerabilities by resource, resource group, severity, etc.",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Resource"
                  ],
                  "expandTopLevel": false
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "GroupBy",
              "comparison": "isEqualTo",
              "value": "resource"
            },
            "name": "GroupByResource"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, Severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Description = tostring(parse_json(properties).displayName), Category = tostring(properties.category), TimeGenerated = tostring(properties.timeGenerated), Remediation = tostring(properties.remediation), Impact = tostring(properties.impact), Database = parse_json(properties.resourceDetails).id, Query = parse_json(properties.additionalData).query\r\n | where status == 'Unhealthy'\r\n | where '{selectedSQL}' == 'All' or Resource == '{selectedSQL}'\r\n | project Severity, VulnId, Description, Category, Resource, Database, ResourceGroup, TimeGenerated, Remediation, Impact, Query",
              "size": 2,
              "title": "Grouped by severity | Use the search box to filter vulnerabilities by resource, resource group, severity, etc.",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Severity"
                  ],
                  "expandTopLevel": false
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "GroupBy",
              "comparison": "isEqualTo",
              "value": "severity"
            },
            "name": "GroupBySeverity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"f97aa83c-9b63-4f9a-99f6-b22c4398f936\" or assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\"\r\n | project Resource = tolower(extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, Severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), Description = tostring(parse_json(properties).displayName), Category = tostring(properties.category), TimeGenerated = tostring(properties.timeGenerated), Remediation = tostring(properties.remediation), Impact = tostring(properties.impact), Database = parse_json(properties.resourceDetails).id, Benchmarks = parse_json(properties.additionalData).benchmarks, Query = parse_json(properties.additionalData).query\r\n | mvexpand Benchmarks\r\n | extend Benchmark = parse_json(Benchmarks).benchmark \r\n | where status == 'Unhealthy'\r\n | where '{selectedSQL}' == 'All' or Resource == '{selectedSQL}'\r\n | project Severity, VulnId, Description, Category, Resource, Database, ResourceGroup, TimeGenerated, tostring(Benchmark), Remediation, Impact, Query",
              "size": 2,
              "title": "Grouped by category | Use the search box to filter vulnerabilities by resource, resource group, severity, etc.",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Category"
                  ],
                  "expandTopLevel": false
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "GroupBy",
              "comparison": "isEqualTo",
              "value": "category"
            },
            "name": "GroupByCategory"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SQLTab"
      },
      "name": "SQLVulnerabilitiesGroup"
    }
  ],
  "fallbackResourceIds": [
    "Azure Security Center"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
