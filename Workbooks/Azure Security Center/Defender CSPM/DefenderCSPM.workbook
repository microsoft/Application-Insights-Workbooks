{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "72e832cf-86b4-4e80-8ce4-27d1032a53a1",
            "version": "KqlParameterItem/1.0",
            "name": "subscriptions",
            "label": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "wkbk_main_param"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "63f467d1-e6e3-42df-840d-f282c6b049a0",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Defender CSPM",
            "subTarget": "main",
            "style": "link"
          },
          {
            "id": "493820c6-a7b0-4ad1-a095-f1fd04f339e0",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Attack Path",
            "subTarget": "attackpath",
            "style": "link"
          },
          {
            "id": "8eb6820c-0dc8-4c1a-81d9-ba7bef409f69",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Remediation - Recommendation",
            "subTarget": "assessment",
            "style": "link"
          },
          {
            "id": "de67769c-67b1-4eac-8f83-407463408ec0",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Sensitive Data Insights",
            "subTarget": "insight",
            "style": "link"
          }
        ]
      },
      "name": "tab"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| extend pricingTier = properties.pricingTier, subPlan = properties.subPlan\r\n| extend cloudPosturePlanEnabled = case(name == \"CloudPosture\", iif(tostring(pricingTier) == \"Standard\", \"Yes\", \"No\"), \"\")\r\n| extend virtualMachinesPlanEnabled = case(name == \"VirtualMachines\", iif(tostring(pricingTier) != \"Free\", \"Yes\", \"No\"), \"\")\r\n| extend containersPlanEnabled = case(name == \"Containers\", iif(tostring(pricingTier) == \"Standard\", \"Yes\", \"No\"), \"\")\r\n| extend storageAccountsPlanEnabled = case(name == \"StorageAccounts\", iif(tostring(pricingTier) == \"Standard\" and subPlan == \"DefenderForStorageV2\", \"Yes\", \"No\"), \"\")\r\n| extend extensions = case(array_length(properties.extensions) > 0, parse_json(tostring(properties.extensions)), dynamic([]))\r\n| mv-expand extension = extensions\r\n| project subscriptionId, name, cloudPosturePlanEnabled, virtualMachinesPlanEnabled, containersPlanEnabled, storageAccountsPlanEnabled, extension_name = tostring(extension.name), extension_enabled = tostring(extension.isEnabled)\r\n| union (\r\n    securityresources\r\n    | where type == \"microsoft.security/pricings\"\r\n    | where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n    | extend pricingTier = properties.pricingTier, subPlan = properties.subPlan\r\n    | extend cloudPosturePlanEnabled = case(name == \"CloudPosture\", iif(tostring(pricingTier) == \"Standard\", \"Yes\", \"No\"), \"\")\r\n    | extend virtualMachinesPlanEnabled = case(name == \"VirtualMachines\", iif(tostring(pricingTier) != \"Free\", \"Yes\", \"No\"), \"\")\r\n    | extend containersPlanEnabled = case(name == \"Containers\", iif(tostring(pricingTier) == \"Standard\", \"Yes\", \"No\"), \"\")\r\n    | extend storageAccountsPlanEnabled = case(name == \"StorageAccounts\", iif(tostring(pricingTier) == \"Standard\" and subPlan == \"DefenderForStorageV2\", \"Yes\", \"No\"), \"\")\r\n    | extend extensions = case(array_length(properties.extensions) > 0, parse_json(tostring(properties.extensions)), dynamic([]))\r\n    | project subscriptionId, name, cloudPosturePlanEnabled, virtualMachinesPlanEnabled, containersPlanEnabled, storageAccountsPlanEnabled, extension_name = \"\", extension_enabled = \"\"\r\n)\r\n| where isnotempty(extension_name) or (virtualMachinesPlanEnabled == \"No\" and isempty(extension_name)) or (containersPlanEnabled == \"No\" and isempty(extension_name)) or (storageAccountsPlanEnabled == \"No\" and isempty(extension_name)) \r\n| order by ['name'] asc",
        "size": 0,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "none"
      },
      "name": "dcspm_config"
    },
    {
      "type": 1,
      "content": {
        "json": "**Secure Score**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "35",
      "name": "text - 26"
    },
    {
      "type": 1,
      "content": {
        "json": "**Total Number of Attack Paths**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "15",
      "name": "text - 27"
    },
    {
      "type": 1,
      "content": {
        "json": "**Risk Found (by Categories)**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "50",
      "name": "text - 28"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/securescores\" and tostring(properties.displayName) != \"Score grace excluded\"\r\n| extend secScore = round(properties.score.percentage * 100.0,0)\r\n| extend env = tostring(properties.environment)\r\n| project subscriptionId,secScore, env",
        "size": 1,
        "aggregation": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "secScore",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "redGreen"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscriptions"
            },
            {
              "columnId": "secScore",
              "label": "Secure Score"
            },
            {
              "columnId": "env",
              "label": "Cloud"
            }
          ]
        },
        "chartSettings": {
          "xAxis": "env"
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "35",
      "name": "query - 9",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| summarize apCount = count()\r\n| project lable = \"Attack Paths\", apCount",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "lable",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "apCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "blue"
            }
          },
          "showBorder": true,
          "size": "auto"
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "15",
      "name": "query - 24",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| mv-expand riskCategories = properties.riskCategories\r\n| project apId = name, apTemplate = tostring(properties.displayName), tostring(riskCategories)\r\n| summarize dcount(apId) by riskCategories",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "dcount_apId"
          ],
          "createOtherGroup": 0,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "50",
      "name": "query - 25",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "**Defender Plans Enabled that Complements Defender CSPM Insights**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "name": "text - 23"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"SqlServerVirtualMachines\", \"SqlServers\", \"Containers\", \"StorageAccounts\")\r\n| extend pricingTier = properties.pricingTier, subPlan = properties.subPlan\r\n| extend planSet = pack(name, level = case(isnotempty(subPlan),subPlan,pricingTier))\r\n| summarize defenderPlans = make_bag(planSet) by subscriptionId\r\n| project subscriptionId,\r\n    CloudPosture = defenderPlans.CloudPosture,\r\n    VirtualMachines = defenderPlans.VirtualMachines,\r\n    SqlServers = defenderPlans.SqlServers,\r\n    SqlServerVirtualMachines = defenderPlans.SqlServerVirtualMachines,\r\n    StorageAccounts = defenderPlans.StorageAccounts,\r\n    Containers = defenderPlans.Containers",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "CloudPosture",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Standard",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            },
            {
              "columnMatch": "VirtualMachines",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "P1",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "P2",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            },
            {
              "columnMatch": "SqlServers",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Standard",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            },
            {
              "columnMatch": "SqlServerVirtualMachines",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Standard",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            },
            {
              "columnMatch": "StorageAccounts",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "DefenderForStorageV2",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "!=",
                    "thresholdValue": "DefenderForStorageV2",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            },
            {
              "columnMatch": "Containers",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Standard",
                    "representation": "green",
                    "text": "Enabled"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "Disabled"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "CloudPosture",
              "label": "Defender CSPM"
            },
            {
              "columnId": "VirtualMachines",
              "label": "Defender for Server"
            },
            {
              "columnId": "SqlServers",
              "label": "Defender for SQL"
            },
            {
              "columnId": "SqlServerVirtualMachines",
              "label": "Defender for SQL VM"
            },
            {
              "columnId": "StorageAccounts",
              "label": "Defender for Storage V2"
            },
            {
              "columnId": "Containers",
              "label": "Defender for Containers"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "name": "mdc_plans_enabled",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"ContainerRegistriesVulnerabilityAssessments\", \"AgentlessDiscoveryForKubernetes\", \"SensitiveDataDiscovery\", \"AgentlessVmScanning\")\r\n//| where isnotempty(tostring(extensions.name))\r\n| project subscriptionId, name=iff(name==\"CloudPosture\", \"DCSPM\", name), tostring(extensions.name),  tostring(extensions.isEnabled)\r\n",
        "size": 1,
        "title": "Recommended Extensions",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "extensions_isEnabled",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "True",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Subscription",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Group",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "name",
              "label": "Defender Plan"
            },
            {
              "columnId": "extensions_name",
              "label": "Extension"
            },
            {
              "columnId": "extensions_isEnabled",
              "label": "On/Off"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "none"
      },
      "name": "recommended_extensions",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"ContainerRegistriesVulnerabilityAssessments\", \"AgentlessDiscoveryForKubernetes\", \"SensitiveDataDiscovery\", \"AgentlessVmScanning\")\r\n| extend agentLessVMScan = iff(name in~ (\"CloudPosture\", \"VirtualMachines\") and extensionName == \"AgentlessVmScanning\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| extend agentLessContainerScan = iff(name in~ (\"CloudPosture\", \"Containers\") and extensionName == \"ContainerRegistriesVulnerabilityAssessments\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| extend agentLessAKSDisc = iff(name in~ (\"CloudPosture\", \"Containers\") and extensionName == \"AgentlessDiscoveryForKubernetes\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| extend dataAware = iff(name in~ (\"CloudPosture\", \"StorageAccounts\") and extensionName == \"SensitiveDataDiscovery\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| distinct  agentLessVMScan, agentLessContainerScan, agentLessAKSDisc, dataAware, subscriptionId",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "agentLessVMScan",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "agentLessContainerScan",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "agentLessAKSDisc",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "dataAware",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "none"
      },
      "name": "query - 17"
    },
    {
      "type": 1,
      "content": {
        "json": "**Defender Extensions Enabled that Complements Defender CSPM Insights**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "name": "text - 22"
    },
    {
      "type": 1,
      "content": {
        "json": "**Sensitive data discovery**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "text - 34"
    },
    {
      "type": 1,
      "content": {
        "json": "**Agentless discovery for Kubernetes**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "text - 35"
    },
    {
      "type": 1,
      "content": {
        "json": "**Container registries vulnerability assessments**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "text - 36"
    },
    {
      "type": 1,
      "content": {
        "json": "**Agentless scanning for machines**"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "text - 37"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"SensitiveDataDiscovery\")\r\n| extend dataAware = iff(name in~ (\"CloudPosture\", \"StorageAccounts\") and extensionName == \"SensitiveDataDiscovery\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| distinct   subscriptionId, dataAware",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "dataAware",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "dataAware",
              "label": "Status"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "query - 18",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"AgentlessDiscoveryForKubernetes\")\r\n| extend agentLessAKSDisc = iff(name in~ (\"CloudPosture\", \"Containers\") and extensionName == \"AgentlessDiscoveryForKubernetes\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| distinct   subscriptionId, agentLessAKSDisc",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "agentLessAKSDisc",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "agentLessAKSDisc",
              "label": "Status"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "query - 19",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"ContainerRegistriesVulnerabilityAssessments\")\r\n| extend agentLessContainerScan = iff(name in~ (\"CloudPosture\", \"Containers\") and extensionName == \"ContainerRegistriesVulnerabilityAssessments\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| distinct   subscriptionId, agentLessContainerScan",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "agentLessContainerScan",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscriptions"
            },
            {
              "columnId": "agentLessContainerScan",
              "label": "Status"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "query - 20",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name in~(\"CloudPosture\", \"VirtualMachines\", \"Containers\", \"StorageAccounts\")\r\n| mv-expand extensions = properties.extensions\r\n| extend extensionName = tostring(extensions.name)\r\n| where extensionName in~(\"AgentlessVmScanning\")\r\n| extend agentLessVMScan = iff(name in~ (\"CloudPosture\", \"VirtualMachines\") and extensionName == \"AgentlessVmScanning\" and tostring(extensions.isEnabled) == \"True\", \"Good\", \"Should Enable\")\r\n| distinct   subscriptionId, agentLessVMScan",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "agentLessVMScan",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Good",
                    "representation": "green",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "agentLessVMScan",
              "label": "Status"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "main"
      },
      "customWidth": "25",
      "name": "query - 21",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| summarize count()",
        "size": 4,
        "title": "Num. Attack Paths",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "card",
        "tileSettings": {
          "showBorder": false
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "customWidth": "10",
      "name": "num_of_attack_path",
      "styleSettings": {
        "margin": "0",
        "padding": "0",
        "maxWidth": "10"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "    securityresources\r\n    | where type == \"microsoft.security/attackpaths\" \r\n    | mv-expand properties.graphComponent.entities\r\n    | extend    apNAme = name, \r\n                nodeName = tostring(properties_graphComponent_entities.entityName),\r\n                nodeId = tostring(properties_graphComponent_entities.entityInternalId),\r\n                nodeType = tostring(properties_graphComponent_entities.entityType)\r\n    | distinct nodeName, nodeType\r\n    | summarize  count() by nodeType",
        "size": 4,
        "title": "Resource Type in Attack Paths",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "nodeType",
              "formatter": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "nodeType",
              "label": "Resource Type"
            },
            {
              "columnId": "count_",
              "label": "Count"
            }
          ]
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "nodeType",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "yAxis": [
            "count_"
          ],
          "group": "nodeType",
          "createOtherGroup": 0,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "customWidth": "30",
      "name": "attack_path_resource_type",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| mv-expand riskCategories = properties.riskCategories\r\n| project apId = name, apTemplate = tostring(properties.displayName), tostring(riskCategories)\r\n| summarize dcount(apId) by riskCategories",
        "size": 1,
        "title": "Risk Categories",
        "exportFieldName": "riskCategories",
        "exportParameterName": "riskCategories",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "riskCategories",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "dcount_apId",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "customWidth": "60",
      "name": "attack_path_risk_categories",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| extend riskCategories = tostring(properties.riskCategories)\r\n| extend riskCategories = tostring(split(riskCategories, \"[\")[1])\r\n| extend riskCategories = tostring(split(riskCategories, \"]\")[0])\r\n| extend riskCategory = iff('{riskCategories}' == \"All\", riskCategories, '{riskCategories}')\r\n| where riskCategories has(riskCategory)\r\n| project apId = name, apTemplate = tostring(properties.displayName), riskCategories\r\n| summarize Path_Count = count() by Attack_Path = apTemplate, riskCategories\r\n| project Attack_Path, Path_Count, riskCategories\r\n",
        "size": 0,
        "title": "Attack Path (Type) List",
        "exportFieldName": "Attack_Path",
        "exportParameterName": "Attack_Path",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Attack_Path",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "120ch"
              }
            },
            {
              "columnMatch": "Path_Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellowOrangeRed",
                "customColumnWidthSetting": "11ch"
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "riskCategories",
              "formatter": 1
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Attack_Path",
              "label": "Attack Path"
            },
            {
              "columnId": "Path_Count",
              "label": "Count"
            },
            {
              "columnId": "riskCategories",
              "label": "Risk Category"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "name": "attack_path_list_summary",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| project apId = name, Attack_Paths = tostring(properties.displayName), description = tostring(properties.description), attackPathType = tostring(properties.attackPathType)\r\n| extend Attack_Path = iff('{Attack_Path}' == \"All\", Attack_Paths, '{Attack_Path}')\r\n| where Attack_Path == Attack_Paths\r\n| project Attack_Path, apId, description, Url=strcat(\"https://portal.azure.com/#view/Microsoft_Azure_Security_Orion/AttackPathTypeBlade/attackPathTypeId/\", attackPathType)\r\n\r\n",
        "size": 0,
        "title": "Attack Path (Instances)",
        "exportFieldName": "apId",
        "exportParameterName": "apId",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "apId",
              "formatter": 5
            },
            {
              "columnMatch": "Url",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Attack Path Url"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Attack_Path",
              "label": "Attack Path"
            },
            {
              "columnId": "apId",
              "label": "GUID"
            },
            {
              "columnId": "description",
              "label": "Description"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "customWidth": "60",
      "name": "query - 30",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\" \r\n| mv-expand properties.graphComponent.entities\r\n| extend    apName = name, \r\n                nodeName = tostring(properties_graphComponent_entities.entityName),\r\n                nodeId = tostring(properties_graphComponent_entities.entityInternalId),\r\n                nodeType = tostring(properties_graphComponent_entities.entityType)\r\n| where apName == \"{apId}\"\r\n| distinct nodeType, nodeName, nodeId\r\n| join kind=leftouter (\r\nsecurityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend Details = parse_json(properties)\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = splitAffectedResourceId[resourceNameIndex]\r\n| summarize alerts = count() by nodeName=tostring(affectedResourceName)\r\n) on nodeName\r\n| project nodeType, nodeName, nodeId, alerts = iff(isnull(alerts), \"0\", tostring(alerts))",
        "size": 0,
        "title": "Affected Resources",
        "exportFieldName": "nodeId",
        "exportParameterName": "nodeId",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "nodeType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true,
                "customColumnWidthSetting": "47.1429ch"
              }
            },
            {
              "columnMatch": "nodeId",
              "formatter": 5
            },
            {
              "columnMatch": "alerts",
              "formatter": 8,
              "formatOptions": {
                "palette": "greenRed"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "nodeType",
              "label": "Resource Type"
            },
            {
              "columnId": "nodeName",
              "label": "Resource"
            },
            {
              "columnId": "alerts",
              "label": "Active Alerts"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "customWidth": "40",
      "name": "query - 2",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\" \r\n| where name ==\"{apId}\"\r\n| extend    apDescription= tostring(properties.description),\r\n            apNAme = name\r\n| union (\r\n    securityresources\r\n    | where type == \"microsoft.security/attackpaths\" \r\n    | where name ==\"{apId}\"\r\n    | mv-expand properties.graphComponent.entities\r\n    | extend    apNAme = name, \r\n                nodeName = tostring(properties_graphComponent_entities.entityName),\r\n                nodeId = tostring(properties_graphComponent_entities.entityInternalId),\r\n                nodeType = tostring(properties_graphComponent_entities.entityType)\r\n)\r\n| union (\r\n    securityresources\r\n    | where type == \"microsoft.security/attackpaths\" \r\n    | where name ==\"{apId}\"\r\n    | mv-expand properties.graphComponent.connections\r\n    | extend    edgeId = tostring(properties_graphComponent_connections.connectionId),\r\n                edgeSourceId = tostring(properties_graphComponent_connections.sourceEntityInternalId),\r\n                edgeTargetId = tostring(properties_graphComponent_connections.targetEntityInternalId),\r\n                edgeDescription = tostring(properties_graphComponent_connections.description)\r\n)\r\n| distinct nodeName, nodeId, nodeType, edgeId, edgeSourceId, edgeTargetId, edgeDescription",
        "size": 0,
        "title": "Attack Path Graph ",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "graph",
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "nodeType",
            "formatter": 16,
            "formatOptions": {
              "showIcon": true
            }
          },
          "centerContent": {
            "columnMatch": "nodeName",
            "formatter": 1
          },
          "nodeIdField": "nodeId",
          "sourceIdField": "edgeSourceId",
          "targetIdField": "edgeTargetId",
          "graphOrientation": 1,
          "showOrientationToggles": false,
          "nodeSize": null,
          "staticNodeSize": 100,
          "colorSettings": {
            "nodeColorField": "nodeType",
            "type": 1,
            "colorPalette": "default"
          },
          "hivesMargin": 5
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "attackpath"
      },
      "name": "query - 31",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "### **Active Recommendations** <br>\r\nThe following is a list of Active Recommendation(s) affecting the Attack Path(s) found. By remediating them, Attack Path(s) should be resolved. <br>\r\nIt is important to note that if any recommendation does not have a **Governance Rule**, it is recommended to add them to an existing **Rule** or configure a **Rule** that includes it.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "name": "text - 38"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| extend assessment = parse_json(properties.assessments)\r\n| extend keys = bag_keys(assessment)\r\n| mv-expand keys\r\n| extend key = tostring(keys)\r\n| project key, assessment_value = tostring(assessment[key])\r\n| extend assessment_object = parse_json(assessment_value)\r\n| mv-expand assessment_object\r\n| extend sub = bag_keys(assessment_object)\r\n| extend assessment_id = split(tostring(sub), \"assessments/\")[1]\r\n| extend assessment_id = substring(assessment_id, 0, strlen(assessment_id)-2)\r\n| distinct  assessment_id\r\n| join kind=leftouter (\r\n    securityresources         \r\n    | where type == \"microsoft.security/assessments\"\r\n    | where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n    | extend DisplayName = tostring(properties.displayName)\r\n    | extend assessment_id = tostring(split(tostring(id), \"assessments/\")[1])\r\n    | where isempty(DisplayName) == false and isnull(DisplayName) == false\r\n) on assessment_id \r\n    | join kind=leftouter (\r\n    securityresources         \r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n    | extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n    | project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate\r\n) on id\r\n| extend assessmentStatus = tostring(properties.status.code)\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| where assessmentStatus == \"Unhealthy\"\r\n| extend assignmentStatus = iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\")\r\n| summarize count() by assignmentStatus\r\n\r\n\r\n",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Completed",
              "color": "green"
            },
            {
              "seriesName": "Unassigned",
              "color": "orange"
            },
            {
              "seriesName": "Ontime",
              "color": "blue"
            },
            {
              "seriesName": "Overdue",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "40",
      "name": "pie_recommedation_mitigation_status",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| extend assessment = parse_json(properties.assessments)\r\n| extend keys = bag_keys(assessment)\r\n| mv-expand keys\r\n| extend key = tostring(keys)\r\n| project key, assessment_value = tostring(assessment[key]), name\r\n| extend assessment_object = parse_json(assessment_value)\r\n| mv-expand assessment_object\r\n| extend sub = bag_keys(assessment_object)\r\n| extend assessment_id = split(tostring(sub), \"assessments/\")[1]\r\n| extend assessment_id = substring(assessment_id, 0, strlen(assessment_id)-2)\r\n| distinct  assessment_id, name\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\" \r\n    | extend resource_name_array = split(properties.resourceDetails.Id, \"/\")\r\n    | extend resource_name_index = array_length(resource_name_array) - 1\r\n    | extend resource_name = resource_name_array[resource_name_index]\r\n    | project severity=tostring(properties.metadata.severity), assessment_id= name, assessment_name = properties.displayName, assessment_status = properties.status.code, resource_name\r\n) on assessment_id\r\n| where assessment_status == \"Unhealthy\"\r\n| summarize dcount(name) by tostring(assessment_name), severity",
        "size": 1,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "assessment_name",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "107.5714ch"
              }
            },
            {
              "columnMatch": "severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Unavailable",
                    "text": ""
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "High",
                    "representation": "Sev0",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Medium",
                    "representation": "Sev1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Low",
                    "representation": "Sev2",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "count_unhealthy_resources",
              "formatter": 1
            },
            {
              "columnMatch": "dcount_name",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellowOrangeRed"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "assessment_name",
              "label": "Recommendations"
            },
            {
              "columnId": "severity",
              "label": "Severity"
            },
            {
              "columnId": "dcount_name",
              "label": "Num. Affected Attack Paths"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "60",
      "name": "query - 3",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n| where tostring(properties.isDisabled) == \"false\"\r\n| extend ruleName = todynamic(name)\r\n| extend displayName = tostring(properties.displayName)\r\n| extend conditionSets = todynamic(properties.conditionSets)\r\n| extend isDisabled = todynamic(properties.isDisabled)\r\n| extend  RuleConditionSet = properties.conditionSets[0].conditions[0].value\r\n| extend assessment_id = extract_all('\"(.*?)\"', tostring(RuleConditionSet))\r\n| mv-expand assessment_id\r\n| project tostring(assessment_id), RuleConditionSet, displayName\r\n| join kind=innerunique  (\r\n    securityresources\r\n    | where type == \"microsoft.security/attackpaths\"\r\n    | extend assessment = parse_json(properties.assessments)\r\n    | extend keys = bag_keys(assessment)\r\n    | mv-expand keys\r\n    | extend key = tostring(keys)\r\n    | project key, assessment_value = tostring(assessment[key]), name\r\n    | extend assessment_object = parse_json(assessment_value)\r\n    | mv-expand assessment_object\r\n    | extend sub = bag_keys(assessment_object)\r\n    | extend assessment_id = split(tostring(sub), \"assessments/\")[1]\r\n    | extend assessment_id = substring(assessment_id, 0, strlen(assessment_id)-2)\r\n    | distinct  assessment_id\r\n) on assessment_id\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\" \r\n    | project severity=tostring(properties.metadata.severity), assessment_id= name, assessment_name = properties.displayName, assessment_status = properties.status.code\r\n) on assessment_id\r\n| extend rule = displayName\r\n| where assessment_status == \"Unhealthy\"\r\n| distinct tostring(assessment_name), rule",
        "size": 1,
        "title": "Active Recommendations with Governance Rule",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "assessment_name",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "yellow",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "70ch"
              }
            },
            {
              "columnMatch": "rule",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "green",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "25.5ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "assessment_name",
              "label": "Recommendation"
            },
            {
              "columnId": "rule",
              "label": "Governance Rule"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "50",
      "name": "recommendation_with_gov_rule",
      "styleSettings": {
        "margin": "50",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "    securityresources\r\n    | where type == \"microsoft.security/attackpaths\"\r\n    | extend assessment = parse_json(properties.assessments)\r\n    | extend keys = bag_keys(assessment)\r\n    | mv-expand keys\r\n    | extend key = tostring(keys)\r\n    | project key, assessment_value = tostring(assessment[key]), name\r\n    | extend assessment_object = parse_json(assessment_value)\r\n    | mv-expand assessment_object\r\n    | extend sub = bag_keys(assessment_object)\r\n    | extend assessment_id = split(tostring(sub), \"assessments/\")[1]\r\n    | extend assessment_id = substring(assessment_id, 0, strlen(assessment_id)-2)\r\n    | distinct  assessment_id\r\n    | join kind= leftouter (\r\n        securityresources\r\n        | where type == \"microsoft.security/governancerules\"\r\n        | where tostring(properties.isDisabled) == \"false\"\r\n        | extend ruleName = todynamic(name)\r\n        | extend displayName = tostring(properties.displayName)\r\n        | extend conditionSets = todynamic(properties.conditionSets)\r\n        | extend isDisabled = todynamic(properties.isDisabled)\r\n        | extend  RuleConditionSet = properties.conditionSets[0].conditions[0].value\r\n        | extend assessment_id = extract_all('\"(.*?)\"', tostring(RuleConditionSet))\r\n        | mv-expand assessment_id\r\n        | project tostring(assessment_id), RuleConditionSet, displayName\r\n) on assessment_id\r\n| join kind=leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\" \r\n    | project severity=tostring(properties.metadata.severity), assessment_id= name, assessment_name = properties.displayName, assessment_status = properties.status.code\r\n) on assessment_id\r\n| extend rule = \"None\"\r\n| where assessment_status == \"Unhealthy\"\r\n| where assessment_id != assessment_id1\r\n| distinct tostring(assessment_name), rule",
        "size": 1,
        "title": "Active Recommendations without Governance Rule",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "assessment_name",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "yellow",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "70ch"
              }
            },
            {
              "columnMatch": "rule",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "redBright",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "26.5ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "assessment_name",
              "label": "Recommendation"
            },
            {
              "columnId": "rule",
              "label": "Governance Rule"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "50",
      "name": "recommendation_without_gov_rule",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\"\r\n| extend assessment = parse_json(properties.assessments)\r\n| extend keys = bag_keys(assessment)\r\n| mv-expand keys\r\n| extend key = tostring(keys)\r\n| project key, assessment_value = tostring(assessment[key])\r\n| extend assessment_object = parse_json(assessment_value)\r\n| mv-expand assessment_object\r\n| extend sub = bag_keys(assessment_object)\r\n| extend assessment_id = split(tostring(sub), \"assessments/\")[1]\r\n| extend assessment_id = substring(assessment_id, 0, strlen(assessment_id)-2)\r\n| distinct  assessment_id\r\n| join kind=leftouter (\r\n    securityresources         \r\n    | where type == \"microsoft.security/assessments\"\r\n    | where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n    | extend DisplayName = tostring(properties.displayName)\r\n    | extend assessment_id = tostring(split(tostring(id), \"assessments/\")[1])\r\n    | where isempty(DisplayName) == false and isnull(DisplayName) == false\r\n) on assessment_id \r\n| join kind=leftouter (\r\n    securityresources         \r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n    | extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n    | project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate\r\n) on id\r\n| extend assessmentStatus = tostring(properties.status.code)\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| where assessmentStatus == \"Unhealthy\"\r\n| extend assignmentStatus = iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\")\r\n| summarize Ontime = countif(assignmentStatus == \"Ontime\"),\r\n            Overdue = countif(assignmentStatus == \"Overdue\"),\r\n           Unassigned = countif(assignmentStatus == \"Unassigned\"), tostring(ResourceList = make_list(pack(\"id\", id, \"Status\", assignmentStatus))) by DisplayName = tostring(properties.displayName)\r\n| sort by Overdue desc\r\n| order by ['Ontime'] desc\r\n",
        "size": 1,
        "title": "Recommendation Status",
        "exportFieldName": "ResourceList",
        "exportParameterName": "ResourceList",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "DisplayName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "60.4286ch"
              }
            },
            {
              "columnMatch": "Ontime",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "12.4286ch"
              }
            },
            {
              "columnMatch": "Overdue",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "13.1429ch"
              }
            },
            {
              "columnMatch": "Unassigned",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15.5714ch"
              }
            },
            {
              "columnMatch": "ResourceList",
              "formatter": 5
            },
            {
              "columnMatch": "Completed",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "14.8571ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "DisplayName",
              "label": "Recommendation"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "55",
      "name": "query - 4",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where isnotempty(id)\r\n| extend resourcelist = tostring('{ResourceList}')\r\n| mv-expand todynamic(resourcelist)\r\n| project resID = tostring(resourcelist.id), status = tostring(resourcelist.Status), id = tostring(id)\r\n| where resID has id\r\n| join kind=leftouter   (\r\n    securityresources         \r\n    | where type == \"microsoft.security/assessments/governanceassignments\"\r\n    | extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n    | extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n    | project id = assignedResourceId, owner = properties.owner, remediationDueDate, isGrace = properties.isGracePeriod\r\n    ) on id\r\n| extend splitedId = split(tolower(id), \"/providers/microsoft.security/assessments\")\r\n| project resource = splitedId[0], status, owner, remediationDueDate, isGrace\r\n",
        "size": 1,
        "title": "Affected Resource",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Unassigned",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Ontime",
                    "representation": "info",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Overdue",
                    "representation": "3",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "remediationDueDate",
              "formatter": 6
            },
            {
              "columnMatch": "isGrace",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "True",
                    "representation": "success",
                    "text": ""
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "False",
                    "representation": "disabled",
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": ""
                  }
                ]
              }
            },
            {
              "columnMatch": "resID",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "120.2857ch"
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "resource",
              "label": "Resource"
            },
            {
              "columnId": "status",
              "label": "Assignment Status"
            },
            {
              "columnId": "owner",
              "label": "Owner"
            },
            {
              "columnId": "remediationDueDate",
              "label": "Due Date"
            },
            {
              "columnId": "isGrace",
              "label": "Grace Period"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "assessment"
      },
      "customWidth": "45",
      "name": "query - 32",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "### **Sensitive Data Found by Sample** <br>\r\nSensitive data threat detection is powered by the sensitive data discovery engine, an agentless engine that uses a smart sampling method to find resources with sensitive data. <br>\r\nDefender for Cloud uses smart sampling to discover a selected number of files in your cloud datastores. Smart sampling results discover evidence of sensitive data issues, while saving on discovery costs and time.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "insight"
      },
      "name": "text - 29"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\" \r\n| mv-expand insights = properties.graphComponent.insights\r\n| where insights.additionalData.type == 'Sensitivity'\r\n| mv-expand fileSamples = insights.additionalData.fileSamples\r\n| extend fileName = translate('%20', ' ', tostring(fileSamples.path)), classification=fileSamples.classificationNames\r\n| mv-expand classification\r\n| summarize numfiles = dcount(fileName) by classification = tostring(classification)",
        "size": 0,
        "exportFieldName": "classification",
        "exportParameterName": "classification",
        "exportDefaultValue": "All",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "classification",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "numfiles",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "insight"
      },
      "name": "query - 33",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/attackpaths\" \r\n| mv-expand insights = properties.graphComponent.insights\r\n| extend entityInternalId = tostring(insights.entityInternalId)\r\n| where insights.additionalData.type == 'Sensitivity'\r\n| mv-expand fileSamples = insights.additionalData.fileSamples\r\n| extend fileName = translate('%20', ' ', tostring(fileSamples.path)), classification=tostring(fileSamples.classificationNames)\r\n| extend classification = tostring(split(classification, \"[\")[1])\r\n| extend classification = tostring(split(classification, \"]\")[0])\r\n| extend classtype = iff('{classification}' == \"All\", classification, '{classification}')\r\n| where classification has(classtype)\r\n| join kind = leftouter (\r\n    securityresources\r\n    | where type == \"microsoft.security/attackpaths\" \r\n    | mv-expand entities = properties.graphComponent.entities\r\n    | extend entityInternalId = tostring(entities.entityInternalId)\r\n    | extend entityType = tostring(entities.entityType)\r\n    | extend azureResourceId = tostring(entities.entityIdentifiers.azureResourceId)\r\n    | extend storageAccountAzureResourceId = tostring(entities.entityIdentifiers.storageAccountAzureResourceId)\r\n    | extend entityStoreUniqueIdentifier = tostring(entities.entityIdentifiers.entityStoreUniqueIdentifier)\r\n) on entityInternalId\r\n//| extend AzureResourceId = tostring(iff(isnotempty(storageAccountAzureResourceId ), storageAccountAzureResourceId, azureResourceId))\r\n//| extend AzureResourceId = tostring(iff(isnotempty(entityStoreUniqueIdentifier ), entityStoreUniqueIdentifier, azureResourceId))\r\n| extend AzureResourceId = case( isnotempty(storageAccountAzureResourceId ), storageAccountAzureResourceId\r\n                                ,isnotempty(entityStoreUniqueIdentifier ), entityStoreUniqueIdentifier\r\n                                ,azureResourceId\r\n)\r\n| distinct  AzureResourceId, fileName, classification",
        "size": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "AzureResourceId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "fileName",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "AzureResourceId",
              "label": "Resource"
            },
            {
              "columnId": "fileName",
              "label": "File Name (Container/FileName)"
            },
            {
              "columnId": "classification",
              "label": "Type of Sensitive Data Found"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "insight"
      },
      "name": "query - 10",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}