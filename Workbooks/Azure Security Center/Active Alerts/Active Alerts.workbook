{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Active Alerts"
      },
      "name": "text - 0"
    },
    {
      "type": 1,
      "content": {
        "json": "<svg id=\"fe62c4da-ab98-4bb3-a1a5-9a22b229614c\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\r\n  <defs>\r\n    <linearGradient id=\"f36136e6-f568-4134-ab6f-c0fefbc04f83\" x1=\"9\" y1=\"16.795\" x2=\"9\" y2=\"1.205\" gradientUnits=\"userSpaceOnUse\">\r\n      <stop offset=\"0\" stop-color=\"#5e9624\" />\r\n      <stop offset=\"0.321\" stop-color=\"#639d26\" />\r\n      <stop offset=\"0.794\" stop-color=\"#6fb12a\" />\r\n      <stop offset=\"0.999\" stop-color=\"#76bc2d\" />\r\n    </linearGradient>\r\n  </defs>\r\n  <g>\r\n\t<path d=\"M16 8.39516C16 13.2339 10.0394 17.129 8.75862 17.9274C8.61084 18.0242 8.41379 18.0242 8.26601 17.9274C6.96059 17.1532 1 13.2339 1 8.39516V2.58871C1 2.34677 1.19704 2.12903 1.46798 2.12903C6.09852 2.00806 5.01478 0 8.48768 0C11.9606 0 10.9015 2.00806 15.532 2.12903C15.7783 2.12903 16 2.34677 16 2.58871V8.39516Z\" fill=\"#0078D4\"/>\r\n\t<path d=\"M15.3999 8.42889C15.3999 12.9731 9.90953 16.6035 8.72243 17.3444C8.57405 17.4185 8.40093 17.4185 8.27727 17.3444C7.09018 16.6035 1.59985 12.9484 1.59985 8.42889V2.9956C1.59985 2.77332 1.7977 2.57575 2.02028 2.57575C6.27405 2.45227 5.30953 0.600006 8.49985 0.600006C11.6902 0.600006 10.7257 2.47696 14.9794 2.57575C15.202 2.57575 15.3999 2.77332 15.3999 2.9956V8.42889Z\" fill=\"url(#paint0_linear_964_5538)\"/>\r\n\t<path d=\"M8.49997 12.6C8.99703 12.6 9.39997 12.1971 9.39997 11.7C9.39997 11.2029 8.99703 10.8 8.49997 10.8C8.00292 10.8 7.59998 11.2029 7.59998 11.7C7.59998 12.1971 8.00292 12.6 8.49997 12.6Z\" fill=\"white\"/>\r\n\t<path d=\"M8.94997 10.2H8.04998C7.80248 10.2 7.59998 10.0084 7.59998 9.7742V4.02581C7.59998 3.79162 7.80248 3.60001 8.04998 3.60001H8.94997C9.19747 3.60001 9.39997 3.79162 9.39997 4.02581V9.7742C9.39997 10.0084 9.19747 10.2 8.94997 10.2Z\" fill=\"white\"/>\r\n  </g>\r\n</svg>\r\n<span style=\"font-family: Open Sans; font-weight: 620; font-size: 19px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\">&nbsp; Please take time to share your thoughts on this workbook,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 19px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](https://forms.office.com/r/6t5qANrvgn)"
      },
      "name": "text - 22"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c8d14cfb-de8d-47de-9c44-9a2563bae342",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "4f93ebba-a9d5-4e11-8de4-b605c2b4368f",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceIdFilter",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "value": "All",
            "label": "Resource ID"
          },
          {
            "id": "e505498f-d2eb-4dd6-928f-0f0f0e9cc371",
            "version": "KqlParameterItem/1.0",
            "name": "AlertDisplayNameFilter",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "value": "All",
            "label": "Alert display name"
          },
          {
            "id": "39e382f9-4780-40fa-8595-15eda0f08ad4",
            "version": "KqlParameterItem/1.0",
            "name": "NewAlertFilter",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "value": "All",
            "label": "New alert"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 15"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n   )\r\n  | project-away SeverityRank\r\n  | extend Severity = properties.Severity\r\n  | project Severity = tostring(Severity)\r\n  | summarize Count = count() by Severity",
        "size": 0,
        "title": "Severity                                                                                                     ",
        "exportedParameters": [
          {
            "fieldName": "Subscription",
            "parameterName": "Subscription",
            "parameterType": 1
          },
          {
            "fieldName": "Severity",
            "parameterName": "SeverityFilter",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 1
            }
          ]
        },
        "chartSettings": {
          "yAxis": [
            "Count"
          ],
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "orange"
            },
            {
              "seriesName": "High",
              "color": "redDark"
            },
            {
              "seriesName": "Low",
              "color": "yellow"
            }
          ]
        }
      },
      "customWidth": "30",
      "name": "Severity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | summarize Count =count() by resourceGroup",
        "size": 0,
        "title": "Resource Group",
        "exportFieldName": "resourceGroup",
        "exportParameterName": "resourceGroupFilter",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "30",
      "name": "query - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n  | project id = tolower(id), tags\r\n  | join kind=inner (securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n  | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName, isAzure\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\r\n    ) on $left.id == $right.affectedResourceId\r\n  | extend id = alertId, subscriptionId, properties = alertProperties\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n    )\r\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId) asc\r\n   | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | project TagValue, alertId\r\n | summarize Count = count() by TagValue",
        "size": 0,
        "title": "Tag",
        "exportFieldName": "TagValue",
        "exportParameterName": "TagValueFilter",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "30",
      "name": "query - 12"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "datatable(ResourceId: string) [ \"All\"] | union (securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | where Prop.Severity == \"High\"\r\n    | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n|  summarize Count=count() by tostring(ResourceId)\r\n  | top 5 by Count)",
        "size": 1,
        "title": "Top 5 attacked resources (with High Severity)",
        "noDataMessage": "There are no Top 5 attacked resources found",
        "exportedParameters": [
          {
            "fieldName": "ResourceId",
            "parameterName": "ResourceIdFilter",
            "defaultValue": "All"
          },
          {
            "fieldName": "ResourceId",
            "parameterName": "ShowTable",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource ID",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "Count",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "ResourceId",
              "label": "Resource ID"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Count",
            "sortOrder": 2
          }
        ]
      },
      "customWidth": "30",
      "name": "Top 5 attacked resources (with High Severity)"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | project tostring(AlertDisplayName)\r\n  | summarize Count = count() by AlertDisplayName\r\n  | top 5 by Count)",
        "size": 1,
        "title": "Top alert types       ",
        "exportedParameters": [
          {
            "fieldName": "AlertDisplayName",
            "parameterName": "AlertDisplayNameFilter",
            "defaultValue": "All"
          },
          {
            "fieldName": "AlertDisplayName",
            "parameterName": "ShowTable",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "sortBy": [
            {
              "itemKey": "Count",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert display name"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Count",
            "sortOrder": 2
          }
        ]
      },
      "customWidth": "30",
      "name": "Top alert types"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n| where type =~ 'microsoft.security/locations/alerts'\r\n| extend Prop = parse_json(properties)\r\n| extend TimeGeneratedUtc = Prop.[\"TimeGeneratedUtc\"]\r\n| extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n| where TimeGeneratedUtc > ago(24h)\r\n| summarize Count=count() by tostring(AlertDisplayName))",
        "size": 1,
        "title": "New Alerts (Since last 24hrs)",
        "noDataMessage": "No new alerts in Last 24 hours",
        "noDataMessageStyle": 3,
        "exportedParameters": [
          {
            "fieldName": "AlertDisplayName",
            "parameterName": "NewAlertFilter",
            "defaultValue": "All"
          },
          {
            "fieldName": "AlertDisplayName",
            "parameterName": "ShowTable",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ClearOther",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert display name"
            }
          ]
        },
        "sortBy": []
      },
      "customWidth": "25",
      "name": "New Alerts (Since last 24hrs)"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "",
        "size": 0,
        "title": "Parameters at this point",
        "queryType": 2
      },
      "conditionalVisibility": {
        "parameterName": "parameter1",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "query - 23"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = tostring(Details.[\"Severity\"])\r\n| where Severity == \"High\"\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = tostring(Details.[\"Status\"])\r\n| extend Tactics = tostring(Details.[\"Intent\"])\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| where Status == \"Active\"\r\n| where (\"{ResourceIdFilter}\" == \"All\" or ResourceId == \"{ResourceIdFilter}\") \r\n    // if either alert name or new alert are set, union those 2 together, if neither are set treat as all\r\n    and ((\"{AlertDisplayNameFilter}\" == \"All\" and \"{NewAlertFilter}\" == \"All\") or AlertDisplayName == \"{AlertDisplayNameFilter}\" or AlertDisplayName == \"{NewAlertFilter}\")\r\n| extend SeverityRank = case(\r\n    Severity == 'High', 3,\r\n    Severity == 'Medium', 2,\r\n    Severity == 'Low', 1,\r\n    0\r\n    )\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| project\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Tactics,\r\n    SeverityRank,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId\r\n| sort by SeverityRank",
        "size": 0,
        "title": "{$rowCount} Active Alerts ",
        "exportedParameters": [
          {
            "fieldName": "ResourceId",
            "parameterName": "Resource",
            "parameterType": 1
          },
          {
            "fieldName": "AlertUri",
            "parameterName": "AlertUri",
            "parameterType": 1
          },
          {
            "fieldName": "SystemAlertId",
            "parameterName": "SystemAlertId",
            "parameterType": 1
          },
          {
            "fieldName": "SubscriptionId",
            "parameterName": "SubscriptionId",
            "parameterType": 1
          },
          {
            "fieldName": "ResourceGroup",
            "parameterName": "ResourceGroup",
            "parameterType": 1
          },
          {
            "fieldName": "Location",
            "parameterName": "Location",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational ",
                    "representation": "gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "AlertDisplayName",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "OpenBlade",
                "bladeOpenContext": {
                  "bladeName": "AlertBlade",
                  "extensionName": "Microsoft_Azure_Security",
                  "bladeParameters": [
                    {
                      "name": "alertId",
                      "source": "column",
                      "value": "SystemAlertId"
                    },
                    {
                      "name": "subscriptionId",
                      "source": "column",
                      "value": "SubscriptionId"
                    },
                    {
                      "name": "resourceGroup",
                      "source": "column",
                      "value": "ResourceGroup"
                    },
                    {
                      "name": "referencedFrom",
                      "source": "static",
                      "value": "activeAlertsWorkbook"
                    },
                    {
                      "name": "location",
                      "source": "column",
                      "value": "Location"
                    }
                  ]
                }
              }
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 1
            },
            {
              "columnMatch": "AlertUri",
              "formatter": 5
            },
            {
              "columnMatch": "Tactics",
              "formatter": 1
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 17
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "TenantId",
              "formatter": 5
            },
            {
              "columnMatch": "AlertName",
              "formatter": 5
            },
            {
              "columnMatch": "Description",
              "formatter": 5
            },
            {
              "columnMatch": "ProviderName",
              "formatter": 5
            },
            {
              "columnMatch": "VendorName",
              "formatter": 5
            },
            {
              "columnMatch": "VendorOriginalId",
              "formatter": 5
            },
            {
              "columnMatch": "SourceComputerId",
              "formatter": 5
            },
            {
              "columnMatch": "AlertType",
              "formatter": 5
            },
            {
              "columnMatch": "ConfidenceLevel",
              "formatter": 5
            },
            {
              "columnMatch": "ConfidenceScore",
              "formatter": 5
            },
            {
              "columnMatch": "StartTime",
              "formatter": 5
            },
            {
              "columnMatch": "EndTime",
              "formatter": 5
            },
            {
              "columnMatch": "ProcessingEndTime",
              "formatter": 5
            },
            {
              "columnMatch": "RemediationSteps",
              "formatter": 5
            },
            {
              "columnMatch": "ExtendedProperties",
              "formatter": 5
            },
            {
              "columnMatch": "Entities",
              "formatter": 5
            },
            {
              "columnMatch": "SourceSystem",
              "formatter": 5
            },
            {
              "columnMatch": "WorkspaceSubscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "WorkspaceResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "ExtendedLinks",
              "formatter": 5
            },
            {
              "columnMatch": "ProductName",
              "formatter": 5
            },
            {
              "columnMatch": "ProductComponentName",
              "formatter": 5
            },
            {
              "columnMatch": "AlertLink",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "SystemIncidentId",
              "formatter": 5
            },
            {
              "columnMatch": "SystemAlertId1",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "SystemAlertId",
              "label": "Alert ID"
            },
            {
              "columnId": "AlertDisplayName",
              "label": "Alert name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "SeverityRank",
              "label": "Severity"
            },
            {
              "columnId": "SubscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "ResourceId",
              "label": "Resource"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "ShowTable",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "SecurityIncidents - FilterbyResourceId",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "list",
        "links": [
          {
            "id": "2f6ff56b-9afb-46f6-968d-a59cb744ea14",
            "linkTarget": "OpenBlade",
            "linkLabel": "Open Alert View",
            "style": "primary",
            "bladeOpenContext": {
              "bladeName": "AlertBlade",
              "extensionName": "Microsoft_Azure_Security",
              "bladeParameters": [
                {
                  "name": "alertId",
                  "source": "static",
                  "value": "{SystemAlertId}"
                },
                {
                  "name": "subscriptionId",
                  "source": "static",
                  "value": "{SubscriptionId}"
                },
                {
                  "name": "resourceGroup",
                  "source": "static",
                  "value": "{ResourceGroup}"
                },
                {
                  "name": "referencedFrom",
                  "source": "static",
                  "value": "activeAlertsWorkbook"
                },
                {
                  "name": "location",
                  "source": "static",
                  "value": "{Location}"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SystemAlertId",
        "comparison": "isNotEqualTo"
      },
      "name": "Alerts  "
    },
    {
      "type": 1,
      "content": {
        "json": "### MITRE ATT&CK tactics &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
      },
      "customWidth": "100",
      "name": "text - 17"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| extend Details = parse_json(properties)\r\n| extend Tactics = Details.[\"Intent\"]\r\n| project Tactics\r\n| extend Tactic = split(Tactics,\",\")\r\n| mv-expand Tactic\r\n| extend Tactic = trim(\" \",tostring(Tactic))\r\n| summarize Count = count() by Tactic\r\n| sort by Count desc\r\n",
        "size": 0,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "barchart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Tactics",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Tactics",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "customWidth": "80",
      "name": "query - 17",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "bd374a50-b240-4232-ad4a-77725f80bcf5",
            "cellValue": "View",
            "linkTarget": "parameter",
            "linkLabel": "List View",
            "subTarget": "List",
            "preText": "",
            "style": "link"
          },
          {
            "id": "588b7d9f-8ff1-4afa-8d3f-b0085ae6b148",
            "cellValue": "View",
            "linkTarget": "parameter",
            "linkLabel": "Map View",
            "subTarget": "Map",
            "preText": "",
            "style": "link"
          }
        ]
      },
      "name": "links - 10"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "1ffc8fe9-a919-4c9e-8489-a92f0a7d79e1",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceFilter",
            "label": "Resource",
            "type": 5,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  //| where isnotempty(ResourceId )\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | summarize count() by Resource\r\n  | project Resource\r\n  //| order by Resource asc\r\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "e9522d87-143f-408b-93ea-b8f07223995e",
            "version": "KqlParameterItem/1.0",
            "name": "SeverityFilter",
            "label": "Severity",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\r\n\r\n{\"value\": \"High\", \"label\":\"High\"},\r\n{\"value\": \"Medium\", \"label\":\"Medium\"},\r\n{\"value\": \"Low\", \"label\":\"Low\"},\r\n{\"value\": \"Informational\", \"label\":\"Informational\"}\r\n]\r\n    \r\n ",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "664365b5-1fc4-4cfa-b99d-a72e3d35ab11",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroupFilter",
            "label": "Resource group",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend resourceGroup = iif(isempty(resourceGroup),\" \",resourceGroup)\r\n| summarize Count =count() by resourceGroup\r\n  | project resourceGroup",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "48a8dd7e-43ab-413e-88f8-a433100d92ce",
            "version": "KqlParameterItem/1.0",
            "name": "AlertNameFilter",
            "label": "Alert name",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | distinct tostring(AlertDisplayName)\r\n  | order by AlertDisplayName asc\r\n ",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "378aeb0c-9135-43fa-b46a-86f71baa0137",
            "version": "KqlParameterItem/1.0",
            "name": "TagFilter",
            "label": "Tag",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n  | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId),tostring(Severity), SystemAlertId, AlertDisplayName,IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),AlertUri,Status,Tactics,SubscriptionId,ResourceGroup,Location, ResourceIdentifier=Details.[\"ResourceIdentifiers\"],Resource\r\n  | join kind=leftouter (\r\n  resources\r\n  | project id = tolower(id), tags\r\n  ) on $left.affectedResourceId == $right.id\r\n | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | extend TagValue = iif(isempty(TagValue),\" \",TagValue)\r\n  | project TagValue, alertId\r\n | distinct TagValue\r\n ",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "List"
      },
      "name": "parameters - 23"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| project\r\n    alertId = id,\r\n    subscriptionId,\r\n    alertProperties = properties,\r\n    affectedResourceId = tolower(affectedResourceId),\r\n    tostring(Severity),\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId,\r\n    ResourceIdentifier=Details.[\"ResourceIdentifiers\"],\r\n    Resource\r\n| join kind=leftouter (\r\n    resources\r\n    | project id = tolower(id), tags\r\n    )\r\n    on $left.affectedResourceId == $right.id\r\n| extend id = alertId, subscriptionId, properties = alertProperties\r\n| extend ResourceFilter =\" {ResourceFilter}\"\r\n| where Resource in~ ({ResourceFilter})\r\n| where Severity in~ ({SeverityFilter})\r\n| where AlertDisplayName in~ ({AlertNameFilter})\r\n| where Status == \"Active\"\r\n| extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n| where ResourceGroup in~ ({ResourceGroupFilter})\r\n| extend tag = iff(isempty(tags), dynamic({\"tags\": \" \"}), parse_json(tags))\r\n| mv-expand tag\r\n| parse tag with * ':\"' TagValue '\"}'\r\n| extend TagValue = iif(isempty(TagValue), \" \", TagValue)\r\n| where TagValue in ({TagFilter})\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| project\r\n    (Severity),\r\n    tostring(SystemAlertId),\r\n    tostring(AlertDisplayName),\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertURI = tostring(AlertUri),\r\n    tostring(Status),\r\n    tostring(Tactics),\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    TagValue,\r\n    tostring(tags),\r\n    tostring(ResourceId)\r\n| distinct\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident,\r\n    AlertURI,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    tags,\r\n    ResourceId\r\n| order by Severity asc",
        "size": 0,
        "title": "Active Alerts ",
        "exportedParameters": [
          {
            "fieldName": "Resource",
            "parameterName": "Resource",
            "parameterType": 1
          },
          {
            "fieldName": "AlertUri",
            "parameterName": "AlertUri",
            "parameterType": 1
          },
          {
            "fieldName": "SystemAlertId",
            "parameterName": "SystemAlertId",
            "parameterType": 1
          },
          {
            "fieldName": "SubscriptionId",
            "parameterName": "SubscriptionId",
            "parameterType": 1
          },
          {
            "fieldName": "ResourceGroup",
            "parameterName": "ResourceGroup",
            "parameterType": 1
          },
          {
            "fieldName": "Location",
            "parameterName": "Location",
            "parameterType": 1
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational ",
                    "representation": "gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 1
            },
            {
              "columnMatch": "AlertURI",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 5
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Alert ID",
              "formatter": 5
            },
            {
              "columnMatch": "Alert URI",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "Resource ID",
              "formatter": 5
            },
            {
              "columnMatch": "AlertUri",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceIdentifier",
              "formatter": 5
            },
            {
              "columnMatch": "TenantId",
              "formatter": 5
            },
            {
              "columnMatch": "AlertName",
              "formatter": 5
            },
            {
              "columnMatch": "Description",
              "formatter": 5
            },
            {
              "columnMatch": "ProviderName",
              "formatter": 5
            },
            {
              "columnMatch": "VendorName",
              "formatter": 5
            },
            {
              "columnMatch": "VendorOriginalId",
              "formatter": 5
            },
            {
              "columnMatch": "SourceComputerId",
              "formatter": 5
            },
            {
              "columnMatch": "AlertType",
              "formatter": 5
            },
            {
              "columnMatch": "ConfidenceLevel",
              "formatter": 5
            },
            {
              "columnMatch": "ConfidenceScore",
              "formatter": 5
            },
            {
              "columnMatch": "StartTime",
              "formatter": 5
            },
            {
              "columnMatch": "EndTime",
              "formatter": 5
            },
            {
              "columnMatch": "ProcessingEndTime",
              "formatter": 5
            },
            {
              "columnMatch": "RemediationSteps",
              "formatter": 5
            },
            {
              "columnMatch": "ExtendedProperties",
              "formatter": 5
            },
            {
              "columnMatch": "Entities",
              "formatter": 5
            },
            {
              "columnMatch": "SourceSystem",
              "formatter": 5
            },
            {
              "columnMatch": "WorkspaceSubscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "WorkspaceResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "ExtendedLinks",
              "formatter": 5
            },
            {
              "columnMatch": "ProductName",
              "formatter": 5
            },
            {
              "columnMatch": "ProductComponentName",
              "formatter": 5
            },
            {
              "columnMatch": "AlertLink",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "SystemIncidentId",
              "formatter": 5
            },
            {
              "columnMatch": "SystemAlertId1",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "AlertURI",
              "label": "Alert URI"
            },
            {
              "columnId": "SubscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            },
            {
              "columnId": "ResourceId",
              "label": "Resource"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "List"
      },
      "showPin": true,
      "name": "SecurityIncidents",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "list",
        "links": [
          {
            "id": "8e6f9368-ccbe-4092-b898-8a27c77a06b3",
            "linkTarget": "OpenBlade",
            "linkLabel": "Open Alert View",
            "preText": "",
            "style": "primary",
            "bladeOpenContext": {
              "bladeName": "AlertBlade",
              "extensionName": "Microsoft_Azure_Security",
              "bladeParameters": [
                {
                  "name": "alertId",
                  "source": "static",
                  "value": "{SystemAlertId}"
                },
                {
                  "name": "subscriptionId",
                  "source": "static",
                  "value": "{SubscriptionId}"
                },
                {
                  "name": "resourceGroup",
                  "source": "static",
                  "value": "{ResourceGroup}"
                },
                {
                  "name": "referencedFrom",
                  "source": "static",
                  "value": "activeAlertsWorkbook"
                },
                {
                  "name": "location",
                  "source": "static",
                  "value": "{Location}"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "List"
        },
        {
          "parameterName": "SystemAlertId",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "links - 19"
    },
    {
      "type": 1,
      "content": {
        "json": "<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> To see more information about the alerts in the map view: <br><br> &nbsp; 1. Configure continuous export to export your security alerts to a Log Analytics workspace by following the instructions described \r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> here. </span>](https://docs.microsoft.com/en-us/azure/defender-for-cloud/continuous-export?tabs=azure-portal)\r\n<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"><br> &nbsp;  2. In the \"Workspace\" filter below, choose the Log Analytics workspace your security alerts are exported to.\r\n\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "Map"
      },
      "name": "text - 21"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "8724f927-b766-4814-a895-8c55565fb7f8",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type contains \"solution\"\r\n| where name contains \"security\"\r\n| project id = tostring(properties.workspaceResourceId)\r\n| distinct id",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "Map"
      },
      "name": "parameters - 15"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertLink = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertLink with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertLink with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertLink with * '/location/'  Location  \r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n| project  Severity, SystemAlertId, tostring(AlertDisplayName),IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),tostring(AlertLink),Status,Tactics,tostring(ResourceId),SubscriptionId,ResourceGroup,Location\r\n| distinct tostring(SystemAlertId),tostring(AlertDisplayName),tostring(AlertLink),tostring(ResourceId)\r\n| summarize count() by ResourceId, AlertLink, AlertDisplayName\r\n",
        "size": 0,
        "title": "AlertsMapView ",
        "exportMultipleValues": true,
        "exportAggregateParts": true,
        "exportedParameters": [
          {
            "fieldName": "ResourceId",
            "parameterName": "Resource",
            "parameterType": 1
          },
          {
            "fieldName": "AlertLink",
            "parameterName": "AlertLink",
            "parameterType": 1
          },
          {
            "fieldName": "AlertDisplayName",
            "parameterName": "AlertDisplayName",
            "parameterType": 1
          }
        ],
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "map",
        "mapSettings": {
          "locInfo": "AzureResource",
          "locInfoColumn": "ResourceId",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "nodeColorField": "count_",
            "colorAggregation": "Sum",
            "type": "heatmap",
            "heatmapPalette": "coldHot"
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "View",
        "comparison": "isEqualTo",
        "value": "Map"
      },
      "customWidth": "50",
      "name": "AlertsMapView ",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let T = datatable ( AlertLink:string)\r\n[\r\n{AlertLink}\r\n];\r\nT\r\n| parse AlertLink with * '/alertId/' AlertId '/subscriptionId/' SubscriptionId '/resourceGroup/' ResourceGroup '/' * 'location/' Location \r\n| distinct AlertLink, AlertId, ResourceGroup,Location,SubscriptionId\r\n| join kind = inner (SecurityAlert\r\n| where isempty(ResourceId) == false\r\n| where TimeGenerated > ago(90d)\r\n| project SystemAlertId,ResourceId, DisplayName,StartTime) on $left.AlertId == $right.SystemAlertId\r\n| project ResourceId,DisplayName,AlertId, SubscriptionId, ResourceGroup, Location,StartTime\r\n| order by ResourceId,DisplayName, StartTime asc\r\n\r\n\r\n\r\n",
        "size": 0,
        "exportedParameters": [
          {
            "fieldName": "AlertId",
            "parameterName": "AlertId",
            "parameterType": 1
          },
          {
            "fieldName": "SubscriptionId",
            "parameterName": "SubscriptionId",
            "parameterType": 1
          },
          {
            "fieldName": "Location",
            "parameterName": "Location",
            "parameterType": 1
          },
          {
            "fieldName": "ResourceGroup",
            "parameterName": "ResourceGroup",
            "parameterType": 1
          }
        ],
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceId",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "23ch"
              }
            },
            {
              "columnMatch": "DisplayName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "45ch"
              }
            },
            {
              "columnMatch": "AlertId",
              "formatter": 5
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "StartTime",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "23ch"
              }
            },
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "AlertLink",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "ResourceId",
              "label": "Resource ID"
            },
            {
              "columnId": "DisplayName",
              "label": "Alert name"
            },
            {
              "columnId": "AlertId",
              "label": "Alert ID"
            },
            {
              "columnId": "SubscriptionId",
              "label": "Subscription ID"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "StartTime",
              "label": "Start time"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "showBorder": false
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "Map"
        },
        {
          "parameterName": "AlertLink",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "45",
      "name": "AlertLink-Table"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "customWidth": "80",
      "name": "text - 13"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "list",
        "links": [
          {
            "id": "f8540870-bef0-41af-b3c1-848239aceb08",
            "linkTarget": "OpenBlade",
            "linkLabel": "Open Alert View",
            "style": "primary",
            "bladeOpenContext": {
              "bladeName": "AlertBlade",
              "extensionName": "Microsoft_Azure_Security",
              "bladeParameters": [
                {
                  "name": "alertId",
                  "source": "static",
                  "value": "{AlertId}"
                },
                {
                  "name": "subscriptionId",
                  "source": "static",
                  "value": "{SubscriptionId}"
                },
                {
                  "name": "resourceGroup",
                  "source": "static",
                  "value": "{ResourceGroup}"
                },
                {
                  "name": "referencedFrom",
                  "source": "static",
                  "value": "activeAlertsWorkbook"
                },
                {
                  "name": "location",
                  "source": "static",
                  "value": "{Location}"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Location",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "View",
          "comparison": "isEqualTo",
          "value": "Map"
        }
      ],
      "customWidth": "20",
      "name": "links - 12"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}