{
	"version": "Notebook/1.0",
	"items": [
	  {
		"type": 1,
		"content": {
		  "json": "# SQL Servers on Machines AMA Helper"
		},
		"name": "Workbook-Header"
	  },
	  {
		"type": 9,
		"content": {
		  "version": "KqlParameterItem/1.0",
		  "parameters": [
			{
			  "id": "b859a03f-2283-43dd-8536-42714bbfced6",
			  "version": "KqlParameterItem/1.0",
			  "name": "Subscription",
			  "label": "Subscription(s)",
			  "type": 6,
			  "isRequired": true,
			  "multiSelect": true,
			  "quote": "'",
			  "delimiter": ",",
			  "typeSettings": {
				"additionalResourceOptions": [
				  "value::all"
				],
				"includeAll": true,
				"showDefault": false
			  },
			  "value": [
				"value::all"
			  ]
			}
		  ],
		  "style": "pills",
		  "queryType": 1,
		  "resourceType": "microsoft.resourcegraph/resources"
		},
		"name": "Parameters"
	  },
	  {
		"type": 1,
		"content": {
		  "json": "Use this workbook to review the status of the AMA enablement progress for SQL servers on machines plan.\r\n\r\nAs detailed in the [documentation page](https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-sql-usage), the following resources are created during the enablement process based on the AMA extension, assuming all the [required prerequisites](https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-sql-usage#prerequisites-for-enabling-defender-for-sql-on-non-azure-machines) are met: Identity (for SQL servers on Azure VMs), Workspaces, Data Collection Rules (DCR), Data Collection Rules Association (DCRA), AMA extension and Defender for SQL extension.\r\n\r\nFor each resource, we specify the number of resources created by the Defender for SQL AMA autoprovisioning process versus the number required to be fully protected.​\r\n\r\n* Select the corresponding tabs to look at status of each machine and the agents installed on them.​",
		  "style": "info"
		},
		"name": "workbook-info"
	  },
	  {
		"type": 11,
		"content": {
		  "version": "LinkItem/1.0",
		  "style": "tabs",
		  "links": [
			{
			  "id": "171ec6b0-45d1-4095-a664-e27a5a0e8e5d",
			  "cellValue": "selectedTab",
			  "linkTarget": "parameter",
			  "linkLabel": "Subscriptions Overview",
			  "subTarget": "Overview",
			  "preText": "Overview Tab",
			  "style": "link"
			},
			{
			  "id": "c5a937b9-f1a7-42f0-a271-d403683b6b76",
			  "cellValue": "selectedTab",
			  "linkTarget": "parameter",
			  "linkLabel": "SQL Servers on Azure Virtual Machines Extensions Overview ",
			  "subTarget": "AzureVM",
			  "style": "link"
			},
			{
			  "id": "6a9e9444-29f9-4bd6-9bbf-1b17bd6bb906",
			  "cellValue": "selectedTab",
			  "linkTarget": "parameter",
			  "linkLabel": "Arc-Enabled SQL Servers Extensions Overview ",
			  "subTarget": "Arc",
			  "style": "link"
			}
		  ]
		},
		"name": "GlobalTabs"
	  },
	  {
		"type": 12,
		"content": {
		  "version": "NotebookGroup/1.0",
		  "groupType": "editable",
		  "items": [
			{
			  "type": 1,
			  "content": {
				"json": "# Subscription(s) Overview"
			  },
			  "name": "Overview-explain-text"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| extend text = \"Subscriptions selected\"\r\n| summarize count() by text",
				"size": 4,
				"noDataMessage": "No subscriptions were selected",
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				],
				"visualization": "tiles",
				"tileSettings": {
				  "titleContent": {
					"columnMatch": "text",
					"formatter": 1
				  },
				  "leftContent": {
					"columnMatch": "count_",
					"formatter": 12,
					"formatOptions": {
					  "palette": "auto"
					},
					"numberFormat": {
					  "unit": 17,
					  "options": {
						"maximumSignificantDigits": 3,
						"maximumFractionDigits": 2
					  }
					}
				  },
				  "showBorder": true,
				  "size": "full"
				}
			  },
			  "customWidth": "25",
			  "name": "subscruptioncount"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType\r\n) on id\r\n| summarize Mcount = count()\r\n| extend text = \" SQL servers on VMs detected\"",
				"size": 4,
				"noDataMessage": "No SQL servers on VMs detected​ in the selected subscriptions",
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				],
				"visualization": "tiles",
				"tileSettings": {
				  "titleContent": {
					"columnMatch": "text",
					"formatter": 1
				  },
				  "leftContent": {
					"columnMatch": "Mcount",
					"formatter": 12,
					"formatOptions": {
					  "palette": "auto"
					},
					"numberFormat": {
					  "unit": 17,
					  "options": {
						"maximumSignificantDigits": 3,
						"maximumFractionDigits": 2
					  }
					}
				  },
				  "showBorder": true,
				  "size": "full"
				}
			  },
			  "customWidth": "25",
			  "name": "vmcount"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend provisioningState = properties.provisioningState,\r\n\tstatus = properties.status,\r\n\tagentVersion = properties.agentVersion,\r\n\tlastStatusChange = properties.lastStatusChange,\r\n\terrorDetails = properties.errorDetails,\r\n\tosName = properties.osName,\r\n\tosSku = properties.osSku\r\n| extend name = tolower(name)\r\n| project id, name, location, resourceGroup, provisioningState, status, agentVersion, lastStatusChange, osName, osSku\r\n| join kind=inner (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| extend type = properties.type\r\n| where publisher =~ \"Microsoft.AzureData\" and type =~ \"WindowsAgent.SqlServer\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend ComputerName = tolower(ComputerName)\r\n) on $left.name == $right.ComputerName\r\n| summarize arccount = count()\r\n| extend text = \" Arc-enabled SQL servers detected​\"",
				"size": 4,
				"noDataMessage": "No Arc-enabled servers detected in the selected subscriptions",
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				],
				"visualization": "tiles",
				"tileSettings": {
				  "titleContent": {
					"columnMatch": "text",
					"formatter": 1
				  },
				  "leftContent": {
					"columnMatch": "arccount",
					"formatter": 12,
					"formatOptions": {
					  "palette": "auto"
					},
					"numberFormat": {
					  "unit": 17,
					  "options": {
						"maximumSignificantDigits": 3,
						"maximumFractionDigits": 2
					  }
					}
				  },
				  "showBorder": true,
				  "size": "full"
				}
			  },
			  "customWidth": "25",
			  "name": "arccount"
			},
			{
			  "type": 11,
			  "content": {
				"version": "LinkItem/1.0",
				"style": "tabs",
				"links": [
				  {
					"id": "fe1c49ea-34b7-407e-90a2-cc5687a58b64",
					"cellValue": "selectedTabMachine",
					"linkTarget": "parameter",
					"linkLabel": "SQL Servers on Azure Virtual Machines ",
					"subTarget": "SubAzureVM",
					"style": "link"
				  },
				  {
					"id": "594fe9ad-3a55-4d15-a5c6-a1288dfe7cf2",
					"cellValue": "selectedTabMachine",
					"linkTarget": "parameter",
					"linkLabel": "Arc-Enabled SQL Servers",
					"subTarget": "SubArc",
					"style": "link"
				  }
				]
			  },
			  "name": "GlobalTabMachine"
			},
			{
			  "type": 1,
			  "content": {
				"json": "Use the view below to identify the number of resources, along with their migration status, broken down by resource type and subscription.\r\n\r\nYou can select the <ins>**...**</ins> button on the top right hand corner of this list to export the list to Excel.",
				"style": "info"
			  },
			  "name": "MigrationStatus-text"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, subscriptionId\r\n) on id\r\n| summarize LocationsList = make_set(location) by subscriptionId\r\n| extend machinesLocations = LocationsList\r\n| join kind=leftouter (\r\npolicyresources\r\n| extend policySetDefinitionId = tostring(properties.policyDefinitionId)\r\n| where policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\" or policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\"\r\n| extend isDefaultWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\", 1,0)\r\n| extend isCustomWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\", 1,0)\r\n| project subscriptionId, isCustomWorkspacePolicy, isDefaultWorkspacePolicy, name\r\n| join kind = inner (\r\nresources\r\n| where type == \"microsoft.insights/datacollectionrules\"\r\n| where resourceGroup contains \"defaultresourcegroup-\"\r\n| where name contains \"microsoftdefenderforsql-\" or name contains \"d4sql-\"\r\n| extend isDefaultDCR = iff(name contains \"microsoftdefenderforsql-\",1,0)\r\n| summarize dcrLocationsList = make_set(location) by subscriptionId, isDefaultDCR\r\n) on subscriptionId\r\n) on subscriptionId\r\n| where (isCustomWorkspacePolicy == 1 and isDefaultDCR == 0) or (isDefaultWorkspacePolicy == 1 and isDefaultDCR == 1) or (isempty(isCustomWorkspacePolicy) and isempty(isDefaultWorkspacePolicy))\r\n| extend dcrLocationsListCount = array_length(dcrLocationsList)\r\n| extend machinesLocationsCount = array_length(machinesLocations)\r\n| extend dcrLocationsListCount = iff(isnotempty(dcrLocationsListCount),dcrLocationsListCount,0)\r\n| extend machinesLocationsCount = iff(isnotempty(machinesLocationsCount),machinesLocationsCount,0)\r\n| extend totalDCRCount = iff(dcrLocationsListCount>machinesLocationsCount, strcat(tostring(machinesLocationsCount), \"/\", tostring(machinesLocationsCount)), strcat(tostring(dcrLocationsListCount), \"/\", tostring(machinesLocationsCount)))\r\n| extend totalDCRCount = case(isCustomWorkspacePolicy==1 and dcrLocationsListCount > 0,\"1/1\",\r\n                              isCustomWorkspacePolicy==1 and dcrLocationsListCount == 0, \"0/1\", totalDCRCount)\r\n| extend dcrProgress = case(isCustomWorkspacePolicy==1 and dcrLocationsListCount > 0, 2,\r\n                            isCustomWorkspacePolicy==1 and dcrLocationsListCount == 0, 0,\r\n                            dcrLocationsListCount == 0 and machinesLocationsCount != 0, 0,\r\n                            dcrLocationsListCount != 0 and machinesLocationsCount != 0 and dcrLocationsListCount < machinesLocationsCount, 1,\r\n                            dcrLocationsListCount >= machinesLocationsCount, 2, 0)\r\n| project subscriptionId, totalDCRCount, dcrProgress\r\n| order by ['dcrProgress'] asc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "dcrcountvm"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend provisioningState = properties.provisioningState,\r\n\tstatus = properties.status,\r\n\tagentVersion = properties.agentVersion,\r\n\tlastStatusChange = properties.lastStatusChange,\r\n\terrorDetails = properties.errorDetails,\r\n\tosName = properties.osName,\r\n\tosSku = properties.osSku\r\n| extend name = tolower(name)\r\n| project id, name, location, resourceGroup, provisioningState, status, agentVersion, lastStatusChange, osName, osSku, subscriptionId\r\n| join kind=inner (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| extend type = properties.type\r\n| where publisher =~ \"Microsoft.AzureData\" and type =~ \"WindowsAgent.SqlServer\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend ComputerName = tolower(ComputerName)\r\n) on $left.name == $right.ComputerName\r\n| summarize LocationsList = make_set(location) by subscriptionId\r\n| extend machinesLocations = LocationsList\r\n| join kind=leftouter (\r\npolicyresources\r\n| extend policySetDefinitionId = tostring(properties.policyDefinitionId)\r\n| where policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\" or policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\"\r\n| extend isDefaultWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\", 1,0)\r\n| extend isCustomWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\", 1,0)\r\n| project subscriptionId, isCustomWorkspacePolicy, isDefaultWorkspacePolicy, name\r\n| join kind = inner (\r\nresources\r\n| where type == \"microsoft.insights/datacollectionrules\"\r\n| where resourceGroup contains \"defaultresourcegroup-\"\r\n| where name contains \"microsoftdefenderforsql-\" or name contains \"d4sql-\"\r\n| extend isDefaultDCR = iff(name contains \"microsoftdefenderforsql-\",1,0)\r\n| summarize dcrLocationsList = make_set(location) by subscriptionId, isDefaultDCR\r\n) on subscriptionId\r\n) on subscriptionId\r\n| where (isCustomWorkspacePolicy == 1 and isDefaultDCR == 0) or (isDefaultWorkspacePolicy == 1 and isDefaultDCR == 1) or (isempty(isCustomWorkspacePolicy) and isempty(isDefaultWorkspacePolicy))\r\n| extend dcrLocationsListCount = array_length(dcrLocationsList)\r\n| extend machinesLocationsCount = array_length(machinesLocations)\r\n| extend dcrLocationsListCount = iff(isnotempty(dcrLocationsListCount),dcrLocationsListCount,0)\r\n| extend machinesLocationsCount = iff(isnotempty(machinesLocationsCount),machinesLocationsCount,0)\r\n| extend totalDCRCount = iff(dcrLocationsListCount>machinesLocationsCount, strcat(tostring(machinesLocationsCount), \"/\", tostring(machinesLocationsCount)), strcat(tostring(dcrLocationsListCount), \"/\", tostring(machinesLocationsCount)))\r\n| extend totalDCRCount = case(isCustomWorkspacePolicy==1 and dcrLocationsListCount > 0,\"1/1\",\r\n                              isCustomWorkspacePolicy==1 and dcrLocationsListCount == 0, \"0/1\", totalDCRCount)\r\n| extend dcrProgress = case(isCustomWorkspacePolicy==1 and dcrLocationsListCount > 0, 2,\r\n                            isCustomWorkspacePolicy==1 and dcrLocationsListCount == 0, 0,\r\n                            dcrLocationsListCount == 0 and machinesLocationsCount != 0, 0,\r\n                            dcrLocationsListCount != 0 and machinesLocationsCount != 0 and dcrLocationsListCount < machinesLocationsCount, 1,\r\n                            dcrLocationsListCount >= machinesLocationsCount, 2, 0)\r\n| project subscriptionId, totalDCRCount, dcrProgress\r\n| order by ['dcrProgress'] asc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "dcrcountarc"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, subscriptionId\r\n) on id\r\n| summarize LocationsList = make_set(location) by subscriptionId\r\n| extend machinesLocations = LocationsList\r\n| join kind=leftouter (\r\nresources\r\n| where type == \"microsoft.managedidentity/userassignedidentities\"\r\n| where resourceGroup =~ \"built-in-identity-rg\"\r\n| summarize identityLocationsList = make_set(location) by subscriptionId\r\n) on subscriptionId\r\n| extend identityLocationsListCount = array_length(identityLocationsList)\r\n| extend machinesLocationsCount = array_length(machinesLocations)\r\n| extend identityLocationsListCount = iff(isnotempty(identityLocationsListCount),identityLocationsListCount,0)\r\n| extend machinesLocationsCount = iff(isnotempty(machinesLocationsCount),machinesLocationsCount,0)\r\n| extend totalIdentityCount = iff(identityLocationsListCount>machinesLocationsCount, strcat(tostring(machinesLocationsCount), \"/\", tostring(machinesLocationsCount)), strcat(tostring(identityLocationsListCount), \"/\", tostring(machinesLocationsCount)))\r\n| extend identityProgress = case(identityLocationsListCount == 0 and machinesLocationsCount != 0, 0,\r\n                            identityLocationsListCount != 0 and machinesLocationsCount != 0 and identityLocationsListCount < machinesLocationsCount, 1,\r\n                            identityLocationsListCount >= machinesLocationsCount, 2, 0)\r\n| project subscriptionId, totalIdentityCount, identityProgress\r\n| order by ['identityProgress'] desc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "identitycount"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType, subscriptionId\r\n) on id\r\n| summarize LocationsList = make_set(location) by subscriptionId\r\n| extend machinesLocations = LocationsList\r\n| join kind=leftouter (\r\npolicyresources\r\n| extend policySetDefinitionId = tostring(properties.policyDefinitionId)\r\n| where policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\" or policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\"\r\n| extend isDefaultWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\", 1,0)\r\n| extend isCustomWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\", 1,0)\r\n| project subscriptionId, isCustomWorkspacePolicy, isDefaultWorkspacePolicy, name\r\n| join kind = inner (\r\nresources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where resourceGroup contains \"defaultresourcegroup-\"\r\n| where name contains \"D4SQL-\"\r\n| summarize workspaceLocationsList = make_set(location) by subscriptionId\r\n) on subscriptionId\r\n) on subscriptionId\r\n| extend workspaceLocationsListCount = array_length(workspaceLocationsList)\r\n| extend machinesLocationsCount = array_length(machinesLocations)\r\n| extend workspaceLocationsListCount = iff(isnotempty(workspaceLocationsListCount),workspaceLocationsListCount,0)\r\n| extend machinesLocationsCount = iff(isnotempty(machinesLocationsCount),machinesLocationsCount,0)\r\n| extend totalWorkspaceCount = iff(workspaceLocationsListCount>machinesLocationsCount, strcat(tostring(machinesLocationsCount), \"/\", tostring(machinesLocationsCount)), strcat(tostring(workspaceLocationsListCount), \"/\", tostring(machinesLocationsCount)))\r\n| extend totalWorkspaceCount = iff(isCustomWorkspacePolicy==1,\"1/1\", totalWorkspaceCount)\r\n| extend workspaceProgress = case(isCustomWorkspacePolicy==1, 2,\r\n                            workspaceLocationsListCount == 0 and machinesLocationsCount != 0, 0,\r\n                            workspaceLocationsListCount != 0 and machinesLocationsCount != 0 and workspaceLocationsListCount < machinesLocationsCount, 1,\r\n                            workspaceLocationsListCount >= machinesLocationsCount, 2, 0)\r\n| project subscriptionId, totalWorkspaceCount, workspaceProgress\r\n| order by ['workspaceProgress'] asc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "workspacecountvm"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend provisioningState = properties.provisioningState,\r\n\tstatus = properties.status,\r\n\tagentVersion = properties.agentVersion,\r\n\tlastStatusChange = properties.lastStatusChange,\r\n\terrorDetails = properties.errorDetails,\r\n\tosName = properties.osName,\r\n\tosSku = properties.osSku\r\n| extend name = tolower(name)\r\n| project id, name, location, resourceGroup, provisioningState, status, agentVersion, lastStatusChange, osName, osSku, subscriptionId\r\n| join kind=inner (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| extend type = properties.type\r\n| where publisher =~ \"Microsoft.AzureData\" and type =~ \"WindowsAgent.SqlServer\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend ComputerName = tolower(ComputerName)\r\n) on $left.name == $right.ComputerName\r\n| summarize LocationsList = make_set(location) by subscriptionId\r\n| extend machinesLocations = LocationsList\r\n| join kind=leftouter (\r\npolicyresources\r\n| extend policySetDefinitionId = tostring(properties.policyDefinitionId)\r\n| where policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\" or policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\"\r\n| extend isDefaultWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\", 1,0)\r\n| extend isCustomWorkspacePolicy = iff(policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\", 1,0)\r\n| project subscriptionId, isCustomWorkspacePolicy, isDefaultWorkspacePolicy, name\r\n| join kind = inner (\r\nresources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where resourceGroup contains \"defaultresourcegroup-\"\r\n| where name contains \"D4SQL-\"\r\n| summarize workspaceLocationsList = make_set(location) by subscriptionId\r\n) on subscriptionId\r\n) on subscriptionId\r\n| extend workspaceLocationsListCount = array_length(workspaceLocationsList)\r\n| extend machinesLocationsCount = array_length(machinesLocations)\r\n| extend workspaceLocationsListCount = iff(isnotempty(workspaceLocationsListCount),workspaceLocationsListCount,0)\r\n| extend machinesLocationsCount = iff(isnotempty(machinesLocationsCount),machinesLocationsCount,0)\r\n| extend totalWorkspaceCount = iff(workspaceLocationsListCount>machinesLocationsCount, strcat(tostring(machinesLocationsCount), \"/\", tostring(machinesLocationsCount)), strcat(tostring(workspaceLocationsListCount), \"/\", tostring(machinesLocationsCount)))\r\n| extend totalWorkspaceCount = iff(isCustomWorkspacePolicy==1,\"1/1\", totalWorkspaceCount)\r\n| extend workspaceProgress = case(isCustomWorkspacePolicy==1, 2,\r\n                            workspaceLocationsListCount == 0 and machinesLocationsCount != 0, 0,\r\n                            workspaceLocationsListCount != 0 and machinesLocationsCount != 0 and workspaceLocationsListCount < machinesLocationsCount, 1,\r\n                            workspaceLocationsListCount >= machinesLocationsCount, 2, 0)\r\n| project subscriptionId, totalWorkspaceCount, workspaceProgress\r\n| order by ['workspaceProgress'] asc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "workspacecountarc"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType\r\n) on id\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"microsoft.azure.azuredefenderforsql\"\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName)\r\n| project ComputerName, DefenderForSQL = name, DefenderForSQLStatus = status, version\r\n) on ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName)\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version, subscriptionId\r\n) on ComputerName\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n    | extend id = tolower(id)\r\n    | extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id)\r\n    | extend id = strcat(id, \"/providers/Microsoft.Insights/dataCollectionRuleAssociations/MicrosoftDefenderForSQL-RulesAssociation\")\r\n    | extend id = tolower(id)\r\n    | join kind=inner (\r\n        insightsresources\r\n        | where type =~ \"microsoft.insights/datacollectionruleassociations\"\r\n        | where name =~ \"MicrosoftDefenderForSQL-RulesAssociation\"\r\n        | extend id = tolower(id)\r\n    ) on id\r\n    | project dcra = id, subscriptionId, ComputerName = tolower(name)\r\n) on ComputerName\r\n| project ComputerName, ResourceID = tolower(id), location, resourceGroup, DefenderForSQL, AMA, subscriptionId, hasAMAExtension=iff(isnotempty(AMA),1,0), hasDefenderExtension=iff(isnotempty(DefenderForSQL),1,0), hasDCRA=iff(isnotempty(dcra),1,0)\r\n| summarize hasDefenderExtension=sum(hasDefenderExtension), hasAMAExtension=sum(hasAMAExtension), hasDCRA=sum(hasDCRA), totalMachines=dcount(ResourceID) by subscriptionId\r\n| extend extProgress = case(hasDefenderExtension == 0 and hasAMAExtension == 0 and hasDCRA == 0, 0,\r\n                            hasDefenderExtension < totalMachines or hasAMAExtension < totalMachines or hasDCRA < totalMachines, 1,\r\n                            hasAMAExtension == totalMachines and hasDefenderExtension == totalMachines and hasDCRA == totalMachines, 2, 0)\r\n| extend hasDefenderExtension = strcat(tostring(hasDefenderExtension), \"/\", tostring(totalMachines))\r\n| extend hasAMAExtension = strcat(tostring(hasAMAExtension), \"/\", tostring(totalMachines))\r\n| extend hasDCRA = strcat(tostring(hasDCRA), \"/\", tostring(totalMachines))\r\n| extend ResourceType = \"SQL servers on VMs detected\"\r\n| extend subscriptionId\r\n| order by ['extProgress'] asc\r\n",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "sqlvmcount"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| extend provisioningState = properties.provisioningState,\r\n\tstatus = properties.status,\r\n\tagentVersion = properties.agentVersion,\r\n\tlastStatusChange = properties.lastStatusChange,\r\n\terrorDetails = properties.errorDetails,\r\n\tosName = properties.osName,\r\n\tosSku = properties.osSku\r\n| extend name = tolower(name)\r\n| project id, name, location, resourceGroup, provisioningState, status, agentVersion, lastStatusChange, osName, osSku\r\n| join kind=inner (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| extend type = properties.type\r\n| where publisher =~ \"Microsoft.AzureData\" and type =~ \"WindowsAgent.SqlServer\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend ComputerName = tolower(ComputerName)\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.AzureDefenderForSQL\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| extend ComputerName = tolower(ComputerName)\r\n| project ComputerName, DefenderForSQL = name, DefenderForSQLStatus = status, DefenderForSQLVersion = version\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| extend ComputerName = tolower(ComputerName)\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version, subscriptionId\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| extend id = strcat(id, \"/providers/Microsoft.Insights/dataCollectionRuleAssociations/MicrosoftDefenderForSQL-RulesAssociation\")\r\n| extend id = tolower(id)\r\n| join kind=inner (\r\ninsightsresources\r\n| where type =~ \"microsoft.insights/datacollectionruleassociations\"\r\n| where name =~ \"MicrosoftDefenderForSQL-RulesAssociation\"\r\n| extend id = tolower(id)\r\n) on id\r\n| project dcra = id, subscriptionId, ComputerName = tolower(name)\r\n) on ComputerName\r\n| project id, name, location, resourceGroup,DefenderForSQL, AMA, subscriptionId, hasAMAExtension=iff(isnotempty(AMA),1,0), hasDefenderExtension=iff(isnotempty(DefenderForSQL),1,0), hasDCRA=iff(isnotempty(dcra),1,0)\r\n| summarize hasDefenderExtension=sum(hasDefenderExtension), hasAMAExtension=sum(hasAMAExtension), hasDCRA=sum(hasDCRA), totalMachines=dcount(id) by subscriptionId\r\n| extend extProgress = case(hasDefenderExtension == 0 and hasAMAExtension == 0 and hasDCRA == 0, 0,\r\n                            hasDefenderExtension < totalMachines or hasAMAExtension < totalMachines or hasDCRA < totalMachines, 1,\r\n                            hasAMAExtension == totalMachines and hasDefenderExtension == totalMachines and hasDCRA == totalMachines, 2, 0)\r\n| extend hasDefenderExtension = strcat(tostring(hasDefenderExtension), \"/\", tostring(totalMachines))\r\n| extend hasAMAExtension = strcat(tostring(hasAMAExtension), \"/\", tostring(totalMachines))\r\n| extend hasDCRA = strcat(tostring(hasDCRA), \"/\", tostring(totalMachines))\r\n| extend ResourceType = \"SQL servers on ARC-enabled detected\"\r\n| order by ['extProgress'] asc",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "arctotalcount"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| project id,subscriptionId",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "subscriptions"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "policyresources\r\n| extend policySetDefinitionId = tostring(properties.policyDefinitionId)\r\n| where policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393\" or policySetDefinitionId == \"/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26\"\r\n| extend isPolicyAssigned = \"Yes\"\r\n| project subscriptionId, isPolicyAssigned",
				"size": 0,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "1",
				"comparison": "isEqualTo",
				"value": "1"
			  },
			  "name": "policyassignment"
			},
			{
			  "type": 1,
			  "content": {
				"json": "## SQL servers on VMs - Subscription Overview"
			  },
			  "conditionalVisibility": {
				"parameterName": "selectedTabMachine",
				"comparison": "isEqualTo",
				"value": "SubAzureVM"
			  },
			  "name": "sqlvmtext"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\",\"mergeType\":\"leftouter\",\"leftTable\":\"subscriptions\",\"rightTable\":\"workspacecountvm\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1091\",\"mergeType\":\"leftouter\",\"leftTable\":\"subscriptions\",\"rightTable\":\"identitycount\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\",\"mergeType\":\"leftouter\",\"leftTable\":\"subscriptions\",\"rightTable\":\"dcrcountvm\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\",\"mergeType\":\"inner\",\"leftTable\":\"subscriptions\",\"rightTable\":\"sqlvmcount\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0f6\",\"mergeType\":\"leftouter\",\"leftTable\":\"sqlvmcount\",\"rightTable\":\"policyassignment\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"}],\"projectRename\":[{\"originalName\":\"[mergeextensions].extProgress\",\"mergedName\":\"extProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[mergeextensions].dcraProgress\",\"mergedName\":\"dcraProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[dcrcount].dcrProgress\",\"mergedName\":\"dcrProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].identityProgress\",\"mergedName\":\"identityProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[workspacecount].workspaceProgress\",\"mergedName\":\"workspaceProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[subscriptions].id\",\"mergedName\":\"id\",\"fromId\":\"unknown\"},{\"originalName\":\"[sqlvmcount].ResourceType\",\"mergedName\":\"ResourceType\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[sqlvmcount].totalMachines\",\"mergedName\":\"totalMachines\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[sqlvmcount].hasDefenderExtension\",\"mergedName\":\"hasDefenderExtension\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[sqlvmcount].hasAMAExtension\",\"mergedName\":\"hasAMAExtension\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[sqlvmcount].hasDCRA\",\"mergedName\":\"hasDCRA\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[mergeextensions].dcraCount\",\"mergedName\":\"dcraCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[dcrcount].totalDCRCount\",\"mergedName\":\"totalDCRCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[machinesCount].ResourceType\",\"mergedName\":\"ResourceType\",\"fromId\":\"unknown\"},{\"originalName\":\"[subscriptions].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].subscriptionId\",\"mergedName\":\"subscriptionId5\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1091\"},{\"originalName\":\"[arcextensioncount].hasDefenderExtensionArc\",\"mergedName\":\"hasDefenderExtensionArc\",\"fromId\":\"unknown\"},{\"originalName\":\"[arcextensioncount].hasAMAExtensionArc\",\"mergedName\":\"hasAMAExtensionArc\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].dcount_location\",\"mergedName\":\"identity_count\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1091\"},{\"originalName\":\"[identitycount].id\",\"mergedName\":\"id\",\"fromId\":\"unknown\"},{\"originalName\":\"[machinesCount].VMcount\",\"mergedName\":\"VMcount\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].totalIdentityCount\",\"mergedName\":\"totalIdentityCount\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1091\"},{\"originalName\":\"[workspacecount].totalWorkspaceCount\",\"mergedName\":\"totalWorkspaceCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[mergeextensions].subscriptionId1\",\"mergedName\":\"subscriptionId1\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"ProgressNum\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"extProgress\",\"operator\":\"isNotNull\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"extProgress\\\"] +[\\\"dcrProgress\\\"]+[\\\"identityProgress\\\"]+[\\\"workspaceProgress\\\"]\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"0\"}}]},{\"originalName\":\"[sqlvmcount].subscriptionId\",\"mergedName\":\"subscriptionId4\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[sqlvmcount].extProgress\",\"mergedName\":\"extProgress\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Is Autoprovisioning On\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"isPolicyAssigned\",\"operator\":\"isNotNull\",\"rightValType\":\"column\",\"resultValType\":\"column\",\"resultVal\":\"isPolicyAssigned\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"No\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Progress\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"ProgressNum\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"8\",\"resultValType\":\"static\",\"resultVal\":\"Completed\"}},{\"criteriaContext\":{\"leftOperand\":\"ProgressNum\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"0\",\"resultValType\":\"static\",\"resultVal\":\"Not started\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"In Progress\"}}]},{\"originalName\":\"[policyassignment].subscriptionId\",\"mergedName\":\"subscriptionId5\",\"fromId\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0f6\"},{\"originalName\":\"[policyassignment].isPolicyAssigned\",\"mergedName\":\"isPolicyAssigned\",\"fromId\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0f6\"},{\"originalName\":\"[dcrcountvm].subscriptionId\",\"mergedName\":\"subscriptionId2\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[dcrcountvm].totalDCRCount\",\"mergedName\":\"totalDCRCount\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[dcrcountvm].dcrProgress\",\"mergedName\":\"dcrProgress\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[workspacecountvm].subscriptionId\",\"mergedName\":\"subscriptionId1\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[workspacecountvm].totalWorkspaceCount\",\"mergedName\":\"totalWorkspaceCount\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[workspacecountvm].workspaceProgress\",\"mergedName\":\"workspaceProgress\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[mergeextensions].ResourceType1\"}]}",
				"size": 0,
				"title": "{$rowCount} Subscriptions",
				"noDataMessage": "No SQL servers on VMs and Arc-enabled detected​ in the selected subscriptions",
				"showRefreshButton": true,
				"showExportToExcel": true,
				"queryType": 7,
				"gridSettings": {
				  "formatters": [
					{
					  "columnMatch": "dcrProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "identityProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "workspaceProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "ResourceType",
					  "formatter": 5
					},
					{
					  "columnMatch": "totalMachines",
					  "formatter": 1
					},
					{
					  "columnMatch": "subscriptionId",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId5",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId1",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId3",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId4",
					  "formatter": 5
					},
					{
					  "columnMatch": "extProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "isPolicyAssigned",
					  "formatter": 5
					},
					{
					  "columnMatch": "ProgressNum",
					  "formatter": 5
					},
					{
					  "columnMatch": "Progress",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Completed",
							"representation": "success",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "In Progress",
							"representation": "Clock",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Not started",
							"representation": "right",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "right",
							"text": "{0}{1}"
						  }
						]
					  }
					}
				  ],
				  "filter": true,
				  "sortBy": [
					{
					  "itemKey": "$gen_thresholds_Progress_22",
					  "sortOrder": 2
					}
				  ],
				  "labelSettings": [
					{
					  "columnId": "id",
					  "label": "Subscription"
					},
					{
					  "columnId": "ResourceType",
					  "label": "Resource Type"
					},
					{
					  "columnId": "totalMachines",
					  "label": "Number of SQL Servers Instances "
					},
					{
					  "columnId": "hasDefenderExtension",
					  "label": "Defender for SQL Extension Installed"
					},
					{
					  "columnId": "hasAMAExtension",
					  "label": "AMA Extension Installed"
					},
					{
					  "columnId": "hasDCRA",
					  "label": "DCRA"
					},
					{
					  "columnId": "totalIdentityCount",
					  "label": "Identity (all regions)"
					},
					{
					  "columnId": "totalDCRCount",
					  "label": "DCR (all regions)"
					},
					{
					  "columnId": "totalWorkspaceCount",
					  "label": "Workspace (all regions)"
					},
					{
					  "columnId": "Is Autoprovisioning On",
					  "label": "AMA Autoprovisioning On"
					},
					{
					  "columnId": "Progress",
					  "label": "Defender for SQL Enablement Status"
					}
				  ]
				},
				"sortBy": [
				  {
					"itemKey": "$gen_thresholds_Progress_22",
					"sortOrder": 2
				  }
				]
			  },
			  "conditionalVisibility": {
				"parameterName": "selectedTabMachine",
				"comparison": "isEqualTo",
				"value": "SubAzureVM"
			  },
			  "name": "mergevms"
			},
			{
			  "type": 1,
			  "content": {
				"json": "## Arc-enabled SQL servers - Subscription Overview"
			  },
			  "conditionalVisibility": {
				"parameterName": "selectedTabMachine",
				"comparison": "isEqualTo",
				"value": "SubArc"
			  },
			  "name": "sqlarctext"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\",\"mergeType\":\"leftouter\",\"leftTable\":\"subscriptions\",\"rightTable\":\"workspacecountarc\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\",\"mergeType\":\"leftouter\",\"leftTable\":\"subscriptions\",\"rightTable\":\"dcrcountarc\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\",\"mergeType\":\"inner\",\"leftTable\":\"subscriptions\",\"rightTable\":\"arctotalcount\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"},{\"id\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0fc\",\"mergeType\":\"leftouter\",\"leftTable\":\"arctotalcount\",\"rightTable\":\"policyassignment\",\"leftColumn\":\"subscriptionId\",\"rightColumn\":\"subscriptionId\"}],\"projectRename\":[{\"originalName\":\"[mergeextensions].extProgress\",\"mergedName\":\"extProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[mergeextensions].dcraProgress\",\"mergedName\":\"dcraProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[dcrcount].dcrProgress\",\"mergedName\":\"dcrProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].identityProgress\",\"mergedName\":\"identityProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[workspacecount].workspaceProgress\",\"mergedName\":\"workspaceProgress\",\"fromId\":\"unknown\"},{\"originalName\":\"[subscriptions].id\",\"mergedName\":\"id\",\"fromId\":\"unknown\"},{\"originalName\":\"[arctotalcount].ResourceType\",\"mergedName\":\"ResourceType\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[arctotalcount].totalMachines\",\"mergedName\":\"totalMachines\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[arctotalcount].hasDefenderExtension\",\"mergedName\":\"hasDefenderExtension\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[arctotalcount].hasAMAExtension\",\"mergedName\":\"hasAMAExtension\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[arctotalcount].hasDCRA\",\"mergedName\":\"hasDCRA\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[mergeextensions].dcraCount\",\"mergedName\":\"dcraCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[dcrcount].totalDCRCount\",\"mergedName\":\"totalDCRCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[machinesCount].ResourceType\",\"mergedName\":\"ResourceType\",\"fromId\":\"unknown\"},{\"originalName\":\"[subscriptions].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[arcextensioncount].hasDefenderExtensionArc\",\"mergedName\":\"hasDefenderExtensionArc\",\"fromId\":\"unknown\"},{\"originalName\":\"[arcextensioncount].hasAMAExtensionArc\",\"mergedName\":\"hasAMAExtensionArc\",\"fromId\":\"unknown\"},{\"originalName\":\"[identitycount].id\",\"mergedName\":\"id\",\"fromId\":\"unknown\"},{\"originalName\":\"[machinesCount].VMcount\",\"mergedName\":\"VMcount\",\"fromId\":\"unknown\"},{\"originalName\":\"[workspacecount].totalWorkspaceCount\",\"mergedName\":\"totalWorkspaceCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[mergeextensions].subscriptionId1\",\"mergedName\":\"subscriptionId1\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"ProgressNum\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"extProgress\",\"operator\":\"isNotNull\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"extProgress\\\"] +[\\\"dcrProgress\\\"]+[\\\"workspaceProgress\\\"]\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"column\"}}]},{\"originalName\":\"[arctotalcount].subscriptionId\",\"mergedName\":\"subscriptionId4\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[arctotalcount].extProgress\",\"mergedName\":\"extProgress\",\"fromId\":\"1b6e4c4d-f517-41f3-a44a-781dd4de2092\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Is Autoprovisioning On\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"isPolicyAssigned\",\"operator\":\"isNotNull\",\"rightValType\":\"column\",\"resultValType\":\"column\",\"resultVal\":\"isPolicyAssigned\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"No\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Progress\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"ProgressNum\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"6\",\"resultValType\":\"static\",\"resultVal\":\"Completed\"}},{\"criteriaContext\":{\"leftOperand\":\"ProgressNum\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"0\",\"resultValType\":\"static\",\"resultVal\":\"Not Started\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"In Progress\"}}]},{\"originalName\":\"[policyassignment].subscriptionId\",\"mergedName\":\"subscriptionId5\",\"fromId\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0fc\"},{\"originalName\":\"[policyassignment].isPolicyAssigned\",\"mergedName\":\"isPolicyAssigned\",\"fromId\":\"9e3db8b2-5908-4bd9-9ae8-8a26bc44a0fc\"},{\"originalName\":\"[workspacecountarc].subscriptionId\",\"mergedName\":\"subscriptionId1\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[workspacecountarc].totalWorkspaceCount\",\"mergedName\":\"totalWorkspaceCount\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[workspacecountarc].workspaceProgress\",\"mergedName\":\"workspaceProgress\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1090\"},{\"originalName\":\"[dcrcountarc].subscriptionId\",\"mergedName\":\"subscriptionId2\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[dcrcountarc].totalDCRCount\",\"mergedName\":\"totalDCRCount\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[dcrcountarc].dcrProgress\",\"mergedName\":\"dcrProgress\",\"fromId\":\"6a1d6838-81d3-4817-bb29-bbebd5ba1092\"},{\"originalName\":\"[mergeextensions].ResourceType1\"}]}",
				"size": 0,
				"title": "{$rowCount} Subscriptions",
				"noDataMessage": "No SQL servers on VMs and Arc-enabled detected​ in the selected subscriptions",
				"showRefreshButton": true,
				"showExportToExcel": true,
				"queryType": 7,
				"gridSettings": {
				  "formatters": [
					{
					  "columnMatch": "dcrProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "workspaceProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "ResourceType",
					  "formatter": 5
					},
					{
					  "columnMatch": "totalMachines",
					  "formatter": 1
					},
					{
					  "columnMatch": "subscriptionId",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId1",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId3",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId4",
					  "formatter": 5
					},
					{
					  "columnMatch": "extProgress",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId5",
					  "formatter": 5
					},
					{
					  "columnMatch": "isPolicyAssigned",
					  "formatter": 5
					},
					{
					  "columnMatch": "ProgressNum",
					  "formatter": 5
					},
					{
					  "columnMatch": "Progress",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Completed",
							"representation": "success",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "In Progress",
							"representation": "Clock",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Not Started",
							"representation": "right",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "right",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "identityProgress",
					  "formatter": 5
					}
				  ],
				  "filter": true,
				  "labelSettings": [
					{
					  "columnId": "id",
					  "label": "Subscription"
					},
					{
					  "columnId": "ResourceType",
					  "label": "Resource Type"
					},
					{
					  "columnId": "totalMachines",
					  "label": "Number of SQL Servers Instances"
					},
					{
					  "columnId": "hasDefenderExtension",
					  "label": "Defender for SQL Extension Installed"
					},
					{
					  "columnId": "hasAMAExtension",
					  "label": "AMA Extension Installed"
					},
					{
					  "columnId": "hasDCRA",
					  "label": "DCRA"
					},
					{
					  "columnId": "totalWorkspaceCount",
					  "label": "Workspace (all regions)"
					},
					{
					  "columnId": "totalDCRCount",
					  "label": "DCR (all regions)"
					},
					{
					  "columnId": "Is Autoprovisioning On",
					  "label": "AMA Autoprovisioning On"
					},
					{
					  "columnId": "Progress",
					  "label": "Defender for SQL Enablement Status"
					}
				  ]
				},
				"sortBy": []
			  },
			  "conditionalVisibility": {
				"parameterName": "selectedTabMachine",
				"comparison": "isEqualTo",
				"value": "SubArc"
			  },
			  "name": "mergearcs"
			}
		  ]
		},
		"conditionalVisibility": {
		  "parameterName": "selectedTab",
		  "comparison": "isEqualTo",
		  "value": "Overview"
		},
		"name": "Overview Group"
	  },
	  {
		"type": 12,
		"content": {
		  "version": "NotebookGroup/1.0",
		  "groupType": "editable",
		  "items": [
			{
			  "type": 1,
			  "content": {
				"json": "## SQL Servers on Azure Virtual Machines"
			  },
			  "name": "AzureVM-Header"
			},
			{
			  "type": 1,
			  "content": {
				"json": "This tab lists all the **Azure virtual machines** that exist in the selected subscriptions, as well as if the extensions of the Azure Monitor Agent (AMA) and Defender for SQL have been deployed to the machine. ​\r\n\r\nBoth AMA and Defender for SQL extensions need to be installed successfully as a prerequisite.\r\n\r\nYou can select the <ins>**...**</ins> button on the top right hand corner of this list to export the list to Excel.",
				"style": "info"
			  },
			  "name": "AzureVMText"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\"\r\n| extend id = tolower(id)\r\n| extend id = replace(\"microsoft.sqlvirtualmachine/sqlvirtualmachines\", \"microsoft.compute/virtualmachines\", id).tolower()\r\n| join kind=inner (\r\nresources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    ComputerName = tolower(name)\r\n| extend id = tolower(id)\r\n| where OSType =~ \"windows\"\r\n| project ComputerName, id, location, resourceGroup, PowerStatus, OSType\r\n) on id\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"microsoft.azure.azuredefenderforsql\"\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName)\r\n| project ComputerName, DefenderForSQL = name, DefenderForSQLStatus = status, version\r\n) on ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion,\r\n    ComputerName = tolower(ComputerName)\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version\r\n) on ComputerName\r\n| extend Progress = case(isnotempty(DefenderForSQL) and isnotempty(AMA) and AMAStatus == 'Succeeded' and DefenderForSQLStatus == 'Succeeded', \"Extensions Installed\",\r\n                        isnotempty(DefenderForSQL) and isnotempty(AMA) and (AMAStatus != 'Succeeded' or DefenderForSQLStatus != 'Succeeded'), \"In Progress\",\r\n                        isnotempty(DefenderForSQL) and isempty(AMA), \"In Progress\",\r\n                        isempty(DefenderForSQL) and isempty(AMA), \"Not Started\",\r\n                        isempty(DefenderForSQL) and isnotempty(AMA), \"In Progress\", \"Other\")\r\n| project ComputerName, ResourceID = tolower(id), location, subscriptionId, resourceGroup, OSType, PowerStatus, DefenderForSQL, DefenderForSQLStatus, version, AMA, AMAStatus, AMAVersion, Progress\r\n| extend DefenderForSQLStatus = iff(isempty(DefenderForSQL), 'Not Installed', DefenderForSQLStatus)\r\n| extend AMAStatus = iff(isempty(AMA), 'Not Installed', AMAStatus)\r\n| order by ['Progress'] desc",
				"size": 0,
				"title": "{$rowCount} SQL Servers on Azure Virtual Machines",
				"noDataMessage": "No SQL servers on VMs detected​ in the selected subscriptions",
				"showRefreshButton": true,
				"showExportToExcel": true,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				],
				"gridSettings": {
				  "formatters": [
					{
					  "columnMatch": "ComputerName",
					  "formatter": 5
					},
					{
					  "columnMatch": "subscriptionId",
					  "formatter": 15,
					  "formatOptions": {
						"linkTarget": null,
						"showIcon": true
					  }
					},
					{
					  "columnMatch": "resourceGroup",
					  "formatter": 1
					},
					{
					  "columnMatch": "OSType",
					  "formatter": 5
					},
					{
					  "columnMatch": "PowerStatus",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "VM deallocated",
							"representation": "2",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "DefenderForSQL",
					  "formatter": 5
					},
					{
					  "columnMatch": "DefenderForSQLStatus",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Not Installed",
							"text": "Not Installed"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Failed",
							"representation": "3",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Updating",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "success",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "version",
					  "formatter": 5
					},
					{
					  "columnMatch": "AMA",
					  "formatter": 5
					},
					{
					  "columnMatch": "AMAStatus",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Not Installed",
							"text": "Not Installed"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Failed",
							"representation": "3",
							"text": "{0}{1}"
						  },
						  {
							"operator": "contains",
							"thresholdValue": "Updating",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "success",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "AMAVersion",
					  "formatter": 5
					},
					{
					  "columnMatch": "Progress",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Not Started",
							"representation": "right",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "In Progress",
							"representation": "Clock",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Other",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "SmileyHappy",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "IdentityType",
					  "formatter": 5
					}
				  ],
				  "rowLimit": 10000,
				  "filter": true,
				  "labelSettings": [
					{
					  "columnId": "ResourceID",
					  "label": "VM Name"
					},
					{
					  "columnId": "location",
					  "label": "Location"
					},
					{
					  "columnId": "subscriptionId",
					  "label": "Subscription"
					},
					{
					  "columnId": "resourceGroup",
					  "label": "Resource Group"
					},
					{
					  "columnId": "OSType",
					  "label": "Operating System"
					},
					{
					  "columnId": "PowerStatus",
					  "label": "VM Status"
					},
					{
					  "columnId": "DefenderForSQLStatus",
					  "label": "Defender for SQL Extension Installation Status"
					},
					{
					  "columnId": "AMAStatus",
					  "label": "AMA Extension Installation Status",
					  "comment": ""
					},
					{
					  "columnId": "Progress",
					  "label": "Extensions Installation Status"
					}
				  ]
				}
			  },
			  "name": "azurevm-arg"
			}
		  ]
		},
		"conditionalVisibility": {
		  "parameterName": "selectedTab",
		  "comparison": "isEqualTo",
		  "value": "AzureVM"
		},
		"name": "azurevmgroup"
	  },
	  {
		"type": 12,
		"content": {
		  "version": "NotebookGroup/1.0",
		  "groupType": "editable",
		  "items": [
			{
			  "type": 1,
			  "content": {
				"json": "# Arc-Enabled SQL Servers"
			  },
			  "name": "ArcServers-Header"
			},
			{
			  "type": 1,
			  "content": {
				"json": "This tab lists all the on-premise SQL servers or SQL servers managed via other cloud providers that have the Arc agent (ConnectedMachineAgent) installed. It shows which servers exist in the selected subscriptions and indicates whether the extensions of the Azure Monitor Agent (AMA) and Defender for SQL have been deployed to the machine.​\r\n\r\nBoth AMA and Defender for SQL extensions need to be installed successfully as a prerequisite.\r\n\r\n\r\nYou can select the <ins>**...**</ins> button on the top right hand corner of this list to export the list to Excel.",
				"style": "info"
			  },
			  "name": "ArcServers-Info"
			},
			{
			  "type": 3,
			  "content": {
				"version": "KqlItem/1.0",
				"query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend provisioningState = properties.provisioningState,\r\n\tstatus = properties.status,\r\n\tagentVersion = properties.agentVersion,\r\n\tlastStatusChange = properties.lastStatusChange,\r\n\terrorDetails = properties.errorDetails,\r\n\tosName = properties.osName,\r\n\tosSku = properties.osSku\r\n| extend name = tolower(name)\r\n| project id, name, location, resourceGroup, provisioningState, status, agentVersion, lastStatusChange, osName, osSku\r\n| join kind=inner (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| extend type = properties.type\r\n| where publisher =~ \"Microsoft.AzureData\" and type =~ \"WindowsAgent.SqlServer\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend ComputerName = tolower(ComputerName)\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.AzureDefenderForSQL\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| extend ComputerName = tolower(ComputerName)\r\n| project ComputerName, DefenderForSQL = name, DefenderForSQLStatus = status, DefenderForSQLVersion = version\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.hybridcompute/machines/extensions\"\r\n| extend publisher = properties.publisher\r\n| where publisher =~ \"Microsoft.Azure.Monitor\"\r\n| parse id with * \"/machines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| extend ComputerName = tolower(ComputerName)\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version\r\n) on $left.name == $right.ComputerName\r\n| extend Progress = case(isnotempty(DefenderForSQL) and isnotempty(AMA) and AMAStatus == 'Succeeded' and DefenderForSQLStatus == 'Succeeded', \"Extensions Installed\",\r\n                        isnotempty(DefenderForSQL) and isnotempty(AMA) and (AMAStatus != 'Succeeded' or DefenderForSQLStatus != 'Succeeded'), \"In Progress\",\r\n                        isnotempty(DefenderForSQL) and isempty(AMA), \"In Progress\",\r\n                        isempty(DefenderForSQL) and isempty(AMA), \"Not Started\",\r\n                        isempty(DefenderForSQL) and isnotempty(AMA), \"In Progress\", \"Other\")\r\n| project id, name, location, subscriptionId, resourceGroup, status, agentVersion, osName, DefenderForSQL, DefenderForSQLStatus, DefenderForSQLVersion, AMA, AMAStatus, AMAVersion, Progress\r\n| extend DefenderForSQLStatus = iff(isempty(DefenderForSQL), 'Not Installed', DefenderForSQLStatus)\r\n| extend AMAStatus = iff(isempty(AMA), 'Not Installed', AMAStatus)\r\n| order by ['Progress'] desc",
				"size": 0,
				"title": "{$rowCount} Arc-Enabled SQL Servers",
				"noDataMessage": "No Arc-enabled servers detected in the selected subscriptions",
				"showRefreshButton": true,
				"showExportToExcel": true,
				"queryType": 1,
				"resourceType": "microsoft.resourcegraph/resources",
				"crossComponentResources": [
				  "{Subscription}"
				],
				"gridSettings": {
				  "formatters": [
					{
					  "columnMatch": "name",
					  "formatter": 5
					},
					{
					  "columnMatch": "location",
					  "formatter": 1
					},
					{
					  "columnMatch": "subscriptionId",
					  "formatter": 15,
					  "formatOptions": {
						"linkTarget": null,
						"showIcon": true
					  }
					},
					{
					  "columnMatch": "resourceGroup",
					  "formatter": 1
					},
					{
					  "columnMatch": "status",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Connected",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "warning",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "agentVersion",
					  "formatter": 5
					},
					{
					  "columnMatch": "osName",
					  "formatter": 5
					},
					{
					  "columnMatch": "DefenderForSQL",
					  "formatter": 5
					},
					{
					  "columnMatch": "DefenderForSQLStatus",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Failed",
							"representation": "3",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Not Installed",
							"text": "Not Installed"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Updating",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "success",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "DefenderForSQLVersion",
					  "formatter": 5
					},
					{
					  "columnMatch": "AMA",
					  "formatter": 5
					},
					{
					  "columnMatch": "AMAStatus",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Not Installed",
							"text": "Not Installed"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Failed",
							"representation": "3",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Updating",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "success",
							"text": "{0}{1}"
						  }
						]
					  }
					},
					{
					  "columnMatch": "AMAVersion",
					  "formatter": 5
					},
					{
					  "columnMatch": "Progress",
					  "formatter": 18,
					  "formatOptions": {
						"thresholdsOptions": "icons",
						"thresholdsGrid": [
						  {
							"operator": "==",
							"thresholdValue": "Not Started",
							"representation": "right",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "In Progress",
							"representation": "Clock",
							"text": "{0}{1}"
						  },
						  {
							"operator": "==",
							"thresholdValue": "Other",
							"representation": "unknown",
							"text": "{0}{1}"
						  },
						  {
							"operator": "Default",
							"thresholdValue": null,
							"representation": "SmileyHappy",
							"text": "Extensions Installed"
						  }
						]
					  }
					}
				  ],
				  "filter": true,
				  "labelSettings": [
					{
					  "columnId": "id",
					  "label": "Server Name"
					},
					{
					  "columnId": "location",
					  "label": "Location"
					},
					{
					  "columnId": "subscriptionId",
					  "label": "Subscription"
					},
					{
					  "columnId": "resourceGroup",
					  "label": "Resource Group"
					},
					{
					  "columnId": "status",
					  "label": "Arc Status"
					},
					{
					  "columnId": "DefenderForSQLStatus",
					  "label": "Defender for SQL Extension Installation Status"
					},
					{
					  "columnId": "AMAStatus",
					  "label": "AMA Extension Installation Status"
					},
					{
					  "columnId": "Progress",
					  "label": "Extensions Installation Status"
					}
				  ]
				}
			  },
			  "name": "azurearc-arg"
			}
		  ]
		},
		"conditionalVisibility": {
		  "parameterName": "selectedTab",
		  "comparison": "isEqualTo",
		  "value": "Arc"
		},
		"name": "ArcServerGroup"
	  }
	],
	"$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }