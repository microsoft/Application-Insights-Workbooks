{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Containers Security Mapping Dashboard \r\n\r\nThis workbook has been created to provide a security mappings for Microsoft Defender for Contianers plan ang agentless container security posture in Defender Cloud Security Posture Management based on the resource telemetry in your own environment. Please note that these view based on  your Containers infrastructure.\r\n\r\n<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take the time to answer a quick survey. To submit your feedback,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](https://aka.ms/containersecuritymapping)\r\n"
      },
      "name": "Intro"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{subscription}"
        ],
        "parameters": [
          {
            "id": "7767523e-f230-4562-b00c-bce5a7d38fe7",
            "version": "KqlParameterItem/1.0",
            "name": "subscription",
            "label": "Subscription",
            "type": 6,
            "description": "Please select one or several Subscription in your environment",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "ae33cf4e-c36b-46ae-a298-2a424a913fff",
            "version": "KqlParameterItem/1.0",
            "name": "acrs",
            "label": "Azure Container Registry",
            "type": 5,
            "description": "Please select one or several Container Registry in your environment",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n    | where type == \"microsoft.containerregistry/registries\"\r\n    | summarize Count= count() by id\r\n    | project id",
            "crossComponentResources": [
              "{subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "8a4343cc-c916-49a3-a759-313c2ac25ea9",
            "version": "KqlParameterItem/1.0",
            "name": "k8sarc",
            "label": "AKS and/or ARC Enabled",
            "type": 2,
            "description": "Please select either AKS or ARC enabled or both",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\": \"microsoft.containerservice/managedclusters\", \"label\": \"Azure Kubernetes Service\"},\r\n    { \"value\": \"microsoft.kubernetes/connectedclusters\", \"label\": \"Azure Arc Enabled Kubernetes\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "7757d94c-8713-4c19-b340-07b51b2370e7",
            "version": "KqlParameterItem/1.0",
            "name": "k8sclu",
            "label": "Kubernetes Cluster",
            "type": 5,
            "description": "Please select one or several Kubernetes clusters in your environment",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n    |where type in~ ({k8sarc})\r\n    | summarize Count= count() by id\r\n    | project id",
            "crossComponentResources": [
              "{subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "f38b2b18-3eda-4aeb-8155-b0e9b267864a",
            "version": "KqlParameterItem/1.0",
            "name": "severity",
            "label": "Alert Severity",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\": \"High\", \"label\":\"High\"},\r\n    {\"value\": \"Medium\", \"label\":\"Medium\"},\r\n    {\"value\": \"Low\", \"label\":\"Low\"},\r\n    {\"value\": \"Informational\", \"label\":\"Informational\"}\r\n]\r\n    ",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "select_subscriptions"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "7b8f3245-20ab-43a8-8b15-7b60d449308e",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”Ž Overview",
            "subTarget": "overview",
            "preText": "Overview",
            "style": "link"
          },
          {
            "id": "7a273fe4-5d4f-4e5f-b29b-8b4a4a9b75cc",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”·Vulnerability Assessment - ACR (MDVM)",
            "subTarget": "acrmdvm",
            "style": "link"
          },
          {
            "id": "f7f92278-2911-45d6-b46b-e35c0771d292",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”· Vulnerability Assessment - ACR (Qualys)",
            "subTarget": "acr",
            "preText": "Azure Container Registry",
            "style": "link"
          },
          {
            "id": "7be52b57-e328-499b-b4fa-c3fd676ae76b",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”µVulnerability Assessement - AKS Runtime (MDVM)",
            "subTarget": "k8smdvm",
            "style": "link"
          },
          {
            "id": "73f4146e-9c22-4f96-885a-34158a5617a3",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”µ Vulnerability Assessment - AKS Runtime (Qualys)",
            "subTarget": "k8s",
            "style": "link"
          },
          {
            "id": "c973a4aa-7315-4f9c-8b36-44ea4f6374dc",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”” Threat Detection - Alerts",
            "subTarget": "alerts",
            "style": "link"
          },
          {
            "id": "1a9a5044-2785-429a-8d69-2141d76a7370",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "ðŸ”µ Hardening - Recommendations",
            "subTarget": "Hareden",
            "style": "link"
          }
        ]
      },
      "name": "Tab_Menu"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n    | extend AlertDisplayName = properties.[\"AlertDisplayName\"]\r\n    | extend Severity = properties.[\"Severity\"]\r\n    | extend Status = properties.[\"Status\"]\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n    | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n    | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n    | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n    | project\r\n            affectedResourceId = tolower(affectedResourceId),\r\n            tostring(Severity),\r\n            AlertDisplayName,\r\n            Status,\r\n            ResourceGroup = tolower(resourceGroup),\r\n            Resource\r\n    | join kind=inner\r\n        (\r\n            resources\r\n                |where type =~ 'microsoft.containerservice/managedclusters' or type =~ 'microsoft.kubernetes/connectedclusters'\r\n                | project id = tolower(id)\r\n        ) on $left.affectedResourceId == $right.id\r\n    | where Resource in~ ({k8sclu})\r\n    | where Status == \"Active\"\r\n    | extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n    | where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n    | project (Severity)\r\n    | summarize count() by Severity",
        "size": 4,
        "title": "Alert Summary",
        "noDataMessage": "No alerts found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational",
                    "representation": "gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 1
            },
            {
              "columnMatch": "AlertURI",
              "formatter": 5
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5
            }
          ],
          "sortBy": [
            {
              "itemKey": "Tactics",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "Resource",
              "label": "Kubernetes Cluster"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Tactics",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Severity",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "none"
            }
          },
          "showBorder": false
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "35",
      "name": "Overview_Alerts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n    | extend IsIncident = properties.[\"IsIncident\"]\r\n    | extend AlertDisplayName = properties.[\"AlertDisplayName\"]\r\n    | extend SystemAlertId = properties.[\"SystemAlertId\"]\r\n    | extend Status = properties.[\"Status\"]\r\n    | extend Tactics = split(properties.[\"Intent\"],\",\")\r\n    | mv-expand Tactics\r\n    | extend Tactic = trim(\" \",tostring(Tactics))\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n    | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n    | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n    | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | extend affectedResourceId = tolower(affectedResourceId)\r\n    | join kind=inner \r\n        (\r\n            resources\r\n                |where type =~ 'microsoft.containerservice/managedclusters' or type =~ 'microsoft.kubernetes/connectedclusters'\r\n                | project id = tolower(id)\r\n        ) on $left.affectedResourceId == $right.id\r\n    | extend ResourceGroup = tolower(resourceGroup)\r\n    | where Resource in~ ({k8sclu})\r\n    | where Status == \"Active\"\r\n    | extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n    | where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n    | distinct ['id'], Tactic\r\n    | summarize count() by Tactic",
        "size": 4,
        "title": "Alerts by MITRE ATT&CK  Tactics",
        "noDataMessage": "No alerts found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Tactic",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "compositeBarSettings": {
                "labelText": "",
                "columnSettings": []
              }
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "65",
      "name": "Overview_Alert_Mitre"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        severity = tostring(parse_json(properties).status.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id) \r\n    | where status == 'Unhealthy'\r\n    | where Resource in~({acrs})\r\n    | distinct \r\n        VulnId, \r\n        severity\r\n    | summarize count() by severity",
        "size": 4,
        "title": "ACR - Container Vulnerabilities by Severity (Qualys)",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev0",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev1",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev3",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 1,
              "formatOptions": {
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000
        },
        "sortBy": [],
        "tileSettings": {
          "showBorder": false
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "orange"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Low",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "35",
      "name": "Overview_Containers_Vulnerabilities_Severity_Qualys"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        severity = tostring(properties.additionalData.vulnerabilityDetails.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id) \r\n    | where status == 'Unhealthy'\r\n    | where Resource in~({acrs})\r\n    | distinct \r\n        VulnId, \r\n        severity\r\n    | summarize count() by severity",
        "size": 4,
        "title": "ACR - Container Vulnerabilities by Severity (MDVM)",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev0",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev1",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev3",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 1,
              "formatOptions": {
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000
        },
        "sortBy": [],
        "tileSettings": {
          "showBorder": false
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "orange"
            },
            {
              "seriesName": "Low",
              "color": "blue"
            },
            {
              "seriesName": "Critical",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "65",
      "name": "Overview_Containers_Vulnerabilities_Severity - MDVM"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"41503391-efa5-47ee-9282-4eff6131462c\"\r\n | project \r\n    Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n    severity = tostring(parse_json(properties).status.severity), \r\n    status = tostring(parse_json(properties).status.code), \r\n    VulnId = tostring(parse_json(properties).id)\r\n | where status == 'Unhealthy'\r\n | where Resource in~ ({k8sclu})\r\n | distinct VulnId, severity\r\n | summarize count() by severity\r\n ",
        "size": 4,
        "title": "AKS - Running Images Vulnerabilities by Severity (Qualys)",
        "noDataMessage": "No unhealthy Kubernetes found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "count_",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                }
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true
        },
        "sortBy": [],
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "orange"
            },
            {
              "seriesName": "Low",
              "color": "blue"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "35",
      "name": "Overview_K8s_Vulnerabilities_Severity_Qualys"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\"\r\n | project \r\n    Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n    severity = tostring(properties.additionalData.vulnerabilityDetails.severity), \r\n    status = tostring(parse_json(properties).status.code), \r\n    VulnId = tostring(parse_json(properties).id)\r\n | where status == 'Unhealthy'\r\n | where Resource in~ ({k8sclu})\r\n | distinct VulnId, severity\r\n | summarize count() by severity\r\n ",
        "size": 4,
        "title": "AKS - Running Images Vulnerabilities by Severity (MDVM)",
        "noDataMessage": "No unhealthy Kubernetes found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "count_",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                }
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true
        },
        "sortBy": [],
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Low",
              "color": "blue"
            },
            {
              "seriesName": "High",
              "color": "orange"
            },
            {
              "seriesName": "Critical",
              "color": "redBright"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "65",
      "name": "Overview_K8s_Vulnerabilities_Severity - MDVM"
    },
    {
      "type": 1,
      "content": {
        "json": "## Kubernetes Alerts"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "text - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{subscription}"
        ],
        "parameters": [
          {
            "id": "1b0da6e0-7a43-4261-bfc0-ce4d708338d3",
            "version": "KqlParameterItem/1.0",
            "name": "effectedresource",
            "type": 1,
            "query": "securityresources\r\n    | where type =~ 'microsoft.security/locations/alerts'\r\n    | where properties.[\"AlertDisplayName\"] !startswith ('[SAMPLE ALERT]')\r\n    | where isnotempty(resourceGroup)\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | project affectedResourceId = tolower(affectedResourceId), resourceGroup = tolower(resourceGroup)\r\n    | join kind=innerunique(\r\n        resources\r\n            |where type =~ 'microsoft.containerservice/managedclusters' or type =~ 'microsoft.kubernetes/connectedclusters'\r\n            | project id = tolower(id)\r\n    )\r\n    on $left.affectedResourceId == $right.id\r\n    | summarize affectedRes = tostring(dcount(affectedResourceId))",
            "crossComponentResources": [
              "{subscription}"
            ],
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "false"
      },
      "name": "Alert_Effected_Resources"
    },
    {
      "type": 1,
      "content": {
        "json": "# No Alerts Found!",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "effectedresource",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "alerts"
        }
      ],
      "name": "Alert_NoFoound"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n    | extend AlertDisplayName = properties.[\"AlertDisplayName\"]\r\n    | extend Severity = properties.[\"Severity\"]\r\n    | extend Status = properties.[\"Status\"]\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n    | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n    | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n    | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n    | project\r\n            affectedResourceId = tolower(affectedResourceId),\r\n            tostring(Severity),\r\n            AlertDisplayName,\r\n            Status,\r\n            ResourceGroup = tolower(resourceGroup),\r\n            Resource\r\n    | join kind=inner \r\n        (\r\n            resources\r\n                |where type in~ ({k8sarc})\r\n                | project id = tolower(id)\r\n        ) on $left.affectedResourceId == $right.id\r\n    | where Resource in~ ({k8sclu})\r\n    | where Severity in~ ({severity})\r\n    | where Status == \"Active\"\r\n    | where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n    | project (Severity)\r\n    | summarize count() by Severity\r\n    | order by count_ desc",
        "size": 4,
        "title": "Alerts by Severity",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational",
                    "representation": "gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 1
            },
            {
              "columnMatch": "AlertURI",
              "formatter": 5
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5
            }
          ],
          "sortBy": [
            {
              "itemKey": "Tactics",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "Resource",
              "label": "Kubernetes Cluster"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Tactics",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Severity",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "High",
                  "representation": "Sev0",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Low",
                  "representation": "Sev2",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Medium",
                  "representation": "Sev1",
                  "text": "{0}{1}"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Informational",
                  "representation": "Sev3",
                  "text": "{0}{1}"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "unknown",
                  "text": "{0}{1}"
                }
              ],
              "compositeBarSettings": {
                "labelText": "",
                "columnSettings": [
                  {
                    "columnName": "Severity",
                    "color": "blue"
                  }
                ]
              }
            }
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "none"
            }
          },
          "showBorder": true,
          "sortCriteriaField": "count_",
          "sortOrderField": 2
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "alerts"
        },
        {
          "parameterName": "effectedresource",
          "comparison": "isNotEqualTo",
          "value": "0"
        }
      ],
      "name": "Alert_K8s_Alerts_Summary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n    | extend IsIncident = properties.[\"IsIncident\"]\r\n    | extend AlertDisplayName = properties.[\"AlertDisplayName\"]\r\n    | extend SystemAlertId = properties.[\"SystemAlertId\"]\r\n    | extend Severity = properties.[\"Severity\"]\r\n    | extend AlertUri = properties.[\"AlertUri\"]\r\n    | extend Status = properties.[\"Status\"]\r\n    | extend Tactics = properties.[\"Intent\"]\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n    | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n    | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n    | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n    | parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n    | parse AlertUri with * '/location/'  Location  \r\n    | project-away \r\n        resourceNameIndex, \r\n        splitAffectedResourceId, \r\n        hostName\r\n    | project\r\n        alertId = id,\r\n        subscriptionId,\r\n        alertProperties = properties,\r\n        affectedResourceId = tolower(affectedResourceId),\r\n        tostring(Severity),\r\n        SystemAlertId,\r\n        AlertDisplayName,\r\n        IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n        AlertUri,\r\n        Status,\r\n        Tactics,\r\n        SubscriptionId,\r\n        Location,\r\n        ResourceId,\r\n        ResourceIdentifier=properties.[\"ResourceIdentifiers\"],\r\n        Resource,\r\n        dateTime = format_datetime(todatetime(properties.[\"TimeGeneratedUtc\"]), 'MM/d/yyyy h:m:s tt')\r\n| join kind=inner \r\n    (\r\n        resources\r\n            |where type in~ ({k8sarc})\r\n            | project id = tolower(id)\r\n    ) on $left.affectedResourceId == $right.id\r\n| extend id = alertId, subscriptionId, properties = alertProperties\r\n| extend ResourceGroup = substring(id,Â 0,Â indexof(id,Â '/providers'))\r\n| where Resource in~ ({k8sclu})\r\n| where Severity in~ ({severity})\r\n| where Status == \"Active\"\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| project\r\n    (Severity),\r\n    tostring(SystemAlertId),\r\n    tostring(AlertDisplayName),\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertURI = tostring(AlertUri),\r\n    tostring(Status),\r\n    tostring(Tactics),\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    tostring(ResourceId),\r\n    Resource, dateTime\r\n| distinct\r\n    dateTime,\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId,\r\n    Resource,\r\n    AlertURI\r\n| order by dateTime desc",
        "size": 2,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "dateTime",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Clock",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "24ch"
              }
            },
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational",
                    "representation": "blue",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Alert",
                    "representation": "error",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Incident",
                    "representation": "failed",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 1
            },
            {
              "columnMatch": "Tactics",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Persistence",
                    "representation": "Persistence",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Execution",
                    "representation": "Execution",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "InitialAccess",
                    "representation": "Initial_Access",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "PrivilegeEscalation",
                    "representation": "Privilege Escalation",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "DefenseEvasion",
                    "representation": "Defense Evasion",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "CredentialAccess",
                    "representation": "Credential Access",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Discovery",
                    "representation": "Discovery",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "LateralMovement",
                    "representation": "Lateral_Movement",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Impact",
                    "representation": "Impact",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Cancelled",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "38ch"
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "50ch"
              }
            },
            {
              "columnMatch": "AlertURI",
              "formatter": 7,
              "formatOptions": {
                "linkColumn": "AlertURI",
                "linkTarget": "Url",
                "linkLabel": "Alert Url",
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "dateTime",
              "label": "Date and time"
            },
            {
              "columnId": "AlertDisplayName",
              "label": "Alert name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "SubscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "Resource",
              "label": "Kubernetes cluster"
            },
            {
              "columnId": "AlertURI",
              "label": "URL"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "alerts"
        },
        {
          "parameterName": "effectedresource",
          "comparison": "isNotEqualTo",
          "value": "0"
        }
      ],
      "name": "Alert_K8s_Alerts_List"
    },
    {
      "type": 1,
      "content": {
        "json": "## Kubernetes - Vulnerabilities\r\nMicrosoft Defender for Containers is a new offering that consolidates two existing Microsoft Defender for Cloud meters:\r\n* Microsoft Defender for Kubernetes\r\n* Microsoft Defender for Container Registries\r\n\r\n* **New Kubernetes native deployment** - We developed a DaemonSet, which is deployed and maintained on the Kubernetes control plane. The new DaemonSet is responsible for all data collection events, supports any Kubernetes (Azure & non-Azure) and removes our current dependency on the Log Analytics agent. The DaemonSet gives customers visibility and management capabilities via Kubernetes tooling, and will resolve ongoing customer issues and challenges with the current VM extension model. It is integrated into Azure Kubernetes Service (AKS) as a Security profile and into Azure Arc connected clusters as a cluster extension for both on-prem and multi-cloud scenarios.\r\n* **Advanced Threat Protection** - additional Kubernetes-aware AI analytics and anomaly detection based on process signals. A full list of alerts is published in our [Reference table for all security alerts in Microsoft Defender for Cloud](https://docs.microsoft.com/azure/defender-for-cloud/alerts-reference?WT.mc_id=Portal-fx#alerts-k8scluster).\r\n* **Runtime visibility of vulnerabilities** - A new Microsoft Defender for Cloud recommendation that monitors Kubernetes clusters will surface a list of running images with vulnerabilities based on vulnerability assessment scans powered by Qualys. This new recommendation can help customers focus on the most critical vulnerabilities that expose their runtime environments to security threats and attacks."
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "k8s"
      },
      "name": "k8s_Vulnerability_Text"
    },
    {
      "type": 1,
      "content": {
        "json": "## Kubernetes - Vulnerabilities\r\nThis dashboard is powered by the recommendation [\"Running container images should have vulnerability findings resolved (powered by Microsoft Defender Vulnerability Management)\"](https://portal.azure.com/#view/Microsoft_Azure_Security_CloudNativeCompute/ContainersRuntimeRecommendationDetailsBlade/assessmentKey/c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5). Click [here](https://learn.microsoft.com/en-us/azure/defender-for-cloud/concept-agentless-containers) to learn more about how the scanning works. "
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "k8smdvm"
      },
      "name": "k8s_Vulnerability_Text -MDVM"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5dc6b0fd-3773-4d03-b9c7-1a72ca524b46",
            "version": "KqlParameterItem/1.0",
            "name": "k8srecommendation",
            "label": "Show recommendations",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\": \"Yes\", \"label\": \"Yes\"},\r\n    {\"value\": \"No\", \"label\": \"No\", \"selected\":true}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "Yes"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "Hareden"
      },
      "name": "k8s_Show_Security_Recommendations"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id) \r\n    | extend ResourceType = strcat(tolower(split(id,\"/\").[6]), \"/\",tolower(split(id,\"/\").[7]))\r\n    | extend severity = tostring(parse_json(properties).status.severity)\r\n    | extend Status = tostring(properties.status.code)\r\n    | extend ResourceGroup = tolower(trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)))\r\n    | extend vulId = tostring(properties.id)\r\n    | where assessmentKey == \"41503391-efa5-47ee-9282-4eff6131462c\" and Status == 'Unhealthy'\r\n    | where ResourceType in~ ({k8sarc}) \r\n    | where Resource in~ ({k8sclu})\r\n    | distinct \r\n        vulId, \r\n        severity\r\n    | summarize count() by tostring(severity)\r\n    | order by count_ desc",
        "size": 4,
        "title": "Vulnerabilities by Severity",
        "noDataMessage": "No vulnerabilities found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Category",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "k8s"
      },
      "name": "K8s_Vulnerabilities_SeverityOVerview_Qualys"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id) \r\n    | extend ResourceType = strcat(tolower(split(id,\"/\").[6]), \"/\",tolower(split(id,\"/\").[7]))\r\n    | extend severity = tostring(properties.additionalData.vulnerabilityDetails.severity)\r\n    | extend Status = tostring(properties.status.code)\r\n    | extend ResourceGroup = tolower(trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)))\r\n    | extend vulId = tostring(properties.id)\r\n    | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\" and Status == 'Unhealthy'\r\n    | where ResourceType in~ ({k8sarc}) \r\n    | where Resource in~ ({k8sclu})\r\n    | distinct \r\n        vulId, \r\n        severity\r\n    | summarize count() by tostring(severity)\r\n    | order by count_ desc",
              "size": 4,
              "title": "Vulnerabilities by Severity",
              "noDataMessage": "No vulnerabilities found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Category",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    },
                    "emptyValCustomText": "Other"
                  }
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": true
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "k8smdvm"
            },
            "name": "K8s_Vulnerabilities_Seveirty_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\"\r\n   | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend Status = tostring(parse_json(properties).status.code)\r\n    | extend Severity=tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend Cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where Resource in~ ({k8sclu})\r\n    | extend fixStatus = parse_json(properties.additionalData).softwareDetails.fixStatus\r\n    | extend imageUri = properties.resourceDetails.id,\r\n    isExploitStepsPublished=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isPubliclyDisclosed==\"true\",\"Yes\",\"No\"),\r\n            isInExploitKit=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isInExploitKit==\"true\",\"Yes\",\"No\"),\r\n            isVerified= iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isVerified==\"true\",\"Yes\",\"No\")\r\n | project       \r\n        Cluster,\r\n        imageUri,\r\n        VulnId, \r\n        Status,\r\n        Severity,\r\n        tostring(fixStatus),\r\n        isExploitStepsPublished,\r\n        isVerified,\r\n        isInExploitKit\r\n    | where Status == 'Unhealthy'\r\n    | where isExploitStepsPublished == \"Yes\" or isInExploitKit == \"Yes\" or isVerified == \"Yes\"\r\n    | project-away Status ",
              "size": 1,
              "title": "Exploitable Vulnerablities",
              "noDataMessage": "No exploitable vulnerabilities found",
              "exportedParameters": [
                {
                  "fieldName": "RepositoryName",
                  "parameterName": "acrRepositoryName",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "description",
                  "parameterName": "acrDescription",
                  "parameterType": 1
                },
                {
                  "fieldName": "remediation",
                  "parameterName": "acrRemediation",
                  "parameterType": 1
                },
                {
                  "fieldName": "Issue",
                  "parameterName": "acrIssue",
                  "parameterType": 1
                },
                {
                  "fieldName": "VulnId",
                  "parameterName": "acrVulnId",
                  "parameterType": 1
                },
                {
                  "fieldName": "Severity",
                  "parameterName": "acrSeverity",
                  "parameterType": 1
                },
                {
                  "fieldName": "PublishedDate",
                  "parameterName": "acrPublishedDate",
                  "parameterType": 1
                },
                {
                  "fieldName": "fixStatus",
                  "parameterName": "acrFixStatus",
                  "parameterType": 1
                },
                {
                  "fieldName": "itemSelected",
                  "parameterName": "acrItemSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                },
                {
                  "fieldName": "cvss20Vector",
                  "parameterName": "acrCvss20Vector",
                  "parameterType": 1
                },
                {
                  "fieldName": "cvss30Vector",
                  "parameterName": "acrCvss30Vector",
                  "parameterType": 1
                },
                {
                  "parameterType": 1
                },
                {
                  "fieldName": "isInExploitKit",
                  "parameterName": "acrExploitKit",
                  "parameterType": 1
                },
                {
                  "fieldName": "isVerified",
                  "parameterName": "acrVerified",
                  "parameterType": 1
                },
                {
                  "fieldName": "isExploitStepsPublished",
                  "parameterName": "acrVulnPublished",
                  "parameterType": 1
                },
                {
                  "fieldName": "referenceLinks",
                  "parameterName": "acrReferences",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "fixStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "FixAvailable",
                          "representation": "success",
                          "text": "Fix Available"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown",
                          "representation": "unknown",
                          "text": "Unknown"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isExploitStepsPublished",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "2",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "success",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isVerified",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "4",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isInExploitKit",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "warning",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "Available",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "itemSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PublishedDate",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "cvss30score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "minimumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss30Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "remediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceLinks",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceTitle",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "category",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Issue",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "cvss20score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      },
                      "emptyValCustomText": "N/A"
                    }
                  },
                  {
                    "columnMatch": "cvss20Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "impact",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PublishedTime",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Patchable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "disabled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "cveTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "cveURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "cveURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "vendorReferencesTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "vendorReferencesURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "vendorReferencesURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "imageUri",
                    "label": "Image URI"
                  },
                  {
                    "columnId": "VulnId",
                    "label": "Vulnerability Id"
                  },
                  {
                    "columnId": "fixStatus",
                    "label": "Fix Status"
                  },
                  {
                    "columnId": "isExploitStepsPublished",
                    "label": "Exploit Steps Published"
                  },
                  {
                    "columnId": "isVerified",
                    "label": "Exploit Steps Verifiable"
                  },
                  {
                    "columnId": "isInExploitKit",
                    "label": "In Exploit Kit"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "k8smdvm"
            },
            "name": "K8sExploitableMDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend ResourceGroup = tolower(trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)))\r\n    | extend ResourceType = strcat(tolower(split(id,\"/\").[6]), \"/\",tolower(split(id,\"/\").[7]))\r\n    | extend severity = tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend status = tostring(parse_json(properties).status.code)\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend description = tostring(parse_json(properties).displayName),patchable = tostring(parse_json(properties).additionalData.softwareDetails.patchable), cve = parse_json(properties.additionalData).cve\r\n    | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\"\r\n    | where ResourceType in~ ({k8sarc})\r\n    | where Resource in~ ({k8sclu})\r\n    | project \r\n        Resource, \r\n        ResourceGroup, \r\n        ResourceType, \r\n        subscriptionId, \r\n        severity, \r\n        status, \r\n        VulnId, \r\n        description, \r\n        patchable, \r\n        cve\r\n    | where status == 'Unhealthy'\r\n    | summarize \r\n        dcount(VulnId) by ResourceGroup, \r\n        Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(patchable), \r\n        tostring(cve)\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevC=countif(severity=='Critical'),\r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        patchAvailable = countif(patchable=='true'), \r\n        CVEcount =countif(cve!='[]') by ResourceGroup, \r\n        Resource, \r\n        k8sselected = \"true\"\r\n    | order by sevH desc",
              "size": 1,
              "title": "Vulnerable Images |  Select a Cluster to view the list of vulnerabilities",
              "noDataMessage": "No unhealthy Kubernetes found",
              "exportedParameters": [
                {
                  "fieldName": "Resource",
                  "parameterName": "selectedk8s",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "k8sselected",
                  "parameterName": "k8sselected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Resource group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "k8sselected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevC",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevH",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev1",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevL",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev3",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "patchAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pending",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "CVEcount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "fixAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "uninitialized",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "ResourceGroup"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Resource"
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "sevC",
                    "label": "Critical"
                  },
                  {
                    "columnId": "sevH",
                    "label": "High"
                  },
                  {
                    "columnId": "sevM",
                    "label": "Medium"
                  },
                  {
                    "columnId": "sevL",
                    "label": "Low"
                  },
                  {
                    "columnId": "patchAvailable",
                    "label": "Patch Available"
                  },
                  {
                    "columnId": "CVEcount",
                    "label": "CVEs"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "k8smdvm"
            },
            "name": "k8s_Running_Images_VulnerabilitiesbyCluster_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\n    | where type =~ \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey=extract(@\"(?i)providers/Microsoft.Security/assessments/([^/]*)\", 1, id)\r\n    | extend subAssessmentId=tostring(properties.id)\r\n    | extend parentResourceId= extract(\"(.+)/providers/Microsoft.Security\", 1, id)\r\n    | extend resourceId = tostring(properties.resourceDetails.id)\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend selectedVulnerability=\"true\"\r\n    | extend subAssessmentName=tostring(properties.displayName)\r\n    | extend subAssessmentDescription=tostring(properties.description)\r\n    | extend subAssessmentRemediation=tostring(properties.remediation)\r\n    | extend subAssessmentCategory=tostring(properties.additionalData.softwareDetails.vendor)\r\n    | extend subAssessmentImpact=tostring(properties.impact)\r\n    | extend severity=tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend status=tostring(properties.status.code)\r\n    | extend cause=tostring(properties.status.cause)\r\n    | extend statusDescription=tostring(properties.status.description)\r\n    | extend additionalData=tostring(properties.additionalData)\r\n    | extend isPubliclyDisclosed=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isPubliclyDisclosed==\"true\",\"Yes\",\"No\"),\r\n            isInExploitKit=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isInExploitKit==\"true\",\"Yes\",\"No\"),\r\n            isVerified= iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isVerified==\"true\",\"Yes\",\"No\")\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\"\r\n    | where status == \"Unhealthy\"\r\n    | where '{selectedk8s}' == 'All' or cluster ==  '{selectedk8s}'\r\n    | summarize \r\n        numOfResources=strcat(dcount(resourceId), \" \", \"Containers\"), \r\n       timeGenerated=arg_max(todatetime(properties.status.firstEvaulationDate), additionalData) by assessmentKey, \r\n        ['cluster'],\r\n        subAssessmentId, \r\n        subAssessmentName, \r\n        //subAssessmentCategory,\r\n        severity,\r\n        patchable = iff(tostring(properties.additionalData.[\"softwareDetails\"].[\"patchable\"])==\"true\",\"Yes\", \"No\"),\r\n        selectedVulnerability\r\n    | project-away \r\n        assessmentKey, \r\n        additionalData\r\n    | order by ['subAssessmentId'] asc",
              "size": 0,
              "title": "Kubernetes Vulenrabilities | Select a Vulnerability to see effected Contianers",
              "noDataMessage": "No vulnerabilities found",
              "exportedParameters": [
                {
                  "fieldName": "subAssessmentId",
                  "parameterName": "selectedAssessmentId",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "selectedVulnerability",
                  "parameterName": "k8sSelectedVulnerability",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subAssessmentName",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "150ch"
                    }
                  },
                  {
                    "columnMatch": "severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "patchable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "disabled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "selectedVulnerability",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "cluster",
                    "label": "Cluster"
                  },
                  {
                    "columnId": "subAssessmentId",
                    "label": "CVE ID"
                  },
                  {
                    "columnId": "subAssessmentName",
                    "label": "Security check"
                  },
                  {
                    "columnId": "severity",
                    "label": "Severity"
                  },
                  {
                    "columnId": "patchable",
                    "label": "Patch"
                  },
                  {
                    "columnId": "numOfResources",
                    "label": "Applies to"
                  },
                  {
                    "columnId": "timeGenerated",
                    "label": "Time generated"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "k8smdvm"
              },
              {
                "parameterName": "k8sselected",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "K8s_Running_Images_Vulnerabilities_Full_ClusterView- MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\n    | where type =~ \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey=extract(@\"(?i)providers/Microsoft.Security/assessments/([^/]*)\", 1, id)\r\n    | extend subAssessmentId=tostring(properties.id)\r\n    | extend parentResourceId= extract(\"(.+)/providers/Microsoft.Security\", 1, id)\r\n    | extend resourceId = extract(@'(?i)(.*?)@([^/]+)', 1,tostring(properties.resourceDetails.id))\r\n    | extend selectedContainer=\"true\"\r\n    | extend subAssessmentName=tostring(properties.displayName)\r\n    | extend subAssessmentDescription=tostring(properties.description)\r\n    | extend subAssessmentRemediation=tostring(properties.remediation)\r\n    | extend subAssessmentCategory=tostring(properties.category)\r\n    | extend subAssessmentImpact=tostring(properties.impact)\r\n    | extend severity=tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend status=tostring(properties.status.code)\r\n    | extend cause=tostring(properties.status.cause)\r\n    | extend statusDescription=tostring(properties.status.description)\r\n    | extend additionalData=tostring(properties.additionalData)\r\n    | extend isPubliclyDisclosed=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isPubliclyDisclosed==\"true\",\"Yes\",\"No\"),\r\n            isInExploitKit=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isInExploitKit==\"true\",\"Yes\",\"No\"),\r\n            isVerified= iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isVerified==\"true\",\"Yes\",\"No\")\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend imageUri = properties.resourceDetails.id\r\n    | where assessmentKey == \"c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5\"\r\n    | where status == \"Unhealthy\"\r\n    | where subAssessmentId == '{selectedAssessmentId}'\r\n    |extend vendor = tostring(parse_json(properties).additionalData.softwareDetails.vendor)\r\n    |extend osDistribution = tostring(parse_json(properties).additionalData.softwareDetails.osDetails.osPlatform)\r\n    |extend tags = tostring(properties.additionalData.artifactDetails.tags)\r\n    |extend tags = replace(\"\\\\[|\\\\]|\\\"\", \"\", tags)\r\n     |mv-expand references = todynamic(parse_json(properties).[\"additionalData\"].[\"vulnerabilityDetails\"].[\"references\"])\r\n   | extend referenceLink = references.link\r\n    | summarize referenceLinks = make_list(strcat(referenceLink, \"\\n\")) by \r\n        ['cluster'], \r\n        subAssessmentId, \r\n        resourceId, \r\n        tostring(imageUri),\r\n        subAssessmentName, \r\n        tags,\r\n        severity, \r\n        vendor,\r\n        osDistribution,\r\n        subAssessmentDescription, \r\n        subAssessmentRemediation, \r\n        subAssessmentImpact, \r\n        isPubliclyDisclosed,\r\n        isVerified,\r\n        isInExploitKit,\r\n        patchable = iff(tostring(properties.additionalData.[\"softwareDetails\"].[\"patchable\"])==\"true\",\"Yes\", \"No\"), \r\n        published = format_datetime(todatetime(properties.additionalData.[\"vulnerabilityDetails\"].[\"publishedDate\"]), 'MM/d/yyyy h:m:s tt'), \r\n        selectedContainer",
              "size": 3,
              "title": "Containers Affected by the Vulnerability | Select a Container to see more details",
              "noDataMessage": "No vulnerable containers found",
              "exportedParameters": [
                {
                  "fieldName": "subAssessmentDescription",
                  "parameterName": "k8sSubAssessmentDescription",
                  "parameterType": 1
                },
                {
                  "fieldName": "subAssessmentRemediation",
                  "parameterName": "k8sSubAssessmentRemediation",
                  "parameterType": 1
                },
                {
                  "fieldName": "subAssessmentImpact",
                  "parameterName": "k8sSubAssessmentImpact",
                  "parameterType": 1
                },
                {
                  "fieldName": "subAssessmentId",
                  "parameterName": "k8sId",
                  "parameterType": 1
                },
                {
                  "fieldName": "severity",
                  "parameterName": "k8sSeverity",
                  "parameterType": 1
                },
                {
                  "fieldName": "patchable",
                  "parameterName": "k8sPatchable",
                  "parameterType": 1
                },
                {
                  "fieldName": "published",
                  "parameterName": "k8sPublished",
                  "parameterType": 1
                },
                {
                  "fieldName": "cveurl",
                  "parameterName": "k8sCveUrl",
                  "parameterType": 1
                },
                {
                  "fieldName": "cveid",
                  "parameterName": "k8sCveId",
                  "parameterType": 1
                },
                {
                  "fieldName": "selectedContainer",
                  "parameterName": "k8sSelectedContainer",
                  "parameterType": 1,
                  "defaultValue": "false"
                },
                {
                  "fieldName": "isPubliclyDisclosed",
                  "parameterName": "k8sPubliclyDisclosed",
                  "parameterType": 1
                },
                {
                  "fieldName": "isVerified",
                  "parameterName": "k8sVerified",
                  "parameterType": 1
                },
                {
                  "fieldName": "isInExploitKit",
                  "parameterName": "k8sExploitKit",
                  "parameterType": 1
                },
                {
                  "fieldName": "referenceLinks",
                  "parameterName": "k8sReferences",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resourceId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subAssessmentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "cvss30score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss30Vector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "fixStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "FixAvailable",
                          "representation": "success",
                          "text": "Fix Available"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "subAssessmentDescription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subAssessmentRemediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subAssessmentImpact",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isPubliclyDisclosed",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isVerified",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isInExploitKit",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "patchable",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "published",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "selectedContainer",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceLinks",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "labelSettings": [
                  {
                    "columnId": "cluster",
                    "label": "Cluster"
                  },
                  {
                    "columnId": "subAssessmentId",
                    "label": "ID"
                  },
                  {
                    "columnId": "resourceId",
                    "label": "Image "
                  },
                  {
                    "columnId": "imageUri",
                    "label": "Image URI"
                  },
                  {
                    "columnId": "subAssessmentName",
                    "label": "Security check"
                  },
                  {
                    "columnId": "tags",
                    "label": "Tags"
                  },
                  {
                    "columnId": "severity",
                    "label": "Severity"
                  },
                  {
                    "columnId": "vendor",
                    "label": "Vendor"
                  },
                  {
                    "columnId": "osDistribution",
                    "label": "OS Distrubution"
                  },
                  {
                    "columnId": "isPubliclyDisclosed",
                    "label": "Exploit Steps Published"
                  },
                  {
                    "columnId": "isVerified",
                    "label": "Exploit Steps Verified"
                  },
                  {
                    "columnId": "isInExploitKit",
                    "label": "In Exploit Kit"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "k8smdvm"
              },
              {
                "parameterName": "k8sSelectedVulnerability",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "K8s_Containers_Affected_By_Vulnerability-MDVM"
          },
          {
            "type": 1,
            "content": {
              "json": "### Description \r\n{k8sSubAssessmentDescription}\r\n\r\n### Remediation\r\n{k8sSubAssessmentRemediation}\r\n### General Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Severity</th>\r\n    <th>Patchable</th>\r\n\t<th>Published</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{k8sId}</td>\r\n    <td>{k8sSeverity}</td>\r\n    <td>{k8sPatchable}</td>\r\n\t<td>{k8sPublished}</td>\r\n  </tr>\r\n  </table>\r\n\r\n  ### Exploitability Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th>In Exploit Kit</th>\r\n\t<th>Publicly Disclosed</th>\r\n\t<th>Verified</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{k8sExploitKit}</td>\r\n    <td>{k8sPubliclyDisclosed}</td>\r\n\t<td>{k8sVerified}</td>\r\n  </tr>\r\n  </table>\r\n\r\n### Reference Information\r\n{k8sReferences} <br>\r\n <br> <br>\r\n\r\n\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "k8smdvm"
              },
              {
                "parameterName": "k8sSelectedContainer",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "k8s_Vulnerability_Card-MDVM"
          }
        ]
      },
      "name": "k8smdvm"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \nâ€¯â€¯â€¯â€¯|â€¯whereâ€¯typeâ€¯==â€¯\"microsoft.security/assessments\" \nâ€¯â€¯â€¯â€¯|â€¯extendâ€¯healthStateâ€¯=â€¯properties.status.code    \n    | extend url = strcat(\"https://\", properties.links.azurePortal)\n    | extend resource = tostring(properties.resourceDetails.Id)\n    | extend resourcesecblade = strcat(tostring(id), \"/security\")\n    | extend recommendation = tostring(properties.metadata.displayName)\n    | extend ResourceType = id \n    | extend AssessmentKey = name\n    | where healthState in ('Unhealthy')\n    | where recommendation contains ('Policy add-on for Kubernetes installed')\n    | project \n        resource,\n        recommendation, \n        AssessmentKey\n    | order by recommendation desc\n    | take 5",
              "size": 1,
              "title": "Missing Azure Policy add-on for Kubernetes",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "recommendation",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "110ch"
                    }
                  },
                  {
                    "columnMatch": "AssessmentKey",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkLabel": "Recommendation Link",
                      "bladeOpenContext": {
                        "bladeName": "RecommendationsBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "assessmentKey",
                            "source": "column",
                            "value": "AssessmentKey"
                          }
                        ]
                      }
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "recommendation",
                    "label": "Recommendation"
                  },
                  {
                    "columnId": "AssessmentKey",
                    "label": "Link "
                  }
                ]
              }
            },
            "name": "Recommendations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\nâ€¯â€¯â€¯â€¯|â€¯whereâ€¯typeâ€¯==â€¯\"microsoft.security/assessments\" \r\nâ€¯â€¯â€¯â€¯|â€¯extendâ€¯healthStateâ€¯=â€¯properties.status.code    \r\n    | extend url = strcat(\"https://\", properties.links.azurePortal)\r\n    | extend resource = tostring(properties.resourceDetails.Id)\r\n    | extend recommendation = tostring(properties.metadata.displayName)\r\n    | extend recommendationID = tostring(properties.links.azurePortal)\r\n    | extend ResourceType = tolower(split(id,\"/\").[6])\r\n    | extend AssessmentKey = name\r\n    | where healthState in ('Unhealthy')\r\n    | where recommendationID contains ('405c9ae6-49f9-46c4-8873-a86690f27818') or recommendationID contains ('8d244d29-fa00-4332-b935-c3a51d525417') or recommendationID contains ('11c95609-3553-430d-b788-fd41cde8b2db') or recommendationID contains ('86f91051-9d6a-47c3-a07f-bd14cb214b45') or recommendationID contains ('add45209-73f6-4fa5-a5a5-74a451b07fbe') or recommendationID contains ('ebc68898-5c0f-4353-a426-4a5f1e737b12') or recommendationID contains ('f0debc84-981c-4a0d-924d-aa4bd7d55fef') or recommendationID contains ('43dc2a2e-ce69-4d42-923e-ab7d136f2cfe') or recommendationID contains ('802c0637-5a8c-4c98-abd7-7c96d89d6010') or recommendationID contains ('27d6f0e9-b4d5-468b-ae7e-03d5473fd864') or  recommendationID contains ('c6d87087-9ebe-b31f-b452-0bf3bbbaccd2') or recommendationID contains  ('32060ac3-f17f-4848-db8e-e7cf2c9a53eb') or recommendationID contains ('ff87e0b4-17df-d338-5b19-80e71e0dcc9d') or recommendationID contains ('aba14f78-27c5-af84-848e-9105d18dfd92') or recommendationID contains ('5d90913f-a1c5-4429-ad54-2c6c17fb3c73') or recommendationID contains ('9b795646-9130-41a4-90b7-df9eae2437c8') or recommendationID contains ('111cb068-89df-48bd-9493-2e6773444af8')\r\n\r\n    | project \r\n        resource, \r\n        recommendation,\r\n        AssessmentKey\r\n        \r\n    | order by recommendation desc\r\n    ",
              "size": 2,
              "title": "Data plan recommendations",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "120ch"
                    }
                  },
                  {
                    "columnMatch": "resource",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "50ch"
                    }
                  },
                  {
                    "columnMatch": "recommendation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AssessmentKey",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkLabel": "Recommendation Link",
                      "bladeOpenContext": {
                        "bladeName": "RecommendationsBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "assessmentKey",
                            "source": "column",
                            "value": "AssessmentKey"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "120ch"
                    }
                  },
                  {
                    "columnMatch": "url",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "recommendation"
                  ],
                  "expandTopLevel": false
                },
                "labelSettings": [
                  {
                    "columnId": "resource",
                    "label": "Resource "
                  },
                  {
                    "columnId": "recommendation",
                    "label": "Recommendation"
                  },
                  {
                    "columnId": "AssessmentKey",
                    "label": "Link"
                  }
                ]
              },
              "tileSettings": {
                "showBorder": false
              },
              "graphSettings": {
                "type": 0
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "k8srecommendation",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "Hareden"
              }
            ],
            "name": "query - 30"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\nâ€¯â€¯â€¯â€¯|â€¯whereâ€¯typeâ€¯==â€¯\"microsoft.security/assessments\" \r\nâ€¯â€¯â€¯â€¯|â€¯extendâ€¯healthStateâ€¯=â€¯properties.status.code    \r\n    | extend url = strcat(\"https://\", properties.links.azurePortal)\r\n    | extend resource = tostring(properties.resourceDetails.Id)\r\n    | extend recommendation = tostring(properties.metadata.displayName)\r\n    | extend recommendationID = tostring(properties.links.azurePortal)\r\n    | extend ResourceType = tolower(split(id,\"/\").[6])\r\n    | extend AssessmentKey = name\r\n    | where healthState in ('Unhealthy')\r\n    | where recommendationID contains ('e599a9fe-30e3-47c6-a173-8b4b6d9d3255') or recommendationID contains ('56a83a6e-c417-42ec-b567-1e6fcb3d09a9') or recommendationID contains ('3ef9848c-c2c8-4ff3-8b9c-4c8eb8ddfce6') or recommendationID contains ('08e628db-e2ed-4793-bc91-d13e684401c3') or recommendationID contains ('0642d770-b189-42ef-a2ce-9dcc3ec6c169') or recommendationID contains ('b0fdc63a-38e7-4bab-a7c4-2c2665abbaa9') or  recommendationID contains ('1a2b5b4c-f80d-46e7-ac81-b51a9fb363de') or recommendationID contains  ('32060ac3-f17f-4848-db8e-e7cf2c9a53eb') or recommendationID contains ('ff87e0b4-17df-d338-5b19-80e71e0dcc9d') or recommendationID contains ('aba14f78-27c5-af84-848e-9105d18dfd92') or recommendationID contains ('bb318338-de6a-42ff-8428-8274c897d564') \r\n    | project \r\n        resource, \r\n        recommendation,\r\n        AssessmentKey\r\n        \r\n    | order by recommendation desc\r\n    ",
              "size": 2,
              "title": "Control plan recommendations",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "120ch"
                    }
                  },
                  {
                    "columnMatch": "recommendation",
                    "formatter": 5,
                    "formatOptions": {
                      "aggregation": "Count"
                    }
                  },
                  {
                    "columnMatch": "AssessmentKey",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkLabel": "Recommendation Link",
                      "bladeOpenContext": {
                        "bladeName": "RecommendationsBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "assessmentKey",
                            "source": "column",
                            "value": "AssessmentKey"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "120ch"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "recommendation"
                  ]
                },
                "labelSettings": [
                  {
                    "columnId": "resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "recommendation",
                    "label": "Recommendation"
                  },
                  {
                    "columnId": "AssessmentKey",
                    "label": "Link"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "k8srecommendation",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "Hareden"
              }
            ],
            "name": "query - 2"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "Hareden"
      },
      "name": "HaredenGroup"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend ResourceGroup = tolower(trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)))\r\n    | extend ResourceType = strcat(tolower(split(id,\"/\").[6]), \"/\",tolower(split(id,\"/\").[7]))\r\n    | extend severity = tostring(parse_json(properties).status.severity)\r\n    | extend status = tostring(parse_json(properties).status.code)\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend description = tostring(parse_json(properties).displayName),patchable = parse_json(properties.additionalData).data.Patchable, cve = parse_json(properties.additionalData).cve\r\n    | where assessmentKey == \"41503391-efa5-47ee-9282-4eff6131462c\"\r\n    | where ResourceType in~ ({k8sarc})\r\n    | where Resource in~ ({k8sclu})\r\n    | project \r\n        Resource, \r\n        ResourceGroup, \r\n        ResourceType, \r\n        subscriptionId, \r\n        severity, \r\n        status, \r\n        VulnId, \r\n        description, \r\n        patchable, \r\n        cve\r\n    | where status == 'Unhealthy'\r\n    | summarize \r\n        dcount(VulnId) by ResourceGroup, \r\n        Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(patchable), \r\n        tostring(cve)\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        patchAvailable = countif(patchable=='true'), \r\n        CVEcount =countif(cve!='[]') by ResourceGroup, \r\n        Resource, \r\n        k8sselected = \"true\"\r\n    | order by sevH desc",
        "size": 1,
        "title": "Vulnerable Images |  Select a Cluster to view the list of vulnerabilities",
        "noDataMessage": "No unhealthy Kubernetes found",
        "exportedParameters": [
          {
            "fieldName": "Resource",
            "parameterName": "selectedk8s",
            "defaultValue": "All"
          },
          {
            "fieldName": "k8sselected",
            "parameterName": "k8sselected",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "k8sselected",
              "formatter": 5
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev0",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev1",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev3",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                }
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Patch"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "k8s"
      },
      "name": "k8s_Running_Images_Vulnerabilities_Qualys"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n    | where type =~ \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey=extract(@\"(?i)providers/Microsoft.Security/assessments/([^/]*)\", 1, id)\r\n    | extend subAssessmentId=tostring(properties.id)\r\n    | extend parentResourceId= extract(\"(.+)/providers/Microsoft.Security\", 1, id)\r\n    | extend resourceId = tostring(properties.resourceDetails.id)\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend selectedVulnerability=\"true\"\r\n    | extend subAssessmentName=tostring(properties.displayName)\r\n    | extend subAssessmentDescription=tostring(properties.description)\r\n    | extend subAssessmentRemediation=tostring(properties.remediation)\r\n    | extend subAssessmentCategory=tostring(properties.category)\r\n    | extend subAssessmentImpact=tostring(properties.impact)\r\n    | extend severity=tostring(properties.status.severity)\r\n    | extend status=tostring(properties.status.code)\r\n    | extend cause=tostring(properties.status.cause)\r\n    | extend statusDescription=tostring(properties.status.description)\r\n    | extend additionalData=tostring(properties.additionalData)\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where assessmentKey == \"41503391-efa5-47ee-9282-4eff6131462c\"\r\n    | where status == \"Unhealthy\"\r\n    | where '{selectedk8s}' == 'All' or cluster ==  '{selectedk8s}'\r\n    | summarize \r\n        numOfResources=strcat(dcount(resourceId), \" \", \"Containers\"), \r\n        timeGenerated=arg_max(todatetime(properties.timeGenerated), additionalData) by assessmentKey, \r\n        ['cluster'],\r\n        subAssessmentId, \r\n        subAssessmentName, \r\n        subAssessmentCategory, \r\n        severity,\r\n        patchable = iff(tostring(properties.additionalData.[\"data\"].[\"Patchable\"])==\"true\",\"Yes\", \"No\"),\r\n        selectedVulnerability\r\n    | project-away \r\n        assessmentKey, \r\n        additionalData\r\n    | order by ['subAssessmentId'] asc",
        "size": 0,
        "title": "Kubernetes Vulenrabilities | Select a Vulnerability to see effected Contianers",
        "noDataMessage": "No vulnerabilities found",
        "exportedParameters": [
          {
            "fieldName": "subAssessmentId",
            "parameterName": "selectedAssessmentId",
            "defaultValue": "All"
          },
          {
            "fieldName": "selectedVulnerability",
            "parameterName": "k8sSelectedVulnerability",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subAssessmentName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "150ch"
              }
            },
            {
              "columnMatch": "severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Medium",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Low",
                    "representation": "blue",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "patchable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Yes",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "No",
                    "representation": "disabled",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "more",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "selectedVulnerability",
              "formatter": 5
            },
            {
              "columnMatch": "timeGenerated",
              "formatter": 5
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "cluster",
              "label": "Cluster"
            },
            {
              "columnId": "subAssessmentId",
              "label": "ID"
            },
            {
              "columnId": "subAssessmentName",
              "label": "Security check"
            },
            {
              "columnId": "subAssessmentCategory",
              "label": "Category"
            },
            {
              "columnId": "severity",
              "label": "Severity"
            },
            {
              "columnId": "patchable",
              "label": "Patch"
            },
            {
              "columnId": "numOfResources",
              "label": "Applies to"
            },
            {
              "columnId": "timeGenerated",
              "label": "Time generated"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "k8s"
        },
        {
          "parameterName": "k8sselected",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "K8s_Running_Images_Vulnerabilities_Full_ListbyCluster_Qualys"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n    | where type =~ \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey=extract(@\"(?i)providers/Microsoft.Security/assessments/([^/]*)\", 1, id)\r\n    | extend subAssessmentId=tostring(properties.id)\r\n    | extend parentResourceId= extract(\"(.+)/providers/Microsoft.Security\", 1, id)\r\n    | extend resourceId = extract(@'(?i)(.*?)@([^/]+)', 1,tostring(properties.resourceDetails.id))\r\n    | extend selectedContainer=\"true\"\r\n    | extend subAssessmentName=tostring(properties.displayName)\r\n    | extend subAssessmentDescription=tostring(properties.description)\r\n    | extend subAssessmentRemediation=tostring(properties.remediation)\r\n    | extend subAssessmentCategory=tostring(properties.category)\r\n    | extend subAssessmentImpact=tostring(properties.impact)\r\n    | extend severity=tostring(properties.status.severity)\r\n    | extend status=tostring(properties.status.code)\r\n    | extend cause=tostring(properties.status.cause)\r\n    | extend statusDescription=tostring(properties.status.description)\r\n    | extend additionalData=tostring(properties.additionalData)\r\n    | extend cluster = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where assessmentKey == \"41503391-efa5-47ee-9282-4eff6131462c\"\r\n    | where status == \"Unhealthy\"\r\n    | where subAssessmentId == '{selectedAssessmentId}'\r\n    | project \r\n        ['cluster'], \r\n        subAssessmentId, \r\n        resourceId, \r\n        subAssessmentName, \r\n        severity, \r\n        subAssessmentDescription, \r\n        subAssessmentRemediation, \r\n        subAssessmentImpact, \r\n        patchable = iff(tostring(properties.additionalData.[\"data\"].[\"Patchable\"])==\"true\",\"Yes\", \"No\"), \r\n        published = format_datetime(todatetime(properties.additionalData.[\"data\"].[\"PublishedTime\"]), 'MM/d/yyyy h:m:s tt'), \r\n        selectedContainer",
        "size": 3,
        "title": "Containers Affected by the Vulnerability | Select a Container to see more details",
        "noDataMessage": "No vulnerable containers found",
        "exportedParameters": [
          {
            "fieldName": "subAssessmentDescription",
            "parameterName": "k8sSubAssessmentDescription",
            "parameterType": 1
          },
          {
            "fieldName": "subAssessmentRemediation",
            "parameterName": "k8sSubAssessmentRemediation",
            "parameterType": 1
          },
          {
            "fieldName": "subAssessmentImpact",
            "parameterName": "k8sSubAssessmentImpact",
            "parameterType": 1
          },
          {
            "fieldName": "subAssessmentId",
            "parameterName": "k8sId",
            "parameterType": 1
          },
          {
            "fieldName": "severity",
            "parameterName": "k8sSeverity",
            "parameterType": 1
          },
          {
            "fieldName": "patchable",
            "parameterName": "k8sPatchable",
            "parameterType": 1
          },
          {
            "fieldName": "published",
            "parameterName": "k8sPublished",
            "parameterType": 1
          },
          {
            "fieldName": "cveurl",
            "parameterName": "k8sCveUrl",
            "parameterType": 1
          },
          {
            "fieldName": "cveid",
            "parameterName": "k8sCveId",
            "parameterType": 1
          },
          {
            "fieldName": "selectedContainer",
            "parameterName": "k8sSelectedContainer",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Medium",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Low",
                    "representation": "blue",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "subAssessmentDescription",
              "formatter": 5
            },
            {
              "columnMatch": "subAssessmentRemediation",
              "formatter": 5
            },
            {
              "columnMatch": "subAssessmentImpact",
              "formatter": 5
            },
            {
              "columnMatch": "patchable",
              "formatter": 5
            },
            {
              "columnMatch": "published",
              "formatter": 5
            },
            {
              "columnMatch": "selectedContainer",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "cluster",
              "label": "Cluster"
            },
            {
              "columnId": "subAssessmentId",
              "label": "ID"
            },
            {
              "columnId": "resourceId",
              "label": "Image"
            },
            {
              "columnId": "subAssessmentName",
              "label": "Security check"
            },
            {
              "columnId": "severity",
              "label": "Severity"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "k8s"
        },
        {
          "parameterName": "k8sSelectedVulnerability",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "K8s_Containers_Affected_By_Vulnerability_Qualys"
    },
    {
      "type": 1,
      "content": {
        "json": "### Description \r\n{k8sSubAssessmentDescription}\r\n### Remediation\r\n{k8sSubAssessmentRemediation}\r\n### General Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Severity</th>\r\n    <th>Patchable</th>\r\n\t<th>Published</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{k8sId}</td>\r\n    <td>{k8sSeverity}</td>\r\n    <td>{k8sPatchable}</td>\r\n\t<td>{k8sPublished}</td>\r\n  </tr>\r\n  </table>\r\n### Impact\r\n{k8sSubAssessmentImpact}\r\n\r\n",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "k8s"
        },
        {
          "parameterName": "k8sSelectedContainer",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "k8s_Vulnerability_Card_Qualys"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Container Registry - Vulnerabilities\r\n\r\nCVE data comes from Defender for Cloud Containers vulnerability assessment solutions. \r\nThese tools show vulnerabilities through the following security recommendations:\r\n- [Container registry images should have vulnerability findings resolved](https://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/dbd0cb49-b563-45e7-9724-889e799fa648)\r\n\r\nLearn more about Microsoft's [ Microsoft Defender for Containers](https://docs.microsoft.com/en-us/azure/defender-for-cloud/defender-for-containers-introduction)."
            },
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "acr"
            },
            "name": "Acr_Vulnerabilities_Text-Qualys"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | extend Category = tostring(properties.category)\r\n    | extend status = tostring(parse_json(properties).status.code)\r\n    | extend severity = tostring(parse_json(properties).status.severity)\r\n    | extend vulId=tostring((properties).id)\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n    | where Resource in~({acrs})\r\n    | where status == 'Unhealthy' \r\n    | distinct \r\n        vulId, \r\n        severity\r\n    | summarize count=count() by tostring(severity)",
              "size": 4,
              "title": "Vulnerabilities by Severity",
              "noDataMessage": "No vulnerabilities found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Category",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "count",
                "sortOrderField": 2
              }
            },
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "acr"
            },
            "name": "Acr_Vulnerability_Seveirty_Qualys"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)),\r\n        ResourceType = tolower(split(id,\"/\").[6]), \r\n        subscriptionId, severity = tostring(parse_json(properties).status.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id), \r\n        description = tostring(parse_json(properties).displayName), \r\n        patchable = parse_json(properties.additionalData).patchable, \r\n        cve = parse_json(properties.additionalData).cve\r\n    | where Resource in~({acrs})\r\n    | where status == 'Unhealthy'\r\n    | summarize \r\n        dcount(VulnId) by ResourceGroup, \r\n        Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(patchable), \r\n        tostring(cve)\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        patchAvailable = countif(patchable=='true'), \r\n        CVEcount =countif(cve!='[]') by ResourceGroup, \r\n        Resource, \r\n        acrSelected = \"true\"\r\n    | order by sevH desc",
              "size": 1,
              "title": "Vulnerable container registries |  Select a container registry to view the list of vulnerable containers and the security recommendation for the registry ",
              "noDataMessage": "No unhealthy registries found",
              "exportedParameters": [
                {
                  "fieldName": "Resource",
                  "parameterName": "selectedACR",
                  "parameterType": 5,
                  "defaultValue": "All"
                },
                {
                  "fieldName": "acrSelected",
                  "parameterName": "acrSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "acrSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevH",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "sevM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev1",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevL",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev3",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "patchAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pending",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "CVEcount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "ResourceGroup"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Resource"
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "sevH",
                    "label": "High"
                  },
                  {
                    "columnId": "sevM",
                    "label": "Medium"
                  },
                  {
                    "columnId": "sevL",
                    "label": "Low"
                  },
                  {
                    "columnId": "patchAvailable",
                    "label": "Available patches"
                  },
                  {
                    "columnId": "CVEcount",
                    "label": "CVEs"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "tab",
              "comparison": "isEqualTo",
              "value": "acr"
            },
            "name": "Acr_Vulnerabilities_List_Qualys_byRegistry"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\nâ€¯â€¯â€¯â€¯|â€¯whereâ€¯typeâ€¯==â€¯\"microsoft.security/assessments\" \r\nâ€¯â€¯â€¯â€¯|â€¯extendâ€¯healthStateâ€¯=â€¯properties.status.code \r\n    | extend url = strcat(\"https://\", properties.links.azurePortal)\r\n    | extend resource = tostring(properties.resourceDetails.Id)\r\n    | extend recommendation = tostring(properties.metadata.displayName)\r\n    | extend ResourceType = tolower(split(id,\"/\").[6])\r\n    | where resource == ('{selectedACR}') \r\n    | where healthState in ('Unhealthy') and ResourceType == \"microsoft.containerregistry\"\r\n    | project \r\n        resource, \r\n        recommendation, \r\n        url\r\n    | order by recommendation asc",
              "size": 1,
              "title": "Azure Container Registry Security Recommendations",
              "noDataMessage": "No security recommendations found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "recommendation",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "150ch"
                    }
                  },
                  {
                    "columnMatch": "url",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "URL"
                    }
                  },
                  {
                    "columnMatch": "healthState",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "properties_metadata_displayName",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "properties_resourceDetails_Id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "value",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "recommendation",
                    "label": "Security Recommendation"
                  },
                  {
                    "columnId": "url",
                    "label": "URL"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "acr"
              },
              {
                "parameterName": "acrSelected",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "acrrecommendation",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "ACR_Recommendations_Qualys"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        ResourceType = tolower(split(id,\"/\").[6]), \r\n        subscriptionId, \r\n        severity = tostring(parse_json(properties).status.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id), \r\n        description = tostring(parse_json(properties).displayName), \r\n        patchable = parse_json(properties.additionalData).patchable, \r\n        cve = parse_json(properties.additionalData).cve, \r\n        Repo = tostring(parse_json(properties.additionalData).repositoryName), \r\n        imageDigest = tostring(parse_json(properties.additionalData).imageDigest)\r\n    | where status == 'Unhealthy' \r\n    | where Resource == '{selectedACR}'\r\n    | summarize \r\n        dcount(VulnId) by Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(patchable), \r\n        tostring(cve), \r\n        Repo, \r\n        imageDigest\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        patchAvailable = countif(patchable=='true'), \r\n        CVEcount =countif(cve!='[]') by Resource, \r\n        Repo, \r\n        imageDigest, \r\n        repoSelected=\"true\"\r\n    | order by sevH desc",
              "size": 3,
              "title": "Vulnerable images | Select an Image to see the vulnerabilities",
              "noDataMessage": "No vulnerable images found",
              "exportedParameters": [
                {
                  "fieldName": "Repo",
                  "parameterName": "SelectedRepo",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "repoSelected",
                  "parameterName": "acrRepoSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Repo",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "imageDigest",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "80ch"
                    }
                  },
                  {
                    "columnMatch": "repoSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevH",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "redBright",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevM",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "yellow",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevL",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "blueDark",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "patchAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pending",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "CVEcount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ],
                "rowLimit": 1000,
                "labelSettings": [
                  {
                    "columnId": "Repo",
                    "label": "Repository"
                  },
                  {
                    "columnId": "imageDigest",
                    "label": "Image digest"
                  },
                  {
                    "columnId": "sevH",
                    "label": "High"
                  },
                  {
                    "columnId": "sevM",
                    "label": "Medium"
                  },
                  {
                    "columnId": "sevL",
                    "label": "Low"
                  },
                  {
                    "columnId": "patchAvailable",
                    "label": "Patch"
                  },
                  {
                    "columnId": "CVEcount",
                    "label": "CVEs"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "acr"
              },
              {
                "parameterName": "acrSelected",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "Acr_Image_Vilnerabilty_ListbyRegisttry_Qualys"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n    | extend cvss20score=properties.[\"additionalData\"].[\"cvss\"].[\"2.0\"].[\"base\"]\r\n    | extend itemSelected=\"true\"\r\n    | extend cvss20Vector=properties.[\"additionalData\"].[\"cvss\"].[\"2.0\"].[\"cvssVectorString\"]\r\n    | extend cvss30score=properties.[\"additionalData\"].[\"cvss\"].[\"3.0\"].[\"base\"]\r\n    | extend cvss30Vector=properties.[\"additionalData\"].[\"cvss\"].[\"3.0\"].[\"cvssVectorString\"]\r\n    | extend description=properties.[\"description\"]\r\n    | extend remediation=properties.[\"remediation\"]\r\n    | extend impact=properties.[\"impact\"]\r\n    | extend category=properties.[\"category\"]\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | extend RepositoryName=tostring(properties.additionalData.repositoryName)\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend PublishedTime=format_datetime(todatetime(properties.additionalData.[\"publishedTime\"]), 'MM/d/yyyy h:m:s tt')\r\n    | extend TimeGenerated=format_datetime(todatetime(properties.timeGenerated), 'MM/d/yyyy h:m:s tt')\r\n    | extend Status = tostring(parse_json(properties).status.code)\r\n    | extend Severity=properties.status.severity\r\n    | extend Patchable=iff(tostring(properties.additionalData.patchable)==\"true\",\"Yes\", \"No\")\r\n    | extend Issue=properties.displayName\r\n    | extend ImageDigest=tostring(properties.additionalData.imageDigest)\r\n    | project \r\n        itemSelected,\r\n        subscriptionId,\r\n        Resource, \r\n        RepositoryName, \r\n        VulnId, \r\n        PublishedTime,\r\n        TimeGenerated,\r\n        Status,\r\n        Severity,\r\n        Patchable,\r\n        Issue,\r\n        ImageDigest,\r\n        cvss20score,\r\n        cvss20Vector,\r\n        cvss30score,\r\n        cvss30Vector,\r\n        description,\r\n        remediation,\r\n        impact,\r\n        category\r\n    | where Status == 'Unhealthy'\r\n    | where RepositoryName == '{SelectedRepo}'\r\n    | project-away Status ",
              "size": 1,
              "title": "Vulnerabilities | Select Vulnerability to see more details",
              "noDataMessage": "No vulnerability found",
              "exportedParameters": [
                {
                  "fieldName": "RepositoryName",
                  "parameterName": "acrRepositoryName",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "description",
                  "parameterName": "acrDescription",
                  "parameterType": 1
                },
                {
                  "fieldName": "remediation",
                  "parameterName": "acrRemediation",
                  "parameterType": 1
                },
                {
                  "fieldName": "Issue",
                  "parameterName": "acrIssue",
                  "parameterType": 1
                },
                {
                  "fieldName": "VulnId",
                  "parameterName": "acrVulnId",
                  "parameterType": 1
                },
                {
                  "fieldName": "Severity",
                  "parameterName": "acrSeverity",
                  "parameterType": 1
                },
                {
                  "fieldName": "impact",
                  "parameterName": "acrImpact",
                  "parameterType": 1
                },
                {
                  "fieldName": "PublishedTime",
                  "parameterName": "acrPublishedTime",
                  "parameterType": 1
                },
                {
                  "fieldName": "Patchable",
                  "parameterName": "acrPatchable",
                  "parameterType": 1
                },
                {
                  "fieldName": "itemSelected",
                  "parameterName": "acrItemSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                },
                {
                  "fieldName": "cvss20Vector",
                  "parameterName": "acrCvss20Vector",
                  "parameterType": 1
                },
                {
                  "fieldName": "cvss30Vector",
                  "parameterName": "acrCvss30Vector",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "itemSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "PublishedTime",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Patchable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "disabled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Issue",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "cvss20score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss20Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "cvss30score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "minimumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss30Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "remediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "impact",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "category",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "cveTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "cveURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "cveURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "vendorReferencesTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "vendorReferencesURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "vendorReferencesURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "sortBy": [
                  {
                    "itemKey": "Issue",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription name"
                  },
                  {
                    "columnId": "RepositoryName",
                    "label": "Repository name"
                  },
                  {
                    "columnId": "VulnId",
                    "label": "Vulnerability ID"
                  },
                  {
                    "columnId": "PublishedTime",
                    "label": "Published time"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  },
                  {
                    "columnId": "Patchable",
                    "label": "Patch available"
                  },
                  {
                    "columnId": "ImageDigest",
                    "label": "Image digest"
                  },
                  {
                    "columnId": "cvss20score",
                    "label": "CVSS 2.0"
                  },
                  {
                    "columnId": "cvss20Vector",
                    "label": "Threat vector"
                  },
                  {
                    "columnId": "cvss30score",
                    "label": "CVSS 3.0"
                  },
                  {
                    "columnId": "cvss30Vector",
                    "label": "Threat vector"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Issue",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "acr"
              },
              {
                "parameterName": "acrRepoSelected",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "Acr_Image_Vulnerabilities_Full_ListbyRepo_Qualys"
          },
          {
            "type": 1,
            "content": {
              "json": "### Description for {acrRepositoryName} vulnerability\r\n{acrDescription} <br>\r\n{acrIssue} <br> <br>\r\nCVSS 2.0 Threat Vectors: {acrCvss20Vector} <br>\r\nCVSS 3.0 Threat Vectors\" {acrCvss30Vector}\r\n\r\n### Remediation\r\n{acrRemediation}\r\n### General Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Severity</th>\r\n\t<th>Patchable</th>\r\n\t<th>Published</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{acrVulnId}</td>\r\n    <td>{acrSeverity}</td>\r\n\t<td>{acrPatchable}</td>\r\n\t<td>{acrPublishedTime}</td>\r\n  </tr>\r\n  </table>\r\n### Impact\r\n{acrImpact}\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tab",
                "comparison": "isEqualTo",
                "value": "acr"
              },
              {
                "parameterName": "acrItemSelected",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "Acr_Vulnerability_card_Qualys"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "acr"
      },
      "name": "acrqualys"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Container Registry - Vulnerabilities\r\n\r\nThis dashboard is powered by the recommendation: [Container registry images should have vulnerability findings resolved (powered by Microsoft Defender Vulnerability Management)](https://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/c0b7cfc6-3172-465a-b378-53c7ff2cc0d5).\r\nClick [here](https://learn.microsoft.com/en-us/azure/defender-for-cloud/concept-agentless-containers) to learn more about how the scanning works. "
            },
            "name": "Acr_Vulnerabilities_Text_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | extend severity = tostring(properties.additionalData.vulnerabilityDetails.severity), Status = tostring(properties.status.code)\r\n    | extend status = tostring(parse_json(properties).status.code)\r\n    | extend vulId=tostring((properties).id)\r\n    | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n    | where Resource in~({acrs})\r\n    | where status == 'Unhealthy' \r\n    | distinct \r\n        vulId, \r\n        severity\r\n    | summarize count=count() by tostring(severity)",
              "size": 4,
              "title": "Vulnerabilities by severity",
              "noDataMessage": "No vulnerabilities found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Category",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    },
                    "emptyValCustomText": "Other"
                  }
                },
                "leftContent": {
                  "columnMatch": "count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    },
                    "emptyValCustomText": "Unkown"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "count",
                "sortOrderField": 2
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "severity",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "Acr_Vulnerability_Severity_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n   | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where Resource in~({acrs})\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend Status = tostring(parse_json(properties).status.code)\r\n    | extend Severity=tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend fixStatus = parse_json(properties.additionalData).softwareDetails.fixStatus\r\n    | extend imageUri = properties.resourceDetails.id,\r\n    isExploitStepsPublished=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.exploitStepsPublished==\"true\",\"Yes\",\"No\"),\r\n            isInExploitKit=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isInExploitKit==\"true\",\"Yes\",\"No\"),\r\n            isVerified= iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.exploitSetpsVerified==\"true\",\"Yes\",\"No\")\r\n | project \r\n        Resource, \r\n        imageUri,\r\n        VulnId, \r\n        Status,\r\n        Severity,\r\n        tostring(fixStatus),\r\n        isExploitStepsPublished,\r\n        isVerified,\r\n        isInExploitKit\r\n    | where Status == 'Unhealthy'\r\n    | where isExploitStepsPublished == \"Yes\" or isInExploitKit == \"Yes\" or isVerified == \"Yes\"\r\n    | project-away Status ",
              "size": 1,
              "title": "Exploitable Vulnerablities",
              "noDataMessage": "No exploitable vulnerabilities found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "fixStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "FixAvailable",
                          "representation": "success",
                          "text": "Fix Available"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown",
                          "representation": "unknown",
                          "text": "Unknown"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isExploitStepsPublished",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "2",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "success",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isVerified",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "4",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isInExploitKit",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "warning",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "Available",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "itemSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PublishedDate",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "cvss30score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "minimumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss30Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "remediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceLinks",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceTitle",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "category",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Issue",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "cvss20score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      },
                      "emptyValCustomText": "N/A"
                    }
                  },
                  {
                    "columnMatch": "cvss20Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "impact",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PublishedTime",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Patchable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "disabled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "cveTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "cveURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "cveURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "vendorReferencesTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "vendorReferencesURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "vendorReferencesURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "imageUri",
                    "label": "Image URI"
                  },
                  {
                    "columnId": "VulnId",
                    "label": "Vulnerability Id"
                  },
                  {
                    "columnId": "fixStatus",
                    "label": "Fix Status"
                  },
                  {
                    "columnId": "isExploitStepsPublished",
                    "label": "Exploit Steps Published"
                  },
                  {
                    "columnId": "isVerified",
                    "label": "Exploit Steps Verifiable"
                  },
                  {
                    "columnId": "isInExploitKit",
                    "label": "In Exploit Kit"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "name": "ACRExploitable_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)),\r\n        ResourceType = tolower(split(id,\"/\").[6]), \r\n        subscriptionId, severity = tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id), \r\n        description = tostring(parse_json(properties).displayName), \r\n        fixStatus = tostring(parse_json(properties).additionalData.softwareDetails.fixStatus), \r\n        cve = parse_json(properties.additionalData).cve\r\n    | where Resource in~({acrs})\r\n    | where status == 'Unhealthy'\r\n    | summarize \r\n        dcount(VulnId) by ResourceGroup, \r\n        Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(fixStatus), \r\n        tostring(cve)\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevC=countif(severity=='Critical'),\r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        fixAvailable = countif(fixStatus=='FixAvailable'), \r\n        CVEcount =countif(cve!='[]') by ResourceGroup, \r\n        Resource, \r\n        acrSelected = \"true\"\r\n    | order by sevH desc",
              "size": 1,
              "title": "Vulnerable container registries |  Select a container registry to view the list of vulnerable containers and the security recommendation for the registry ",
              "noDataMessage": "No unhealthy registries found",
              "exportedParameters": [
                {
                  "fieldName": "Resource",
                  "parameterName": "selectedACR",
                  "parameterType": 5,
                  "defaultValue": "All"
                },
                {
                  "fieldName": "acrSelected",
                  "parameterName": "acrSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Resource group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "acrSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevC",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevH",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev1",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "sevM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "sevL",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Sev3",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "fixAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "uninitialized",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "CVEcount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "patchAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pending",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "ResourceGroup"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Resource"
                },
                "labelSettings": [
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "sevC",
                    "label": "Critical"
                  },
                  {
                    "columnId": "sevH",
                    "label": "High"
                  },
                  {
                    "columnId": "sevM",
                    "label": "Medium"
                  },
                  {
                    "columnId": "sevL",
                    "label": "Low"
                  },
                  {
                    "columnId": "fixAvailable",
                    "label": "Fix Available"
                  },
                  {
                    "columnId": "CVEcount",
                    "label": "CVEs"
                  }
                ]
              },
              "sortBy": []
            },
            "name": "Acr_Vulnerabilities_List - MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources \r\nâ€¯â€¯â€¯â€¯|â€¯whereâ€¯typeâ€¯==â€¯\"microsoft.security/assessments\" \r\nâ€¯â€¯â€¯â€¯|â€¯extendâ€¯healthStateâ€¯=â€¯properties.status.code \r\n    | extend url = strcat(\"https://\", properties.links.azurePortal)\r\n    | extend resource = tostring(properties.resourceDetails.Id)\r\n    | extend recommendation = tostring(properties.metadata.displayName)\r\n    | extend ResourceType = tolower(split(id,\"/\").[6])\r\n    | where resource == ('{selectedACR}') \r\n    | where healthState in ('Unhealthy') and ResourceType == \"microsoft.containerregistry\"\r\n    | project \r\n        resource, \r\n        recommendation, \r\n        url\r\n    | order by recommendation asc",
              "size": 1,
              "title": "Azure Container Registry Security Recommendations",
              "noDataMessage": "No security recommendations found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "recommendation",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "150ch"
                    }
                  },
                  {
                    "columnMatch": "url",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "URL"
                    }
                  },
                  {
                    "columnMatch": "healthState",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "properties_metadata_displayName",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "properties_resourceDetails_Id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "value",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "resource",
                    "label": "Resource"
                  },
                  {
                    "columnId": "recommendation",
                    "label": "Security Recommendation"
                  },
                  {
                    "columnId": "url",
                    "label": "URL"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "acrSelected",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "acrrecommendation",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "ACR_Recommendations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n    | project \r\n        Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), \r\n        ResourceType = tolower(split(id,\"/\").[6]), \r\n        subscriptionId, \r\n        severity = tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity), \r\n        status = tostring(parse_json(properties).status.code), \r\n        VulnId = tostring(parse_json(properties).id), \r\n        description = tostring(parse_json(properties).displayName), \r\n        fixStatus = parse_json(properties.additionalData).softwareDetails.fixStatus, \r\n        cve = parse_json(properties.additionalData).cve, \r\n        Repo = tostring(parse_json(properties).additionalData.artifactDetails.repositoryName), \r\n        imageUri = tostring(parse_json(properties.resourceDetails).id)\r\n    | where status == 'Unhealthy' \r\n    | where Resource == '{selectedACR}'\r\n    | summarize \r\n        dcount(VulnId) by Resource, \r\n        severity, \r\n        VulnId, \r\n        description, \r\n        tostring(fixStatus), \r\n        tostring(cve), \r\n        Repo, \r\n        imageUri\r\n    | summarize \r\n        Total = count(dcount_VulnId), \r\n        sevC=countif(severity=='Critical'),\r\n        sevH=countif(severity=='High'), \r\n        sevM=countif(severity=='Medium'), \r\n        sevL=countif(severity=='Low'), \r\n        fixAvailable = countif(fixStatus=='FixAvailable'), \r\n        CVEcount =countif(cve!='[]') by Resource, \r\n        Repo, \r\n        imageUri, \r\n        repoSelected=\"true\"\r\n    | order by sevH desc",
              "size": 3,
              "title": "Vulnerable images | Select an Image to see the vulnerabilities",
              "noDataMessage": "No vulnerable images found",
              "exportedParameters": [
                {
                  "fieldName": "Repo",
                  "parameterName": "SelectedRepo",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "repoSelected",
                  "parameterName": "acrRepoSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Repo",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "repoSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevC",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "redBright",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevH",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "orange",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevM",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "yellow",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "sevL",
                    "formatter": 4,
                    "formatOptions": {
                      "palette": "blueDark",
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "fixAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "uninitialized",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "CVEcount",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "imageDigest",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "80ch"
                    }
                  },
                  {
                    "columnMatch": "patchAvailable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pending",
                          "text": "{0}{1}"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Repo",
                    "label": "Repository"
                  },
                  {
                    "columnId": "imageUri",
                    "label": "Image URI "
                  },
                  {
                    "columnId": "sevC",
                    "label": "Critical"
                  },
                  {
                    "columnId": "sevH",
                    "label": "High"
                  },
                  {
                    "columnId": "sevM",
                    "label": "Medium"
                  },
                  {
                    "columnId": "sevL",
                    "label": "Low"
                  },
                  {
                    "columnId": "fixAvailable",
                    "label": "Fix Available"
                  },
                  {
                    "columnId": "CVEcount",
                    "label": "CVEs"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "acrSelected",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "Acr_Image_Vilnerabilty_ListbyRegistry_MDVM"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments/subassessments\"\r\n    | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n    | where assessmentKey == \"c0b7cfc6-3172-465a-b378-53c7ff2cc0d5\"\r\n    | extend itemSelected=\"true\"\r\n    | extend cvss30score=properties.[\"additionalData\"].[\"vulnerabilityDetails\"].[\"cvss\"].[\"3.0\"].[\"base\"]\r\n    | extend cvss30Vector=properties.[\"additionalData\"].[\"vulnerabilityDetails\"].[\"cvss\"].[\"3.0\"].[\"cvssVectorString\"]\r\n    | extend description=properties.[\"description\"]\r\n    | extend remediation=properties.[\"remediation\"]\r\n   | extend Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id))\r\n    | where Resource in~({acrs})\r\n    | extend RepositoryName=tostring(parse_json(properties).additionalData.artifactDetails.repositoryName)\r\n    | extend VulnId = tostring(parse_json(properties).id)\r\n    | extend PublishedDate=format_datetime(todatetime(properties.[\"additionalData\"].[\"vulnerabilityDetails\"].[\"publishedDate\"]), 'MM/d/yyyy h:m:s tt')\r\n    | extend TimeGenerated=format_datetime(todatetime(properties.timeGenerated), 'MM/d/yyyy h:m:s tt')\r\n    | extend Status = tostring(parse_json(properties).status.code)\r\n    | extend Severity=tostring(parse_json(properties).additionalData.vulnerabilityDetails.severity)\r\n    | extend fixStatus = parse_json(properties.additionalData).softwareDetails.fixStatus\r\n    | extend imageUri = properties.resourceDetails.id,\r\n    isExploitStepsPublished=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.exploitStepsPublished==\"true\",\"Yes\",\"No\"),\r\n            isInExploitKit=iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.isInExploitKit==\"true\",\"Yes\",\"No\"),\r\n            isVerified= iff(parse_json(properties).additionalData.vulnerabilityDetails.exploitabilityAssessment.exploitSetpsVerified==\"true\",\"Yes\",\"No\")\r\n   |mv-expand references = todynamic(parse_json(properties).[\"additionalData\"].[\"vulnerabilityDetails\"].[\"references\"])\r\n   | extend referenceLink = references.link\r\n    |extend vendor = tostring(parse_json(properties).additionalData.softwareDetails.vendor)\r\n    |extend osDistribution = tostring(parse_json(properties).additionalData.softwareDetails.osDetails.osPlatform)\r\n    |extend tags =  tostring(properties.additionalData.artifactDetails.tags)\r\n    |extend tags = replace(\"\\\\[|\\\\]|\\\"\", \"\", tags) \r\n    | summarize referenceLinks = make_list(strcat(referenceLink, \"\\n\")) by \r\n    itemSelected,\r\n    subscriptionId,\r\n    Resource, \r\n    RepositoryName, \r\n    VulnId, \r\n    PublishedDate,\r\n    TimeGenerated,\r\n    Status,\r\n    Severity,\r\n    tostring(fixStatus),\r\n    tostring(imageUri),\r\n    tags,\r\n    tostring(cvss30score),\r\n    tostring(cvss30Vector),\r\n    tostring(description),\r\n    tostring(remediation),\r\n    vendor,\r\n    osDistribution,\r\n    isExploitStepsPublished,\r\n    isVerified,\r\n    isInExploitKit\r\n    | where Status == 'Unhealthy'\r\n     | where RepositoryName == '{SelectedRepo}'\r\n    | project-away Status ",
              "size": 1,
              "title": "Vulnerabilities | Select Vulnerability to see more details",
              "noDataMessage": "No vulnerability found",
              "exportedParameters": [
                {
                  "fieldName": "RepositoryName",
                  "parameterName": "acrRepositoryName",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "description",
                  "parameterName": "acrDescription",
                  "parameterType": 1
                },
                {
                  "fieldName": "remediation",
                  "parameterName": "acrRemediation",
                  "parameterType": 1
                },
                {
                  "fieldName": "Issue",
                  "parameterName": "acrIssue",
                  "parameterType": 1
                },
                {
                  "fieldName": "VulnId",
                  "parameterName": "acrVulnId",
                  "parameterType": 1
                },
                {
                  "fieldName": "Severity",
                  "parameterName": "acrSeverity",
                  "parameterType": 1
                },
                {
                  "fieldName": "PublishedDate",
                  "parameterName": "acrPublishedDate",
                  "parameterType": 1
                },
                {
                  "fieldName": "fixStatus",
                  "parameterName": "acrFixStatus",
                  "parameterType": 1
                },
                {
                  "fieldName": "itemSelected",
                  "parameterName": "acrItemSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                },
                {
                  "fieldName": "cvss30Vector",
                  "parameterName": "acrCvss30Vector",
                  "parameterType": 1
                },
                {
                  "parameterType": 1
                },
                {
                  "fieldName": "isInExploitKit",
                  "parameterName": "acrExploitKit",
                  "parameterType": 1
                },
                {
                  "fieldName": "isVerified",
                  "parameterName": "acrVerified",
                  "parameterType": 1
                },
                {
                  "fieldName": "isExploitStepsPublished",
                  "parameterName": "acrVulnPublished",
                  "parameterType": 1
                },
                {
                  "fieldName": "referenceLinks",
                  "parameterName": "acrReferences",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "itemSelected",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "PublishedDate",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "fixStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "FixAvailable",
                          "representation": "success",
                          "text": "Fix Available"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown",
                          "representation": "unknown",
                          "text": "Unknown"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "cvss30score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "minimumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cvss30Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "remediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isExploitStepsPublished",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "2",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "success",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isVerified",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "4",
                          "text": "No"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isInExploitKit",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "warning",
                          "text": "Yes"
                        },
                        {
                          "operator": "==",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "Available",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "referenceLinks",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "referenceTitle",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "category",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Issue",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "cvss20score",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "greenRed",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      },
                      "emptyValCustomText": "N/A"
                    }
                  },
                  {
                    "columnMatch": "cvss20Vector",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "impact",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PublishedTime",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Patchable",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Yes",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "No",
                          "representation": "disabled",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "cveTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "cveURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "cveURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "vendorReferencesTitle",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "vendorReferencesURL",
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "vendorReferencesURL",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_fixStatus_8",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription name"
                  },
                  {
                    "columnId": "RepositoryName",
                    "label": "Repository name"
                  },
                  {
                    "columnId": "VulnId",
                    "label": "Vulnerability ID"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Time generated"
                  },
                  {
                    "columnId": "fixStatus",
                    "label": "Fix Status"
                  },
                  {
                    "columnId": "imageUri",
                    "label": "Image URI"
                  },
                  {
                    "columnId": "tags",
                    "label": "Tags"
                  },
                  {
                    "columnId": "cvss30score",
                    "label": "CVSS Score"
                  },
                  {
                    "columnId": "cvss30Vector",
                    "label": "Threat vector"
                  },
                  {
                    "columnId": "vendor",
                    "label": "Vendor"
                  },
                  {
                    "columnId": "osDistribution",
                    "label": "OS Distribution"
                  },
                  {
                    "columnId": "isExploitStepsPublished",
                    "label": "Exploit Steps Published"
                  },
                  {
                    "columnId": "isVerified",
                    "label": "Exploit Steps Verified"
                  },
                  {
                    "columnId": "isInExploitKit",
                    "label": "In Exploit Kit"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_fixStatus_8",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "acrRepoSelected",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "Acr_Image_Vulnerabilities_Full_ListbyRepo_MDVM"
          },
          {
            "type": 1,
            "content": {
              "json": "### Description for {acrRepositoryName} vulnerability\r\n{acrDescription} <br>\r\n <br> <br>\r\nCVSS 3.0 Threat Vectors\" {acrCvss30Vector}\r\n\r\n### Remediation\r\n{acrRemediation}\r\n### General Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Severity</th>\r\n\t<th>Fix Status</th>\r\n\t<th>Published</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{acrVulnId}</td>\r\n    <td>{acrSeverity}</td>\r\n\t<td>{acrFixStatus}</td>\r\n\t<td>{acrPublishedDate}</td>\r\n  </tr>\r\n  </table>\r\n\r\n  ### Exploitability Information\r\n<table style=\"width:100%\">\r\n  <tr>\r\n\t<th>Exploit Steps Published</th>\r\n\t<th>Exploit Steps Verified</th>\r\n\t<th>In Exploit Kit</th>\r\n  </tr>\r\n    <tr>\r\n    <td>{acrVulnPublished}</td>\r\n\t<td>{acrVerified}</td>\r\n\t <td>{acrExploitKit}</td>\r\n  </tr>\r\n  </table>\r\n\r\n  ### Reference Information\r\n{acrReferences} <br>\r\n <br> <br>\r\n\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "acrItemSelected",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "Acr_Vulnerability_card_MDVM"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "acrmdvm"
      },
      "name": "acr-mdvm-group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Security Center"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
