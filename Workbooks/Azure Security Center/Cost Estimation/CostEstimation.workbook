{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Cost estimation workbook\r\nThis workbook has been created to provide a consolidated price estimation for Microsoft Defender for Cloud plans based on the resource telemetry in your own environment. Please note that these numbers can only be estimates based on retail prices and do not provide actual billing data."
      },
      "name": "main text"
    },
    {
      "type": 1,
      "content": {
        "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take the time to answer a quick survey. To submit your feedback,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](https://aka.ms/MDCCostEstimation)"
      },
      "name": "survey"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::selected"
        ],
        "parameters": [
          {
            "id": "c9ee86da-fe9b-4f75-8a03-a750de4d62d5",
            "version": "KqlParameterItem/1.0",
            "name": "numberofsubscriptions",
            "type": 1,
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| summarize count()",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "9bd2ea6c-e396-44b7-9fc2-a088240d473e",
            "version": "KqlParameterItem/1.0",
            "name": "istenantlevel",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "numberofsubscriptions",
                  "operator": ">",
                  "rightValType": "static",
                  "rightVal": "3000",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "0"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isNotEqualTo"
      },
      "name": "globalParams"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "ce3d9c88-c6ee-4d6f-87fa-7bf3d86d029a",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "description": "Please select one or several subscriptions to allow the workbook to calculate Defender for Cloud cost.",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "0e4c8d0c-2b9a-4718-8f98-45e8a3e6ab1c",
                  "version": "KqlParameterItem/1.0",
                  "name": "AWSSecurityConnectors",
                  "label": "AWS accounts",
                  "type": 2,
                  "description": "Please select one or several AWS security connectors to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "query": "resources\r\n| where type == \"microsoft.security/securityconnectors\"\r\n| extend environmentName = tolower(tostring(properties['environmentName']))\r\n| extend hierarchyIdentifier = tostring(properties['hierarchyIdentifier'])\r\n| where environmentName == \"aws\"\r\n| project value = id, label = strcat(hierarchyIdentifier,\" (\",name,\")\")",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "GCPSecurityConnectors",
                  "label": "GCP projects",
                  "type": 2,
                  "description": "Please select one or several GCP security connectors to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "query": "resources\r\n| where type == \"microsoft.security/securityconnectors\"\r\n| extend environmentName = tolower(tostring(properties['environmentName']))\r\n| extend hierarchyIdentifier = tostring(properties['hierarchyIdentifier'])\r\n| where environmentName == \"gcp\"\r\n| project value = id, label = strcat(hierarchyIdentifier,\" (\",name,\")\")",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ],
                  "id": "a09204dc-31ba-4ea6-af0c-67c873964953"
                },
                {
                  "id": "a4d387c3-f0f6-4512-95f4-3e976851d69a",
                  "version": "KqlParameterItem/1.0",
                  "name": "azurePlans",
                  "label": "Azure Defender plans",
                  "type": 2,
                  "description": "Please select one or several Azure plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n{ \"value\": \"microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines\", \"label\": \"Servers\"},\r\n { \"value\": \"microsoft.web/serverfarms\", \"label\": \"App Services\"},\r\n { \"value\": \"microsoft.sql/servers, microsoft.sql/managedinstances\", \"label\": \"SQL Databases\"},\r\n {\"value\": \"microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.dbformariadb/servers\", \"label\": \"OSS DBs\"},\r\n  { \"value\": \"microsoft.containerservice/managedclusters\", \"label\": \"Containers\"},\r\n  { \"value\": \"microsoft.storage/storageaccounts - storageenabled\", \"label\": \"Storage\"},\r\n  { \"value\": \"microsoft.compute/virtualmachines, microsoft.classiccompute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.sql/servers, microsoft.hybridcompute/machines, microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.sql/managedinstances, microsoft.dbformariadb/servers, Microsoft.synapse/workspaces, microsoft.storage/storageaccounts\", \"label\": \"DefenderCSPM\"},\r\n  {\"value\": \"microsoft.resources/subscriptions\", \"label\": \"Defender for ARM\"},\r\n  {\"value\": \"microsoft.keyvault/vaults\", \"label\": \"Defender for Key Vault\"},\r\n{\"value\": \"microsoft.apimanagement/service\", \"label\": \"Defender for API\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "awsPlans",
                  "label": "AWS Defender plans",
                  "type": 2,
                  "description": "Please select one or several AWS plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n{ \"value\": \"Microsoft.Security/securityConnectors/EC2instance\", \"label\": \"Servers\"},\r\n  { \"value\": \"Microsoft.Security/securityConnectors/EC2instance, Microsoft.Security/securityConnectors/S3Bucket, Microsoft.Security/securityConnectors/RDSdb\", \"label\": \"DefenderCSPM\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "c53c5300-1cee-4adf-82a3-e25def26b171",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "fa94047b-c97d-4988-b728-fbe3db2e5441",
                  "version": "KqlParameterItem/1.0",
                  "name": "gcpPlans",
                  "label": "GCP Defender plans",
                  "type": 2,
                  "description": "Please select one or several GCP plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n  { \"value\": \"microsoft.security/securityconnectors/computeinstances, microsoft.security/securityconnectors/storagebuckets, microsoft.security/securityconnectors/sqladmininstances\", \"label\": \"DefenderCSPM\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "3c915b1e-0c56-47d3-8eb7-b9c1f7276f2f",
                  "version": "KqlParameterItem/1.0",
                  "name": "subInfo",
                  "label": "Additional information",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 1, \"label\": \"On\", \"selected\": true},\r\n { \"value\": 0, \"label\": \"Off\"}\r\n]"
                },
                {
                  "id": "305b0ead-34c1-48fb-b633-f6b7a261b438",
                  "version": "KqlParameterItem/1.0",
                  "name": "subinfoRes",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "{subInfo}"
                      }
                    }
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "istenantlevel",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "subscriptionPicker"
          },
          {
            "type": 1,
            "content": {
              "json": "* ###### The costs displayed are estimated and might be different from the actual costs seen in the invoice.  \r\n\r\n* ###### The estimated costs displayed are monthly estimated costs per subscription and/or AWS account and/or GCP project based on currently active resources.\r\n\r\n* ###### To estimate the costs for a subscription and/or AWS account and/or GCP project, you must be assigned with at least Reader role at the subscription level. \r\n\r\n* ###### This workbook displays the cost for Defender for Storage in Azure based on a per-storage account calculation, but accounts with an exceptionally high transaction volume incur an overage charge that won’t be seen in this workbook. For more information on Defender for Storage cost estimation calculations, please visit our [GitHub page](https://github.com/Azure/Microsoft-Defender-for-Cloud/tree/main/Workbooks/Microsoft%20Defender%20for%20Storage%20Price%20Estimation).\r\n\r\n* ###### Defender for Cosmos DB plan in Azure currently can’t be estimated, we are working to include it in the future.\r\n\r\n* ###### The cost estimation is based on the retail prices of Defender plans; Learn more about [Defender plans’ retail price](https://azure.microsoft.com/pricing/details/defender-for-cloud/).\r\n\r\n* ###### Microsoft Defender CSPM protects across all your multicloud workloads, but billing only applies for Servers, Databases and Storages at $5/billable resource/month. Please visit [Defender CSPM documentation page](https://learn.microsoft.com/en-us/azure/defender-for-cloud/concept-cloud-security-posture-management) for more information.\r\n\r\n* ###### Defender CSPM plan in GCP cost estimation counts all storage buckets, although in reality only buckets from class ‘standard’ will be charged. In addition, the charge for this plan will apply only for buckets from the following regions: \r\n###### europe-west1, us-east1, us-west1, us-central1, us-east4, asia-south1, northamerica-northeast1.\r\n\r\n* ###### Defender CSPM plan in GCP cost estimation may not count all Google Instance Group instances, although they are going to be charged as well.\r\n\r\n* ###### This workbook displays the cost for Defender for API in Azure based on a per-subscription calculation, but subscriptions with an exceptionally high transaction volume incur an overage charge that won’t be seen in this workbook.",
              "style": "info"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "subinfoRes",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "f1fa88f6-f96a-46b7-a706-dcbb58a41b21",
                  "version": "KqlParameterItem/1.0",
                  "name": "AzureP1P2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "a55af107-96b9-47b0-97a8-c9c44178c911",
                  "version": "KqlParameterItem/1.0",
                  "name": "AWSP1P2Label",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "{awsPlans:label}"
                      }
                    }
                  ]
                },
                {
                  "id": "7cf2df9e-80da-4250-858b-daee5ddb0f07",
                  "version": "KqlParameterItem/1.0",
                  "name": "AWSP1P2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2Label",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "Servers",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2Label",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "All",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "AzureAPISubPlans",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.apimanagement/service",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "d8c412c3-9add-4836-8316-71616c1303c2"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 8"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0e210f10-f123-4083-9f28-78dc38d1f2ba",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureServersPlanVal",
                  "label": "Azure Servers Plan",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 5, \"label\": \"Defender for Servers Plan 1\", \"selected\": true},\r\n { \"value\": 15, \"label\": \"Defender for Servers Plan 2\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AzureP1P2",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "azureserversplan"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bbdb36c7-fb94-4e40-a42a-32a3625aa697",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsServersPlanVal",
                  "label": "AWS Servers Plan",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 5, \"label\": \"Defender for Servers Plan 1\", \"selected\": true},\r\n { \"value\": 15, \"label\": \"Defender for Servers Plan 2\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AWSP1P2",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "awsserversplan"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "78a492cd-32f5-458f-a158-0edb986ba2ed",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureAPIPlanVal",
                  "label": "Azure API Plan",
                  "type": 2,
                  "description": "API sub plan",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 200, \"label\": \"Defender for API Plan 1\", \"selected\": true},\r\n { \"value\": 700, \"label\": \"Defender for API Plan 2\"},\r\n  { \"value\": 5000, \"label\": \"Defender for API Plan 3\"},\r\n   { \"value\": 7000, \"label\": \"Defender for API Plan 4\"},\r\n    { \"value\": 50000, \"label\": \"Defender for API Plan 5\"}\r\n\r\n\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AzureAPISubPlans",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "azureapiplans"
          },
          {
            "type": 1,
            "content": {
              "json": "{azurePlans}\r\n\r\n{awsPlans}\r\n\r\n{gcpPlans}\r\n\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "selectedPlansDropDown"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "66f1094b-dc23-47e3-a766-02f0afaa90ea",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureP1P2",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureServersPlanVal} == 5"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "32c324b2-7f01-48d7-861e-6a3dcabdec3c",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureP1P2",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureServersPlanVal} == 15"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "370c0f82-f1fb-4c7f-babe-4122ae51ec15",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsStorage",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.storage/storageaccounts - storageenabled",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "3870e5a7-9114-426e-a6e4-55ec453f58a1",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.classiccompute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.sql/servers, microsoft.hybridcompute/machines, microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.sql/managedinstances, microsoft.dbformariadb/servers, Microsoft.synapse/workspaces, microsoft.storage/storageaccounts",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "44b6df94-4023-4d48-a101-18e2b30f73b8",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsOss",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.dbformariadb/servers",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "4f792148-ca81-4732-9d83-d9c2759b72fb",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsSql",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.sql/servers, microsoft.sql/managedinstances",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "cee4ac08-adf1-4fe5-b3a7-e1d2d11f74a6",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersSelected",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "cf60ebba-0cc7-4e6d-abcd-438df9de5afe",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanVal} == 200"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "0a5db009-51f8-41b5-87d7-c10129efccf7",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanVal} == 700"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "c5168dbb-10cc-4459-9dbd-8a75b1dceb61",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP3",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanVal} == 5000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "b6684a6f-a68e-4b57-9a30-35356fdffbd3",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP4",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanVal} == 7000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "437a4d0b-71bf-4405-92f7-91d5a1fe444a",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP5",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanVal} == 70000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "a8d1a47c-f601-4125-8374-f0d77add9d93",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiSelected",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azurePlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.apimanagement/service",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "subscriptionconditions"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "578c0804-e263-4d8c-bdb2-7424090db8b7",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{awsServersPlanVal} == 5"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "d9664898-3eae-4161-baa9-1e14be01714a",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{awsServersPlanVal} == 15"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "da047199-6fba-47ed-82e1-ba1447ac540f",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "awsPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "Microsoft.Security/securityConnectors/EC2instance, Microsoft.Security/securityConnectors/S3Bucket, Microsoft.Security/securityConnectors/RDSdb",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "94a13d8f-24df-4a76-9321-4cd70a2d2712",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersSelected",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "awsPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "Microsoft.Security/securityConnectors/EC2instance",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "awssecurityconnectorconditions"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e570fb76-3d72-4398-94d3-05108baa9e07",
                  "version": "KqlParameterItem/1.0",
                  "name": "gcpIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "gcpPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.security/securityconnectors/computeinstances, microsoft.security/securityconnectors/storagebuckets, microsoft.security/securityconnectors/sqladmininstances",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "gcpsecurityconnectorconditions"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCount = toint(properties_agentPoolProfiles['count']) * coresInSku//, sku\r\n    | summarize sum(managedClustersCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n    | extend sum_appServiceCount = 0, sum_serversCount = 0, sum_storageAccountCount = 0, sum_ossDatabaseCount = 0, sum_cosmosDbCount = 0, sum_sqlServersCount = 0, sum_containerRegistryCount = 0\r\n    | where sum_managedClustersCount > 0\r\n    | extend Dummy = 1 \r\n| join  kind=inner \r\n    ( \r\n    resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCountTotal = toint(properties_agentPoolProfiles['count']) * coresInSku, sku\r\n    | summarize sum(managedClustersCountTotal) by subscriptionId\r\n    | extend sum_appServiceCountTotal = 0, sum_serversCountTotal = 0, sum_storageAccountCountTotal = 0, sum_ossDatabaseCountTotal = 0, sum_cosmosDbCountTotal = 0, sum_sqlServersCountTotal = 0, sum_containerRegistryTotal = 0\r\n    | where sum_managedClustersCountTotal > 0\r\n    | extend Dummy = 1\r\n    ) on  subscriptionId\r\n| union \r\n(\r\n    resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n        | extend appServiceCount = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n        | extend vmCount = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n        | extend vmCountForCspm = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n        | extend vmssCount = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend vmssCountForCspm = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend serversCount = vmCount + vmssCount\r\n        | extend storageAccountCount = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n        | extend ossDatabaseCount = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\"), 1, 0)\r\n        | extend cosmosDbCount = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n        | extend sqlServersCount = iff(type =~ \"microsoft.sql/servers\" or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n        | extend synapseServersCount = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n        | extend cspmCount = vmCountForCspm + vmssCountForCspm + storageAccountCount + ossDatabaseCount + sqlServersCount + synapseServersCount \r\n        | extend containerRegistryCount = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n        | summarize sum(appServiceCount), sum(serversCount),sum(storageAccountCount), sum(containerRegistryCount), sum(ossDatabaseCount), sum(cosmosDbCount), sum(sqlServersCount), sum(cspmCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n        | where sum_appServiceCount > 0 or sum_serversCount > 0 or sum_storageAccountCount > 0 or sum_ossDatabaseCount > 0 or sum_cosmosDbCount > 0 or sum_sqlServersCount > 0 or sum_containerRegistryCount > 0 or sum_cspmCount > 0 \r\n        | extend sum_managedClustersCount = 0\r\n        | extend Dummy = 1 \r\n    | join  kind=inner \r\n            ( \r\n            resources\r\n            | extend selectedPlans = tolower('{azurePlans}')\r\n            | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n            | extend type = tolower(type) \r\n            | where selectedPlans has type \r\n            | extend appServiceCountTotal = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n            | extend vmCountTotal = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n            | extend vmCountForCspmTotal = iff(type in (\"microsoft.compute/virtualmachines \", \"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n            | extend vmssCountTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend vmssCountForCspmTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend serversCountTotal = vmCountTotal + vmssCountTotal\r\n            | extend storageAccountCountTotal = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n            | extend ossDatabaseCountTotal = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\") and sku.tier !contains(\"basic\"), 1, 0)\r\n            | extend cosmosDbCountTotal = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n            | extend sqlServersCountTotal = iff((type =~ \"microsoft.sql/servers\" and kind !contains(\"analytics\")) or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n            | extend synapseServersCountTotal = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n            | extend cspmCountTotal = vmCountForCspmTotal + vmssCountForCspmTotal + storageAccountCountTotal + ossDatabaseCountTotal + sqlServersCountTotal + synapseServersCountTotal \r\n            | extend containerRegistryTotal = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n            | summarize sum(serversCountTotal), sum(storageAccountCountTotal), sum(appServiceCountTotal), sum(containerRegistryTotal), sum(ossDatabaseCountTotal), sum(cosmosDbCountTotal), sum(sqlServersCountTotal), sum(cspmCountTotal) by subscriptionId\r\n            | where sum_appServiceCountTotal > 0 or sum_serversCountTotal > 0 or sum_storageAccountCountTotal > 0 or sum_containerRegistryTotal  > 0 or sum_ossDatabaseCountTotal > 0 or sum_cosmosDbCountTotal > 0 or sum_sqlServersCountTotal > 0 or sum_cspmCountTotal > 0\r\n            | extend sum_managedClustersCountTotal = 0\r\n            | extend Dummy = 1\r\n            ) on  subscriptionId\r\n)\r\n| union \r\n(\r\n    resources\r\n    | extend selectedPlans = tolower('{azurePlans}')\r\n    | extend type = tolower(type) \r\n    | where selectedPlans has type \r\n    | extend akvCountCount = iff(type == \"microsoft.keyvault/vaults\", 1 , 0)\r\n    | summarize sum(akvCountCount) by subscriptionId, resourceGroup\r\n    | where sum_akvCountCount > 0\r\n)\r\n| extend ServersRatio = case(sum_serversCountTotal == 0, 0.0, todouble(sum_serversCount) / todouble(sum_serversCountTotal))\r\n| extend AppServicesRatio = case(sum_appServiceCountTotal == 0, 0.0, todouble(sum_appServiceCount) / todouble(sum_appServiceCountTotal))\r\n| extend StorageRatio = case(sum_storageAccountCountTotal == 0, 0.0, todouble(sum_storageAccountCount) / todouble(sum_storageAccountCountTotal))\r\n//| extend ContainerRegistriesRatio = case(sum_containerRegistryTotal == 0, 0.0, todouble(sum_containerRegistryCount) / todouble(sum_containerRegistryTotal))\r\n| extend OpenSourceRelationalDatabasesRatio = case(sum_ossDatabaseCountTotal == 0, 0.0, todouble(sum_ossDatabaseCount) / todouble(sum_ossDatabaseCountTotal))\r\n//| extend CosmosDBsRatio = case(sum_cosmosDbCountTotal == 0, 0.0, todouble(sum_cosmosDbCount) / todouble(sum_cosmosDbCountTotal))\r\n| extend SqlServersRatio = case(sum_sqlServersCountTotal == 0, 0.0, todouble(sum_sqlServersCount) / todouble(sum_sqlServersCountTotal))\r\n| extend ContainersRatio = case(sum_managedClustersCountTotal == 0, 0.0, todouble(sum_managedClustersCount) / todouble(sum_managedClustersCountTotal))\r\n| extend CspmRatio = case(sum_cspmCountTotal == 0, 0.0, todouble(sum_cspmCount) / todouble(sum_cspmCountTotal))\r\n| project \r\n    subscriptionId, resourceGroup,// tags_provider, \r\n    AppServicesInRg = sum_appServiceCount, TotalAppServicesInSub = sum_appServiceCountTotal, AppServicesRatio = round(AppServicesRatio, 4), AppServicesPricing = 15,\r\n    ServersInRg = sum_serversCount, TotalServersInSub = sum_serversCountTotal, ServersRatio = round(ServersRatio, 4), ServersPricingP1 = 5, ServersPricingP2 = 15,\r\n    StorageAccountsInRg = sum_storageAccountCount, TotalStorageAccountsInSub = sum_storageAccountCountTotal, StorageAccountsRatio = round(ServersRatio, 4), StorageAccountsPricing = 10, \r\n    //ContainerRegistriesAccountsInRg = sum_containerRegistryCount, TotalContainerRegistriesInSub = sum_containerRegistryTotal, ContainerRegistriesAccountsPricing = \"$0.29 per image\",//ContainerRegistriesRatio = round(ContainerRegistriesRatio , 4),\r\n    OpenSourceRelationalDatabasesInRg = sum_ossDatabaseCount, TotalOpenSourceRelationalDatabasesInSub = sum_ossDatabaseCountTotal, OpenSourceRelationalDatabasesRatio = round(OpenSourceRelationalDatabasesRatio , 4), OpenSourceRelationalDatabasesPricing = 15,\r\n    CosmosDBsInRg = sum_cosmosDbCount, TotalCosmosDBsInSub = sum_cosmosDbCountTotal, CosmosDBsPricing = \"$0.0012/100RU/s per hour\", //CosmosDBsRatio = round(CosmosDBsRatio , 4),\r\n    SqlServersInRg = sum_sqlServersCount, TotalSqlServersInSub = sum_sqlServersCountTotal, SqlServersRatio = round(SqlServersRatio , 4), SqlServersPricing = 15,\r\n    ContainersInRg = sum_managedClustersCount, TotalContainersInSub = sum_managedClustersCountTotal, ContainersRatio = round(ContainersRatio , 4),ContainersPricing = 7, ContainersDiscountPercentage = 0, ImageScansIncluded = iff(sum_containerRegistryCount > 0, sum_managedClustersCount * 20, 0),\r\n    CspmInRg = sum_cspmCount, TotalCspmInSub = sum_cspmCountTotal, CspmRatio = round(CspmRatio, 4), CspmPricingFull = 5, akvInRg = sum_akvCountCount\r\n| extend \r\n    akvEstimatedPrice = akvInRg * 0.25,\r\n    AppServicesEstimatedPrice = AppServicesPricing * AppServicesInRg,\r\n    ServersEstimatedPrice = ServersInRg ,\r\n    ServersEstimatedPriceP2 = ServersInRg ,\r\n    StorageAccountsEstimatedPrice = StorageAccountsPricing * StorageAccountsInRg,\r\n    OpenSourceRelationalDatabasesEstimatedPrice = iff(tolower('{azureIsOss}') contains \"true\", OpenSourceRelationalDatabasesPricing * OpenSourceRelationalDatabasesInRg, 0),\r\n    SqlServersEstimatedPrice = iff(tolower('{azureIsSql}') contains \"true\", SqlServersPricing * SqlServersInRg,0),\r\n    ContainersEstimatedPrice = ContainersPricing * ContainersInRg,\r\n    CspmEstimatedPriceFull = iff(tolower('{azureIsDcspm}') contains \"true\", CspmPricingFull * CspmInRg, 0)\r\n| summarize CspmEstimatedPriceFull = sum(CspmEstimatedPriceFull), AppServicesEstimatedPrice = sum(AppServicesEstimatedPrice), SqlServersEstimatedPrice = sum(SqlServersEstimatedPrice)\r\n, OpenSourceRelationalDatabasesEstimatedPrice = sum(OpenSourceRelationalDatabasesEstimatedPrice), StorageAccountsEstimatedPrice = iff({azureIsStorage} == 'true',sum(StorageAccountsEstimatedPrice),0),\r\nContainersEstimatedPrice = sum(ContainersEstimatedPrice), CspmInRg = sum(CspmInRg), ContainersInRg = sum(ContainersInRg), SqlServersInRg = sum(SqlServersInRg),OpenSourceRelationalDatabasesInRg = sum(OpenSourceRelationalDatabasesInRg) , StorageAccountsInRg = sum(StorageAccountsInRg),\r\nServersInRg = sum(ServersInRg), AppServicesInRg = sum(AppServicesInRg), AkvInRg = sum(akvInRg), akvEstimatedPrice = sum(akvEstimatedPrice)  by Subscription = subscriptionId\r\n| join kind=fullouter\r\n(\r\n    resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | extend type = tolower(type) \r\n    | extend selectedPlans = tolower('{azurePlans}')\r\n    | project subscriptionId, defenderForArmCost = iff(selectedPlans contains \"microsoft.resources/subscriptions\", 5, 0)\r\n    | join kind = fullouter\r\n    (\r\n        resources\r\n        | where type == \"microsoft.apimanagement/service\"\r\n        | project subscriptionId, defenderForApiCost = iff(tolong('{AzureAPISubPlans}')==1, tolong('{azureAPIPlanVal}'), 0)\r\n        | distinct subscriptionId, defenderForApiCost\r\n    )\r\n    on subscriptionId\r\n    | project Subscription = subscriptionId, defenderForApiCost, defenderForArmCost\r\n) on Subscription\r\n| extend Subscription = iff(isempty(Subscription), Subscription1, Subscription)\r\n| extend defenderForArmCost = iff(isempty(defenderForArmCost), 0.0, defenderForArmCost *1.0)\r\n| extend defenderForApiCost = iff(isempty(defenderForApiCost), 0.0, defenderForApiCost *1.0)",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "defenderForArmCost",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "defenderForArmCost",
                  "sortOrder": 2
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "azurePlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "pricing grid"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCount = toint(properties_agentPoolProfiles['count']) * coresInSku//, sku\r\n    | summarize sum(managedClustersCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n    | extend sum_appServiceCount = 0, sum_serversCount = 0, sum_storageAccountCount = 0, sum_ossDatabaseCount = 0, sum_cosmosDbCount = 0, sum_sqlServersCount = 0, sum_containerRegistryCount = 0\r\n    | where sum_managedClustersCount > 0\r\n    | extend Dummy = 1 \r\n| join  kind=inner \r\n    ( \r\n    resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCountTotal = toint(properties_agentPoolProfiles['count']) * coresInSku, sku\r\n    | summarize sum(managedClustersCountTotal) by subscriptionId\r\n    | extend sum_appServiceCountTotal = 0, sum_serversCountTotal = 0, sum_storageAccountCountTotal = 0, sum_ossDatabaseCountTotal = 0, sum_cosmosDbCountTotal = 0, sum_sqlServersCountTotal = 0, sum_containerRegistryTotal = 0\r\n    | where sum_managedClustersCountTotal > 0\r\n    | extend Dummy = 1\r\n    ) on  subscriptionId\r\n| union \r\n(\r\n    resources\r\n        | extend selectedPlans = tolower('{azurePlans}')\r\n        | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n        | extend appServiceCount = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n        | extend vmCount = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n        | extend vmCountForCspm = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n        | extend vmssCount = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend vmssCountForCspm = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend serversCount = vmCount + vmssCount\r\n        | extend storageAccountCount = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n        | extend ossDatabaseCount = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\"), 1, 0)\r\n        | extend cosmosDbCount = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n        | extend sqlServersCount = iff(type =~ \"microsoft.sql/servers\" or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n        | extend synapseServersCount = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n        | extend cspmCount = vmCountForCspm + vmssCountForCspm + storageAccountCount + ossDatabaseCount + sqlServersCount + synapseServersCount \r\n        | extend containerRegistryCount = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n        | summarize sum(appServiceCount), sum(serversCount),sum(storageAccountCount), sum(containerRegistryCount), sum(ossDatabaseCount), sum(cosmosDbCount), sum(sqlServersCount), sum(cspmCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n        | where sum_appServiceCount > 0 or sum_serversCount > 0 or sum_storageAccountCount > 0 or sum_ossDatabaseCount > 0 or sum_cosmosDbCount > 0 or sum_sqlServersCount > 0 or sum_containerRegistryCount > 0 or sum_cspmCount > 0 \r\n        | extend sum_managedClustersCount = 0\r\n        | extend Dummy = 1 \r\n    | join  kind=inner \r\n            ( \r\n            resources\r\n            | extend selectedPlans = tolower('{azurePlans}')\r\n            | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n            | extend type = tolower(type) \r\n            | where selectedPlans has type \r\n            | extend appServiceCountTotal = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n            | extend vmCountTotal = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n            | extend vmCountForCspmTotal = iff(type in (\"microsoft.compute/virtualmachines \", \"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n            | extend vmssCountTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend vmssCountForCspmTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend serversCountTotal = vmCountTotal + vmssCountTotal\r\n            | extend storageAccountCountTotal = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n            | extend ossDatabaseCountTotal = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\") and sku.tier !contains(\"basic\"), 1, 0)\r\n            | extend cosmosDbCountTotal = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n            | extend sqlServersCountTotal = iff((type =~ \"microsoft.sql/servers\" and kind !contains(\"analytics\")) or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n            | extend synapseServersCountTotal = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n            | extend cspmCountTotal = vmCountForCspmTotal + vmssCountForCspmTotal + storageAccountCountTotal + ossDatabaseCountTotal + sqlServersCountTotal + synapseServersCountTotal \r\n            | extend containerRegistryTotal = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n            | summarize sum(serversCountTotal), sum(storageAccountCountTotal), sum(appServiceCountTotal), sum(containerRegistryTotal), sum(ossDatabaseCountTotal), sum(cosmosDbCountTotal), sum(sqlServersCountTotal), sum(cspmCountTotal) by subscriptionId\r\n            | where sum_appServiceCountTotal > 0 or sum_serversCountTotal > 0 or sum_storageAccountCountTotal > 0 or sum_containerRegistryTotal  > 0 or sum_ossDatabaseCountTotal > 0 or sum_cosmosDbCountTotal > 0 or sum_sqlServersCountTotal > 0 or sum_cspmCountTotal > 0\r\n            | extend sum_managedClustersCountTotal = 0\r\n            | extend Dummy = 1\r\n            ) on  subscriptionId\r\n)\r\n| union \r\n(\r\n    resources\r\n    | extend selectedPlans = tolower('{azurePlans}')\r\n    | extend type = tolower(type) \r\n    | where selectedPlans has type \r\n    | extend akvCountCount = iff(type == \"microsoft.keyvault/vaults\", 1 , 0)\r\n    | summarize sum(akvCountCount) by subscriptionId, resourceGroup\r\n    | where sum_akvCountCount > 0\r\n)\r\n| extend ServersRatio = case(sum_serversCountTotal == 0, 0.0, todouble(sum_serversCount) / todouble(sum_serversCountTotal))\r\n| extend AppServicesRatio = case(sum_appServiceCountTotal == 0, 0.0, todouble(sum_appServiceCount) / todouble(sum_appServiceCountTotal))\r\n| extend StorageRatio = case(sum_storageAccountCountTotal == 0, 0.0, todouble(sum_storageAccountCount) / todouble(sum_storageAccountCountTotal))\r\n//| extend ContainerRegistriesRatio = case(sum_containerRegistryTotal == 0, 0.0, todouble(sum_containerRegistryCount) / todouble(sum_containerRegistryTotal))\r\n| extend OpenSourceRelationalDatabasesRatio = case(sum_ossDatabaseCountTotal == 0, 0.0, todouble(sum_ossDatabaseCount) / todouble(sum_ossDatabaseCountTotal))\r\n//| extend CosmosDBsRatio = case(sum_cosmosDbCountTotal == 0, 0.0, todouble(sum_cosmosDbCount) / todouble(sum_cosmosDbCountTotal))\r\n| extend SqlServersRatio = case(sum_sqlServersCountTotal == 0, 0.0, todouble(sum_sqlServersCount) / todouble(sum_sqlServersCountTotal))\r\n| extend ContainersRatio = case(sum_managedClustersCountTotal == 0, 0.0, todouble(sum_managedClustersCount) / todouble(sum_managedClustersCountTotal))\r\n| extend CspmRatio = case(sum_cspmCountTotal == 0, 0.0, todouble(sum_cspmCount) / todouble(sum_cspmCountTotal))\r\n| project \r\n    subscriptionId, resourceGroup,// tags_provider, \r\n    AppServicesInRg = sum_appServiceCount, TotalAppServicesInSub = sum_appServiceCountTotal, AppServicesRatio = round(AppServicesRatio, 4), AppServicesPricing = 15,\r\n    ServersInRg = sum_serversCount, TotalServersInSub = sum_serversCountTotal, ServersRatio = round(ServersRatio, 4), ServersPricingP1 = 5, ServersPricingP2 = 15,\r\n    StorageAccountsInRg = sum_storageAccountCount, TotalStorageAccountsInSub = sum_storageAccountCountTotal, StorageAccountsRatio = round(ServersRatio, 4), StorageAccountsPricing = 10, \r\n    //ContainerRegistriesAccountsInRg = sum_containerRegistryCount, TotalContainerRegistriesInSub = sum_containerRegistryTotal, ContainerRegistriesAccountsPricing = \"$0.29 per image\",//ContainerRegistriesRatio = round(ContainerRegistriesRatio , 4),\r\n    OpenSourceRelationalDatabasesInRg = sum_ossDatabaseCount, TotalOpenSourceRelationalDatabasesInSub = sum_ossDatabaseCountTotal, OpenSourceRelationalDatabasesRatio = round(OpenSourceRelationalDatabasesRatio , 4), OpenSourceRelationalDatabasesPricing = 15,\r\n    CosmosDBsInRg = sum_cosmosDbCount, TotalCosmosDBsInSub = sum_cosmosDbCountTotal, CosmosDBsPricing = \"$0.0012/100RU/s per hour\", //CosmosDBsRatio = round(CosmosDBsRatio , 4),\r\n    SqlServersInRg = sum_sqlServersCount, TotalSqlServersInSub = sum_sqlServersCountTotal, SqlServersRatio = round(SqlServersRatio , 4), SqlServersPricing = 15,\r\n    ContainersInRg = sum_managedClustersCount, TotalContainersInSub = sum_managedClustersCountTotal, ContainersRatio = round(ContainersRatio , 4),ContainersPricing = 7, ContainersDiscountPercentage = 0, ImageScansIncluded = iff(sum_containerRegistryCount > 0, sum_managedClustersCount * 20, 0),\r\n    CspmInRg = sum_cspmCount, TotalCspmInSub = sum_cspmCountTotal, CspmRatio = round(CspmRatio, 4), CspmPricingFull = 5, akvInRg = sum_akvCountCount\r\n| extend \r\n    akvEstimatedPrice = akvInRg * 0.25,\r\n    AppServicesEstimatedPrice = AppServicesPricing * AppServicesInRg,\r\n    ServersEstimatedPrice = ServersInRg ,\r\n    ServersEstimatedPriceP2 = ServersInRg ,\r\n    StorageAccountsEstimatedPrice = StorageAccountsPricing * StorageAccountsInRg,\r\n    OpenSourceRelationalDatabasesEstimatedPrice = iff(tolower('{azureIsOss}') contains \"true\", OpenSourceRelationalDatabasesPricing * OpenSourceRelationalDatabasesInRg, 0),\r\n    SqlServersEstimatedPrice = iff(tolower('{azureIsSql}') contains \"true\", SqlServersPricing * SqlServersInRg,0),\r\n    ContainersEstimatedPrice = ContainersPricing * ContainersInRg,\r\n    CspmEstimatedPriceFull = iff(tolower('{azureIsDcspm}') contains \"true\", CspmPricingFull * CspmInRg, 0)\r\n| summarize CspmEstimatedPriceFull = sum(CspmEstimatedPriceFull), AppServicesEstimatedPrice = sum(AppServicesEstimatedPrice), SqlServersEstimatedPrice = sum(SqlServersEstimatedPrice)\r\n, OpenSourceRelationalDatabasesEstimatedPrice = sum(OpenSourceRelationalDatabasesEstimatedPrice), StorageAccountsEstimatedPrice = iff({azureIsStorage} == 'true',sum(StorageAccountsEstimatedPrice),0),\r\nContainersEstimatedPrice = sum(ContainersEstimatedPrice), CspmInRg = sum(CspmInRg), ContainersInRg = sum(ContainersInRg), SqlServersInRg = sum(SqlServersInRg),OpenSourceRelationalDatabasesInRg = sum(OpenSourceRelationalDatabasesInRg) , StorageAccountsInRg = sum(StorageAccountsInRg),\r\nServersInRg = sum(ServersInRg), AppServicesInRg = sum(AppServicesInRg), AkvInRg = sum(akvInRg), akvEstimatedPrice = sum(akvEstimatedPrice)  by Subscription = subscriptionId\r\n| join kind=fullouter\r\n(\r\nresourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | extend type = tolower(type) \r\n    | extend selectedPlans = tolower('{azurePlans}')\r\n    | project subscriptionId, defenderForArmCost = iff(selectedPlans contains \"microsoft.resources/subscriptions\", 5, 0)\r\n    | join kind = fullouter\r\n    (\r\n        resources\r\n        | where type == \"microsoft.apimanagement/service\"\r\n        | project subscriptionId, defenderForApiCost = iff(tolong('{AzureAPISubPlans}')==1, tolong('{azureAPIPlanVal}'), 0)\r\n        | distinct subscriptionId, defenderForApiCost\r\n    )\r\n    on subscriptionId\r\n    | project Subscription = subscriptionId, defenderForApiCost, defenderForArmCost\r\n) on Subscription\r\n| extend Subscription = iff(isempty(Subscription), Subscription1, Subscription)\r\n| extend defenderForArmCost = iff(isempty(defenderForArmCost), 0.0, defenderForArmCost*1.0)\r\n| extend defenderForApiCost = iff(isempty(defenderForApiCost), 0.0, defenderForApiCost*1.0)\r\n| extend akvEstimatedPrice = iff(isempty(akvEstimatedPrice), 0.0, akvEstimatedPrice*1.0)\r\n| extend AppServicesEstimatedPrice =  iff(isempty(AppServicesEstimatedPrice), 0.0, AppServicesEstimatedPrice*1.0)\r\n| extend SqlServersEstimatedPrice =  iff(isempty(SqlServersEstimatedPrice), 0.0, SqlServersEstimatedPrice*1.0)\r\n| extend OpenSourceRelationalDatabasesEstimatedPrice =  iff(isempty(OpenSourceRelationalDatabasesEstimatedPrice), 0.0, OpenSourceRelationalDatabasesEstimatedPrice*1.0)\r\n| extend StorageAccountsEstimatedPrice = iff(isempty(StorageAccountsEstimatedPrice), 0.0, StorageAccountsEstimatedPrice*1.0)\r\n| extend ContainersEstimatedPrice =  iff(isempty(ContainersEstimatedPrice), 0.0, ContainersEstimatedPrice*1.0)\r\n| extend DefenderCSPM = iff(CspmInRg != 0, CspmEstimatedPriceFull, 0)\r\n| extend Servers = iff(ServersInRg != 0, ServersInRg * {azureServersPlanVal} * {azureIsServersSelected}, 0)\r\n| project DefenderCSPM, ARM = defenderForArmCost, KeyVault = akvEstimatedPrice, API = defenderForApiCost, Servers, AppServices = AppServicesEstimatedPrice, SQLDatabases = SqlServersEstimatedPrice, OSSDBs = OpenSourceRelationalDatabasesEstimatedPrice, Storage = StorageAccountsEstimatedPrice, Containers = ContainersEstimatedPrice\r\n| extend GrandTotal = DefenderCSPM + ARM + KeyVault + API + Servers + AppServices + SQLDatabases + OSSDBs + Storage + Containers\r\n| extend Cloud = \"Azure\"\r\n| summarize azure_sum_DefenderCSPM = sum(DefenderCSPM), azure_sum_ARM = sum(ARM), azure_sum_KeyVault = sum(KeyVault), azure_sum_API = sum(API), azure_sum_Servers = sum(Servers), azure_sum_AppServices = sum(AppServices), azure_sum_SQLDatabases = sum(SQLDatabases), azure_sum_OSSDBs = sum(OSSDBs), azure_sum_Storage = sum(Storage), azure_sum_Containers = sum(Containers), azure_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "azurePlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('fead4128-7325-4b82-beda-3fd42de36920','0b168d89-4e52-45c9-bd6a-24f904abcc2e','bfa7d2aa-f362-11eb-9a03-0242ac130003'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"aws\"\r\n    | extend selectedPlans = tolower('{awsPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend selectedSecurityConnectors = tolower('{AWSSecurityConnectors}')\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | where selectedSecurityConnectors has securityConnectorId\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/ec2instance\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/s3bucket\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/rdsdb\", 1 , 0)\r\n    | extend serversCount = computeCount\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalServersInSecurityConnector = sum(serversCount), TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalServersInSecurityConnector > 0 or TotalDcspmInSecurityConnector > 0\r\n    | extend ServersPricingP1 = 5, ServersPricingP2 = 15, DcspmPricing = 5\r\n    | extend ServersEstimatedPrice = iff(tolower('{awsIsServersP1}') == \"true\", ServersPricingP1 * TotalServersInSecurityConnector, iff(tolower('{awsIsServersP2}') == \"true\", ServersPricingP2 * TotalServersInSecurityConnector, 0)),\r\n             DcspmEstimatedPrice = iff(tolower('{awsIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project SecurityConnectorId = securityConnectorId, TotalServersInSecurityConnector, TotalDcspmInSecurityConnector, ServersEstimatedPrice, DcspmEstimatedPrice",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "DcspmEstimatedPrice",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "DcspmEstimatedPrice",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "awsPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "aws pricing grid"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('fead4128-7325-4b82-beda-3fd42de36920','0b168d89-4e52-45c9-bd6a-24f904abcc2e','bfa7d2aa-f362-11eb-9a03-0242ac130003'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"aws\"\r\n    | extend selectedPlans = tolower('{awsPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend selectedSecurityConnectors = tolower('{AWSSecurityConnectors}')\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | where selectedSecurityConnectors has securityConnectorId\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/ec2instance\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/s3bucket\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/rdsdb\", 1 , 0)\r\n    | extend serversCount = computeCount\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalServersInSecurityConnector = sum(serversCount), TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalServersInSecurityConnector > 0 or TotalDcspmInSecurityConnector > 0\r\n    | extend ServersPricingP1 = 5, ServersPricingP2 = 15, DcspmPricing = 5\r\n    | extend ServersEstimatedPrice = iff(tolower('{awsIsServersP1}') == \"true\", ServersPricingP1 * TotalServersInSecurityConnector, iff(tolower('{awsIsServersP2}') == \"true\", ServersPricingP2 * TotalServersInSecurityConnector, 0)),\r\n             DcspmEstimatedPrice = iff(tolower('{awsIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project DefenderCSPM = DcspmEstimatedPrice, Servers = ServersEstimatedPrice\r\n    | extend GrandTotal = DefenderCSPM + Servers\r\n    | extend Cloud = \"AWS\"\r\n    | summarize aws_sum_DefenderCSPM = sum(DefenderCSPM), aws_sum_Servers = sum(Servers), aws_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "awsPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "aws pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('569ef64e-d7aa-4d7e-aa0b-5b3e045ca2c3','76261631-76ea-4bd4-b064-34a619be1de0','13872d43-aac6-4018-9c89-507b8fe9be54'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"gcp\"\r\n    | extend selectedPlans = tolower('{gcpPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend selectedSecurityConnectors = tolower('{GCPSecurityConnectors}')\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | where selectedSecurityConnectors has securityConnectorId\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/computeinstances\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/storagebuckets\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/sqladmininstances\", 1 , 0)\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalDcspmInSecurityConnector > 0\r\n    | extend DcspmPricing = 5\r\n    | extend DcspmEstimatedPrice = iff(tolower('{gcpIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project SecurityConnectorId = securityConnectorId, TotalDcspmInSecurityConnector, DcspmEstimatedPrice",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "DcspmEstimatedPrice",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "DcspmEstimatedPrice",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "gcpPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "gcp pricing grid"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('569ef64e-d7aa-4d7e-aa0b-5b3e045ca2c3','76261631-76ea-4bd4-b064-34a619be1de0','13872d43-aac6-4018-9c89-507b8fe9be54'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"gcp\"\r\n    | extend selectedPlans = tolower('{gcpPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend selectedSecurityConnectors = tolower('{GCPSecurityConnectors}')\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | where selectedSecurityConnectors has securityConnectorId\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/computeinstances\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/storagebuckets\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/sqladmininstances\", 1 , 0)\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalDcspmInSecurityConnector > 0\r\n    | extend DcspmPricing = 5\r\n    | extend DcspmEstimatedPrice = iff(tolower('{gcpIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project DefenderCSPM = DcspmEstimatedPrice\r\n    | extend GrandTotal = DefenderCSPM\r\n    | extend Cloud = \"GCP\"\r\n    | summarize gcp_sum_DefenderCSPM = sum(DefenderCSPM), gcp_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "gcpPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "gcp pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\",\"mergeType\":\"union\",\"leftTable\":\"pricing grid sum\",\"rightTable\":\"aws pricing grid sum\"},{\"id\":\"4a139f99-adb8-44ae-bb85-30796b103056\",\"mergeType\":\"union\",\"leftTable\":\"aws pricing grid sum\",\"rightTable\":\"gcp pricing grid sum\"}],\"projectRename\":[{\"originalName\":\"[pricing grid sum].Cloud\",\"mergedName\":\"Cloud\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_DefenderCSPM\",\"mergedName\":\"azure_sum_DefenderCSPM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_ARM\",\"mergedName\":\"azure_sum_ARM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_KeyVault\",\"mergedName\":\"azure_sum_KeyVault\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_API\",\"mergedName\":\"azure_sum_API\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Servers\",\"mergedName\":\"azure_sum_Servers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_AppServices\",\"mergedName\":\"azure_sum_AppServices\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_SQLDatabases\",\"mergedName\":\"azure_sum_SQLDatabases\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_OSSDBs\",\"mergedName\":\"azure_sum_OSSDBs\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Storage\",\"mergedName\":\"azure_sum_Storage\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Containers\",\"mergedName\":\"azure_sum_Containers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_GrandTotal\",\"mergedName\":\"azure_sum_GrandTotal\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_DefenderCSPM\",\"mergedName\":\"aws_sum_DefenderCSPM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_Servers\",\"mergedName\":\"aws_sum_Servers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_GrandTotal\",\"mergedName\":\"aws_sum_GrandTotal\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"Cloud\",\"mergedName\":\"Cloud\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_DefenderCSPM\",\"mergedName\":\"azure_sum_DefenderCSPM\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_API\",\"mergedName\":\"azure_sum_API\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_ARM\",\"mergedName\":\"azure_sum_ARM\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_KeyVault\",\"mergedName\":\"azure_sum_KeyVault\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Servers\",\"mergedName\":\"azure_sum_Servers\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_AppServices\",\"mergedName\":\"azure_sum_AppServices\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_SQLDatabases\",\"mergedName\":\"azure_sum_SQLDatabases\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_OSSDBs\",\"mergedName\":\"azure_sum_OSSDBs\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Storage\",\"mergedName\":\"azure_sum_Storage\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Containers\",\"mergedName\":\"azure_sum_Containers\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_GrandTotal\",\"mergedName\":\"azure_sum_GrandTotal\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender CSPM\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"column\",\"resultVal\":\"gcp_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender for ARM\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_ARM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender for Key Vault\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_KeyVault\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender for API\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_API\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Servers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Servers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_Servers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"App Services\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_AppServices\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"SQL Databases\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_SQLDatabases\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"OSS DBs\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_OSSDBs\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Storage\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Storage\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Containers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Containers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Grand total\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_GrandTotal\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_GrandTotal\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"column\",\"resultVal\":\"gcp_sum_GrandTotal\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Cloud Environment\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"All\"}}]},{\"originalName\":\"[gcp pricing grid sum].gcp_sum_DefenderCSPM\",\"mergedName\":\"gcp_sum_DefenderCSPM\",\"fromId\":\"4a139f99-adb8-44ae-bb85-30796b103056\"},{\"originalName\":\"[gcp pricing grid sum].gcp_sum_GrandTotal\",\"mergedName\":\"gcp_sum_GrandTotal\",\"fromId\":\"4a139f99-adb8-44ae-bb85-30796b103056\"}]}",
              "size": 1,
              "title": "Grand total",
              "exportedParameters": [
                {
                  "fieldName": "Subscription",
                  "parameterName": "Subscription",
                  "parameterType": 6
                },
                {
                  "fieldName": "SecurityConnectorId",
                  "parameterName": "SecurityConnectorId",
                  "parameterType": 5
                }
              ],
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "aws_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "aws_sum_Servers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "aws_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Cloud",
                    "formatter": 5,
                    "formatOptions": {
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "azure_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_ARM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_API",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_KeyVault",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Servers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_AppServices",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_SQLDatabases",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_OSSDBs",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Storage",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Containers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "gcp_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "gcp_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Defender for ARM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Defender for API",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Key Vault",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "App Services",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "SQL Databases",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "OSS DBs",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Storage",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Containers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Grand total",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Cloud Environment",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ARM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalGroup",
                    "formatter": 1
                  }
                ],
                "rowLimit": 10000,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Cloud Environment"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Cloud"
                }
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "Subscriptions",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": false,
            "name": "Grand total",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\",\"mergeType\":\"table\",\"leftTable\":\"pricing grid\"}],\"projectRename\":[{\"originalName\":\"[pricing grid].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].CspmEstimatedPriceFull\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].defenderForArmCost\",\"mergedName\":\"defenderForArmCost\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].defenderForApiCost\",\"mergedName\":\"defenderForApiCost\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].akvEstimatedPrice\",\"mergedName\":\"akvEstimatedPrice\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Servers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"ServersInRg\",\"operator\":\"!=\",\"rightValType\":\"static\",\"rightVal\":\"0\",\"resultValType\":\"expression\",\"resultVal\":\" [\\\"ServersInRg\\\"] * {azureServersPlanVal} *{azureIsServersSelected}\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"0\"}}]},{\"originalName\":\"[pricing grid].ServersInRg\",\"mergedName\":\"ServersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].AppServicesEstimatedPrice\",\"mergedName\":\"App Services\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].AppServicesInRg\",\"mergedName\":\"AppServicesInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].SqlServersEstimatedPrice\",\"mergedName\":\"SQL Databases\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].SqlServersInRg\",\"mergedName\":\"SqlServersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].OpenSourceRelationalDatabasesEstimatedPrice\",\"mergedName\":\"OSS DBs\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].OpenSourceRelationalDatabasesInRg\",\"mergedName\":\"OpenSourceRelationalDatabasesInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].StorageAccountsEstimatedPrice\",\"mergedName\":\"Storage\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].StorageAccountsInRg\",\"mergedName\":\"StorageAccountsInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].ContainersEstimatedPrice\",\"mergedName\":\"Containers\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid].ContainersInRg\",\"mergedName\":\"ContainersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for subscription\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"] + [\\\"defenderForApiCost\\\"] + [\\\"defenderForArmCost\\\"] + [\\\"akvEstimatedPrice\\\"]+[\\\"Servers\\\"] +[\\\"App Services\\\"] +[\\\"SQL Databases\\\"] +[\\\"OSS DBs\\\"] +[\\\"Storage\\\"] +[\\\"Containers\\\"]\"}}]},{\"originalName\":\"[pricing grid].CspmInRg\",\"mergedName\":\"CspmInRg\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].cspmDiscount\",\"mergedName\":\"cspmDiscount\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalAppServicesInSub\",\"mergedName\":\"TotalAppServicesInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].AppServicesRatio\",\"mergedName\":\"AppServicesRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].AppServicesPricing\",\"mergedName\":\"AppServicesPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalServersInSub\",\"mergedName\":\"TotalServersInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ServersRatio\",\"mergedName\":\"ServersRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ServersPricingP1\",\"mergedName\":\"ServersPricingP1\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ServersPricingP2\",\"mergedName\":\"ServersPricingP2\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalStorageAccountsInSub\",\"mergedName\":\"TotalStorageAccountsInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].StorageAccountsRatio\",\"mergedName\":\"StorageAccountsRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].StorageAccountsPricing\",\"mergedName\":\"StorageAccountsPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalOpenSourceRelationalDatabasesInSub\",\"mergedName\":\"TotalOpenSourceRelationalDatabasesInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].OpenSourceRelationalDatabasesRatio\",\"mergedName\":\"OpenSourceRelationalDatabasesRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].OpenSourceRelationalDatabasesPricing\",\"mergedName\":\"OpenSourceRelationalDatabasesPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CosmosDBsInRg\",\"mergedName\":\"CosmosDBsInRg\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalCosmosDBsInSub\",\"mergedName\":\"TotalCosmosDBsInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CosmosDBsPricing\",\"mergedName\":\"CosmosDBsPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalSqlServersInSub\",\"mergedName\":\"TotalSqlServersInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].SqlServersRatio\",\"mergedName\":\"SqlServersRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].SqlServersPricing\",\"mergedName\":\"SqlServersPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalContainersInSub\",\"mergedName\":\"TotalContainersInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ContainersRatio\",\"mergedName\":\"ContainersRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ContainersPricing\",\"mergedName\":\"ContainersPricing\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ContainersDiscountPercentage\",\"mergedName\":\"ContainersDiscountPercentage\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ImageScansIncluded\",\"mergedName\":\"ImageScansIncluded\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].TotalCspmInSub\",\"mergedName\":\"TotalCspmInSub\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CspmRatio\",\"mergedName\":\"CspmRatio\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CspmPricingFull\",\"mergedName\":\"CspmPricingFull\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CspmPricingDiscount5\",\"mergedName\":\"CspmPricingDiscount5\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CspmPricingDiscount10\",\"mergedName\":\"CspmPricingDiscount10\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].CspmPricingDiscount25\",\"mergedName\":\"CspmPricingDiscount25\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ServersEstimatedPrice\",\"mergedName\":\"ServersEstimatedPrice\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].ServersEstimatedPriceP2\",\"mergedName\":\"ServersEstimatedPriceP2\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].Column1\",\"mergedName\":\"Column1\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].Count\",\"mergedName\":\"Count\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].AkvInRg\",\"mergedName\":\"AkvInRg\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid].Subscription1\"}]}",
              "size": 1,
              "title": "Azure",
              "exportFieldName": "Subscription",
              "exportParameterName": "Subscription",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true,
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"CspmInRg\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "defenderForArmCost",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "defenderForApiCost",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "akvEstimatedPrice",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"AkvInRg\"] Key Vaults)"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"ServersInRg\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "ServersInRg",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "App Services",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"AppServicesInRg\"] instances)"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "AppServicesInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SQL Databases",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"SqlServersInRg\"] SQL Databases)"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "SqlServersInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "OSS DBs",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"OpenSourceRelationalDatabasesInRg\"] OSS Databases)"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "OpenSourceRelationalDatabasesInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Storage",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"StorageAccountsInRg\"] storage accounts)"
                        }
                      ],
                      "customColumnWidthSetting": "30ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "StorageAccountsInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Containers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"ContainersInRg\"] VM cores)"
                        }
                      ],
                      "customColumnWidthSetting": "38ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "ContainersInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for subscription",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "CspmInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AkvInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DCSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"CspmInRg\"] biling units)"
                        }
                      ],
                      "customColumnWidthSetting": "32ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "defenderForArmCost",
                    "label": "Defender for ARM"
                  },
                  {
                    "columnId": "defenderForApiCost",
                    "label": "Defender for API"
                  },
                  {
                    "columnId": "akvEstimatedPrice",
                    "label": "Defender for Key Vault"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_Servers_4",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "azurePlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "Subscriptions",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "pricing grid with total hidden"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\",\"mergeType\":\"table\",\"leftTable\":\"aws pricing grid\"}],\"projectRename\":[{\"originalName\":\"[aws pricing grid].SecurityConnectorId\",\"mergedName\":\"AWS account\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[aws pricing grid].DcspmEstimatedPrice\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[aws pricing grid].ServersEstimatedPrice\",\"mergedName\":\"Servers\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[aws pricing grid].TotalServersInSecurityConnector\",\"mergedName\":\"TotalServersInSecurityConnector\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[aws pricing grid].TotalDcspmInSecurityConnector\",\"mergedName\":\"TotalDcspmInSecurityConnector\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for AWS account\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"] + [\\\"Servers\\\"]\"}}]}]}",
              "size": 1,
              "title": "AWS",
              "exportFieldName": "SecurityConnectorId",
              "exportParameterName": "SecurityConnectorId",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalDcspmInSecurityConnector\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalServersInSecurityConnector\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalServersInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TotalDcspmInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for AWS account",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Security Connector",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "Total for security connector",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_link_AWS account_0",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_AWS account_0",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "awsPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "AWSSecurityConnectors",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": false,
            "name": "aws pricing grid with total hidden"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\",\"mergeType\":\"table\",\"leftTable\":\"gcp pricing grid\"}],\"projectRename\":[{\"originalName\":\"[gcp pricing grid].SecurityConnectorId\",\"mergedName\":\"GCP project\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[gcp pricing grid].TotalDcspmInSecurityConnector\",\"mergedName\":\"TotalDcspmInSecurityConnector\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[gcp pricing grid].DcspmEstimatedPrice\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"72a4d9da-dafa-4307-b5a0-bf18e2c8540e\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for GCP project\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"]\"}}]}]}",
              "size": 1,
              "title": "GCP",
              "exportFieldName": "SecurityConnectorId",
              "exportParameterName": "SecurityConnectorId",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TotalDcspmInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalDcspmInSecurityConnector\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Total for GCP project",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalServersInSecurityConnector\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalServersInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for AWS account",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Security Connector",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "Total for security connector",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "gcpPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "GCPSecurityConnectors",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": false,
            "name": "gcp pricing grid with total hidden"
          }
        ]
      },
      "name": "subscriptionGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "7e75b4e4-c8c8-4800-98da-edef70c49ccb",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureTenantPlans",
                  "label": "Azure Defender plans",
                  "type": 2,
                  "description": "Please select one or several Azure plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n{ \"value\": \"microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines\", \"label\": \"Servers\"},\r\n { \"value\": \"microsoft.web/serverfarms\", \"label\": \"App Services\"},\r\n { \"value\": \"microsoft.sql/servers, microsoft.sql/managedinstances\", \"label\": \"SQL Databases\"},\r\n {\"value\": \"microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.dbformariadb/servers\", \"label\": \"OSS DBs\"},\r\n  { \"value\": \"microsoft.containerservice/managedclusters\", \"label\": \"Containers\"},\r\n  { \"value\": \"microsoft.storage/storageaccounts - storageenabled\", \"label\": \"Storage\"},\r\n  { \"value\": \"microsoft.compute/virtualmachines, microsoft.classiccompute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.sql/servers, microsoft.hybridcompute/machines, microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.sql/managedinstances, microsoft.dbformariadb/servers, Microsoft.synapse/workspaces, microsoft.storage/storageaccounts\", \"label\": \"DefenderCSPM\"},\r\n  {\"value\": \"microsoft.resources/subscriptions\", \"label\": \"Defender for ARM\"},\r\n  {\"value\": \"microsoft.keyvault/vaults\", \"label\": \"Defender for Key Vault\"},\r\n  {\"value\": \"microsoft.apimanagement/service\", \"label\": \"Defender for API\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "awsTenantPlans",
                  "label": "AWS Defender plans",
                  "type": 2,
                  "description": "Please select one or several AWS plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n{ \"value\": \"Microsoft.Security/securityConnectors/EC2instance\", \"label\": \"Servers\"},\r\n  { \"value\": \"Microsoft.Security/securityConnectors/EC2instance, Microsoft.Security/securityConnectors/S3Bucket, Microsoft.Security/securityConnectors/RDSdb\", \"label\": \"DefenderCSPM\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "value::all"
                  ],
                  "id": "9d6c24c8-eadf-4db7-bb4d-0fcee9fb99ee"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "gcpTenantPlans",
                  "label": "GCP Defender plans",
                  "type": 2,
                  "description": "Please select one or several GCP plans to allow the workbook to calculate Defender for Cloud cost.",
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n  { \"value\": \"microsoft.security/securityconnectors/computeinstances, microsoft.security/securityconnectors/storagebuckets, microsoft.security/securityconnectors/sqladmininstances\", \"label\": \"DefenderCSPM\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "value::all"
                  ],
                  "id": "eb8783f4-3610-4da2-8410-0f8847175a12"
                },
                {
                  "id": "56dd02c1-e73c-4fc4-a480-1d93165297f8",
                  "version": "KqlParameterItem/1.0",
                  "name": "tenantInfo",
                  "label": "Additional information",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 1, \"label\": \"On\", \"selected\": true},\r\n { \"value\": 0, \"label\": \"Off\"}\r\n]"
                },
                {
                  "id": "70a8a248-e441-4601-a0cc-2484930eda44",
                  "version": "KqlParameterItem/1.0",
                  "name": "tenantInfoRes",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "{tenantInfo}"
                      }
                    }
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "istenantlevel",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Plan Picker"
          },
          {
            "type": 1,
            "content": {
              "json": "* ###### The costs displayed are estimated and might be different from the actual costs seen in the invoice.  \r\n\r\n* ###### The estimated costs displayed are monthly estimated costs per subscription and/or AWS account and/or GCP project based on currently active resources.\r\n\r\n* ###### To estimate the costs for a subscription and/or AWS account and/or GCP project, you must be assigned with at least Reader role at the subscription level. \r\n\r\n* ###### This workbook displays the cost for Defender for Storage in Azure based on a per-storage account calculation, but accounts with an exceptionally high transaction volume incur an overage charge that won’t be seen in this workbook. For more information on Defender for Storage cost estimation calculations, please visit our [GitHub page](https://github.com/Azure/Microsoft-Defender-for-Cloud/tree/main/Workbooks/Microsoft%20Defender%20for%20Storage%20Price%20Estimation).\r\n\r\n* ###### Defender for Cosmos DB plan in Azure currently can’t be estimated, we are working to include it in the future.\r\n\r\n* ###### The cost estimation is based on the retail prices of Defender plans; Learn more about [Defender plans’ retail price](https://azure.microsoft.com/pricing/details/defender-for-cloud/).\r\n\r\n* ###### Microsoft Defender CSPM protects across all your multicloud workloads, but billing only applies for Servers, Databases and Storages at $5/billable resource/month. Please visit [Defender CSPM documentation page](https://learn.microsoft.com/en-us/azure/defender-for-cloud/concept-cloud-security-posture-management) for more information.\r\n\r\n* ###### Defender CSPM plan in GCP cost estimation counts all storage buckets, although in reality only buckets from class ‘standard’ will be charged. In addition, the charge for this plan will apply only for buckets from the following regions: \r\n###### europe-west1, us-east1, us-west1, us-central1, us-east4, asia-south1, northamerica-northeast1.\r\n\r\n* ###### Defender CSPM plan in GCP cost estimation may not count all Google Instance Group instances, although they are going to be charged as well.\r\n\r\n* ###### This workbook displays the cost for Defender for API in Azure based on a per-subscription calculation, but subscriptions with an exceptionally high transaction volume incur an overage charge that won’t be seen in this workbook.",
              "style": "info"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "tenantInfoRes",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "text - 6 - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "af54d179-7a17-4c2d-a2c8-b8fe9e6f5ab2",
                  "version": "KqlParameterItem/1.0",
                  "name": "AzureP1P2tenant",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f1a24c63-0a4a-4526-b6a9-9f8592f17f03",
                  "version": "KqlParameterItem/1.0",
                  "name": "AWSP1P2TenantLabel",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "{awsTenantPlans:label}"
                      }
                    }
                  ]
                },
                {
                  "id": "46f45f75-498e-473e-836f-ce0e1ee14a76",
                  "version": "KqlParameterItem/1.0",
                  "name": "AWSP1P2Tenant",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2TenantLabel",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "Servers",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2TenantLabel",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "All",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "AzureAPISubPlans",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.apimanagement/service",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "f8340015-d080-4ead-b838-eddd7c7b723f"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 8 - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "07d3c894-c589-49cd-aabc-26e6deec02ce",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureServersPlanValTenant",
                  "label": "Azure Servers Plan",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 5, \"label\": \"Defender for Servers Plan 1\", \"selected\": true},\r\n { \"value\": 15, \"label\": \"Defender for Servers Plan 2\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AzureP1P2tenant",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "azureServersplanTenant"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "41bd09fa-36e4-4ce7-8348-c9af14e63783",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsServersPlanValTenant",
                  "label": "AWS Servers Plan",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 5, \"label\": \"Defender for Servers Plan 1\", \"selected\": true},\r\n { \"value\": 15, \"label\": \"Defender for Servers Plan 2\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AWSP1P2Tenant",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "awsServersplanTenant"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "88e0729a-c83e-43a8-959b-8f347326da42",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureAPIPlanValTenant",
                  "label": "Azure API Plan",
                  "type": 2,
                  "description": "Azure API Plan",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\": 200, \"label\": \"Defender for API Plan 1\", \"selected\": true},\r\n { \"value\": 700, \"label\": \"Defender for API Plan 2\"},\r\n  { \"value\": 5000, \"label\": \"Defender for API Plan 3\"},\r\n   { \"value\": 7000, \"label\": \"Defender for API Plan 4\"},\r\n    { \"value\": 50000, \"label\": \"Defender for API Plan 5\"}\r\n\r\n\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AzureAPISubPlans",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "azureapiplanstenant"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8722131e-5864-4b1b-bfc5-13bdf685ae71",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureP1P2tenant",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureServersPlanValTenant} == 5"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "2fab4bde-3d8c-47c5-8485-871450f3336f",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureP1P2tenant",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureServersPlanValTenant} == 15"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "a96ccf43-0888-4594-ab51-27c855885067",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsStorage",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.storage/storageaccounts - storageenabled",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "65f089b8-ee99-4955-b64e-e76349df2223",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.classiccompute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.sql/servers, microsoft.hybridcompute/machines, microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.sql/managedinstances, microsoft.dbformariadb/servers, Microsoft.synapse/workspaces, microsoft.storage/storageaccounts",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "12d2c065-d0ef-402e-ac03-c4790d89953d",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsOss",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.dbforpostgresql/servers, microsoft.dbformysql/servers, microsoft.dbformariadb/servers",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "6cebe002-d524-4257-8ce2-fa034f350055",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsSql",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.sql/servers, microsoft.sql/managedinstances",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "2fd6f7c1-405f-4091-91f4-470222827e59",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsServersSelected",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "azureTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.compute/virtualmachines, microsoft.compute/virtualmachinescalesets, microsoft.hybridcompute/machines, microsoft.classiccompute/virtualmachines",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "505a71d6-9c8e-4a7d-9c99-e0e952da7764",
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanValTenant} == 200"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanValTenant} == 700"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "1555ba14-4dfa-4b3a-86be-a0833794a526"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP3",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanValTenant} == 5000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "5e12d581-7c44-4373-b20f-847959f5e481"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP4",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanValTenant} == 7000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "1bc99b78-7d56-4801-8741-a37e4134b605"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "azureIsApiP5",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AzureAPISubPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{azureAPIPlanValTenant} == 50000"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "dae34911-843e-4f53-b120-1c257720475e"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "azureTenantConditions"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1ded2fd3-ec6b-43ad-b03e-c56e9cf70b49",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersP1",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2Tenant",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{awsServersPlanValTenant} == 5"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "ac0320e5-6ccc-406d-aa48-191c4265705f",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersP2",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "AWSP1P2Tenant",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "expression",
                        "resultVal": "{awsServersPlanValTenant} == 15"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "9773b932-6f37-4fae-a6e0-bec8ee807702",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "awsTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "Microsoft.Security/securityConnectors/EC2instance, Microsoft.Security/securityConnectors/S3Bucket, Microsoft.Security/securityConnectors/RDSdb",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                },
                {
                  "id": "7e3f554c-d80d-4254-b4ab-92f2d24d3c63",
                  "version": "KqlParameterItem/1.0",
                  "name": "awsIsServersSelected",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "awsTenantPlans",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "Microsoft.Security/securityConnectors/EC2instance",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "awsTenantConditions"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "97790b13-e98d-4193-b303-14fafe0b8514",
                  "version": "KqlParameterItem/1.0",
                  "name": "gcpIsDcspm",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "gcpTenantPlans",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "microsoft.security/securityconnectors/computeinstances, microsoft.security/securityconnectors/storagebuckets, microsoft.security/securityconnectors/sqladmininstances",
                        "resultValType": "expression",
                        "resultVal": "true"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "false"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "x",
              "comparison": "isNotEqualTo"
            },
            "name": "gcpTenantConditions"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCount = toint(properties_agentPoolProfiles['count']) * coresInSku//, sku\r\n    | summarize sum(managedClustersCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n    | extend sum_appServiceCount = 0, sum_serversCount = 0, sum_storageAccountCount = 0, sum_ossDatabaseCount = 0, sum_cosmosDbCount = 0, sum_sqlServersCount = 0, sum_containerRegistryCount = 0\r\n    | where sum_managedClustersCount > 0\r\n    | extend Dummy = 1 \r\n| join  kind=inner \r\n    ( \r\n    resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCountTotal = toint(properties_agentPoolProfiles['count']) * coresInSku, sku\r\n    | summarize sum(managedClustersCountTotal) by subscriptionId\r\n    | extend sum_appServiceCountTotal = 0, sum_serversCountTotal = 0, sum_storageAccountCountTotal = 0, sum_ossDatabaseCountTotal = 0, sum_cosmosDbCountTotal = 0, sum_sqlServersCountTotal = 0, sum_containerRegistryTotal = 0\r\n    | where sum_managedClustersCountTotal > 0\r\n    | extend Dummy = 1\r\n    ) on  subscriptionId\r\n| union \r\n(\r\n    resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n        | extend appServiceCount = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n        | extend vmCount = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n        | extend vmCountForCspm = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n        | extend vmssCount = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend vmssCountForCspm = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend serversCount = vmCount + vmssCount\r\n        | extend storageAccountCount = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n        | extend ossDatabaseCount = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\"), 1, 0)\r\n        | extend cosmosDbCount = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n        | extend sqlServersCount = iff(type =~ \"microsoft.sql/servers\" or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n        | extend synapseServersCount = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n        | extend cspmCount = vmCountForCspm + vmssCountForCspm + storageAccountCount + ossDatabaseCount + sqlServersCount + synapseServersCount \r\n        | extend containerRegistryCount = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n        | summarize sum(appServiceCount), sum(serversCount),sum(storageAccountCount), sum(containerRegistryCount), sum(ossDatabaseCount), sum(cosmosDbCount), sum(sqlServersCount), sum(cspmCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n        | where sum_appServiceCount > 0 or sum_serversCount > 0 or sum_storageAccountCount > 0 or sum_ossDatabaseCount > 0 or sum_cosmosDbCount > 0 or sum_sqlServersCount > 0 or sum_containerRegistryCount > 0 or sum_cspmCount > 0\r\n        | extend sum_managedClustersCount = 0\r\n        | extend Dummy = 1 \r\n    | join  kind=inner \r\n            ( \r\n            resources\r\n            | extend selectedPlans = tolower('{azureTenantPlans}')\r\n            | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n            | extend type = tolower(type) \r\n            | where selectedPlans has type \r\n            | extend appServiceCountTotal = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n            | extend vmCountTotal = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n            | extend vmCountForCspmTotal = iff(type in (\"microsoft.compute/virtualmachines \", \"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n            | extend vmssCountTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend vmssCountForCspmTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend serversCountTotal = vmCountTotal + vmssCountTotal\r\n            | extend storageAccountCountTotal = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n            | extend ossDatabaseCountTotal = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\") and sku.tier !contains(\"basic\"), 1, 0)\r\n            | extend cosmosDbCountTotal = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n            | extend sqlServersCountTotal = iff((type =~ \"microsoft.sql/servers\" and kind !contains(\"analytics\")) or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n            | extend synapseServersCountTotal = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n            | extend cspmCountTotal = vmCountForCspmTotal + vmssCountForCspmTotal + storageAccountCountTotal + ossDatabaseCountTotal + sqlServersCountTotal + synapseServersCountTotal \r\n            | extend containerRegistryTotal = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n            | summarize sum(serversCountTotal), sum(storageAccountCountTotal), sum(appServiceCountTotal), sum(containerRegistryTotal), sum(ossDatabaseCountTotal), sum(cosmosDbCountTotal), sum(sqlServersCountTotal), sum(cspmCountTotal) by subscriptionId\r\n            | where sum_appServiceCountTotal > 0 or sum_serversCountTotal > 0 or sum_storageAccountCountTotal > 0 or sum_containerRegistryTotal  > 0 or sum_ossDatabaseCountTotal > 0 or sum_cosmosDbCountTotal > 0 or sum_sqlServersCountTotal > 0 or sum_cspmCountTotal > 0\r\n            | extend sum_managedClustersCountTotal = 0\r\n            | extend Dummy = 1\r\n            ) on  subscriptionId\r\n)\r\n| union \r\n(\r\n    resources\r\n    | extend selectedPlans = tolower('{azureTenantPlans}')\r\n    | extend type = tolower(type) \r\n    | where selectedPlans has type \r\n    | extend akvCountCount = iff(type == \"microsoft.keyvault/vaults\", 1 , 0)\r\n    | summarize sum(akvCountCount) by subscriptionId, resourceGroup\r\n    | where sum_akvCountCount > 0\r\n)\r\n| extend ServersRatio = case(sum_serversCountTotal == 0, 0.0, todouble(sum_serversCount) / todouble(sum_serversCountTotal))\r\n| extend AppServicesRatio = case(sum_appServiceCountTotal == 0, 0.0, todouble(sum_appServiceCount) / todouble(sum_appServiceCountTotal))\r\n| extend StorageRatio = case(sum_storageAccountCountTotal == 0, 0.0, todouble(sum_storageAccountCount) / todouble(sum_storageAccountCountTotal))\r\n//| extend ContainerRegistriesRatio = case(sum_containerRegistryTotal == 0, 0.0, todouble(sum_containerRegistryCount) / todouble(sum_containerRegistryTotal))\r\n| extend OpenSourceRelationalDatabasesRatio = case(sum_ossDatabaseCountTotal == 0, 0.0, todouble(sum_ossDatabaseCount) / todouble(sum_ossDatabaseCountTotal))\r\n//| extend CosmosDBsRatio = case(sum_cosmosDbCountTotal == 0, 0.0, todouble(sum_cosmosDbCount) / todouble(sum_cosmosDbCountTotal))\r\n| extend SqlServersRatio = case(sum_sqlServersCountTotal == 0, 0.0, todouble(sum_sqlServersCount) / todouble(sum_sqlServersCountTotal))\r\n| extend ContainersRatio = case(sum_managedClustersCountTotal == 0, 0.0, todouble(sum_managedClustersCount) / todouble(sum_managedClustersCountTotal))\r\n| extend CspmRatio = case(sum_cspmCountTotal == 0, 0.0, todouble(sum_cspmCount) / todouble(sum_cspmCountTotal))\r\n| project \r\n    subscriptionId, resourceGroup,// tags_provider, \r\n    AppServicesInRg = sum_appServiceCount, TotalAppServicesInSub = sum_appServiceCountTotal, AppServicesRatio = round(AppServicesRatio, 4), AppServicesPricing = 15,\r\n    ServersInRg = sum_serversCount, TotalServersInSub = sum_serversCountTotal, ServersRatio = round(ServersRatio, 4), ServersPricingP1 = 5, ServersPricingP2 = 15,\r\n    StorageAccountsInRg = sum_storageAccountCount, TotalStorageAccountsInSub = sum_storageAccountCountTotal, StorageAccountsRatio = round(ServersRatio, 4), StorageAccountsPricing = 10, \r\n    //ContainerRegistriesAccountsInRg = sum_containerRegistryCount, TotalContainerRegistriesInSub = sum_containerRegistryTotal, ContainerRegistriesAccountsPricing = \"$0.29 per image\",//ContainerRegistriesRatio = round(ContainerRegistriesRatio , 4),\r\n    OpenSourceRelationalDatabasesInRg = sum_ossDatabaseCount, TotalOpenSourceRelationalDatabasesInSub = sum_ossDatabaseCountTotal, OpenSourceRelationalDatabasesRatio = round(OpenSourceRelationalDatabasesRatio , 4), OpenSourceRelationalDatabasesPricing = 15,\r\n    CosmosDBsInRg = sum_cosmosDbCount, TotalCosmosDBsInSub = sum_cosmosDbCountTotal, CosmosDBsPricing = \"$0.0012/100RU/s per hour\", //CosmosDBsRatio = round(CosmosDBsRatio , 4),\r\n    SqlServersInRg = sum_sqlServersCount, TotalSqlServersInSub = sum_sqlServersCountTotal, SqlServersRatio = round(SqlServersRatio , 4), SqlServersPricing = 15,\r\n    ContainersInRg = sum_managedClustersCount, TotalContainersInSub = sum_managedClustersCountTotal, ContainersRatio = round(ContainersRatio , 4),ContainersPricing = 7, ContainersDiscountPercentage = 0, ImageScansIncluded = iff(sum_containerRegistryCount > 0, sum_managedClustersCount * 20, 0),\r\n    CspmInRg = sum_cspmCount, TotalCspmInSub = sum_cspmCountTotal, CspmRatio = round(CspmRatio, 4), CspmPricingFull = 5, akvInRg = sum_akvCountCount\r\n| extend \r\n    akvEstimatedPrice = akvInRg * 0.25,\r\n    AppServicesEstimatedPrice = AppServicesPricing * AppServicesInRg,\r\n    ServersEstimatedPrice = ServersInRg ,\r\n    ServersEstimatedPriceP2 = ServersInRg ,\r\n    StorageAccountsEstimatedPrice = StorageAccountsPricing * StorageAccountsInRg,\r\n    OpenSourceRelationalDatabasesEstimatedPrice = iff(tolower('{azureIsOss}') contains \"true\", OpenSourceRelationalDatabasesPricing * OpenSourceRelationalDatabasesInRg, 0),\r\n    SqlServersEstimatedPrice = iff(tolower('{azureIsSql}') contains \"true\", SqlServersPricing * SqlServersInRg,0),\r\n    ContainersEstimatedPrice = ContainersPricing * ContainersInRg,\r\n    CspmEstimatedPriceFull = iff(tolower('{azureIsDcspm}') contains \"true\", CspmPricingFull * CspmInRg, 0)\r\n| summarize CspmEstimatedPriceFull = sum(CspmEstimatedPriceFull), AppServicesEstimatedPrice = sum(AppServicesEstimatedPrice), SqlServersEstimatedPrice = sum(SqlServersEstimatedPrice)\r\n, OpenSourceRelationalDatabasesEstimatedPrice = sum(OpenSourceRelationalDatabasesEstimatedPrice), StorageAccountsEstimatedPrice = iff({azureIsStorage} == 'true',sum(StorageAccountsEstimatedPrice),0),\r\nContainersEstimatedPrice = sum(ContainersEstimatedPrice), CspmInRg = sum(CspmInRg), ContainersInRg = sum(ContainersInRg), SqlServersInRg = sum(SqlServersInRg),OpenSourceRelationalDatabasesInRg = sum(OpenSourceRelationalDatabasesInRg) , StorageAccountsInRg = sum(StorageAccountsInRg),\r\nServersInRg = sum(ServersInRg), AppServicesInRg = sum(AppServicesInRg), AkvInRg = sum(akvInRg), akvEstimatedPrice = sum(akvEstimatedPrice)  by Subscription = subscriptionId\r\n| join kind=fullouter\r\n(\r\n    resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | extend type = tolower(type) \r\n    | extend selectedPlans = tolower('{azureTenantPlans}')\r\n    | project subscriptionId, defenderForArmCost = iff(selectedPlans contains \"microsoft.resources/subscriptions\", 5, 0)\r\n    | join kind = fullouter\r\n    (\r\n        resources\r\n        | where type == \"microsoft.apimanagement/service\"\r\n        | project subscriptionId, defenderForApiCost = iff(tolong('{AzureAPISubPlans}')==1, tolong('{azureAPIPlanValTenant}'), 0)\r\n        | distinct subscriptionId, defenderForApiCost\r\n    )\r\n    on subscriptionId\r\n    | project Subscription = subscriptionId, defenderForApiCost, defenderForArmCost\r\n) on Subscription\r\n| extend Subscription = iif(isempty(Subscription), Subscription1, Subscription)\r\n| extend defenderForArmCost = iff(isempty(defenderForArmCost), 0.0, defenderForArmCost *1.0)\r\n| extend defenderForApiCost = iff(isempty(defenderForApiCost), 0.0, defenderForApiCost *1.0)",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "defenderForArmCost",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "AppServicesEstimatedPrice",
                    "label": "App Services"
                  },
                  {
                    "columnId": "SqlServersEstimatedPrice",
                    "label": "SQL Databases"
                  },
                  {
                    "columnId": "OpenSourceRelationalDatabasesEstimatedPrice",
                    "label": "OSS DBs"
                  },
                  {
                    "columnId": "StorageAccountsEstimatedPrice",
                    "label": "Storage"
                  },
                  {
                    "columnId": "ContainersEstimatedPrice",
                    "label": "Containers"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "defenderForArmCost",
                  "sortOrder": 2
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "pricing grid - tenant"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCount = toint(properties_agentPoolProfiles['count']) * coresInSku//, sku\r\n    | summarize sum(managedClustersCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n    | extend sum_appServiceCount = 0, sum_serversCount = 0, sum_storageAccountCount = 0, sum_ossDatabaseCount = 0, sum_cosmosDbCount = 0, sum_sqlServersCount = 0, sum_containerRegistryCount = 0\r\n    | where sum_managedClustersCount > 0\r\n    | extend Dummy = 1 \r\n| join  kind=inner \r\n    ( \r\n    resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n    | extend managedClustersCount = iff(type == \"microsoft.containerservice/managedclusters\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n    | where tostring(properties.powerState.code) =~ 'Running'\r\n    | mv-expand properties.agentPoolProfiles\r\n    | extend sku = tostring(properties_agentPoolProfiles.vmSize)\r\n    | parse kind=regex sku with '(.*?)_([A-Za-z]*)' coresInSku: int '([A-Za-z]*)_(.*?)'\r\n    | project subscriptionId, resourceGroup, managedClustersCountTotal = toint(properties_agentPoolProfiles['count']) * coresInSku, sku\r\n    | summarize sum(managedClustersCountTotal) by subscriptionId\r\n    | extend sum_appServiceCountTotal = 0, sum_serversCountTotal = 0, sum_storageAccountCountTotal = 0, sum_ossDatabaseCountTotal = 0, sum_cosmosDbCountTotal = 0, sum_sqlServersCountTotal = 0, sum_containerRegistryTotal = 0\r\n    | where sum_managedClustersCountTotal > 0\r\n    | extend Dummy = 1\r\n    ) on  subscriptionId\r\n| union \r\n(\r\n    resources\r\n        | extend selectedPlans = tolower('{azureTenantPlans}')\r\n        | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n        | extend type = tolower(type) \r\n        | where selectedPlans has type \r\n        | extend appServiceCount = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n        | extend vmCount = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n        | extend vmCountForCspm = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n        | extend vmssCount = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend vmssCountForCspm = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n        | extend serversCount = vmCount + vmssCount\r\n        | extend storageAccountCount = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n        | extend ossDatabaseCount = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\"), 1, 0)\r\n        | extend cosmosDbCount = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n        | extend sqlServersCount = iff(type =~ \"microsoft.sql/servers\" or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n        | extend synapseServersCount = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n        | extend cspmCount = vmCountForCspm + vmssCountForCspm + storageAccountCount + ossDatabaseCount + sqlServersCount + synapseServersCount \r\n        | extend containerRegistryCount = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n        | summarize sum(appServiceCount), sum(serversCount),sum(storageAccountCount), sum(containerRegistryCount), sum(ossDatabaseCount), sum(cosmosDbCount), sum(sqlServersCount), sum(cspmCount) by subscriptionId, resourceGroup//, tostring(tags[\"provider\"])\r\n        | where sum_appServiceCount > 0 or sum_serversCount > 0 or sum_storageAccountCount > 0 or sum_ossDatabaseCount > 0 or sum_cosmosDbCount > 0 or sum_sqlServersCount > 0 or sum_containerRegistryCount > 0 or sum_cspmCount > 0 \r\n        | extend sum_managedClustersCount = 0\r\n        | extend Dummy = 1 \r\n    | join  kind=inner \r\n            ( \r\n            resources\r\n            | extend selectedPlans = tolower('{azureTenantPlans}')\r\n            | extend serverAndContainersEnabled = selectedPlans has \"microsoft.compute/virtualmachines\" and selectedPlans has \"microsoft.containerservice/managedclusters\"\r\n            | extend type = tolower(type) \r\n            | where selectedPlans has type \r\n            | extend appServiceCountTotal = iff(type == \"microsoft.web/serverfarms\" and isnotempty(sku) and tolower(sku.tier) != \"consumption\", toint(properties.numberOfWorkers), 0)\r\n            | extend vmCountTotal = iff(type in (\"microsoft.compute/virtualmachines\",\"microsoft.hybridcompute/machines\", \"microsoft.classiccompute/virtualmachines\") and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")), 1 , 0)\r\n            | extend vmCountForCspmTotal = iff(type in (\"microsoft.compute/virtualmachines \", \"microsoft.classiccompute/virtualmachines\"), 1 , 0)\r\n            | extend vmssCountTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and (not(serverAndContainersEnabled) or name !startswith(\"aks-\")) and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend vmssCountForCspmTotal = iff(type == \"microsoft.compute/virtualmachinescalesets\" and sku != \"\" and sku.capacity != \"\", toint(sku.capacity), 0)\r\n            | extend serversCountTotal = vmCountTotal + vmssCountTotal\r\n            | extend storageAccountCountTotal = iff(type == \"microsoft.storage/storageaccounts\", 1 , 0)\r\n            | extend ossDatabaseCountTotal = iff(type in(\"microsoft.dbforpostgresql/servers\", \"microsoft.dbformysql/servers\", \"microsoft.dbformariadb/servers\") and sku.tier !contains(\"basic\"), 1, 0)\r\n            | extend cosmosDbCountTotal = iff(type == \"microsoft.documentdb/databaseaccounts\", 1 , 0)\r\n            | extend sqlServersCountTotal = iff((type =~ \"microsoft.sql/servers\" and kind !contains(\"analytics\")) or type =~ \"microsoft.sql/managedinstances\", 1 , 0)\r\n            | extend synapseServersCountTotal = iff(type =~ \"microsoft.synapse/workspaces \", 1 , 0)\r\n            | extend cspmCountTotal = vmCountForCspmTotal + vmssCountForCspmTotal + storageAccountCountTotal + ossDatabaseCountTotal + sqlServersCountTotal + synapseServersCountTotal \r\n            | extend containerRegistryTotal = iff(type == \"microsoft.containerregistry/registries\", 1 , 0)\r\n            | summarize sum(serversCountTotal), sum(storageAccountCountTotal), sum(appServiceCountTotal), sum(containerRegistryTotal), sum(ossDatabaseCountTotal), sum(cosmosDbCountTotal), sum(sqlServersCountTotal), sum(cspmCountTotal) by subscriptionId\r\n            | where sum_appServiceCountTotal > 0 or sum_serversCountTotal > 0 or sum_storageAccountCountTotal > 0 or sum_containerRegistryTotal  > 0 or sum_ossDatabaseCountTotal > 0 or sum_cosmosDbCountTotal > 0 or sum_sqlServersCountTotal > 0 or sum_cspmCountTotal > 0\r\n            | extend sum_managedClustersCountTotal = 0\r\n            | extend Dummy = 1\r\n            ) on  subscriptionId\r\n)\r\n| union \r\n(\r\n    resources\r\n    | extend selectedPlans = tolower('{azureTenantPlans}')\r\n    | extend type = tolower(type) \r\n    | where selectedPlans has type \r\n    | extend akvCountCount = iff(type == \"microsoft.keyvault/vaults\", 1 , 0)\r\n    | summarize sum(akvCountCount) by subscriptionId, resourceGroup\r\n    | where sum_akvCountCount > 0\r\n)\r\n| extend ServersRatio = case(sum_serversCountTotal == 0, 0.0, todouble(sum_serversCount) / todouble(sum_serversCountTotal))\r\n| extend AppServicesRatio = case(sum_appServiceCountTotal == 0, 0.0, todouble(sum_appServiceCount) / todouble(sum_appServiceCountTotal))\r\n| extend StorageRatio = case(sum_storageAccountCountTotal == 0, 0.0, todouble(sum_storageAccountCount) / todouble(sum_storageAccountCountTotal))\r\n//| extend ContainerRegistriesRatio = case(sum_containerRegistryTotal == 0, 0.0, todouble(sum_containerRegistryCount) / todouble(sum_containerRegistryTotal))\r\n| extend OpenSourceRelationalDatabasesRatio = case(sum_ossDatabaseCountTotal == 0, 0.0, todouble(sum_ossDatabaseCount) / todouble(sum_ossDatabaseCountTotal))\r\n//| extend CosmosDBsRatio = case(sum_cosmosDbCountTotal == 0, 0.0, todouble(sum_cosmosDbCount) / todouble(sum_cosmosDbCountTotal))\r\n| extend SqlServersRatio = case(sum_sqlServersCountTotal == 0, 0.0, todouble(sum_sqlServersCount) / todouble(sum_sqlServersCountTotal))\r\n| extend ContainersRatio = case(sum_managedClustersCountTotal == 0, 0.0, todouble(sum_managedClustersCount) / todouble(sum_managedClustersCountTotal))\r\n| extend CspmRatio = case(sum_cspmCountTotal == 0, 0.0, todouble(sum_cspmCount) / todouble(sum_cspmCountTotal))\r\n| project \r\n    subscriptionId, resourceGroup,// tags_provider, \r\n    AppServicesInRg = sum_appServiceCount, TotalAppServicesInSub = sum_appServiceCountTotal, AppServicesRatio = round(AppServicesRatio, 4), AppServicesPricing = 15,\r\n    ServersInRg = sum_serversCount, TotalServersInSub = sum_serversCountTotal, ServersRatio = round(ServersRatio, 4), ServersPricingP1 = 5, ServersPricingP2 = 15,\r\n    StorageAccountsInRg = sum_storageAccountCount, TotalStorageAccountsInSub = sum_storageAccountCountTotal, StorageAccountsRatio = round(ServersRatio, 4), StorageAccountsPricing = 10, \r\n    //ContainerRegistriesAccountsInRg = sum_containerRegistryCount, TotalContainerRegistriesInSub = sum_containerRegistryTotal, ContainerRegistriesAccountsPricing = \"$0.29 per image\",//ContainerRegistriesRatio = round(ContainerRegistriesRatio , 4),\r\n    OpenSourceRelationalDatabasesInRg = sum_ossDatabaseCount, TotalOpenSourceRelationalDatabasesInSub = sum_ossDatabaseCountTotal, OpenSourceRelationalDatabasesRatio = round(OpenSourceRelationalDatabasesRatio , 4), OpenSourceRelationalDatabasesPricing = 15,\r\n    CosmosDBsInRg = sum_cosmosDbCount, TotalCosmosDBsInSub = sum_cosmosDbCountTotal, CosmosDBsPricing = \"$0.0012/100RU/s per hour\", //CosmosDBsRatio = round(CosmosDBsRatio , 4),\r\n    SqlServersInRg = sum_sqlServersCount, TotalSqlServersInSub = sum_sqlServersCountTotal, SqlServersRatio = round(SqlServersRatio , 4), SqlServersPricing = 15,\r\n    ContainersInRg = sum_managedClustersCount, TotalContainersInSub = sum_managedClustersCountTotal, ContainersRatio = round(ContainersRatio , 4),ContainersPricing = 7, ContainersDiscountPercentage = 0, ImageScansIncluded = iff(sum_containerRegistryCount > 0, sum_managedClustersCount * 20, 0),\r\n    CspmInRg = sum_cspmCount, TotalCspmInSub = sum_cspmCountTotal, CspmRatio = round(CspmRatio, 4), CspmPricingFull = 5, akvInRg = sum_akvCountCount\r\n| extend \r\n    akvEstimatedPrice = akvInRg * 0.25,\r\n    AppServicesEstimatedPrice = AppServicesPricing * AppServicesInRg,\r\n    ServersEstimatedPrice = ServersInRg ,\r\n    ServersEstimatedPriceP2 = ServersInRg ,\r\n    StorageAccountsEstimatedPrice = StorageAccountsPricing * StorageAccountsInRg,\r\n    OpenSourceRelationalDatabasesEstimatedPrice = iff(tolower('{azureIsOss}') contains \"true\", OpenSourceRelationalDatabasesPricing * OpenSourceRelationalDatabasesInRg, 0),\r\n    SqlServersEstimatedPrice = iff(tolower('{azureIsSql}') contains \"true\", SqlServersPricing * SqlServersInRg,0),\r\n    ContainersEstimatedPrice = ContainersPricing * ContainersInRg,\r\n    CspmEstimatedPriceFull = iff(tolower('{azureIsDcspm}') contains \"true\", CspmPricingFull * CspmInRg, 0)\r\n| summarize CspmEstimatedPriceFull = sum(CspmEstimatedPriceFull), AppServicesEstimatedPrice = sum(AppServicesEstimatedPrice), SqlServersEstimatedPrice = sum(SqlServersEstimatedPrice)\r\n, OpenSourceRelationalDatabasesEstimatedPrice = sum(OpenSourceRelationalDatabasesEstimatedPrice), StorageAccountsEstimatedPrice = iff({azureIsStorage} == 'true',sum(StorageAccountsEstimatedPrice),0),\r\nContainersEstimatedPrice = sum(ContainersEstimatedPrice), CspmInRg = sum(CspmInRg), ContainersInRg = sum(ContainersInRg), SqlServersInRg = sum(SqlServersInRg),OpenSourceRelationalDatabasesInRg = sum(OpenSourceRelationalDatabasesInRg) , StorageAccountsInRg = sum(StorageAccountsInRg),\r\nServersInRg = sum(ServersInRg), AppServicesInRg = sum(AppServicesInRg), AkvInRg = sum(akvInRg), akvEstimatedPrice = sum(akvEstimatedPrice)  by Subscription = subscriptionId\r\n| join kind=fullouter\r\n(\r\n    resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | extend type = tolower(type) \r\n    | extend selectedPlans = tolower('{azureTenantPlans}')\r\n    | project subscriptionId, defenderForArmCost = iff(selectedPlans contains \"microsoft.resources/subscriptions\", 5, 0)\r\n    | join kind = fullouter\r\n    (\r\n        resources\r\n        | where type == \"microsoft.apimanagement/service\"\r\n        | project subscriptionId, defenderForApiCost = iff(tolong('{AzureAPISubPlans}')==1, tolong('{azureAPIPlanValTenant}'), 0)\r\n        | distinct subscriptionId, defenderForApiCost\r\n    )\r\n    on subscriptionId\r\n    | project Subscription = subscriptionId, defenderForApiCost, defenderForArmCost\r\n) on Subscription\r\n| extend Subscription = iff(isempty(Subscription), Subscription1, Subscription)\r\n| extend defenderForArmCost = iff(isempty(defenderForArmCost), 0.0, defenderForArmCost*1.0)\r\n| extend defenderForApiCost = iff(isempty(defenderForApiCost), 0.0, defenderForApiCost*1.0)\r\n| extend akvEstimatedPrice = iff(isempty(akvEstimatedPrice), 0.0, akvEstimatedPrice*1.0)\r\n| extend AppServicesEstimatedPrice =  iff(isempty(AppServicesEstimatedPrice), 0.0, AppServicesEstimatedPrice*1.0)\r\n| extend SqlServersEstimatedPrice =  iff(isempty(SqlServersEstimatedPrice), 0.0, SqlServersEstimatedPrice*1.0)\r\n| extend OpenSourceRelationalDatabasesEstimatedPrice =  iff(isempty(OpenSourceRelationalDatabasesEstimatedPrice), 0.0, OpenSourceRelationalDatabasesEstimatedPrice*1.0)\r\n| extend StorageAccountsEstimatedPrice = iff(isempty(StorageAccountsEstimatedPrice), 0.0, StorageAccountsEstimatedPrice*1.0)\r\n| extend ContainersEstimatedPrice =  iff(isempty(ContainersEstimatedPrice), 0.0, ContainersEstimatedPrice*1.0)\r\n| extend DefenderCSPM = iff(CspmInRg != 0, CspmEstimatedPriceFull, 0)\r\n| extend Servers = iff(ServersInRg != 0, ServersInRg * {azureServersPlanValTenant} * {azureIsServersSelected}, 0)\r\n| project DefenderCSPM, ARM = defenderForArmCost, KeyVault = akvEstimatedPrice, API = defenderForApiCost, Servers, AppServices = AppServicesEstimatedPrice, SQLDatabases = SqlServersEstimatedPrice, OSSDBs = OpenSourceRelationalDatabasesEstimatedPrice, Storage = StorageAccountsEstimatedPrice, Containers = ContainersEstimatedPrice\r\n| extend GrandTotal = DefenderCSPM + ARM + KeyVault + API + Servers + AppServices + SQLDatabases + OSSDBs + Storage + Containers\r\n| extend Cloud = \"Azure\"\r\n| summarize azure_sum_DefenderCSPM = sum(DefenderCSPM), azure_sum_ARM = sum(ARM), azure_sum_KeyVault = sum(KeyVault), azure_sum_API = sum(API), azure_sum_Servers = sum(Servers), azure_sum_AppServices = sum(AppServices), azure_sum_SQLDatabases = sum(SQLDatabases), azure_sum_OSSDBs = sum(OSSDBs), azure_sum_Storage = sum(Storage), azure_sum_Containers = sum(Containers), azure_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('fead4128-7325-4b82-beda-3fd42de36920','0b168d89-4e52-45c9-bd6a-24f904abcc2e','bfa7d2aa-f362-11eb-9a03-0242ac130003'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"aws\"\r\n    | extend selectedPlans = tolower('{awsTenantPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/ec2instance\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/s3bucket\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/rdsdb\", 1 , 0)\r\n    | extend serversCount = computeCount\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalServersInSecurityConnector = sum(serversCount), TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalServersInSecurityConnector > 0 or TotalDcspmInSecurityConnector > 0\r\n    | extend ServersPricingP1 = 5, ServersPricingP2 = 15, DcspmPricing = 5\r\n    | extend ServersEstimatedPrice = iff(tolower('{awsIsServersP1}') == \"true\", ServersPricingP1 * TotalServersInSecurityConnector, iff(tolower('{awsIsServersP2}') == \"true\", ServersPricingP2 * TotalServersInSecurityConnector, 0)),\r\n             DcspmEstimatedPrice = iff(tolower('{awsIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project SecurityConnectorId = securityConnectorId, TotalServersInSecurityConnector, TotalDcspmInSecurityConnector, ServersEstimatedPrice, DcspmEstimatedPrice",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_link_SecurityConnectorId_0",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_SecurityConnectorId_0",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "aws pricing grid - tenant"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('fead4128-7325-4b82-beda-3fd42de36920','0b168d89-4e52-45c9-bd6a-24f904abcc2e','bfa7d2aa-f362-11eb-9a03-0242ac130003'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"aws\"\r\n    | extend selectedPlans = tolower('{awsTenantPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/ec2instance\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/s3bucket\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/rdsdb\", 1 , 0)\r\n    | extend serversCount = computeCount\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalServersInSecurityConnector = sum(serversCount), TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalServersInSecurityConnector > 0 or TotalDcspmInSecurityConnector > 0\r\n    | extend ServersPricingP1 = 5, ServersPricingP2 = 15, DcspmPricing = 5\r\n    | extend ServersEstimatedPrice = iff(tolower('{awsIsServersP1}') == \"true\", ServersPricingP1 * TotalServersInSecurityConnector, iff(tolower('{awsIsServersP2}') == \"true\", ServersPricingP2 * TotalServersInSecurityConnector, 0)),\r\n             DcspmEstimatedPrice = iff(tolower('{awsIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project DefenderCSPM = DcspmEstimatedPrice, Servers = ServersEstimatedPrice\r\n    | extend GrandTotal = DefenderCSPM + Servers\r\n    | extend Cloud = \"AWS\"\r\n    | summarize aws_sum_DefenderCSPM = sum(DefenderCSPM), aws_sum_Servers = sum(Servers), aws_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "aws pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('569ef64e-d7aa-4d7e-aa0b-5b3e045ca2c3','76261631-76ea-4bd4-b064-34a619be1de0','13872d43-aac6-4018-9c89-507b8fe9be54'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"gcp\"\r\n    | extend selectedPlans = tolower('{gcpTenantPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/computeinstances\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/storagebuckets\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/sqladmininstances\", 1 , 0)\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalDcspmInSecurityConnector > 0\r\n    | extend DcspmPricing = 5\r\n    | extend DcspmEstimatedPrice = iff(tolower('{gcpIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project SecurityConnectorId = securityConnectorId, TotalDcspmInSecurityConnector, DcspmEstimatedPrice",
              "size": 1,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_link_SecurityConnectorId_0",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_SecurityConnectorId_0",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "gcp pricing grid - tenant"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name in (pack_array('569ef64e-d7aa-4d7e-aa0b-5b3e045ca2c3','76261631-76ea-4bd4-b064-34a619be1de0','13872d43-aac6-4018-9c89-507b8fe9be54'))\r\n    | extend resourceDetails = properties['resourceDetails']\r\n    | extend resourceSource = tolower(tostring(resourceDetails['Source']))\r\n    | where resourceSource == \"gcp\"\r\n    | extend selectedPlans = tolower('{gcpTenantPlans}')\r\n    | extend resourceType = tolower(tostring(resourceDetails['ResourceType']))\r\n    | where selectedPlans has resourceType\r\n    | extend resourceId = tolower(tostring(resourceDetails['ResourceId']))\r\n    | extend securityConnectorId = tolower(tostring(split(resourceId,\"/securityentitydata/\")[0]))\r\n    | where isnotempty(securityConnectorId)\r\n    | distinct resourceId, resourceType, securityConnectorId\r\n    | extend computeCount = iff(resourceType == \"microsoft.security/securityconnectors/computeinstances\", 1 , 0)\r\n    | extend storageCount = iff(resourceType == \"microsoft.security/securityconnectors/storagebuckets\", 1 , 0)\r\n    | extend dbCount = iff(resourceType == \"microsoft.security/securityconnectors/sqladmininstances\", 1 , 0)\r\n    | extend dcspmCount = computeCount + storageCount + dbCount\r\n    | summarize TotalDcspmInSecurityConnector = sum(dcspmCount) by securityConnectorId\r\n    | where TotalDcspmInSecurityConnector > 0\r\n    | extend DcspmPricing = 5\r\n    | extend DcspmEstimatedPrice = iff(tolower('{gcpIsDcspm}') == \"true\", DcspmPricing * TotalDcspmInSecurityConnector, 0)\r\n    | project DefenderCSPM = DcspmEstimatedPrice\r\n    | extend GrandTotal = DefenderCSPM\r\n    | extend Cloud = \"GCP\"\r\n    | summarize gcp_sum_DefenderCSPM = sum(DefenderCSPM), gcp_sum_GrandTotal = sum(GrandTotal) by Cloud",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "x",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "gcp pricing grid sum"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\",\"mergeType\":\"union\",\"leftTable\":\"pricing grid sum\",\"rightTable\":\"aws pricing grid sum\"},{\"id\":\"572e6c24-d5cd-4d09-8a29-8f35c2dd005d\",\"mergeType\":\"union\",\"leftTable\":\"aws pricing grid sum\",\"rightTable\":\"gcp pricing grid sum\"}],\"projectRename\":[{\"originalName\":\"[pricing grid sum].Cloud\",\"mergedName\":\"Cloud\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_DefenderCSPM\",\"mergedName\":\"azure_sum_DefenderCSPM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_ARM\",\"mergedName\":\"azure_sum_ARM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_API\",\"mergedName\":\"azure_sum_API\",\"fromId\":\"null\"},{\"originalName\":\"[pricing grid sum].azure_sum_KeyVault\",\"mergedName\":\"azure_sum_KeyVault\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Servers\",\"mergedName\":\"azure_sum_Servers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_AppServices\",\"mergedName\":\"azure_sum_AppServices\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_SQLDatabases\",\"mergedName\":\"azure_sum_SQLDatabases\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_OSSDBs\",\"mergedName\":\"azure_sum_OSSDBs\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Storage\",\"mergedName\":\"azure_sum_Storage\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_Containers\",\"mergedName\":\"azure_sum_Containers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[pricing grid sum].azure_sum_GrandTotal\",\"mergedName\":\"azure_sum_GrandTotal\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_DefenderCSPM\",\"mergedName\":\"aws_sum_DefenderCSPM\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_Servers\",\"mergedName\":\"aws_sum_Servers\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"[aws pricing grid sum].aws_sum_GrandTotal\",\"mergedName\":\"aws_sum_GrandTotal\",\"fromId\":\"39a2a9c5-4c94-4664-a42d-faf8ebec3057\"},{\"originalName\":\"Cloud\",\"mergedName\":\"Cloud\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_DefenderCSPM\",\"mergedName\":\"azure_sum_DefenderCSPM\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_ARM\",\"mergedName\":\"azure_sum_ARM\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_API\",\"mergedName\":\"azure_sum_API\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_KeyVault\",\"mergedName\":\"azure_sum_KeyVault\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Servers\",\"mergedName\":\"azure_sum_Servers\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_AppServices\",\"mergedName\":\"azure_sum_AppServices\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_SQLDatabases\",\"mergedName\":\"azure_sum_SQLDatabases\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_OSSDBs\",\"mergedName\":\"azure_sum_OSSDBs\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Storage\",\"mergedName\":\"azure_sum_Storage\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_Containers\",\"mergedName\":\"azure_sum_Containers\",\"fromId\":\"unknown\"},{\"originalName\":\"azure_sum_GrandTotal\",\"mergedName\":\"azure_sum_GrandTotal\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender CSPM\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"column\",\"resultVal\":\"gcp_sum_DefenderCSPM\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender for ARM\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_ARM\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Defender for Key Vault\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_KeyVault\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Servers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Servers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_Servers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"App Services\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_AppServices\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"SQL Databases\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_SQLDatabases\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"OSS DBs\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_OSSDBs\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Storage\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Storage\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Containers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_Containers\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Grand total\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"Azure\",\"resultValType\":\"column\",\"resultVal\":\"azure_sum_GrandTotal\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"AWS\",\"resultValType\":\"column\",\"resultVal\":\"aws_sum_GrandTotal\"}},{\"criteriaContext\":{\"leftOperand\":\"Cloud\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\"GCP\",\"resultValType\":\"column\",\"resultVal\":\"gcp_sum_GrandTotal\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"N/A\"}}]},{\"originalName\":\"[Added column]\",\"mergedName\":\"Cloud Environment\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"All\"}}]},{\"originalName\":\"[gcp pricing grid sum].gcp_sum_DefenderCSPM\",\"mergedName\":\"gcp_sum_DefenderCSPM\",\"fromId\":\"572e6c24-d5cd-4d09-8a29-8f35c2dd005d\"},{\"originalName\":\"[gcp pricing grid sum].gcp_sum_GrandTotal\",\"mergedName\":\"gcp_sum_GrandTotal\",\"fromId\":\"572e6c24-d5cd-4d09-8a29-8f35c2dd005d\"}]}",
              "size": 1,
              "title": "Grand total",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "aws_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "aws_sum_Servers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "aws_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Cloud",
                    "formatter": 5,
                    "formatOptions": {
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "azure_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_ARM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_API",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_KeyVault",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Servers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_AppServices",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_SQLDatabases",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_OSSDBs",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Storage",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_Containers",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "azure_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "gcp_sum_DefenderCSPM",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "gcp_sum_GrandTotal",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Defender for ARM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Defender for API",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Key Vault",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "App Services",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "SQL Databases",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "OSS DBs",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Storage",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Containers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Grand total",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Cloud Environment",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Group",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ARM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalGroup",
                    "formatter": 1
                  }
                ],
                "rowLimit": 10000,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Cloud Environment"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Cloud"
                }
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "istenantlevel",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Grand total",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\",\"mergeType\":\"table\",\"leftTable\":\"pricing grid - tenant\"}],\"projectRename\":[{\"originalName\":\"[pricing grid - tenant].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].CspmEstimatedPriceFull\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid - tenant].defenderForArmCost\",\"mergedName\":\"defenderForArmCost\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid - tenant].defenderForApiCost\",\"mergedName\":\"defenderForApiCost\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid - tenant].akvEstimatedPrice\",\"mergedName\":\"akvEstimatedPrice\",\"fromId\":\"unknown\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Servers\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"leftOperand\":\"ServersInRg\",\"operator\":\"!=\",\"rightValType\":\"static\",\"rightVal\":\"0\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"ServersInRg\\\"] * {azureServersPlanValTenant} *{azureIsServersSelected}\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"0\"}}]},{\"originalName\":\"[pricing grid - tenant].ServersInRg\",\"mergedName\":\"ServersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].AppServicesEstimatedPrice\",\"mergedName\":\"App Services\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].AppServicesInRg\",\"mergedName\":\"AppServicesInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].SqlServersEstimatedPrice\",\"mergedName\":\"SQL Databases\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].SqlServersInRg\",\"mergedName\":\"SqlServersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].OpenSourceRelationalDatabasesEstimatedPrice\",\"mergedName\":\"OSS DBs\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].OpenSourceRelationalDatabasesInRg\",\"mergedName\":\"OpenSourceRelationalDatabasesInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].StorageAccountsEstimatedPrice\",\"mergedName\":\"Storage\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].StorageAccountsInRg\",\"mergedName\":\"StorageAccountsInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].ContainersEstimatedPrice\",\"mergedName\":\"Containers\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[pricing grid - tenant].ContainersInRg\",\"mergedName\":\"ContainersInRg\",\"fromId\":\"10276fd5-4d9f-419d-9064-863d1e3810f2\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for subscription\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"]+ [\\\"defenderForArmCost\\\"] + [\\\"defenderForApiCost\\\"] + [\\\"akvEstimatedPrice\\\"]+[\\\"Servers\\\"] +[\\\"App Services\\\"] +[\\\"SQL Databases\\\"] +[\\\"OSS DBs\\\"] +[\\\"Storage\\\"] +[\\\"Containers\\\"]\"}}]},{\"originalName\":\"[pricing grid - tenant].CspmInRg\",\"mergedName\":\"CspmInRg\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid - tenant].AkvInRg\",\"mergedName\":\"AkvInRg\",\"fromId\":\"unknown\"},{\"originalName\":\"[pricing grid - tenant].Subscription1\"}]}",
              "size": 1,
              "title": "Azure",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Subscription",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true,
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"CspmInRg\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "27ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "defenderForArmCost",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "defenderForApiCost",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "akvEstimatedPrice",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"AkvInRg\"] Key Vaults)"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"ServersInRg\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "ServersInRg",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "App Services",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"AppServicesInRg\"] instances)"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "AppServicesInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SQL Databases",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"SqlServersInRg\"] SQL Databases)"
                        }
                      ],
                      "customColumnWidthSetting": "30ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "SqlServersInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "OSS DBs",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"OpenSourceRelationalDatabasesInRg\"] OSS Databases)"
                        }
                      ],
                      "customColumnWidthSetting": "30ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "OpenSourceRelationalDatabasesInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Storage",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"StorageAccountsInRg\"] storage accounts)"
                        }
                      ],
                      "customColumnWidthSetting": "30ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "StorageAccountsInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Containers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Blank",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"ContainersInRg\"] VM cores)"
                        }
                      ],
                      "customColumnWidthSetting": "30ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "ContainersInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for subscription",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "CspmInRg",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AkvInRg",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_Servers_4",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "defenderForArmCost",
                    "label": "Defender for ARM"
                  },
                  {
                    "columnId": "defenderForApiCost",
                    "label": "Defender for API"
                  },
                  {
                    "columnId": "akvEstimatedPrice",
                    "label": "Defender for Key Vault"
                  },
                  {
                    "columnId": "ServersInRg",
                    "label": "#Servers"
                  },
                  {
                    "columnId": "AppServicesInRg",
                    "label": "#Instances"
                  },
                  {
                    "columnId": "SqlServersInRg",
                    "label": "#SQLDatabases"
                  },
                  {
                    "columnId": "OpenSourceRelationalDatabasesInRg",
                    "label": "#OSSDatabases"
                  },
                  {
                    "columnId": "StorageAccountsInRg",
                    "label": "#StorageAccounts"
                  },
                  {
                    "columnId": "ContainersInRg",
                    "label": "#VMcores"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_Servers_4",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "azureTenantPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "name": "pricing grid with total - tenant"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\",\"mergeType\":\"table\",\"leftTable\":\"aws pricing grid - tenant\"}],\"projectRename\":[{\"originalName\":\"[aws pricing grid - tenant].SecurityConnectorId\",\"mergedName\":\"AWS account\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[aws pricing grid - tenant].DcspmEstimatedPrice\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[aws pricing grid - tenant].ServersEstimatedPrice\",\"mergedName\":\"Servers\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[aws pricing grid - tenant].TotalServersInSecurityConnector\",\"mergedName\":\"TotalServersInSecurityConnector\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[aws pricing grid - tenant].TotalDcspmInSecurityConnector\",\"mergedName\":\"TotalDcspmInSecurityConnector\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for AWS account\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"]+[\\\"Servers\\\"]\"}}]}]}",
              "size": 1,
              "title": "AWS",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalDcspmInSecurityConnector\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalServersInSecurityConnector\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalServersInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TotalDcspmInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for AWS account",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Security Connector",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Total for security connector",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "awsTenantPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "showPin": false,
            "name": "aws pricing grid with total - tenant"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\",\"mergeType\":\"table\",\"leftTable\":\"gcp pricing grid - tenant\"}],\"projectRename\":[{\"originalName\":\"[gcp pricing grid - tenant].SecurityConnectorId\",\"mergedName\":\"GCP project\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[gcp pricing grid - tenant].TotalDcspmInSecurityConnector\",\"mergedName\":\"TotalDcspmInSecurityConnector\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[gcp pricing grid - tenant].DcspmEstimatedPrice\",\"mergedName\":\"Defender CSPM\",\"fromId\":\"cfdeddc7-8cd3-4373-83b8-5740d2d9e048\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total for GCP project\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"expression\",\"resultVal\":\"[\\\"Defender CSPM\\\"]\"}}]}]}",
              "size": 1,
              "title": "GCP",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TotalDcspmInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Defender CSPM",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalDcspmInSecurityConnector\"] billable resources)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Total for GCP project",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Servers",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0} ([\"TotalServersInSecurityConnector\"] servers)"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "TotalServersInSecurityConnector",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Total for AWS account",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "33ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "usd",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Security Connector",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Total for security connector",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "Subtract",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "currency": "USD",
                        "style": "currency",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "gcpTenantPlans",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "istenantlevel",
                "comparison": "isEqualTo",
                "value": "1"
              }
            ],
            "showPin": false,
            "name": "gcp pricing grid with total - tenant"
          }
        ]
      },
      "name": "tenantGroup"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}