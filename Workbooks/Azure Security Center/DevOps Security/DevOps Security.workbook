{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "##  DevOps Security\r\n\r\n"
      },
      "customWidth": "50",
      "name": "text - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c88e6e5a-d64e-4065-98a0-63772188ff5e",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "description": "Show insturctions for using this workbook",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 12
      },
      "name": "HelpParameter"
    },
    {
      "type": 1,
      "content": {
        "json": "#### Navigate\r\nClick on one of the tabs below to explore each area:\r\n* Overview - Summary view of code, secrets, OSS vulnerabilities, and security coverage\r\n* Posture Management - View of posture management findings in DevOps environments\r\n* Secrets - View of exposed secrets in repositories\r\n* Code - View of code scanning results in repositories\r\n* OSS Vulnerabilities - View of OSS vulnerabilities in repositories\r\n* Infrastructure as Code - View of IaC misconfigurations in repositories",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "NavInstructions"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "28d59a80-f8b1-4a7f-a53e-0342585e1468",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "OverviewTab",
            "style": "link"
          },
          {
            "id": "8be7ccb2-1b26-4755-adc6-0b797603a7c0",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Posture Management",
            "subTarget": "Hardening",
            "style": "link"
          },
          {
            "id": "e9b65feb-9f81-4b66-80df-c9d409a4a404",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Secrets",
            "subTarget": "SecretsTab",
            "style": "link"
          },
          {
            "id": "8bd0e53b-a116-4be3-8fc8-dda761cdf784",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Code",
            "subTarget": "CodeTab",
            "style": "link"
          },
          {
            "id": "456aa2a6-cfb0-4ebd-b615-a7fc9088081d",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "OSS Vulnerabilities",
            "subTarget": "OSSTab",
            "style": "link"
          },
          {
            "id": "74d23e32-f683-468d-a517-1e542f466a55",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Infrastructure as Code",
            "subTarget": "IaCTab",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 4,
        "title": "Exposed secrets",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Severity",
            "formatter": 4,
            "formatOptions": {
              "palette": "redBright"
            },
            "numberFormat": {
              "unit": 0,
              "options": {
                "style": "decimal"
              }
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "redGreen"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "Severity"
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Unknown",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "20",
      "name": "SecretsExposed"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey in (\"99232bb2-9b21-4bbb-8e3c-763673b9923d\", \"18aa4e75-776a-4296-97f0-fe1cf10d679c\", \"b6ad173c-0cc6-4d44-b954-8217c8837a8e\", \"5a2b692f-9ccc-4519-b6bd-47125dd51884\", \"c64e7cfb-6d64-4227-8c23-b4fa5c72957b\", \"b5ef903f-8655-473b-9784-4f749eeb25c6\", \"99232bb2-9b21-4bbb-8e3c-763673b9923d\", \"6588c4d4-fbbb-4fb8-be45-7c2de7dc1b3b\", \"2ea72208-8558-4011-8dcd-d93375a4003d\", \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\", \"18aa4e75-776a-4296-97f0-fe1cf10d679c\", \"d9be0ff8-3eb0-4348-82f6-c1e735f85983\",\"945f7b1c-8def-4ab3-a44d-1416060104b3\")\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 1,
        "title": "DevOps code security findings",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            }
          ]
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "40",
      "name": "DevOpsScanningBySeverity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend assessmentKey = tostring(name)\r\n| where assessmentKey in (\"9245366d-393f-49c5-b8e6-258b1b1c2daa\", \"a887e860-40ff-4b57-9ef9-5177a11091ac\", \"d5711372-9b5f-4926-a711-13dcf51565a6\", \"2c2c801e-6279-4d88-a419-af73f0eff4fb\", \"6855e9b1-c493-4a43-a6d1-74f30e72c5af\", \"909d299a-1736-456d-aef5-63688b230bfd\", \"17f3ad34-4f87-4463-a11d-6c6d7a84c486\", \"90901cb2-c497-4389-b63a-d3a562e15847\", \"bd041c7b-95db-4aaf-8bc4-fd9875ecdddf\", \"48f93272-e99c-47be-8087-091c71be9897\", \"2815b95f-f872-4d51-9709-54c1c7133d7b\", \"497e771e-d309-4e36-9bbd-353defd2658a\")\r\n| extend status = tostring(properties.status.code)\r\n| where status == \"Unhealthy\"\r\n| extend severity = tostring(properties.metadata.severity)\r\n| summarize count() by severity",
        "size": 1,
        "title": "DevOps posture findings",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "40",
      "name": "DevOpsAssessmentsBySeverity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| where name == \"c7a934bf-7be6-407a-84d9-4f20e6e49592\"\r\n| project Resource = tostring(properties.resourceDetails.ResourceName), Status = tostring(properties.status.code), DisplayName = tostring(properties.metadata.displayName), Organization = tostring(split(id, '/')[12]), Project = tostring(split(id, '/')[14]), Repository = tostring(split(id, '/')[16]), Url = tostring(properties.resourceDetails.NativeResourceId)\r\n| where Status == \"Unhealthy\"\r\n| extend EnablementUrl = strcat(Url, \"/alerts\")\r\n| project Organization, Project, Repository, EnablementUrl",
        "size": 0,
        "title": "Azure DevOps repositories without GitHub Advanced Security for Azure DevOps enabled",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Repo",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "EnablementUrl",
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "EnablementUrl",
              "formatter": 5
            }
          ],
          "rowLimit": 10000,
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "name": "GHAzDO Coverage Active",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"99232bb2-9b21-4bbb-8e3c-763673b9923d\" or assessmentKey == \"18aa4e75-776a-4296-97f0-fe1cf10d679c\"\r\n| project subscriptionId, Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id), id, Source = tostring(properties.resourceDetails.source)\r\n| where Status == 'Unhealthy'\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12]))\r\n| summarize Total=count(Severity), High=countif(Severity=='High'), Medium=countif(Severity=='Medium'), Low=countif(Severity=='Low') by Repo\r\n| sort by Total desc\r\n| limit 10",
        "size": 0,
        "title": "Code vulnerabilities by repo",
        "noDataMessage": "No unhealthy repositories found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "High",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "Medium",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow"
              }
            },
            {
              "columnMatch": "Low",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark"
              }
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "CodeVulnsBySeverity",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"99232bb2-9b21-4bbb-8e3c-763673b9923d\" or assessmentKey == \"6588c4d4-fbbb-4fb8-be45-7c2de7dc1b3b\" or assessmentKey == \"2ea72208-8558-4011-8dcd-d93375a4003d\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\" or assessmentKey == \"18aa4e75-776a-4296-97f0-fe1cf10d679c\" or assessmentKey == \"d9be0ff8-3eb0-4348-82f6-c1e735f85983\" or assessmentKey == \"945f7b1c-8def-4ab3-a44d-1416060104b3\" or assessmentKey == \"b6ad173c-0cc6-4d44-b954-8217c8837a8e\" or assessmentKey == \"c64e7cfb-6d64-4227-8c23-b4fa5c72957b\" or assessmentKey == \"5a2b692f-9ccc-4519-b6bd-47125dd51884\"\r\n| extend subscriptionId, Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id), Source = tostring(properties.resourceDetails.source)\r\n| where Status == 'Unhealthy'\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12]))\r\n| summarize Total=count(Severity), High=countif(Severity=='High'), Medium=countif(Severity=='Medium'), Low=countif(Severity=='Low') by Repo\r\n| sort by Total desc\r\n| limit 10",
        "size": 0,
        "title": "DevOps vulnerabilities by repo",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "High",
              "formatter": 4,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "Medium",
              "formatter": 4,
              "formatOptions": {
                "palette": "yellow"
              }
            },
            {
              "columnMatch": "Low",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark"
              }
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "DevOpsVulnsBySeverity",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12]))\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize count() by Source, Repo",
        "size": 1,
        "title": "Exposed secrets by repo",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Repository",
              "formatter": 1
            }
          ],
          "sortBy": [
            {
              "itemKey": "count_",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Source",
              "label": "Environment"
            },
            {
              "columnId": "Repo",
              "label": "Repo"
            },
            {
              "columnId": "count_",
              "label": "Number of Exposed Secrets"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "count_",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "RepoName",
            "formatter": 3,
            "formatOptions": {
              "palette": "coldHot"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "name": "ReposWithSecrets",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 11"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repository = tostring(split(id, '/')[12]), Secret = tostring(iff(Source == 'GitHub', properties.description, properties.displayName))\r\n| summarize count(Repository) by Secret",
        "size": 0,
        "title": "Count by secret type",
        "queryType": 1,
        "resourceType": "microsoft.resources/tenants",
        "crossComponentResources": [
          "value::tenant"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SecretsTab"
      },
      "customWidth": "50",
      "name": "SecretsChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12]))\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), \r\nSecret = tostring(iff(Source == 'GitHub', properties.description, properties.displayName)), Location = tostring(properties.additionalData.data.Locations_Url), File = tostring(properties.additionalData.data.File), HTML = tostring(properties.additionalData.data.Html_Url), Line = tostring(properties.additionalData.data.Line)\r\n| summarize count() by Repo",
        "size": 0,
        "title": "Count secrets by repo",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "barchart"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SecretsTab"
      },
      "customWidth": "50",
      "name": "Count secrets by repo"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"b5ef903f-8655-473b-9784-4f749eeb25c6\" or assessmentKey == \"dd98425c-1407-40cc-8a2c-da5d0a2f80da\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12])),\r\n    Finding = tostring(properties.status.description),\r\n    Status = tostring(properties.status.code),\r\n    RuleID = tostring(properties.additionalData.data.Rule_id),\r\n    Location = tostring(properties.additionalData.data.Html_Url),\r\n    Time = tostring(properties.timeGenerated),\r\n    Secret = tostring(iff(Source == 'GitHub', properties.description, properties.displayName)),\r\n    Details = \"info\"\r\n| extend Creation_Date_Raw = tostring(properties.additionalData.data.Creation_Date)\r\n| extend Creation_Date_Trimmed = trim('\\\"', tostring(Creation_Date_Raw)) \r\n| extend Creation_Date = todatetime(Creation_Date_Trimmed) \r\n| extend CreatedAt = Creation_Date\r\n| project Source, Organization, Project, Repo, Secret, properties, CreatedAt, Location, Details",
        "size": 0,
        "title": "Secret scanning",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Secret",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "36.8571ch"
              }
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            },
            {
              "columnMatch": "Location",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Alert Url"
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "properties",
                "linkTarget": "CellDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Healthy",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Unhealthy",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "NotApplicable",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "File",
              "formatter": 5
            },
            {
              "columnMatch": "AlertUrl",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Link"
              }
            }
          ],
          "rowLimit": 2000,
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SecretsTab"
      },
      "name": "SecretResults",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"99232bb2-9b21-4bbb-8e3c-763673b9923d\" or assessmentKey == \"18aa4e75-776a-4296-97f0-fe1cf10d679c\"\r\n| extend Repository = split(id, '/')[12],\r\n    Finding = tostring(properties.status.description),\r\n    Tool = tostring(properties.additionalData.data.ToolName)\r\n| summarize count(Finding) by Tool",
        "size": 0,
        "title": "Count findings by tool",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Tool",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_Finding",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Tool",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_Finding",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true,
          "seriesLabelSettings": [
            {
              "seriesName": "Unknown",
              "label": "Unknown"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "CodeTab"
      },
      "customWidth": "33",
      "name": "CodeScanningGraph"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"99232bb2-9b21-4bbb-8e3c-763673b9923d\" or assessmentKey == \"18aa4e75-776a-4296-97f0-fe1cf10d679c\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Finding = tostring(properties.status.description),\r\n    Tool = tostring(properties.additionalData.data.Tool_name),\r\n    TimeGenerated = todatetime(properties.timeGenerated)\r\n| summarize count(Finding) by Repo, TimeGenerated, Tool",
        "size": 0,
        "title": "Count findings by repository",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "barchart",
        "chartSettings": {
          "showLegend": true,
          "customThresholdLine": "10",
          "customThresholdLineStyle": 2
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "CodeTab"
      },
      "customWidth": "66",
      "name": "CodeScanningChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"99232bb2-9b21-4bbb-8e3c-763673b9923d\" or assessmentKey == \"18aa4e75-776a-4296-97f0-fe1cf10d679c\"\r\n| project properties, id\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12])),\r\n    Finding = tostring(properties.status.description),\r\n    Status = tostring(properties.status.code),\r\n    Severity = tostring(properties.status.severity),\r\n    Tool = tostring(properties.additionalData.data.ToolName),\r\n    RuleID = tostring(properties.additionalData.data.Rule_id), Details = \"info\", \r\n    Html_Url = tostring(properties.additionalData.data.Html_Url)\r\n| extend Location = iff(isnotempty(Html_Url), Html_Url, tostring(properties.additionalData.data.Build_Url))\r\n| extend Branch = iff(Source =~ 'AzureDevOps' and Tool == 'CodeQL', 'default branch', tostring(properties.additionalData.data.Branch)), Time = tostring(properties.timeGenerated)\r\n| extend Creation_Date_Raw = tostring(properties.additionalData.data.Creation_Date)\r\n| extend Creation_Date_Trimmed = trim('\\\"', tostring(Creation_Date_Raw)) \r\n| extend Creation_Date = todatetime(Creation_Date_Trimmed) \r\n| extend CreatedAt = Creation_Date\r\n| extend SeveritySort = case(\r\n    Severity == \"High\", 1,\r\n    Severity == \"Medium\", 2,\r\n    Severity == \"Low\", 3,\r\n    4\r\n)\r\n| order by SeveritySort asc, Severity asc\r\n| project-away SeveritySort\r\n| project Severity, Source, Organization, Project, Repo, Finding, Tool, properties, Branch, CreatedAt, Location, Details",
        "size": 0,
        "title": "Code scanning by severity",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 5
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            },
            {
              "columnMatch": "Location",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Alert Url",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                }
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 11,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "AlertUrl",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Link"
              }
            },
            {
              "columnMatch": "Repository",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "resource",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Healthy",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Unhealthy",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "NotApplicable",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Severity"
            ]
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "CodeTab"
      },
      "name": "CodeScanningResults",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"2ea72208-8558-4011-8dcd-d93375a4003d\" or assessmentKey == \"945f7b1c-8def-4ab3-a44d-1416060104b3\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), Finding = tostring(properties.status.description)\r\n| where Status == 'Unhealthy'\r\n| summarize dcount(Finding) by Severity",
        "size": 0,
        "title": "Open source vulnerabilities by severity",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OSSTab"
      },
      "customWidth": "33",
      "name": "OSSVulnerabilitiesGraph"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"2ea72208-8558-4011-8dcd-d93375a4003d\" or assessmentKey == \"945f7b1c-8def-4ab3-a44d-1416060104b3\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Finding = tostring(properties.status.description)\r\n| summarize dcount(Finding) by Repo",
        "size": 0,
        "title": "Count findings by repository",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "barchart",
        "chartSettings": {
          "customThresholdLine": "5",
          "customThresholdLineStyle": 2
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OSSTab"
      },
      "customWidth": "66",
      "name": "OSSVulnChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"2ea72208-8558-4011-8dcd-d93375a4003d\" or assessmentKey == \"945f7b1c-8def-4ab3-a44d-1416060104b3\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12])),\r\n    Finding = tostring(properties.status.description),\r\n    Status = tostring(properties.status.code),\r\n    Severity = tostring(properties.status.severity),\r\n    RuleID = tostring(properties.additionalData.data.Rule_id),\r\n    Branch = tostring(iff(Source == 'GitHub', 'N/A - Default', properties.additionalData.data.Branch)),\r\n    Creation_Date = tostring(properties.additionalData.data.Creation_Date),\r\n    Package = tostring(properties.additionalData.data.Package),\r\n    Summary = tostring(properties.additionalData.data.securityAdvisory__summary),\r\n    CVE = tostring(properties.additionalData.data.SecurityAdvisoryCVE),\r\n    timeGenerated = todatetime(properties.timeGenerated),\r\n    createdAtGH = tostring(properties.additionalData.data.createdAt),\r\n    Details = \"info\",\r\n    Location = tostring(properties.additionalData.data.Html_Url)\r\n| extend Creation_Date_Raw = tostring(properties.additionalData.data.Creation_Date)\r\n| extend Creation_Date_Trimmed = trim('\\\"', tostring(Creation_Date_Raw)) \r\n| extend Creation_Date = todatetime(Creation_Date_Trimmed) \r\n| extend CreatedTime = Creation_Date\r\n| extend SeveritySort = case(\r\n    Severity == \"High\", 1,\r\n    Severity == \"Medium\", 2,\r\n    Severity == \"Low\", 3,\r\n    4\r\n)\r\n| order by SeveritySort asc, Severity asc\r\n| project-away SeveritySort\r\n| project Severity, Source, Organization, Project, Repo, CVE, Package, Finding, properties, Details, Branch, Location, CreatedTime",
        "size": 0,
        "title": "Open source vulnerabilities",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 5
            },
            {
              "columnMatch": "Package",
              "formatter": 1
            },
            {
              "columnMatch": "Finding",
              "formatter": 5
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            },
            {
              "columnMatch": "AlertUrl",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Advisory"
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 11,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Alert Url"
              }
            },
            {
              "columnMatch": "Summary",
              "formatter": 1
            },
            {
              "columnMatch": "Repository",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "resource",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Healthy",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Unhealthy",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "NotApplicable",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Severity"
            ]
          }
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OSSTab"
      },
      "name": "OSSVulnerabilitiesResults",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"6588c4d4-fbbb-4fb8-be45-7c2de7dc1b3b\" or assessmentKey == \"d9be0ff8-3eb0-4348-82f6-c1e735f85983\"\r\n| extend Repository = split(id, '/')[12],\r\n    Finding = tostring(properties.status.description),\r\n    Tool = tostring(properties.additionalData.data.ToolName)\r\n| summarize count(Finding) by Tool",
        "size": 0,
        "title": "Findings by tool",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "IaCTab"
      },
      "customWidth": "33",
      "name": "IaCSummaryResults"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "\r\nsecurityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"6588c4d4-fbbb-4fb8-be45-7c2de7dc1b3b\" or assessmentKey == \"d9be0ff8-3eb0-4348-82f6-c1e735f85983\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Finding = tostring(properties.status.description),\r\n    Tool = tostring(properties.additionalData.data.Tool_name),\r\n    TimeGenerated = todatetime(properties.timeGenerated)\r\n| summarize count(Finding) by Repo, TimeGenerated, Tool",
        "size": 0,
        "title": "Count findings by repository",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "barchart",
        "chartSettings": {
          "customThresholdLine": "10",
          "customThresholdLineStyle": 2
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "IaCTab"
      },
      "customWidth": "66",
      "name": "IaCChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"6588c4d4-fbbb-4fb8-be45-7c2de7dc1b3b\" or assessmentKey == \"d9be0ff8-3eb0-4348-82f6-c1e735f85983\"\r\n| extend Source = tostring(properties.resourceDetails.source)\r\n| extend Repo = tostring(iff(Source == 'GitHub', split(id,'/')[14], split(id,'/')[16])), Project = tostring(iff(Source == 'AzureDevOps', split(id,'/')[14], 'N/A')), Organization = tostring(iff(Source == 'GitHub', split(id,'/')[12], split(id,'/')[12])),\r\n    Finding = tostring(properties.status.description),\r\n    Status = tostring(properties.status.code),\r\n    Severity = tostring(properties.status.severity),\r\n    Tool = tostring(properties.additionalData.data.ToolName),\r\n    RuleID = tostring(properties.additionalData.data.RuleId),\r\n    Branch = tostring(properties.additionalData.data.Branch),\r\n    Time = tostring(properties.timeGenerated),\r\n    Details = \"info\",\r\n    Html_Url = tostring(properties.additionalData.data.Html_Url)\r\n| extend Location = iff(isnotempty(Html_Url), Html_Url, tostring(properties.additionalData.data.Build_Url))| extend Creation_Date_Raw = tostring(properties.additionalData.data.Creation_Date)\r\n| extend Creation_Date_Trimmed = trim('\\\"', tostring(Creation_Date_Raw)) \r\n| extend Creation_Date = todatetime(Creation_Date_Trimmed) \r\n| extend CreatedAt = Creation_Date\r\n| extend SeveritySort = case(\r\n    Severity == \"High\", 1,\r\n    Severity == \"Medium\", 2,\r\n    Severity == \"Low\", 3,\r\n    4\r\n)\r\n| order by SeveritySort asc, Severity asc\r\n| project-away SeveritySort\r\n| project Severity, Source, Organization, Project, Repo, Finding, Tool, properties, Branch, CreatedAt, Location, Details",
        "size": 0,
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 5
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            },
            {
              "columnMatch": "Location",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Alert Url"
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 11,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "AlertUrl",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Link"
              }
            }
          ],
          "rowLimit": 5000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Severity"
            ]
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "IaCTab"
      },
      "name": "IaCResults",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name)\r\n    | where assessmentKey in (\"9245366d-393f-49c5-b8e6-258b1b1c2daa\", \"a887e860-40ff-4b57-9ef9-5177a11091ac\", \"d5711372-9b5f-4926-a711-13dcf51565a6\", \"2c2c801e-6279-4d88-a419-af73f0eff4fb\", \"6855e9b1-c493-4a43-a6d1-74f30e72c5af\", \"909d299a-1736-456d-aef5-63688b230bfd\", \"17f3ad34-4f87-4463-a11d-6c6d7a84c486\", \"90901cb2-c497-4389-b63a-d3a562e15847\", \"bd041c7b-95db-4aaf-8bc4-fd9875ecdddf\", \"48f93272-e99c-47be-8087-091c71be9897\", \"2815b95f-f872-4d51-9709-54c1c7133d7b\", \"497e771e-d309-4e36-9bbd-353defd2658a\", \"470742ea-324a-406c-b91f-fc1da6a27c0c\", \"98b5895a-0ad8-4ed9-8c9d-d654f5bda816\", \"9f4a17ee-7a02-4978-b968-8c36b74ac8e3\", \"6331fad3-a7a2-497d-b616-52672057e0f3\", \"98e858ed-6e88-4698-b538-f51b31ad57f6\", \"a9621d26-9d8c-4cd6-8ad0-84501eb88f17\", \"20be7df7-9ebb-4fb4-95a9-3ae19b78b80a\")\r\n    | extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n    | extend resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id))))\r\n    | extend status = trim(\" \", tostring(properties.status.code)), cause = trim(\" \", tostring(properties.status.cause)), Severity = tostring(properties.metadata.severity)\r\n    | extend displayName = tostring(properties.displayName), affectedResourceUrl = properties.additionalData.AffectedResource_Url, Resource = tostring(properties.additionalData.AffectedResource), Project = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", tostring(properties.additionalData.AdoProject), \"N/A\")), Org = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", properties.additionalData.AdoOrg, properties.additionalData.GitHubOrg)), Finding = tostring(properties.additionalData.Finding), Severity = tostring(properties.metadata.severity), firstEvaluationDate = todatetime(properties.status.firstEvaluationDate), statusChangeDate = todatetime(properties.status.statusChangeDate), type = tostring(properties.resourceDetails.ResourceType)\r\n    | extend resourceType = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", split(type,'/')[5], properties.additionalData.AffectedResourceCategory))\r\n    | summarize count() by status",
              "size": 0,
              "title": "Posture management findings by status",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Healthy",
                    "color": "green"
                  },
                  {
                    "seriesName": "Unhealthy",
                    "color": "red"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "Posture management findings by status"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name)\r\n    | where assessmentKey in (\"9245366d-393f-49c5-b8e6-258b1b1c2daa\", \"a887e860-40ff-4b57-9ef9-5177a11091ac\", \"d5711372-9b5f-4926-a711-13dcf51565a6\", \"2c2c801e-6279-4d88-a419-af73f0eff4fb\", \"6855e9b1-c493-4a43-a6d1-74f30e72c5af\", \"909d299a-1736-456d-aef5-63688b230bfd\", \"17f3ad34-4f87-4463-a11d-6c6d7a84c486\", \"90901cb2-c497-4389-b63a-d3a562e15847\", \"bd041c7b-95db-4aaf-8bc4-fd9875ecdddf\", \"48f93272-e99c-47be-8087-091c71be9897\", \"2815b95f-f872-4d51-9709-54c1c7133d7b\", \"497e771e-d309-4e36-9bbd-353defd2658a\", \"470742ea-324a-406c-b91f-fc1da6a27c0c\", \"98b5895a-0ad8-4ed9-8c9d-d654f5bda816\", \"9f4a17ee-7a02-4978-b968-8c36b74ac8e3\", \"6331fad3-a7a2-497d-b616-52672057e0f3\", \"98e858ed-6e88-4698-b538-f51b31ad57f6\", \"a9621d26-9d8c-4cd6-8ad0-84501eb88f17\", \"20be7df7-9ebb-4fb4-95a9-3ae19b78b80a\")\r\n    | extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n    | extend resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id))))\r\n    | extend status = trim(\" \", tostring(properties.status.code)), cause = trim(\" \", tostring(properties.status.cause)), Severity = tostring(properties.metadata.severity)\r\n    | extend displayName = tostring(properties.displayName), affectedResourceUrl = properties.additionalData.AffectedResource_Url, Resource = tostring(properties.additionalData.AffectedResource), Project = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", tostring(properties.additionalData.AdoProject), \"N/A\")), Org = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", properties.additionalData.AdoOrg, properties.additionalData.GitHubOrg)), Finding = tostring(properties.additionalData.Finding), Severity = tostring(properties.metadata.severity), firstEvaluationDate = todatetime(properties.status.firstEvaluationDate), statusChangeDate = todatetime(properties.status.statusChangeDate), type = tostring(properties.resourceDetails.ResourceType)\r\n    | extend resourceType = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", split(type,'/')[5], properties.additionalData.AffectedResourceCategory))\r\n    | where status == \"Unhealthy\"\r\n    | summarize count() by resourceType",
              "size": 0,
              "title": "Posture management findings by resource type",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "visualization": "barchart"
            },
            "customWidth": "50",
            "name": "Posture management findings by resource type"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name)\r\n    | where assessmentKey in (\"9245366d-393f-49c5-b8e6-258b1b1c2daa\", \"a887e860-40ff-4b57-9ef9-5177a11091ac\", \"d5711372-9b5f-4926-a711-13dcf51565a6\", \"2c2c801e-6279-4d88-a419-af73f0eff4fb\", \"6855e9b1-c493-4a43-a6d1-74f30e72c5af\", \"909d299a-1736-456d-aef5-63688b230bfd\", \"17f3ad34-4f87-4463-a11d-6c6d7a84c486\", \"90901cb2-c497-4389-b63a-d3a562e15847\", \"bd041c7b-95db-4aaf-8bc4-fd9875ecdddf\", \"48f93272-e99c-47be-8087-091c71be9897\", \"2815b95f-f872-4d51-9709-54c1c7133d7b\", \"497e771e-d309-4e36-9bbd-353defd2658a\", \"470742ea-324a-406c-b91f-fc1da6a27c0c\", \"98b5895a-0ad8-4ed9-8c9d-d654f5bda816\", \"9f4a17ee-7a02-4978-b968-8c36b74ac8e3\", \"6331fad3-a7a2-497d-b616-52672057e0f3\", \"98e858ed-6e88-4698-b538-f51b31ad57f6\", \"a9621d26-9d8c-4cd6-8ad0-84501eb88f17\", \"20be7df7-9ebb-4fb4-95a9-3ae19b78b80a\")\r\n    | project source = trim(' ', tolower(tostring(properties.resourceDetails.Source))), resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id)))), status = trim(\" \", tostring(properties.status.code)), displayName = trim(\" \", tostring(properties.displayName)), Severity = tostring(properties.metadata.severity)\r\n    | summarize Healthy = countif(status == \"Healthy\"), Unhealthy = countif(status == \"Unhealthy\") by displayName, Severity\r\n    | order by Severity asc",
              "size": 3,
              "title": "DevOps Posture Management Findings",
              "exportedParameters": [
                {
                  "fieldName": "displayName",
                  "parameterName": "displayName",
                  "parameterType": 1,
                  "defaultValue": "false"
                },
                {
                  "fieldName": "nameSelected",
                  "parameterName": "nameSelected",
                  "parameterType": 1,
                  "defaultValue": "false"
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "displayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "89.8571ch"
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "lightBlue",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "tooltipFormat": {
                      "tooltip": "Click on finding to see affected resources."
                    }
                  },
                  {
                    "columnMatch": "Healthy",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Click on finding to see affected resources."
                    }
                  },
                  {
                    "columnMatch": "Unhealthy",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Click on finding to see affected resources."
                    }
                  },
                  {
                    "columnMatch": "cause",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "97.1429ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "Click on finding to see affected resources."
                    }
                  },
                  {
                    "columnMatch": "Healthy Resources",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Unhealthy Resources",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "source",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "affectedResourceUrl",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "ADO Resource URL"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_Severity_1",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "displayName",
                    "label": "Recommendation"
                  },
                  {
                    "columnId": "Severity",
                    "label": "Severity"
                  },
                  {
                    "columnId": "Healthy",
                    "label": "Healthy Resources"
                  },
                  {
                    "columnId": "Unhealthy",
                    "label": "Unhealthy Resources"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_Severity_1",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "Hardening"
            },
            "name": "Posture Management",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name)\r\n    | extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source))), resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id)))), status = trim(\" \", tostring(properties.status.code)), displayName = trim(\" \", tostring(properties.displayName)), Cause = trim(\" \", tostring(properties.status.cause))\r\n    | where status == \"Unhealthy\"\r\n    | where displayName == '{displayName}'\r\n    | extend affectedResourceUrl = tostring(properties.resourceDetails.NativeResourceId), Resource = tostring(properties.additionalData.AffectedResource), Project = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", tostring(properties.additionalData.AdoProject), \"N/A\")), Org = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", properties.additionalData.AdoOrg, properties.additionalData.GitHubOrg)), Severity = tostring(properties.metadata.severity), firstEvaluationDate = todatetime(properties.status.firstEvaluationDate), statusChangeDate = todatetime(properties.status.statusChangeDate), type = tostring(properties.resourceDetails.ResourceType)\r\n    | extend resourceType = tostring(iff(properties.resourceDetails.Source == \"AzureDevOps\", split(type,'/')[5], properties.additionalData.AffectedResourceCategory))\r\n    | extend Details = \"info\"\r\n    | project resourceType, Org, Project, Resource, Cause, DiscoveredDate = format_datetime(firstEvaluationDate, 'yyyy-MM-dd'), ChangedDate = format_datetime(statusChangeDate, 'yyyy-MM-dd'), affectedResourceUrl, Details, properties\r\n    | order by Org asc",
              "size": 0,
              "title": "Affected Resources",
              "noDataMessage": "All resources are healthy.",
              "noDataMessageStyle": 3,
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resourceType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "serviceconnections",
                          "representation": "gray",
                          "text": "Service Connection"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "builds",
                          "representation": "gray",
                          "text": "Pipeline"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "variablegroups",
                          "representation": "gray",
                          "text": "Variable Group"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "securefiles",
                          "representation": "gray",
                          "text": "Secure File"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Repository",
                          "representation": "gray",
                          "text": "Repository"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Organization",
                          "representation": "gray",
                          "text": "Organization"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "affectedResourceUrl",
                      "linkTarget": "Url",
                      "linkIsContextBlade": false
                    }
                  },
                  {
                    "columnMatch": "affectedResourceUrl",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "URL"
                    }
                  },
                  {
                    "columnMatch": "cause",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Details",
                    "formatter": 11,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "properties",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Finding",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "affectedResource",
                    "formatter": 1
                  }
                ],
                "rowLimit": 5000,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "resourceType",
                    "label": "Resource Type"
                  },
                  {
                    "columnId": "DiscoveredDate",
                    "label": "Discovered Date"
                  },
                  {
                    "columnId": "ChangedDate",
                    "label": "Changed Date"
                  },
                  {
                    "columnId": "affectedResourceUrl",
                    "label": "Resource URL"
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "Hardening"
              },
              {
                "parameterName": "nameSelected",
                "comparison": "isNotEqualTo",
                "value": "false"
              }
            ],
            "name": "Unhealthy Resources",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name)\r\n    | project source = trim(' ', tolower(tostring(properties.resourceDetails.Source))), resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id)))), status = trim(\" \", tostring(properties.status.code)), displayName = trim(\" \", tostring(properties.displayName)), description = tostring(properties.status.description)\r\n    | where displayName == '{displayName}'\r\n    | project description",
              "size": 3,
              "title": "Description",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "visualization": "card",
              "textSettings": {
                "style": "markdown"
              }
            },
            "conditionalVisibility": {
              "parameterName": "nameSelected",
              "comparison": "isNotEqualTo",
              "value": "false"
            },
            "name": "Description"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | extend assessmentKey = tostring(name), source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n    | project resourceId = trim(' ', tolower(tostring( extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,id)))), status = trim(\" \", tostring(properties.status.code)), displayName = trim(\" \", tostring(properties.displayName)), tostring(properties.status.description), remediation = tostring(properties.metadata.remediationDescription)\r\n    | where displayName == '{displayName}'\r\n    | project remediation",
              "size": 3,
              "title": "Remediation Guidance",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "visualization": "card",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "remediation",
                    "formatter": 1
                  }
                ]
              },
              "textSettings": {
                "style": "markdown"
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "Hardening"
              },
              {
                "parameterName": "nameSelected",
                "comparison": "isNotEqualTo",
                "value": "false"
              }
            ],
            "name": "Remediation Guidance"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Hardening"
      },
      "name": "Hardening"
    }
  ],
  "fallbackResourceIds": [
    "Azure Security Center"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
