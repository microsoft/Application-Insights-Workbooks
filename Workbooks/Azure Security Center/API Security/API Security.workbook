{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## API Security Dashboard \r\n\r\nThis workbook has been created to provide a security mapping for Microsoft Defender for APIs plan based on the resource telemetry in your own environment. Please note that these views are based on your API infrastructure."
      },
      "name": "Intro"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{subscription}"
        ],
        "parameters": [
          {
            "id": "7767523e-f230-4562-b00c-bce5a7d38fe7",
            "version": "KqlParameterItem/1.0",
            "name": "subscription",
            "label": "Subscription",
            "type": 6,
            "description": "Please select one or several Subscription in your environment",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "f38b2b18-3eda-4aeb-8155-b0e9b267864a",
            "version": "KqlParameterItem/1.0",
            "name": "severity",
            "label": "Alert Severity",
            "type": 2,
            "description": "Please select an alert severity.",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\": \"High\", \"label\":\"High\"},\r\n    {\"value\": \"Medium\", \"label\":\"Medium\"},\r\n    {\"value\": \"Low\", \"label\":\"Low\"},\r\n    {\"value\": \"Informational\", \"label\":\"Informational\"}\r\n]\r\n    ",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "select_subscriptions"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "7b8f3245-20ab-43a8-8b15-7b60d449308e",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "overview",
            "preText": "Overview",
            "style": "link"
          },
          {
            "id": "303042e9-8fe3-457b-be6b-bcbec4c13d07",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Coverage",
            "subTarget": "coverage",
            "style": "link"
          },
          {
            "id": "73f4146e-9c22-4f96-885a-34158a5617a3",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Posture Recommendations",
            "subTarget": "recommendations",
            "style": "link"
          },
          {
            "id": "fea64e5e-1992-4b76-a799-54f8a2cc8504",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Data Sensitivity",
            "subTarget": "data",
            "style": "link"
          },
          {
            "id": "c973a4aa-7315-4f9c-8b36-44ea4f6374dc",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Threat Detection - Alerts",
            "subTarget": "alerts",
            "style": "link"
          }
        ]
      },
      "name": "Tab_Menu"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| where Severity in~ ({severity})\r\n| summarize count() by tostring(Severity)",
        "size": 3,
        "title": "Alert Summary",
        "noDataMessage": "No alerts found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "High",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Low",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Informational",
                    "representation": "gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SystemAlertId",
              "formatter": 5
            },
            {
              "columnMatch": "IsIncident",
              "formatter": 1
            },
            {
              "columnMatch": "AlertURI",
              "formatter": 5
            },
            {
              "columnMatch": "SubscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Location",
              "formatter": 5
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5
            }
          ],
          "sortBy": [
            {
              "itemKey": "Tactics",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "IsIncident",
              "label": "Incident/alert"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Tactics",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Severity",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "none"
            }
          },
          "showBorder": false
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "label": "Medium",
              "color": "orange"
            },
            {
              "seriesName": "High",
              "label": "High",
              "color": "red"
            },
            {
              "seriesName": "Low",
              "label": "Low",
              "color": "green"
            }
          ]
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "33",
      "name": "Overview_Alerts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| where Severity in~ ({severity})\r\n| summarize count() by tostring(Status)",
        "size": 3,
        "title": "Alerts by Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Dismissed",
              "color": "blue"
            },
            {
              "seriesName": "Active",
              "color": "red"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "33",
      "name": "Alerts by Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n    | extend IsIncident = properties.[\"IsIncident\"]\r\n    | extend AlertDisplayName = properties.[\"AlertDisplayName\"]\r\n    | extend SystemAlertId = properties.[\"SystemAlertId\"]\r\n    | extend Severity = properties.[\"Severity\"]\r\n    | extend Status = properties.[\"Status\"]\r\n    | extend Tactics = split(properties.[\"Intent\"],\",\")\r\n    | mv-expand Tactics\r\n    | extend Tactic = trim(\" \",tostring(Tactics))\r\n    | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n    | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n    | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n    | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n    | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n    | extend ResourceIdentifiers = properties.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n    | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n    | extend Resource = tolower(tostring(ResourceId))\r\n    | where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n    | extend affectedResourceId = tolower(affectedResourceId)\r\n    | extend ResourceGroup = tolower(resourceGroup)\r\n    | where Status == \"Active\"\r\n    | extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n    | where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n    | where Severity in~ ({severity})\r\n    | distinct ['id'], Tactic\r\n    | summarize count() by Tactic\r\n ",
        "size": 3,
        "title": "Alerts by MITRE ATT&CK  Tactics",
        "noDataMessage": "No alerts found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Tactic",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "compositeBarSettings": {
                "labelText": "",
                "columnSettings": []
              }
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "34",
      "name": "Overview_Alert_Mitre"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where id contains \"microsoft.apimanagement/service\"\r\n    | extend status = properties.status.code, severity = tostring(properties.metadata.severity)\r\n    | where status == 'Unhealthy'\r\n    | extend displayName = tostring(properties.displayName)\r\n    | summarize count() by severity",
        "size": 3,
        "title": "Unhealthy Recommendations by Severity",
        "noDataMessage": "No unhealthy APIs found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev0",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev1",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Sev3",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 1,
              "formatOptions": {
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "rowLimit": 1000
        },
        "sortBy": [],
        "tileSettings": {
          "showBorder": false
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "label": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "label": "High",
              "color": "red"
            },
            {
              "seriesName": "Low",
              "label": "Low",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "33",
      "name": "Unhealthy_API_Recommendations_Severity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where id contains \"microsoft.apimanagement/service\"\r\n    | extend status = tostring(properties.status.code)\r\n    | extend severity = tostring(properties.metadata.severity)    \r\n    | where severity == \"High\"\r\n    | summarize count() by status, severity",
        "size": 3,
        "title": "High Severity Recommendations by Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "NotApplicable",
              "color": "gray"
            },
            {
              "seriesName": "Unhealthy",
              "color": "red"
            },
            {
              "seriesName": "Healthy",
              "color": "green"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "33",
      "name": "High Severity Recommendations by Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name == \"1c0ba94f-e732-43c7-bf3a-05e80f45d642\"\r\n    | extend status = properties.status.code\r\n    | summarize count() by tostring(status)",
        "size": 3,
        "title": "API Protection Status with Defender for APIs",
        "noDataMessage": "The query returned no results.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Unhealthy",
              "label": "Unprotected",
              "color": "red",
              "comment": ""
            },
            {
              "seriesName": "Healthy",
              "label": "Protected",
              "color": "blue",
              "comment": ""
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "34",
      "name": "Overview_APIs_Coverage"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| where name == \"Api\"\r\n| extend Coverage = properties.pricingTier\r\n| join kind = leftouter(resources | extend apiCount = iff(type == \"microsoft.apimanagement/service\", 1 , 0)) on subscriptionId\r\n| summarize apiResourceCount = sum(apiCount) by subscriptionId, tostring(Coverage)\r\n| order by subscriptionId asc\r\n",
        "size": 0,
        "title": "Subscription Coverage for Defender for APIs",
        "noDataMessage": "No subscription data.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "60ch"
              }
            },
            {
              "columnMatch": "Coverage",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Standard",
                    "representation": "lightBlue",
                    "text": "On"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blueDark",
                    "text": "Off"
                  }
                ]
              }
            },
            {
              "columnMatch": "apiResourceCount",
              "formatter": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "apiResourceCount",
              "label": "API Management Service Count"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "coverage"
      },
      "customWidth": "100",
      "name": "Defender for APIs Plan Coverage",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where name == \"1c0ba94f-e732-43c7-bf3a-05e80f45d642\"\r\n    | extend recommendationId=\"1c0ba94f-e732-43c7-bf3a-05e80f45d642\"\r\n    | project recommendationId, subscriptionId, ResourceGroup=resourceGroup, APIM = properties.additionalData.APIManagementResourceName, APICollection = properties.additionalData.apiCollectionDisplayName, Status=properties.status.code, link=\"https://ms.portal.azure.com/#view/Microsoft_Azure_Security/ApiOnboardingRecommendationDetailsBlade/assessmentKey/1c0ba94f-e732-43c7-bf3a-05e80f45d642\"\r\n",
        "size": 0,
        "title": "API Collection Onboarding Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "recommendationId",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 1
            },
            {
              "columnMatch": "APIM",
              "formatter": 1
            },
            {
              "columnMatch": "APICollection",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Unhealthy",
                    "representation": "3",
                    "text": "Not Onboarded"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Healthy",
                    "representation": "Resolved",
                    "text": "Onboarded"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "unknown",
                    "text": "Not Applicable"
                  }
                ]
              }
            },
            {
              "columnMatch": "link",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Url",
                "showIcon": true
              }
            }
          ],
          "rowLimit": 5000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "APIM"
            ],
            "expandTopLevel": false
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "APICollection",
              "label": "API Collection"
            },
            {
              "columnId": "link",
              "label": "Recommendation"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "coverage"
      },
      "name": "API Collection Onboarding Status",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookc7f94234-8a8e-4a43-a0da-8ed894c40134",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 0,
        "resourceType": "microsoft.apimanagement/service",
        "metricScope": 0,
        "resourceIds": [],
        "timeContext": {
          "durationMs": 2592000000
        },
        "metrics": [
          {
            "namespace": "microsoft.apimanagement/service",
            "metric": "microsoft.apimanagement/service-Gateway Requests-Requests",
            "aggregation": 1
          }
        ],
        "title": "API Traffic",
        "resourceLimit": 10000,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Subscription",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Requests",
              "formatter": 1,
              "formatOptions": {
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Requests Timeline",
              "formatter": 5
            },
            {
              "columnMatch": "Metric",
              "formatter": 1
            },
            {
              "columnMatch": "Aggregation",
              "formatter": 1,
              "formatOptions": {
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "Value",
              "formatter": 1
            },
            {
              "columnMatch": "Timeline",
              "formatter": 9
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Subscription"
            ],
            "expandTopLevel": false
          },
          "labelSettings": [
            {
              "columnId": "microsoft.apimanagement/service-Gateway Requests-Requests",
              "label": "Requests (Sum)"
            },
            {
              "columnId": "microsoft.apimanagement/service-Gateway Requests-Requests Timeline",
              "label": "Requests Timeline"
            }
          ]
        },
        "showExportToExcel": true
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "coverage1"
      },
      "name": "API Traffic",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/assessments\" and properties.status.code =~ \"Unhealthy\"\r\n| where id contains \"microsoft.apimanagement/service\"\r\n| extend severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity)\r\n| project severity, severityFilter, id\r\n| where severityFilter has severity\r\n| summarize recommendations = dcount(id) by severity",
        "size": 3,
        "title": "APIM Service Uhealthy Recommendations by Severity",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "recommendations"
          ],
          "seriesLabelSettings": [
            {
              "seriesName": "High",
              "color": "red"
            },
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Low",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "33",
      "name": "APIMUnhealthyRecommendationsBySeverity"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/assessments\"\r\n| where id contains \"microsoft.apimanagement/service\"\r\n| extend severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity)\r\n| project severity, severityFilter, id, statusCode = properties.status.code\r\n| where severityFilter has severity\r\n| summarize recommendations = dcount(id) by tostring(statusCode)",
        "size": 3,
        "title": "All Recommendations by Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "recommendations"
          ],
          "seriesLabelSettings": [
            {
              "seriesName": "NotApplicable",
              "color": "gray"
            },
            {
              "seriesName": "Unhealthy",
              "color": "red"
            },
            {
              "seriesName": "Healthy",
              "color": "green"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "33",
      "name": "All Recommendations by Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/assessments\"\r\n| where id contains \"operations/\"\r\n| extend severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity)\r\n| project severity, severityFilter, id, statusCode = properties.status.code\r\n| where severityFilter has severity\r\n| summarize recommendations = dcount(id) by tostring(statusCode)",
        "size": 3,
        "title": "API Endpoint Recommendations by Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "recommendations"
          ],
          "seriesLabelSettings": [
            {
              "seriesName": "NotApplicable",
              "color": "gray"
            },
            {
              "seriesName": "Unhealthy",
              "color": "red"
            },
            {
              "seriesName": "Healthy",
              "color": "green"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "33",
      "name": "API Endpoint Recommendations by Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where id contains \"microsoft.apimanagement/service\" or id contains \"Microsoft.ApiSecurity\"\r\n    | extend status = properties.status.code, Severity = properties.metadata.severity\r\n    | where status == 'Unhealthy'\r\n    | extend displayName = tostring(properties.displayName)\r\n    | summarize count() by displayName, tostring(Severity)\r\n    | order by tostring(Severity) desc",
        "size": 0,
        "title": "Unhealthy Resource Count by Recommendation",
        "exportedParameters": [
          {
            "fieldName": "displayName",
            "parameterName": "selectedAPIM",
            "parameterType": 1,
            "defaultValue": "All"
          },
          {
            "fieldName": "apimSelected",
            "parameterName": "apimSelected",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "displayName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "81.7143ch"
              },
              "tooltipFormat": {
                "tooltip": "Select a recommendation to view unhealthy resources."
              }
            },
            {
              "columnMatch": "Severity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "High",
                    "representation": "red",
                    "text": "High"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Medium",
                    "representation": "orange",
                    "text": "Medium"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Low",
                    "representation": "green",
                    "text": "Low"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Select a recommendation to view unhealthy resources."
              }
            },
            {
              "columnMatch": "count_",
              "formatter": 0,
              "tooltipFormat": {
                "tooltip": "Select a recommendation to view unhealthy resources."
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "$gen_thresholds_Severity_1",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "displayName",
              "label": "Recommendation Name"
            },
            {
              "columnId": "count_",
              "label": "Resource Count"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_thresholds_Severity_1",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "100",
      "name": "Unhealthy Resource Count by Recommendation",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n    | where type == \"microsoft.security/assessments\"\r\n    | where id contains \"microsoft.apimanagement/service\"\r\n    | extend status = properties.status.code, severity = properties.metadata.severity\r\n    | where status == 'Unhealthy'\r\n    | extend displayName = tostring(properties.displayName)\r\n    | where displayName == '{selectedAPIM}'\r\n    | extend resourceId = tostring(properties.resourceDetails.Id)\r\n    | project displayName, resourceId, status, severity",
        "size": 0,
        "title": "Unhealthy Resources",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "displayName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "70ch"
              }
            },
            {
              "columnMatch": "resourceId",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "57.4286ch"
              }
            },
            {
              "columnMatch": "status",
              "formatter": 1
            },
            {
              "columnMatch": "severity",
              "formatter": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "displayName",
              "label": "Recommendation Name"
            },
            {
              "columnId": "resourceId",
              "label": "Affected Resource"
            },
            {
              "columnId": "status",
              "label": "Status"
            },
            {
              "columnId": "severity",
              "label": "Severity"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "apimSelected",
          "comparison": "isNotEqualTo",
          "value": "false"
        },
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "recommendations"
        }
      ],
      "customWidth": "100",
      "name": "Affected APIs",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n| union extensibilityresources \r\n| where type =~ \"microsoft.security/apicollections/apiendpoints\"\r\n| project DisplayName = properties.displayName, CollectionName = properties.apiCollectionDisplayName, CollectionId = properties.apiCollectionResourceId, Active=properties.thirtyDaysUnusedStatus, Authorized=properties.unauthenticatedStatus, SensitiveInfo=properties.sensitiveInformationTypes, HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, TriggerDate=properties.lastCalledDate, External=properties.externalTrafficObservedDate, operationResourceId = tostring(properties.operationResourceId)\r\n| where SensitiveInfo != \"[]\" and SensitiveInfo != \"\"\r\n| where External != \"\"\r\n| where Authorized != \"\"\r\n| summarize count() by tostring(Authorized)",
        "size": 3,
        "title": "Authorization Status on External Endpoints with Sensitive Data",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "false",
              "label": "Unauthorized Endpoints",
              "color": "redBright"
            },
            {
              "seriesName": "true",
              "label": "Authorized Endpoints",
              "color": "blue"
            },
            {
              "seriesName": "",
              "label": "Unknown",
              "color": "green"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "50",
      "name": "Authorization Status on External Endpoints with Sensitive Data"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n| union extensibilityresources \r\n| where type =~ \"microsoft.security/apicollections/apiendpoints\"\r\n| project DisplayName = properties.displayName, CollectionName = properties.apiCollectionDisplayName, CollectionId = properties.apiCollectionResourceId, Active=properties.thirtyDaysUnusedStatus, Authorized=properties.unauthenticatedStatus, HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, TriggerDate=properties.lastCalledDate, External=properties.externalTrafficObservedDate, operationResourceId = tostring(properties.operationResourceId)\r\n| where External != \"\"\r\n| where Authorized == \"false\"\r\n| summarize count() by tostring(Active)",
        "size": 3,
        "title": "Active Status on Unauthorized and External Endpoints",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "false",
              "label": "Inactive",
              "color": "redBright"
            },
            {
              "seriesName": "true",
              "label": "Active",
              "color": "blue"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "50",
      "name": "Active Status on Unauthorized and External Endpoints"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n| union extensibilityresources \r\n| where type =~ \"microsoft.security/apicollections/apiendpoints\"\r\n| project DisplayName = properties.displayName, CollectionName = properties.apiCollectionDisplayName, CollectionId = properties.apiCollectionResourceId, Active=properties.thirtyDaysUnusedStatus, Authorized=properties.unauthenticatedStatus, SensitiveInfo=properties.sensitiveInformationTypes, HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, TriggerDate=properties.lastCalledDate, External=properties.externalTrafficObservedDate, operationResourceId = tostring(properties.operationResourceId), Uri = tostring(properties.uri), APIM = tostring(properties.discoveredViaDisplayName)\r\n| where SensitiveInfo != \"[]\" and SensitiveInfo != \"\"\r\n| where External != \"\"\r\n| where Authorized == \"false\"\r\n| project APIM, CollectionName, DisplayName, HttpMethod, operationResourceId, Active, Authorized, External, Uri",
        "size": 0,
        "title": "List of Unauthorized External Endpoints with Sensitive Data",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "APIM",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "CollectionName",
              "formatter": 1
            },
            {
              "columnMatch": "DisplayName",
              "formatter": 1
            },
            {
              "columnMatch": "HttpMethod",
              "formatter": 1
            },
            {
              "columnMatch": "operationResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "Active",
              "formatter": 5
            },
            {
              "columnMatch": "Authorized",
              "formatter": 5
            },
            {
              "columnMatch": "External",
              "formatter": 5
            },
            {
              "columnMatch": "Collection",
              "formatter": 1
            },
            {
              "columnMatch": "Operation",
              "formatter": 1
            },
            {
              "columnMatch": "Endpoint",
              "formatter": 1
            },
            {
              "columnMatch": "IsEndpointActive",
              "formatter": 1
            },
            {
              "columnMatch": "IsEndpointAuthorized",
              "formatter": 1
            },
            {
              "columnMatch": "IsEndpointExternal",
              "formatter": 1
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "APIM",
              "label": "APIM Service"
            },
            {
              "columnId": "CollectionName",
              "label": "API Collection"
            },
            {
              "columnId": "DisplayName",
              "label": "API Endpoint"
            },
            {
              "columnId": "HttpMethod",
              "label": "HTTP Method"
            },
            {
              "columnId": "operationResourceId",
              "label": "Resource ID"
            },
            {
              "columnId": "Uri",
              "label": "API Endpoint URI"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "50",
      "name": "List of Unauthorized External Endpoints with Sensitive Data",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources  \r\n| union extensibilityresources \r\n| where type =~ \"microsoft.security/apicollections/apiendpoints\"\r\n| project DisplayName = properties.displayName, CollectionName = properties.apiCollectionDisplayName, CollectionId = properties.apiCollectionResourceId, Active=properties.thirtyDaysUnusedStatus, Authorized=properties.unauthenticatedStatus, HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, TriggerDate=properties.lastCalledDate, External=properties.externalTrafficObservedDate, operationResourceId = tostring(properties.operationResourceId), Uri = tostring(properties.uri), APIM = tostring(properties.discoveredViaDisplayName)\r\n| where External != \"\"\r\n| where Authorized == \"false\"\r\n| where Active == \"true\"\r\n| project APIM, CollectionName, DisplayName, HttpMethod, operationResourceId, Active, Authorized, External, Uri\r\n",
        "size": 0,
        "title": "List of Active and Unauthorized External Endpoints",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "APIM",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Collection",
              "formatter": 1
            },
            {
              "columnMatch": "DisplayName",
              "formatter": 1
            },
            {
              "columnMatch": "HttpMethod",
              "formatter": 1
            },
            {
              "columnMatch": "operationResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "Active",
              "formatter": 5
            },
            {
              "columnMatch": "Authorized",
              "formatter": 5
            },
            {
              "columnMatch": "External",
              "formatter": 5
            },
            {
              "columnMatch": "Uri",
              "formatter": 1
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "APIM",
              "label": "APIM Service"
            },
            {
              "columnId": "CollectionName",
              "label": "API Collection"
            },
            {
              "columnId": "DisplayName",
              "label": "API Endpoint"
            },
            {
              "columnId": "HttpMethod",
              "label": "HTTP Method"
            },
            {
              "columnId": "operationResourceId",
              "label": "Resource Id"
            },
            {
              "columnId": "Uri",
              "label": "API Endpoint URI"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "customWidth": "50",
      "name": "List of Active and Unauthorized External Endpoints",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"7ad00833-a0f0-47b9-b377-5665bd5d9074\"\r\n| project id = tostring(properties.resourceDetails.id), source = tostring(properties.resourceDetails.source), \r\n    RepoUrl = tostring(properties.resourceDetails.nativeResourceId), AlertUrl = tostring(properties.additionalData.data.Html_Url),\r\n    RuleId = tostring(properties.additionalData.data.Rule_id), Line = tostring(properties.additionalData.data.Line), \r\n    Path = tostring(properties.additionalData.data.Path), Branch = tostring(properties.additionalData.data.Branch), \r\n    Description = tostring(properties.status.description), Status = tostring(properties.status.code), RuleSeverity = tostring(properties.additionalData.data.Rule_severity), Details = \"Information\", properties, Severity = tostring(properties.status.severity)\r\n| extend Organization = tostring(split(id, '/')[12]), Repository = tostring(split(id, '/')[14])\r\n| project Organization, Repository, Description, Severity, RepoUrl, AlertUrl, Branch, Path, Line, RuleSeverity, RuleId, Details, properties\r\n\r\n",
        "size": 0,
        "title": "API security testing findings",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Repository",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "RepoUrl",
                "linkTarget": "Url"
              }
            },
            {
              "columnMatch": "RepoUrl",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Repo URL"
              }
            },
            {
              "columnMatch": "AlertUrl",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Alert Link"
              }
            },
            {
              "columnMatch": "Branch",
              "formatter": 5
            },
            {
              "columnMatch": "Path",
              "formatter": 5
            },
            {
              "columnMatch": "Line",
              "formatter": 5
            },
            {
              "columnMatch": "RuleSeverity",
              "formatter": 5
            },
            {
              "columnMatch": "RuleId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            }
          ],
          "rowLimit": 2000,
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "recommendations"
      },
      "name": "API security testing findings",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources \r\n| union extensibilityresources \r\n| where type =~ \"microsoft.security/apicollections/apiendpoints\"\r\n| project DisplayName = properties.displayName, CollectionName = properties.apiCollectionDisplayName, CollectionId = properties.apiCollectionResourceId, Active=properties.thirtyDaysUnusedStatus, Authorized=properties.unauthenticatedStatus, SensitiveInfo=properties.sensitiveInformationTypes, HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, TriggerDate=properties.lastCalledDate, External=properties.externalTrafficObservedDate, operationResourceId = tostring(properties.operationResourceId)\r\n| where SensitiveInfo != \"[]\" and SensitiveInfo != \"\"\r\n| mv-expand SensitiveInfo to typeof(string)\r\n| summarize count() by SensitiveInfo",
        "size": 0,
        "title": "Discovered Sensitive Information Types",
        "noDataMessage": "No sensitive data classifications discovered.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "barchart"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "data"
      },
      "customWidth": "50",
      "name": "Discovered Sensitive Information Types",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| union extensibilityresources\r\n| where type in (\"microsoft.security/apicollections/apiendpoints\", \"microsoft.apisecurity/apicollections/apicollectiondetails\")\r\n| project SensitivityLabel = tostring(properties.sensitivityLabel)\r\n| where SensitivityLabel != \"\"\r\n| summarize count() by SensitivityLabel",
        "size": 0,
        "title": "Discovered Sensitivity Labels",
        "noDataMessage": "No sensitive data classifications discovered.",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "barchart"
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "data"
      },
      "customWidth": "50",
      "name": "Discovered Sensitivity Labels",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| union extensibilityresources\r\n| where type in (\"microsoft.security/apicollections/apiendpoints\", \"microsoft.apisecurity/apicollections/apicollectiondetails\")\r\n| order by tostring(properties.displayName) asc\r\n| project  Id=id, SubscriptionId=properties.subscriptionId, \r\n            Name=name, DisplayName = properties.displayName, SensitivityLabel = properties.sensitivityLabel,\r\n            CollectionName = properties.apiCollectionName, CollectionId=properties.apiCollectionResourceId, \r\n            OperationResourceUri=properties.operationResourceId, EndPoint=properties.uri, \r\n            HttpMethod=properties.httpMethod, DiscoveryDate=properties.discoveredDate, \r\n            TriggerDate=properties.lastCalledDate, IsEndpointActive=properties.thirtyDaysUnusedStatus,\r\n            IsEndpointAuthorized=properties.unauthenticatedStatus, LastExternalTrafficDate=properties.externalTrafficObservedDate, SensitiveInformationTypes=properties.sensitiveInformationTypes, APIM=properties.discoveredViaResourceId\r\n| where SensitiveInformationTypes != \"[]\" or SensitivityLabel != \"\"\r\n| project APIM, CollectionName, DisplayName, SensitiveInformationTypes, SensitivityLabel, HttpMethod, LastExternalTrafficDate, IsEndpointActive, IsEndpointAuthorized",
        "size": 0,
        "title": "APIs Containing Sensitive Information",
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "APIM",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "CollectionName",
              "formatter": 1
            },
            {
              "columnMatch": "DisplayName",
              "formatter": 1
            },
            {
              "columnMatch": "SensitiveInfo",
              "formatter": 1
            },
            {
              "columnMatch": "SensitivityLabel",
              "formatter": 1
            },
            {
              "columnMatch": "HttpMethod",
              "formatter": 1
            },
            {
              "columnMatch": "External",
              "formatter": 1
            },
            {
              "columnMatch": "Active",
              "formatter": 1
            },
            {
              "columnMatch": "Authorized",
              "formatter": 1
            },
            {
              "columnMatch": "Id",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "DiscoveryDate",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDatePattern"
              }
            },
            {
              "columnMatch": "Uri",
              "formatter": 1
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "CollectionName",
              "label": "API Collection"
            },
            {
              "columnId": "DisplayName",
              "label": "API Endpoint"
            },
            {
              "columnId": "SensitiveInformationTypes",
              "label": "Sensitive Information Types"
            },
            {
              "columnId": "HttpMethod",
              "label": "HTTP Method"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "data"
      },
      "customWidth": "100",
      "name": "APIs Containing Sensitive Information",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| summarize count() by tostring(AlertDisplayName)\r\n| top 5 by count_",
        "size": 3,
        "title": "Top 5 Alert Types",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "count_",
              "label": "Alert Count"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "customWidth": "66",
      "name": "Top 5 Alert Types"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| summarize count() by Resource \r\n| sort by count_ desc\r\n| top 10 by count_",
        "size": 3,
        "title": "Affected Resources",
        "exportedParameters": [
          {
            "fieldName": "Resource",
            "parameterName": "selectedAlert",
            "parameterType": 1
          },
          {
            "fieldName": "alertSelected",
            "parameterName": "alertSelected",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "tooltipFormat": {
                "tooltip": "Select a resource to view alerts."
              }
            },
            {
              "columnMatch": "count_",
              "formatter": 0,
              "tooltipFormat": {
                "tooltip": "Select a resource to view alerts."
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "$gen_link_Resource_0",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "Resource",
              "label": "Resource"
            },
            {
              "columnId": "count_",
              "label": "Alert Count"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_link_Resource_0",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "customWidth": "34",
      "name": "Resources with Alerts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| where Resource == '{selectedAlert}'\r\n| project\r\n    Resource,\r\n    AlertDisplayName,\r\n    tostring(Severity),\r\n    AlertTime,\r\n    Status,\r\n    Tactics,\r\n    AlertLink = AlertUri\r\n",
        "size": 3,
        "title": "Active Alerts on Selected Resource",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "AlertDisplayName",
              "formatter": 1
            },
            {
              "columnMatch": "Severity",
              "formatter": 1
            },
            {
              "columnMatch": "AlertTime",
              "formatter": 6
            },
            {
              "columnMatch": "Status",
              "formatter": 1
            },
            {
              "columnMatch": "Tactics",
              "formatter": 1
            },
            {
              "columnMatch": "AlertLink",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url"
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "AlertTime",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "AlertTime",
              "label": "Time"
            },
            {
              "columnId": "AlertLink",
              "label": "Link"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "AlertTime",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "alerts"
        },
        {
          "parameterName": "alertSelected",
          "comparison": "isNotEqualTo",
          "value": "false"
        }
      ],
      "customWidth": "100",
      "name": "Alerts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details[\"IsIncident\"]\r\n| extend AlertDisplayName = Details[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details[\"SystemAlertId\"]\r\n| extend Severity = Details[\"Severity\"]\r\n| extend AlertUri = Details[\"AlertUri\"]\r\n| extend Status = Details[\"Status\"]\r\n| extend Tactics = Details[\"Intent\"]\r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| extend ResourceIdentifiers = Details[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers)[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = todatetime(properties.TimeGeneratedUtc)\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| extend AlertTime = format_datetime(todatetime(properties.TimeGeneratedUtc), 'MM-dd-yyyy')\r\n| summarize count() by AlertTime\r\n",
        "size": 3,
        "title": "Alerts by Day",
        "exportedParameters": [
          {
            "fieldName": "AlertTime",
            "parameterName": "Time",
            "parameterType": 1
          },
          {
            "fieldName": "timeSelected",
            "parameterName": "timeSelected",
            "parameterType": 1,
            "defaultValue": "false"
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "AlertTime",
            "formatter": 6,
            "dateFormat": {
              "showUtcTime": true,
              "formatName": "shortDatePattern"
            },
            "tooltipFormat": {
              "tooltip": "Select a date to view alerts."
            }
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": false,
          "sortCriteriaField": "AlertTime",
          "sortOrderField": 1
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "AlertTime",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count_",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "xAxis": "AlertTime",
          "showLegend": true,
          "xSettings": {
            "numberFormatSettings": {
              "unit": 27,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count_",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "Alerts by Day"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = format_datetime(todatetime(properties.TimeGeneratedUtc), 'MM-dd-yyyy')\r\n| where tostring(AlertTime) == '{Time}'\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| project\r\n    Resource,\r\n    AlertDisplayName,\r\n    tostring(Severity),\r\n    Status,\r\n    Tactics,\r\n    AlertLink = AlertUri",
        "size": 3,
        "title": "Alerts on Selected Day",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "AlertDisplayName",
              "formatter": 1
            },
            {
              "columnMatch": "Severity",
              "formatter": 1
            },
            {
              "columnMatch": "Status",
              "formatter": 1
            },
            {
              "columnMatch": "Tactics",
              "formatter": 1
            },
            {
              "columnMatch": "AlertLink",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "Url"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertDisplayName",
              "label": "Alert Name"
            },
            {
              "columnId": "AlertLink",
              "label": "Link"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tab",
          "comparison": "isEqualTo",
          "value": "alerts"
        },
        {
          "parameterName": "timeSelected",
          "comparison": "isNotEqualTo",
          "value": "false"
        }
      ],
      "name": "Alerts on Selected Day"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| where Status == \"Active\"\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| extend AlertTime = properties.TimeGeneratedUtc\r\n| where Resource has \"microsoft.APISecurity\" or Resource has \"microsoft.apimanagement\"\r\n| where Severity in~ ({severity})\r\n| summarize count() by tostring(location)\r\n",
        "size": 3,
        "title": "Map of Affected Resources by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{subscription}"
        ],
        "visualization": "map",
        "mapSettings": {
          "locInfo": "AzureLoc",
          "locInfoColumn": "location",
          "sizeSettings": "count_",
          "sizeAggregation": "Sum",
          "labelSettings": "location",
          "legendMetric": "count_",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "nodeColorField": "count_",
            "colorAggregation": "Sum",
            "type": "heatmap",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "Map of Affected Resources by Location"
    }
  ],
  "fallbackResourceIds": [
    "Azure Security Center"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
