{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "37ceb1c3-3930-4689-a90b-22f26e42bd81",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "label": " Subscription"
                },
                {
                  "id": "08f5fe68-c2e3-4882-9300-b3e33f572dfe",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "4fea3013-df84-4930-a453-8a6bd0375130",
                  "version": "KqlParameterItem/1.0",
                  "name": "SingleSubHidden",
                  "type": 1,
                  "isRequired": true,
                  "query": "resourcecontainers\r\n| where type==\"microsoft.resources/subscriptions\"\r\n| take 1\r\n| project subscriptionId",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Hidden Subscription"
                },
                {
                  "id": "8412f39d-ee67-4979-b887-47463b8848c2",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagName",
                  "type": 2,
                  "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Name"
                },
                {
                  "id": "50c68f38-13a0-4aff-a259-4426c83b7cc0",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagValue",
                  "type": 2,
                  "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Value"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "75",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "CostInformation"
              },
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "Welcome"
              }
            ],
            "name": "parameters - Filters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "eae8a0d2-14e6-4cd1-a2d2-fd6b207cf517",
                  "version": "KqlParameterItem/1.0",
                  "name": "Location",
                  "type": 2,
                  "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project name, location\r\n| summarize count () by location\r\n| project location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Resource Location"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "AHB"
            },
            "name": "parameters - location"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "21215328-f3bc-4172-b591-191e80ad5053",
                  "cellValue": "DatabaseType",
                  "linkTarget": "parameter",
                  "linkLabel": "Cosmos DB",
                  "subTarget": "CosmosDB",
                  "style": "link"
                },
                {
                  "id": "593c0fdc-6843-4db6-b297-86d6487851be",
                  "cellValue": "DatabaseType",
                  "linkTarget": "parameter",
                  "linkLabel": "SQL Elastic Pool",
                  "subTarget": "ElasticPool",
                  "style": "link"
                }
              ]
            },
            "name": "Database links"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "Provisioned throughput (RU/s) is most commonly the highest contributing component to the overall cost of Azure Cosmos DB. As such, choosing the right amount of RU/s for your workload is essential to prevent unnecessary expenditure. Please review the below list of Azure Cosmos DB collections and consider scaling down their RU/s.\r\n\r\nAdjusting RU/s on a given collection does not cause interruption to your workload. ",
                    "style": "upsell"
                  },
                  "name": "WelcomeText CosmosDB"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations'\r\n| where properties.impactedField == 'microsoft.documentdb/databaseaccounts' and properties.recommendationTypeId == '8b993855-1b3f-4392-8860-6ed4f5afd8a7'\r\n| order by id asc\r\n| project \r\n    id, subscriptionId, resourceGroup, CosmosDBAccountName=properties.extendedProperties.GlobalDatabaseAccountName, \r\n    DatabaseName=properties.extendedProperties.DatabaseName, CollectionName=properties.extendedProperties.CollectionName,\r\n    EstimatedAnnualSavings=bin(toreal(properties.extendedProperties.annualSavingsAmount), 1), SavingsCurrency=properties.extendedProperties.savingsCurrency\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id\r\n| project-away id1\r\n",
                    "size": 0,
                    "title": "Collections that could have their RU/s reduced",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "CosmosDB-Adjusting RU"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Azure Cosmos DB offers two throughput provisioning modes – manual and autoscale. Autoscale mode benefits workloads that have variable usage patterns such as user-facing apps that receive more traffic during the day and less traffic during the night. Manual mode benefits workloads with stable usage patterns such as IoT workloads that receive periodic heartbeats from sensors. Setting the appropriate mode can significantly improve the cost-effectiveness of your workload.\r\n\r\nPlease visit [How to choose between manual and autoscale on Azure Cosmos DB | Microsoft Learn](https://learn.microsoft.com/en-us/azure/cosmos-db/how-to-choose-offer) to learn more about the benefits of either mode. Switching between manual and autoscale (and vice-versa) is as easy as clicking a single button in Azure Portal and does not cause any interruption to your application.\r\n",
                    "style": "upsell"
                  },
                  "name": "Cosmos DB throughput provisioning modes"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations'\r\n| where properties.impactedField == 'microsoft.documentdb/databaseaccounts' and properties.recommendationTypeId in (' cdf51428-a41b-4735-ba23-39f3b7cde20c', ' 6aa7a0df-192f-4dfa-bd61-f43db4843e7d')\r\n| order by id asc\r\n| project \r\n    id, subscriptionId, resourceGroup, CosmosDBAccountName=properties.extendedProperties.GlobalDatabaseAccountName, \r\n    DatabaseName=properties.extendedProperties.DatabaseName, CollectionName=properties.extendedProperties.CollectionName,\r\n    EstimatedAnnualSavings=bin(toreal(properties.extendedProperties.annualSavingsAmount), 1), SavingsCurrency=properties.extendedProperties.savingsCurrency\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id\r\n| project-away id1",
                    "size": 0,
                    "title": "Collections that would benefit from switching to other throughput mode",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "CosmosDB - switch to other throughput mode"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Azure Cosmos DB offers two backup modes - periodic and continuous. Continuous backup mode offers several benefits over the older periodic mode – for example, it provides a much more granular restore options (down to a level of a second) or the ability to restore using APIs and without needing to contact Microsoft support.\r\n\r\nFrom a cost perspective, continuous backup mode offers significant advantages to customers who retain many snapshots of data under the periodic mode. This is the case if backups are configured with high frequency (e.g., hourly backups retained for a day) or lower frequency but longer retention (e.g., daily backups retained for a month).\r\n\r\nPlease visit [Continuous backup with point in time restore feature in Azure Cosmos DB | Microsoft Learn](https://learn.microsoft.com/en-us/azure/cosmos-db/continuous-backup-restore-introduction) to learn more about the advantages of continuous backup mode. Switching is as easy as clicking a single button in Azure Portal and does not cause any interruption to your application.",
                    "style": "upsell"
                  },
                  "name": "Cosmos DB  backup modes"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.documentdb/databaseaccounts\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| where properties.backupPolicy.type == 'Periodic' and tobool(properties.enableMultipleWriteLocations) == false\r\n| extend BackupCopies=toreal(properties.backupPolicy.periodicModeProperties.backupRetentionIntervalInHours) / (toreal(properties.backupPolicy.periodicModeProperties.backupIntervalInMinutes) / real(60))\r\n| where BackupCopies >= 10 or (BackupCopies > 2 and toint(properties.backupPolicy.periodicModeProperties.backupRetentionIntervalInHours) <= 168)\r\n| order by id asc\r\n| project id, CosmosDBAccountName=name, resourceGroup, subscriptionId, BackupCopies\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id\r\n| project-away id1\r\n\r\n",
                    "size": 0,
                    "title": "Accounts that would likely be cheaper under continuous backup mode",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "Query - Cosmos DB backup modes"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "DatabaseType",
              "comparison": "isEqualTo",
              "value": "CosmosDB"
            },
            "name": "CosmosDB Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "When a SQL database does not have any active connections or queries for a certain period, it is considered idle. Auto pause can be enabled on such databases to help you save money on compute resources.",
                    "style": "upsell"
                  },
                  "name": "text - 10"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.sql/servers/databases\"\r\n| where name contains \"old\" or name contains \"Dev\"or  name contains \"test\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend SQLDBName=name, Type=sku.name, Tier=sku.tier, Location=location\r\n| order by id asc\r\n| project id, SQLDBName, Type, Tier, resourceGroup, Location, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                    "size": 0,
                    "title": "Databases idle for over 30 days",
                    "noDataMessage": "No idle SQL DBs found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Visibility",
                    "comparison": "isEqualTo",
                    "value": "AlwaysHidden"
                  },
                  "name": "query - 11"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "DatabaseType",
              "comparison": "isEqualTo",
              "value": "SQLDB"
            },
            "name": "SQLDBOptimization"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SQL ElasticPool",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "### Idle SQL Elastic Pool\r\n\r\nThis query identifies SQL Elastic Pools that do not contain any databases within an Azure environment.\r\n",
                          "style": "info"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.sql/servers/elasticpools\"\r\n| extend elasticPoolId = tolower(tostring(id)), elasticPoolName = name, elasticPoolRG = resourceGroup,skuName=tostring(sku.name),skuTier=tostring(sku.tier),skuCapacity=tostring(sku.capacity)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type == \"microsoft.sql/servers/databases\"\r\n    | extend elasticPoolId = tolower(tostring(properties.elasticPoolId))\r\n) on elasticPoolId\r\n| summarize databaseCount = countif(isnotempty(elasticPoolId1)) by elasticPoolId, elasticPoolName,serverResourceGroup=resourceGroup,name,skuName,skuTier,skuCapacity,elasticPoolRG\r\n| where databaseCount == 0\r\n| project elasticPoolId, elasticPoolName, databaseCount, elasticPoolRG ,skuName,skuTier ,skuCapacity",
                          "size": 0,
                          "title": "Idle SQL Pool",
                          "noDataMessage": "All your SQL Elastic Pools contain at least one database.",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "elasticPoolId",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "elasticPoolId",
                                "label": "ElasticPool name"
                              },
                              {
                                "columnId": "elasticPoolName",
                                "label": "PoolName"
                              },
                              {
                                "columnId": "databaseCount",
                                "label": "Database count"
                              },
                              {
                                "columnId": "elasticPoolRG",
                                "label": "ElasticPool RG"
                              },
                              {
                                "columnId": "skuName",
                                "label": "SKU name"
                              },
                              {
                                "columnId": "skuTier",
                                "label": "SKU tier"
                              },
                              {
                                "columnId": "skuCapacity",
                                "label": "ElasticPool capacity"
                              }
                            ]
                          }
                        },
                        "name": "IdleSQLPool"
                      }
                    ]
                  },
                  "name": "Group Idle SQL Pool"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "DatabaseType",
              "comparison": "isEqualTo",
              "value": "ElasticPool"
            },
            "name": "SQL ElasticPool"
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}