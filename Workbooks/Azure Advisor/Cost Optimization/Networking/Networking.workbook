{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Networking cost optimization recommendations",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "7a720abf-5b4a-4fb1-adaf-2383e70f625d",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "label": " Subscription"
                },
                {
                  "id": "a29babbc-5092-46c5-b03b-932c90aa61c9",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "4b9c84b6-14ab-4663-b8b7-8bf0c351bbb5",
                  "version": "KqlParameterItem/1.0",
                  "name": "SingleSubHidden",
                  "type": 1,
                  "isRequired": true,
                  "query": "resourcecontainers\r\n| where type==\"microsoft.resources/subscriptions\"\r\n| take 1\r\n| project subscriptionId",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Hidden Subscription"
                },
                {
                  "id": "6637e003-5323-4c6d-9990-426388c833e9",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagName",
                  "type": 2,
                  "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Name"
                },
                {
                  "id": "d390e2b5-aa2f-494b-bbb8-0b18c8de9063",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagValue",
                  "type": 2,
                  "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Value"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "75",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "CostInformation"
              },
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "Welcome"
              }
            ],
            "name": "parameters - Filters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "ae7eb928-8873-46f8-a3ff-77f45c207fb3",
                  "version": "KqlParameterItem/1.0",
                  "name": "Location",
                  "type": 2,
                  "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project name, location\r\n| summarize count () by location\r\n| project location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Resource Location"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "AHB"
            },
            "name": "parameters - location"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "e5d97e9d-97e6-45f2-871c-376799213b6a",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Firewall",
                  "subTarget": "firewall",
                  "style": "link"
                },
                {
                  "id": "0211f413-9f36-4750-9ef2-d382ba30ba6c",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Application Gateway",
                  "subTarget": "appGateway",
                  "preText": "VM",
                  "style": "link"
                },
                {
                  "id": "61595d5e-9f25-4919-95a6-1462739f4657",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Load Balancer",
                  "subTarget": "loadBalancer",
                  "style": "link"
                },
                {
                  "id": "dbe9a7fb-6ab1-4de1-a98b-4ec8a9af906c",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Public IP Address",
                  "subTarget": "publicIP",
                  "style": "link"
                },
                {
                  "id": "79e7a97a-1413-41e8-b4c6-ebd1d0a45e2e",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Network Gateway",
                  "subTarget": "vpnGw",
                  "style": "link"
                },
                {
                  "id": "6d563f46-7150-458c-9ee4-0558abe8e29b",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Advisor recommendations",
                  "subTarget": "advisorNetworking",
                  "style": "link"
                }
              ]
            },
            "name": "links - Networking"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "# Recommendations for Application Gateways\r\nReview Application Gateways which include backend pools with no targets. Resources listed with 2 red signs are considered idle.",
                          "style": "upsell"
                        },
                        "name": "Recommendations for Application Gateways"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ 'Microsoft.Network/applicationGateways' and resourceGroup in ({ResourceGroup})\r\n| extend backendPoolsCount = array_length(properties.backendAddressPools),SKUName= tostring(properties.sku.name), SKUTier= tostring(properties.sku.tier),SKUCapacity=properties.sku.capacity,backendPools=properties.backendAddressPools,resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| project id, name, SKUName, SKUTier, SKUCapacity,resourceGroup,subscriptionId\r\n| join (\r\n    resources\r\n    | where type =~ 'Microsoft.Network/applicationGateways' and resourceGroup in ({ResourceGroup})\r\n    | mvexpand backendPools = properties.backendAddressPools\r\n    | extend backendIPCount = array_length(backendPools.properties.backendIPConfigurations)\r\n    | extend backendAddressesCount = array_length(backendPools.properties.backendAddresses)\r\n    | extend backendPoolName  = backendPools.properties.backendAddressPools.name\r\n    | summarize backendIPCount = sum(backendIPCount) ,backendAddressesCount=sum(backendAddressesCount) by id\r\n) on id\r\n| project-away id1\r\n| where  (backendIPCount == 0 or isempty(backendIPCount)) and (backendAddressesCount==0 or isempty(backendAddressesCount))\r\n| order by id asc\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                          "size": 0,
                          "title": "Application gateways with empty backend pools",
                          "noDataMessage": "You don't have any Application Gateways with empty backendpools",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "SKUCapacity",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "backendIPCount",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "disabled",
                                      "text": "No Backend IPs"
                                    },
                                    {
                                      "operator": ">",
                                      "thresholdValue": "0",
                                      "representation": "success",
                                      "text": "Backend IP configured"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "backendAddressesCount",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "disabled",
                                      "text": "No Backend targets"
                                    },
                                    {
                                      "operator": ">",
                                      "thresholdValue": "0",
                                      "representation": "success",
                                      "text": "Backend targets available"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "id1",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Recommendation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "No Backend targets",
                                      "representation": "redBright",
                                      "text": "No Backend targets"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "green",
                                      "text": "Backend targets enabled"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "backendPoolIPTarget",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">",
                                      "thresholdValue": "0",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "disabled",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "backendPoolVMTarget",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "disabled",
                                      "text": ""
                                    },
                                    {
                                      "operator": ">",
                                      "thresholdValue": "0",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Recommednation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "No Backend targets",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "id",
                                "label": "ID"
                              },
                              {
                                "columnId": "name",
                                "label": "Name"
                              },
                              {
                                "columnId": "SKUName",
                                "label": "SKU"
                              },
                              {
                                "columnId": "SKUTier",
                                "label": "SKU Tier"
                              },
                              {
                                "columnId": "SKUCapacity",
                                "label": "Capacity"
                              },
                              {
                                "columnId": "resourceGroup",
                                "label": "Resource Group"
                              },
                              {
                                "columnId": "subscriptionId",
                                "label": "Subscription ID"
                              },
                              {
                                "columnId": "backendIPCount",
                                "label": "Has backend pool for IPs?"
                              },
                              {
                                "columnId": "backendAddressesCount",
                                "label": "Has backend pool for VMs?"
                              },
                              {
                                "columnId": "id1",
                                "label": "ResourceID"
                              }
                            ]
                          }
                        },
                        "name": "Get-Idle-AppGW"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedSubTab",
                    "comparison": "isEqualTo",
                    "value": "appGateway"
                  },
                  "name": "NetworkingAppGateway"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "# Recommendations for Load Balancers\r\nReview Load balancers with no backend pools, and remove them if not needed.",
                          "style": "upsell"
                        },
                        "name": "Recommendations for Load Balancers"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where resourceGroup in ({ResourceGroup})\r\n| extend resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup), SKUName=tostring(sku.name),SKUTier=tostring(sku.tier),location,backendAddressPools = properties.backendAddressPools\r\n| where type =~ 'microsoft.network/loadbalancers' and array_length(backendAddressPools) == 0 and sku.name!='Basic'\r\n| order by id asc\r\n| project id,name, SKUName,SKUTier,backendAddressPools, location,resourceGroup, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                          "size": 0,
                          "title": "Load Balancers with empty backend pools",
                          "noDataMessage": "You don't have any Load Balancers with empty backendpools",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "backendAddressPools",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "disabled",
                                      "text": "Empty Backend Pool"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "id1",
                                "formatter": 5
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "id",
                                "label": "Resource ID"
                              },
                              {
                                "columnId": "name",
                                "label": "Name"
                              },
                              {
                                "columnId": "SKUName",
                                "label": "SKU"
                              },
                              {
                                "columnId": "SKUTier",
                                "label": "SKU Tier"
                              },
                              {
                                "columnId": "backendAddressPools",
                                "label": "Has backend pool?"
                              },
                              {
                                "columnId": "location",
                                "label": "Location"
                              },
                              {
                                "columnId": "resourceGroup",
                                "label": "Resource Group"
                              },
                              {
                                "columnId": "subscriptionId",
                                "label": "Subscription Name"
                              },
                              {
                                "columnId": "id1",
                                "label": "ResourceID"
                              }
                            ]
                          }
                        },
                        "name": "Get-Idle-LB"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedSubTab",
                    "comparison": "isEqualTo",
                    "value": "loadBalancer"
                  },
                  "name": "LoadBalancerGroup"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "# Recommendations for Public IP Addresses\r\nReview unattached Public IP addresses, as they may represent additional cost.\r\n<br>This query will also show Public IPs attached to Idle network cards.\r\n",
                          "style": "upsell"
                        },
                        "name": "Recommendations for PIP"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'Microsoft.Network/publicIPAddresses' and isempty(properties.ipConfiguration) and isempty(properties.natGateway) \r\n| extend PublicIpId=id, IPName=name, AllocationMethod=tostring(properties.publicIPAllocationMethod), SKUName=sku.name, Location=location ,resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| project PublicIpId,IPName, SKUName, resourceGroup, Location, AllocationMethod, subscriptionId\r\n| union (\r\n Resources \r\n | where type =~ 'microsoft.network/networkinterfaces' and isempty(properties.virtualMachine) and isnull(properties.privateEndpoint) and isnotempty(properties.ipConfigurations) \r\n | extend IPconfig = properties.ipConfigurations \r\n | mv-expand IPconfig \r\n | extend PublicIpId= tostring(IPconfig.properties.publicIPAddress.id)\r\n | project PublicIpId\r\n | join ( \r\n    resources \r\n    | where type =~ 'Microsoft.Network/publicIPAddresses'\r\n    | extend PublicIpId=id, IPName=name, AllocationMethod=tostring(properties.publicIPAllocationMethod), SKUName=sku.name, resourceGroup, Location=location \r\n ) on PublicIpId\r\n | project PublicIpId,IPName, SKUName, resourceGroup, Location, AllocationMethod, subscriptionId\r\n)\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | extend PublicIpId=id\r\n    | distinct PublicIpId\r\n    )\r\n    on PublicIpId\r\n",
                          "size": 0,
                          "title": "Unattached Public IPs",
                          "noDataMessage": "You have no unattached Public IPs",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PublicIpId1",
                                "formatter": 5
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "PublicIpId",
                                "label": "ID"
                              },
                              {
                                "columnId": "IPName",
                                "label": "Name"
                              },
                              {
                                "columnId": "SKUName",
                                "label": "SKU"
                              },
                              {
                                "columnId": "resourceGroup",
                                "label": "Resource Group"
                              },
                              {
                                "columnId": "AllocationMethod",
                                "label": "Allocation Method"
                              },
                              {
                                "columnId": "subscriptionId",
                                "label": "Subscription Name"
                              },
                              {
                                "columnId": "PublicIpId1",
                                "label": "Resource ID"
                              }
                            ]
                          }
                        },
                        "name": "Get-Idle-PIP"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedSubTab",
                    "comparison": "isEqualTo",
                    "value": "publicIP"
                  },
                  "name": "PIPGroup"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "# Recommendations for Virtual Network Gateways\r\nReview idle Virtual Network Gateways that have no connections defined, as they may represent additional cost.\r\n",
                          "style": "upsell"
                        },
                        "name": "Recommendations for idle virtualNetworkGateways"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.network/virtualnetworkgateways\"\r\n| extend resourceGroup =strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| project id, GWName=name,resourceGroup,location,subscriptionId\r\n| join kind = leftouter(\r\n    resources\r\n    | where type == \"microsoft.network/connections\"\r\n    | extend id = tostring(properties.virtualNetworkGateway1.id)\r\n    | project id\r\n    | union (\r\n         resources\r\n         | where type == \"microsoft.network/connections\"\r\n         | extend id = tostring(properties.virtualNetworkGateway2.id)\r\n         | project id\r\n    )\r\n) on id\r\n| where isempty(id1)\r\n| project id, GWName,resourceGroup,location,subscriptionId,status=id",
                          "size": 0,
                          "title": "Idle Virtual Network Gateways",
                          "noDataMessage": "No Idle Virtual Network Gateways found",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "Error-Connection not configured"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "id",
                                "label": "Resource ID"
                              },
                              {
                                "columnId": "GWName",
                                "label": "VPN Gateway Name"
                              },
                              {
                                "columnId": "status",
                                "label": "Is connected?"
                              }
                            ]
                          }
                        },
                        "name": "query - Idle Virtual Network gateways"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedSubTab",
                    "comparison": "isEqualTo",
                    "value": "vpnGw"
                  },
                  "name": "VPNGW Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations'\r\n| where resourceGroup in ({ResourceGroup})\r\n| where properties.category == 'Cost' and properties.lastUpdated >= ago(1d)\r\n| where properties.impactedField has \"Network\"\r\n| extend AffectedResource=tostring(properties.resourceMetadata.resourceId), Category=properties.category, SubCategory=properties.impactedField, Impact=properties.impact,resourceGroup,subscriptionId,Recommendation=tostring(properties.shortDescription.problem), id, stableId = name, recommendationTypeId = tostring(properties.recommendationTypeId), maxCpuP95 = properties.extendedProperties.MaxCpuP95\r\n| join kind = leftouter\r\n(advisorresources | where type=~'microsoft.advisor/suppressions'\r\n| extend tokens = split(id, '/')\r\n| extend stableId = iff(array_length(tokens) > 3, tokens[(array_length(tokens)-3)], '')\r\n| extend expirationTimeStamp = todatetime(iff(strcmp(tostring(properties.ttl), '-1') == 0, '9999-12-31', properties.expirationTimeStamp))\r\n| where expirationTimeStamp > now()\r\n| project stableId, expirationTimeStamp)\r\non stableId\r\n| where isempty(expirationTimeStamp)\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId), Category=properties.category, SubCategory=properties.impactedField, Recommendation=tostring(properties.shortDescription.problem), Impact=properties.impact,resourceGroup,subscriptionId, id, stableId = name, recommendationTypeId = tostring(properties.recommendationTypeId), maxCpuP95 = properties.extendedProperties.MaxCpuP95\r\n| join kind = leftouter\r\n(advisorresources | where type =~ 'microsoft.advisor/configurations' | where isempty(resourceGroup) == true\r\n| project subscriptionId, excludeRecomm = properties.exclude, lowCpuThreshold = properties.lowCpuThreshold, AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,Recommendation=tostring(properties.shortDescription.problem))\r\non subscriptionId\r\n| extend isActive1 = iff(isnull(excludeRecomm), true, tobool(excludeRecomm) == false)\r\n| extend isActive2 = iff(recommendationTypeId == 'e10b1381-5f0a-47ff-8c7b-37bd13d7c974', iff((isnotempty(lowCpuThreshold) and isnotempty(maxCpuP95)), toint(maxCpuP95) < toint(lowCpuThreshold), iff((isempty(maxCpuP95) or toint(maxCpuP95) < 5), true, false)), true)\r\n| where isActive1 == true and isActive2 == true\r\n| join kind = leftouter\r\n(advisorresources | where type =~ 'microsoft.advisor/configurations' | where isnotempty(resourceGroup) == true\r\n| project subscriptionId, resourceGroup, excludeProperty = properties.exclude)\r\non subscriptionId, resourceGroup\r\n| extend isActive3 = iff(isnull(excludeProperty), true, tobool(excludeProperty) == false)\r\n| where isActive3 == true\r\n| where Category == 'Cost' \r\n| where SubCategory has \"Network\"\r\n| project-away subscriptionId1, subscriptionId2, AffectedResource1, isActive2, isActive3, Impact1, Recommendation1, resourceGroup1, resourceGroup2",
                          "size": 0,
                          "title": "Azure Advisor Cost recommendations",
                          "noDataMessage": "You are following all of our cost recommendations for Networking",
                          "noDataMessageStyle": 3,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Group",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "stableId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "recommendationTypeId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxCpuP95",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "excludeRecomm",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "lowCpuThreshold",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "AdditionaInfo",
                                "formatter": 5,
                                "formatOptions": {
                                  "customColumnWidthSetting": "19ch"
                                }
                              },
                              {
                                "columnMatch": "isActive1",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "excludeProperty",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Recommendation"
                              ],
                              "expandTopLevel": true
                            },
                            "labelSettings": [
                              {
                                "columnId": "AffectedResource",
                                "label": "Affected Resource"
                              },
                              {
                                "columnId": "Category",
                                "label": "Recommendation Category"
                              },
                              {
                                "columnId": "SubCategory",
                                "label": "Affected Resource Type"
                              },
                              {
                                "columnId": "Recommendation",
                                "label": "Recommendation"
                              },
                              {
                                "columnId": "Impact",
                                "label": "Impact"
                              },
                              {
                                "columnId": "resourceGroup",
                                "label": "Resource Group"
                              },
                              {
                                "columnId": "subscriptionId",
                                "label": "Subscription ID"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "isVisible",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "Get-AdvisorRecommendations-Networking"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": " resources\r\n    | where resourceGroup in ({ResourceGroup})\r\n    | where type has \"Microsoft.Network\"\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend AffectedResource=id,ResourceRG=resourceGroup\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    | project id",
                          "size": 0,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "isVisible",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "query - tags - list all network resources"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\",\"mergeType\":\"innerunique\",\"leftTable\":\"Get-AdvisorRecommendations-Networking\",\"rightTable\":\"query - tags - list all network resources\",\"leftColumn\":\"AffectedResource\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[Get-AdvisorRecommendations-Networking].AffectedResource\",\"mergedName\":\"AffectedResource\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].Category\",\"mergedName\":\"Category\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].SubCategory\",\"mergedName\":\"SubCategory\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].Recommendation\",\"mergedName\":\"Recommendation\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].Impact\",\"mergedName\":\"Impact\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"d446799d-b1af-4bca-9d72-84ba2d87008d\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].excludeProperty\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].isActive1\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].AdditionaInfo\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].lowCpuThreshold\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].excludeRecomm\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].maxCpuP95\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].recommendationTypeId\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].stableId\"},{\"originalName\":\"[query - tags - list all network resources].id\"},{\"originalName\":\"[Get-AdvisorRecommendations-Networking].id\"}]}",
                          "size": 0,
                          "title": "Azure Advisor Cost recommendations",
                          "noDataMessage": "You are following all of our cost recommendations for Networking",
                          "noDataMessageStyle": 3,
                          "queryType": 7
                        },
                        "showPin": false,
                        "name": "query - Merge - Network Advisor recommendations"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SelectedSubTab",
                    "comparison": "isEqualTo",
                    "value": "advisorNetworking"
                  },
                  "name": "AdvisorGroupNetworking"
                }
              ]
            },
            "name": "networking - Subscription"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Recommendations for Azure Firewall\r\n\r\n## Azure Firewall Premium SKU\r\nThis table identifies Azure Firewalls with Premium SKU and evaluates whether the associated policy incorporates premium-only features or not. If a Premium SKU Firewall lacks a policy with premium features, such as TLS or intrusion detection it will be shown here. To learn more about Azure Firewall skus, check this  [SKU comparison table](https://learn.microsoft.com/en-us/azure/firewall/choose-firewall-sku). ",
                    "style": "upsell"
                  },
                  "name": "Recommendations for premium Firewall"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'Microsoft.Network/azureFirewalls'\r\n| project FWID=id, firewallName = name, SkuTier = tostring(properties.sku.tier), resourceGroup, location\r\n| join kind=inner (\r\n    resources\r\n    | where type =~ 'microsoft.network/firewallpolicies'\r\n    | mv-expand properties.firewalls\r\n    | extend intrusionDetection = tostring(properties.intrusionDetection contains \"Alert\"), transportSecurity = tostring(properties.transportSecurity contains \"keyVaultSecretId\")\r\n    | extend FWID=tostring(properties_firewalls.id)\r\n    | project PolicyName = name, PolicySKU=tostring(properties.sku.tier), intrusionDetection, transportSecurity, FWID\r\n) on FWID",
                    "size": 0,
                    "title": "Azure Firewall Premium",
                    "noDataMessage": "No Azure Firewall Premium found",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "firewallName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FWID1",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "Error-Connection not configured"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "FWID",
                          "label": "Firewall Name"
                        },
                        {
                          "columnId": "firewallName",
                          "label": "FWName"
                        },
                        {
                          "columnId": "SkuTier",
                          "label": "SKU"
                        },
                        {
                          "columnId": "resourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "location",
                          "label": "Location"
                        },
                        {
                          "columnId": "PolicyName",
                          "label": "Policy Name"
                        },
                        {
                          "columnId": "PolicySKU",
                          "label": "Policy SKU"
                        },
                        {
                          "columnId": "intrusionDetection",
                          "label": "Is Intrusion Detection enabled?"
                        },
                        {
                          "columnId": "transportSecurity",
                          "label": "Is TLS enabled?"
                        }
                      ]
                    }
                  },
                  "name": "query - Optimize Premium AZ Firewall"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Avoid multiple Firewall instances in the same region\r\nOptimize the use of Azure Firewall by having a central instance of Azure Firewall in the hub virtual network or Virtual WAN secure hub and share the same firewall across many spoke virtual networks that are connected to the same hub from the same region. Ensure there's no unexpected cross-region traffic as part of the hub-spoke topology nor multiple Azure firewall instances deployed to the same region. To learn more about Azure Firewall design principles, check [Azure Well-Architected Framework review - Azure Firewall](https://learn.microsoft.com/en-us/azure/well-architected/service-guides/azure-firewall#cost-optimization).",
                    "style": "upsell"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'Microsoft.Network/azureFirewalls'\r\n| mv-expand properties.ipConfigurations\r\n| project FWID=id, firewallName = name, SkuTier = tostring(properties.sku.tier), FWRG=resourceGroup, FWLocation=location, SubnetID=tostring(properties_ipConfigurations.properties.subnet.id)\r\n| join  (\r\nresources\r\n| where type =~ 'Microsoft.Network/virtualNetworks' \r\n| mv-expand properties.subnets\r\n| where properties_subnets.id has 'AzureFirewallSubnet'\r\n| extend  SubnetID=tostring(properties_subnets.id), SubnetName=name, SubnetLocation=location, SubnetRG=resourceGroup) on SubnetID\r\n| project FWID, FWRG,FWLocation, SubnetID,SubnetName, SubnetRG, SubnetLocation\r\n",
                    "size": 0,
                    "title": "Azure Firewall per location",
                    "noDataMessage": "No Firewall deployed",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubnetName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "firewallName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FWID1",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "Error-Connection not configured"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "FWID",
                          "label": "Firewall Name"
                        },
                        {
                          "columnId": "FWRG",
                          "label": "Firewall Resource Group"
                        },
                        {
                          "columnId": "FWLocation",
                          "label": "Firewall Location"
                        },
                        {
                          "columnId": "SubnetID",
                          "label": "Vnet / Subnet Name"
                        },
                        {
                          "columnId": "SubnetName",
                          "label": "Subnet extended Name"
                        },
                        {
                          "columnId": "SubnetRG",
                          "label": "Subnet Resource Group"
                        },
                        {
                          "columnId": "SubnetLocation",
                          "label": "Subnet Location"
                        }
                      ]
                    }
                  },
                  "name": "query - Firewall per Location"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "firewall"
            },
            "name": "Firewall Group"
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}