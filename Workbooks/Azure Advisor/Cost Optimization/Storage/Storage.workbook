{
  "version": "Notebook/1.0",
  "items": [
{
  "type": 12,
  "content": {
    "version": "NotebookGroup/1.0",
    "groupType": "editable",
    "items": [
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "crossComponentResources": [
            "{Subscription}"
          ],
          "parameters": [
            {
              "id": "37ceb1c3-3930-4689-a90b-22f26e42bd81",
              "version": "KqlParameterItem/1.0",
              "name": "Subscription",
              "type": 6,
              "isRequired": true,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ],
                "includeAll": false,
                "showDefault": false
              },
              "timeContext": {
                "durationMs": 86400000
              },
              "defaultValue": "value::all",
              "label": " Subscription"
            },
            {
              "id": "08f5fe68-c2e3-4882-9300-b3e33f572dfe",
              "version": "KqlParameterItem/1.0",
              "name": "ResourceGroup",
              "label": "Resource Group",
              "type": 2,
              "isRequired": true,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "query": "resources\r\n| distinct resourceGroup",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ],
                "showDefault": false
              },
              "defaultValue": "value::all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            {
              "id": "4fea3013-df84-4930-a453-8a6bd0375130",
              "version": "KqlParameterItem/1.0",
              "name": "SingleSubHidden",
              "type": 1,
              "isRequired": true,
              "query": "resourcecontainers\r\n| where type==\"microsoft.resources/subscriptions\"\r\n| take 1\r\n| project subscriptionId",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "isHiddenWhenLocked": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "label": "Hidden Subscription"
            },
            {
              "id": "8412f39d-ee67-4979-b887-47463b8848c2",
              "version": "KqlParameterItem/1.0",
              "name": "TagName",
              "type": 2,
              "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "typeSettings": {
                "additionalResourceOptions": []
              },
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "value": null,
              "label": "Tag Name"
            },
            {
              "id": "50c68f38-13a0-4aff-a259-4426c83b7cc0",
              "version": "KqlParameterItem/1.0",
              "name": "TagValue",
              "type": 2,
              "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "typeSettings": {
                "additionalResourceOptions": []
              },
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "value": null,
              "label": "Tag Value"
            }
          ],
          "style": "pills",
          "queryType": 1,
          "resourceType": "microsoft.resourcegraph/resources"
        },
        "customWidth": "75",
        "conditionalVisibilities": [
          {
            "parameterName": "SelectedTab",
            "comparison": "isNotEqualTo",
            "value": "CostInformation"
          },
          {
            "parameterName": "SelectedTab",
            "comparison": "isNotEqualTo",
            "value": "Welcome"
          }
        ],
        "name": "parameters - Filters"
      },
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "crossComponentResources": [
            "{Subscription}"
          ],
          "parameters": [
            {
              "id": "eae8a0d2-14e6-4cd1-a2d2-fd6b207cf517",
              "version": "KqlParameterItem/1.0",
              "name": "Location",
              "type": 2,
              "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project name, location\r\n| summarize count () by location\r\n| project location",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::1"
                ]
              },
              "timeContext": {
                "durationMs": 86400000
              },
              "defaultValue": "value::1",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "label": "Resource Location"
            }
          ],
          "style": "pills",
          "queryType": 1,
          "resourceType": "microsoft.resourcegraph/resources"
        },
        "customWidth": "25",
        "conditionalVisibility": {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "AHB"
        },
        "name": "parameters - location"
      },
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "0211f413-9f36-4750-9ef2-d382ba30ba6c",
              "cellValue": "SelectedSubTab",
              "linkTarget": "parameter",
              "linkLabel": "Storage Accounts",
              "subTarget": "Storage",
              "preText": "VM",
              "style": "link"
            },
            {
              "id": "dbe9a7fb-6ab1-4de1-a98b-4ec8a9af906c",
              "cellValue": "SelectedSubTab",
              "linkTarget": "parameter",
              "linkLabel": "Managed Disks",
              "subTarget": "Disks",
              "style": "link"
            },
            {
              "id": "86ff248b-1ce4-4194-8cd4-b1e0a9956b5d",
              "cellValue": "SelectedSubTab",
              "linkTarget": "parameter",
              "linkLabel": "Backup",
              "subTarget": "Backup",
              "style": "link"
            },
            {
              "id": "6d563f46-7150-458c-9ee4-0558abe8e29b",
              "cellValue": "SelectedSubTab",
              "linkTarget": "parameter",
              "linkLabel": "Advisor recommendations",
              "subTarget": "advisorStorage",
              "style": "link"
            }
          ]
        },
        "name": "links - Storage"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "## Idle backups\r\n\r\nReview protected items backup activity to determine if there are items that have not been backed up in the last 90 days. This could either mean that the underlying resource that's being backed up doesn't exist anymore or there's some issue with the resource that's preventing backups from being taken reliably.\r\n",
                "style": "upsell"
              },
              "name": "text - idleBackup"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "recoveryservicesresources\r\n| where type =~ 'microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems'\r\n| extend vaultId = tostring(properties.vaultId),resourceId = tostring(properties.sourceResourceId),idleBackup= datetime_diff('day', now(), todatetime(properties.lastBackupTime)) > 90, resourceType=tostring(properties.workloadType), protectionState=tostring(properties.protectionState),lastBackupTime=tostring(properties.lastBackupTime), resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup),lastBackupDate=todatetime(properties.lastBackupTime)\r\n| where idleBackup != 0\r\n| project resourceId,vaultId,idleBackup,lastBackupDate,resourceType,protectionState,lastBackupTime,location,resourceGroup,subscriptionId\r\n| join kind = inner(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | extend vaultId = id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | project vaultId\r\n    )\r\n    on vaultId\r\n    | project-away vaultId1",
                "size": 0,
                "title": "Idle backups",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "idleBackup",
                      "formatter": 18,
                      "formatOptions": {
                        "thresholdsOptions": "icons",
                        "thresholdsGrid": [
                          {
                            "operator": ">",
                            "thresholdValue": "0",
                            "representation": "2",
                            "text": "No backup in the last 90 days"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "success",
                            "text": ""
                          }
                        ]
                      }
                    },
                    {
                      "columnMatch": "resourceGroup",
                      "formatter": 14,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    }
                  ],
                  "labelSettings": [
                    {
                      "columnId": "resourceId",
                      "label": "Resource ID"
                    },
                    {
                      "columnId": "idleBackup",
                      "label": "Backup activity"
                    },
                    {
                      "columnId": "lastBackupDate",
                      "label": "Last backup date"
                    },
                    {
                      "columnId": "resourceType",
                      "label": "Resource type"
                    },
                    {
                      "columnId": "protectionState",
                      "label": "Protection state"
                    },
                    {
                      "columnId": "lastBackupTime",
                      "label": "Last backup time"
                    },
                    {
                      "columnId": "location",
                      "label": "Location"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource group"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription ID"
                    }
                  ]
                },
                "sortBy": []
              },
              "name": "query - idleBackups"
            },
            {
              "type": 1,
              "content": {
                "json": "## Backup storage redundancy settings\r\n\r\nBy default, when you configure backup for resources, geo-redundant storage (GRS) replication is applied to these backups. While this is the recommended storage replication option as it creates more redundancy for your critical data, you can choose to protect items using locally-redundant storage (LRS) if that meets your backup availability needs for dev-test workloads. Using LRS instead of GRS halves the cost of your backup storage. \r\n\r\n🖱️Click on each vault to see the configured storage replication\r\n",
                "style": "upsell"
              },
              "name": "text - backupReplication"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "Resources\r\n| where type == 'microsoft.recoveryservices/vaults'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend skuTier = tostring(sku['tier']), skuName = tostring(sku['name']), resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup),redundancySettings = tostring(properties.redundancySettings['standardTierStorageRedundancy'])\r\n| order by id asc\r\n| project id,redundancySettings, resourceGroup, location,subscriptionId, skuTier, skuName\r\n| join kind = innerunique (\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | extend vaultId = id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | project id\r\n)\r\non id\r\n| project-away id1\r\n",
                "size": 0,
                "title": "Recovery vaults storage replication ",
                "exportedParameters": [
                  {
                    "fieldName": "RGVault",
                    "parameterName": "resourceGroupVault",
                    "parameterType": 1
                  },
                  {
                    "fieldName": "subscriptionId",
                    "parameterName": "subscriptionId",
                    "parameterType": 1
                  },
                  {
                    "fieldName": "name",
                    "parameterName": "vaultName",
                    "parameterType": 1
                  }
                ],
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "redundancySettings",
                      "formatter": 18,
                      "formatOptions": {
                        "thresholdsOptions": "icons",
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "GeoRedundant",
                            "representation": "Globe",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "ResourceFlat",
                            "text": "{0}{1}"
                          }
                        ]
                      }
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "RGVault",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "name",
                      "formatter": 5
                    }
                  ]
                }
              },
              "name": "query - backupStorageReplication"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "SelectedSubTab",
          "comparison": "isEqualTo",
          "value": "Backup"
        },
        "name": "group - Backup"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "# Storage accounts\r\nGeneral-purpose v2 storage accounts support the latest Azure Storage features and incorporate all of the functionality of general-purpose v1 and Blob storage accounts. General-purpose v2 accounts are recommended for most storage scenarios.\r\n\r\n1. General-purpose v2 accounts deliver the lowest per-gigabyte capacity prices for Azure Storage, as well as industry-competitive transaction prices.\r\n2. General-purpose v2 accounts support default account access tiers of hot or cool and blob level tiering between hot, cool, or archive.\r\n3. General-purpose v2 accounts allows you to also use lifecycle management to optimize your storage cost",
                "style": "upsell"
              },
              "name": "Storage accounts"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources \r\n| where type =~ 'Microsoft.Storage/StorageAccounts' and kind !='StorageV2' and kind !='FileStorage'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend StorageAccountName=name, SAKind=kind,AccessTier=tostring(properties.accessTier),SKUName=sku.name, SKUTier=sku.tier, Location=location\r\n| order by id asc\r\n| project id,StorageAccountName, SKUName, SKUTier, SAKind,AccessTier, resourceGroup, Location, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                "size": 0,
                "title": "Storage accounts which are not v2",
                "noDataMessage": "All storage accounts are General-purpose v2",
                "noDataMessageStyle": 3,
                "showExportToExcel": true,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id1",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "storageaccount",
                      "formatter": 13,
                      "formatOptions": {
                        "linkTarget": "Resource",
                        "subTarget": "insights",
                        "linkIsContextBlade": true,
                        "showIcon": true
                      }
                    }
                  ],
                  "sortBy": [
                    {
                      "itemKey": "$gen_link_id_0",
                      "sortOrder": 1
                    }
                  ],
                  "labelSettings": [
                    {
                      "columnId": "id",
                      "label": "Resource ID"
                    },
                    {
                      "columnId": "StorageAccountName",
                      "label": "Name"
                    },
                    {
                      "columnId": "SKUName",
                      "label": "SKU"
                    },
                    {
                      "columnId": "SKUTier",
                      "label": "SKU Tier"
                    },
                    {
                      "columnId": "SAKind",
                      "label": "Kind"
                    },
                    {
                      "columnId": "AccessTier",
                      "label": "Access Tier"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "Location",
                      "label": "Location"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription Name"
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_link_id_0",
                    "sortOrder": 1
                  }
                ]
              },
              "name": "Get-Storagev1"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "SelectedSubTab",
          "comparison": "isEqualTo",
          "value": "Storage"
        },
        "name": "group - StorageAccount"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "## Unattached Managed Disks\r\n\r\nReview Managed Disks that are not attached to any Virtual machine\r\n",
                "style": "upsell"
              },
              "name": "text - 3"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources \r\n| where type =~ 'microsoft.compute/disks' and managedBy == \"\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" and diskState != 'ActiveSAS'\r\nor diskState == 'Unattached' and diskState != 'ActiveSAS'  \r\nand tags !contains 'ASR-ReplicaDisk' and tags !contains 'asrseeddisk'\r\n| extend DiskId=id, DiskIDfull=id, DiskName=name, SKUName=sku.name, SKUTier=sku.tier, DiskSizeGB=tostring(properties.diskSizeGB), Location=location, TimeCreated=tostring(properties.timeCreated), QuickFix=id\r\n| order by DiskId asc \r\n| project DiskId, DiskIDfull, DiskName, DiskSizeGB, SKUName, SKUTier, resourceGroup, QuickFix, Location, TimeCreated, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | extend DiskId = id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct DiskId\r\n    )\r\n    on DiskId",
                "size": 0,
                "title": "Unattached disks",
                "noDataMessage": "There aren't any unattached disks!",
                "noDataMessageStyle": 3,
                "exportedParameters": [
                  {
                    "fieldName": "DiskIDfull",
                    "parameterName": "DiskID"
                  },
                  {
                    "fieldName": "DiskName",
                    "parameterName": "DiskName",
                    "parameterType": 1
                  },
                  {
                    "fieldName": "resourceGroup",
                    "parameterName": "ResourceGroup",
                    "parameterType": 1
                  }
                ],
                "showExportToExcel": true,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "visualization": "table",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "DiskIDfull",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "QuickFix",
                      "formatter": 7,
                      "formatOptions": {
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remove Idle Disk",
                        "linkIsContextBlade": true,
                        "templateRunContext": {
                          "componentIdSource": "column",
                          "componentId": "DiskId",
                          "templateUriSource": "static",
                          "templateUri": "https://raw.githubusercontent.com/sebassem/MS-learn-Workbooks/main/Deploy-Tag.json",
                          "templateParameters": [
                            {
                              "name": "DiskID",
                              "source": "static",
                              "value": "DiskId",
                              "kind": "stringValue"
                            }
                          ],
                          "titleSource": "static",
                          "title": "Remove Idle Disk",
                          "descriptionSource": "static",
                          "description": "# Description\r\nThis ARM Template will remove the selected disk.\r\n\r\n# Actions:\r\n- Click \"Remove Idle Disk\" to remove the selected item.\r\n- Click View Template to examine the template and parameters used during deployment\r\n\r\n\r\n\r\n",
                          "runLabelSource": "static",
                          "runLabel": "Remove Idle Disk"
                        },
                        "armActionContext": {
                          "path": "/{DiskID}?api-version=2021-04-01",
                          "headers": [],
                          "params": [
                            {
                              "key": "DiskID",
                              "value": ""
                            }
                          ],
                          "httpMethod": "DELETE",
                          "title": "Remove Idle Disks",
                          "description": "# Disk Deletion Warning: {DiskName}\r\n\r\n**Attention!**\r\n\r\nThis action will permanently remove the disk with the name **{DiskName}**. Please ensure that this disk is not currently in use and that you are deleting the correct disk.\r\n\r\n**Resource Details:**\r\n\r\n- Disk Name: {DiskName}\r\n- Resource Group: {ResourceGroup}\r\n\r\n### Required RBAC Permissions\r\n\r\nTo perform this action, you need to have **Contributor** permissions on the Resource Group where the disk is located.\r\n\r\nPlease review the information carefully before proceeding with the deletion.\r\n",
                          "actionName": "Removing Idle Dsk",
                          "runLabel": "I understand, remove disk {DiskName}"
                        }
                      }
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    }
                  ],
                  "rowLimit": 1000,
                  "labelSettings": [
                    {
                      "columnId": "DiskId",
                      "label": "Resource ID"
                    },
                    {
                      "columnId": "DiskName",
                      "label": "Name"
                    },
                    {
                      "columnId": "DiskSizeGB",
                      "label": "Disk Size (GB)"
                    },
                    {
                      "columnId": "SKUName",
                      "label": "SKU"
                    },
                    {
                      "columnId": "SKUTier",
                      "label": "SKU Tier"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "QuickFix",
                      "label": "Delete disk?"
                    },
                    {
                      "columnId": "Location",
                      "label": "Location"
                    },
                    {
                      "columnId": "TimeCreated",
                      "label": "Time Created"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription Name"
                    }
                  ]
                }
              },
              "name": "Get-Idle-Disk"
            },
            {
              "type": 1,
              "content": {
                "json": "## Old Managed Disks snapshots\r\n\r\nReview Managed Disks snapshots that are older than 30 days\r\n",
                "style": "upsell"
              },
              "name": "text - 4"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type == 'microsoft.compute/snapshots'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend TimeCreated = properties.timeCreated\r\n| extend resourceGroup=strcat(\"/subscriptions/\",subscriptionId,\"/resourceGroups/\",resourceGroup)\r\n| where TimeCreated < ago(30d)\r\n| order by id asc \r\n| project id, resourceGroup, location, TimeCreated ,subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                "size": 0,
                "title": "Disk Snapshots with + 30 Days",
                "noDataMessage": "No Snapshots with more than 30 days.",
                "noDataMessageStyle": 3,
                "showExportToExcel": true,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "resourceGroup",
                      "formatter": 14,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "TimeCreated",
                      "formatter": 1
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id1",
                      "formatter": 5
                    }
                  ],
                  "labelSettings": [
                    {
                      "columnId": "id",
                      "label": "Name"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "location",
                      "label": "Location"
                    },
                    {
                      "columnId": "TimeCreated",
                      "label": "Time Created"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription Name"
                    }
                  ]
                }
              },
              "name": "Get-Old-Snapshots"
            },
            {
              "type": 1,
              "content": {
                "json": "## Managed Disks snapshots using Premium storage\r\n\r\nTo save 60% of cost, we recommend storing your snapshots in Standard Storage, regardless of the storage type of the parent disk. It is the default option for Managed Disks snapshots. Migrate your snapshot from Premium to Standard Storage.\r\n",
                "style": "upsell"
              },
              "name": "text - 5"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type == 'microsoft.compute/snapshots'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend StorageSku = tostring(sku.tier), resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup),diskSize=tostring(properties.diskSizeGB)\r\n| where StorageSku == \"Premium\"\r\n| project id,name,StorageSku,diskSize,location,resourceGroup,subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id\r\n",
                "size": 0,
                "title": "Snapshots using premium storage",
                "noDataMessage": "No snapshots are using Premium storage",
                "noDataMessageStyle": 3,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "resourceGroup",
                      "formatter": 14,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id1",
                      "formatter": 5
                    }
                  ],
                  "labelSettings": [
                    {
                      "columnId": "id",
                      "label": "Resource Id"
                    },
                    {
                      "columnId": "name",
                      "label": "Name"
                    },
                    {
                      "columnId": "StorageSku",
                      "label": "SKU"
                    },
                    {
                      "columnId": "diskSize",
                      "label": "Disk Size (GB)"
                    },
                    {
                      "columnId": "location",
                      "label": "Location"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription Id"
                    }
                  ]
                }
              },
              "name": "query - Snapshots using premium storage"
            },
            {
              "type": 1,
              "content": {
                "json": "## Orphaned Managed Disks snapshots\r\n\r\nReview snapshots with deleted source disks.\r\n",
                "style": "upsell"
              },
              "name": "text - 6"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type == 'microsoft.compute/snapshots'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend parentDisk = properties.creationData.sourceResourceId, diskSize=tostring(properties.diskSizeGB),resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| project id,parentDisk,diskSize,location,resourceGroup,subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id\r\n",
                "size": 0,
                "title": "All Managed Disks snapshots",
                "noDataMessage": "No snapshots found",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "labelSettings": [
                    {
                      "columnId": "id",
                      "label": "Resource Id"
                    },
                    {
                      "columnId": "parentDisk",
                      "label": "Parent Disk Resource Id"
                    },
                    {
                      "columnId": "diskSize",
                      "label": "Disk size (GB)"
                    },
                    {
                      "columnId": "location",
                      "label": "Location"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription Id"
                    }
                  ]
                }
              },
              "conditionalVisibility": {
                "parameterName": "IsVisible",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "query - Retrieve all snapshots"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "resources\r\n| where type == 'microsoft.compute/disks'\r\n| project id\r\n",
                "size": 0,
                "title": "All managed disks",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "labelSettings": [
                    {
                      "columnId": "id",
                      "label": "Resource Id"
                    }
                  ]
                }
              },
              "conditionalVisibility": {
                "parameterName": "isVisible",
                "comparison": "isEqualTo",
                "value": "True"
              },
              "name": "query - Retrieve all managed disks"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\",\"mergeType\":\"leftanti\",\"leftTable\":\"query - Retrieve all snapshots\",\"rightTable\":\"query - Retrieve all managed disks\",\"leftColumn\":\"parentDisk\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[query - Retrieve all snapshots].id\",\"mergedName\":\"Resource Id\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].parentDisk\",\"mergedName\":\"Parent Disk Resource Id\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].diskSize\",\"mergedName\":\"Disk size (GB)\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].location\",\"mergedName\":\"Location\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].subscriptionId\",\"mergedName\":\"Subscription Id\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"},{\"originalName\":\"[query - Retrieve all snapshots].id1\",\"mergedName\":\"id1\",\"fromId\":\"d0a11ffb-579b-4259-827d-7ea62e3021fe\"}]}",
                "size": 0,
                "title": "Snapshots with deleted source disk",
                "noDataMessage": "No orphaned snapshots found",
                "noDataMessageStyle": 3,
                "queryType": 7,
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Parent Disk Resource Id",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "Subscription Id",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id1",
                      "formatter": 5
                    }
                  ],
                  "labelSettings": [
                    {
                      "columnId": "Resource Id",
                      "label": "Resource Id"
                    },
                    {
                      "columnId": "Parent Disk Resource Id",
                      "label": "Parent Disk resource Id"
                    },
                    {
                      "columnId": "Disk size (GB)",
                      "label": "Disk size (GB)"
                    },
                    {
                      "columnId": "Location",
                      "label": "Location"
                    },
                    {
                      "columnId": "Resource Group",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "Subscription Id",
                      "label": "Subscription Id"
                    }
                  ]
                }
              },
              "showPin": false,
              "name": "query - orphaned snapshots"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "SelectedSubTab",
          "comparison": "isEqualTo",
          "value": "Disks"
        },
        "name": "Managed Disks Group"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "advisorresources\r\n| where type =~ 'microsoft.advisor/recommendations'\r\n| where resourceGroup in ({ResourceGroup})\r\n| where properties.category == 'Cost' and properties.lastUpdated >= ago(1d)\r\n| extend AffectedResource=tostring(properties.resourceMetadata.resourceId), Category=tostring(properties.category), SubCategory=tostring(properties.impactedField), Impact=tostring(properties.impact),resourceGroup,subscriptionId,Recommendation=tostring(properties.shortDescription.problem), id, stableId = name, recommendationTypeId = tostring(properties.recommendationTypeId), maxCpuP95 = properties.extendedProperties.MaxCpuP95\r\n| where SubCategory has \"Microsoft.Storage\"\r\n| join kind = leftouter\r\n(advisorresources | where type=~'microsoft.advisor/suppressions'\r\n| extend tokens = split(id, '/')\r\n| extend stableId = iff(array_length(tokens) > 3, tokens[(array_length(tokens)-3)], '')\r\n| extend expirationTimeStamp = todatetime(iff(strcmp(tostring(properties.ttl), '-1') == 0, '9999-12-31', properties.expirationTimeStamp))\r\n| where expirationTimeStamp > now()\r\n| project stableId, expirationTimeStamp)\r\non stableId\r\n| where isempty(expirationTimeStamp)\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId), Category=tostring(properties.category), SubCategory=tostring(properties.impactedField), Recommendation=tostring(properties.shortDescription.problem), Impact=tostring(properties.impact),resourceGroup,subscriptionId, id, stableId = name, recommendationTypeId = tostring(properties.recommendationTypeId), maxCpuP95 = properties.extendedProperties.MaxCpuP95\r\n| join kind = leftouter\r\n(advisorresources | where type =~ 'microsoft.advisor/configurations' | where isempty(resourceGroup) == true\r\n| project subscriptionId, excludeRecomm = properties.exclude, lowCpuThreshold = properties.lowCpuThreshold, AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,Recommendation=tostring(properties.shortDescription.problem))\r\non subscriptionId\r\n| extend isActive1 = iff(isnull(excludeRecomm), true, tobool(excludeRecomm) == false)\r\n| extend isActive2 = iff(recommendationTypeId == 'e10b1381-5f0a-47ff-8c7b-37bd13d7c974', iff((isnotempty(lowCpuThreshold) and isnotempty(maxCpuP95)), toint(maxCpuP95) < toint(lowCpuThreshold), iff((isempty(maxCpuP95) or toint(maxCpuP95) < 5), true, false)), true)\r\n| where isActive1 == true and isActive2 == true\r\n| join kind = leftouter\r\n(advisorresources | where type =~ 'microsoft.advisor/configurations' | where isnotempty(resourceGroup) == true\r\n| project subscriptionId, resourceGroup, excludeProperty = properties.exclude)\r\non subscriptionId, resourceGroup\r\n| extend isActive3 = iff(isnull(excludeProperty), true, tobool(excludeProperty) == false)\r\n| where isActive3 == true\r\n| project-away subscriptionId1, subscriptionId2, AffectedResource1, isActive2, isActive3, Impact1, Recommendation1, resourceGroup1, resourceGroup2\r\n| where resourceGroup in ({ResourceGroup})",
                "size": 0,
                "title": "Azure Advisor Cost recommendations",
                "noDataMessage": "You are following all of our cost recommendations for Storage",
                "noDataMessageStyle": 3,
                "showExportToExcel": true,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ],
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Group",
                      "formatter": 1
                    },
                    {
                      "columnMatch": "subscriptionId",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "stableId",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "recommendationTypeId",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "maxCpuP95",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "excludeRecomm",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "lowCpuThreshold",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "AdditionaInfo",
                      "formatter": 5,
                      "formatOptions": {
                        "customColumnWidthSetting": "19ch"
                      }
                    },
                    {
                      "columnMatch": "isActive1",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "excludeProperty",
                      "formatter": 5
                    }
                  ],
                  "rowLimit": 1000,
                  "filter": true,
                  "hierarchySettings": {
                    "treeType": 1,
                    "groupBy": [
                      "Recommendation"
                    ],
                    "expandTopLevel": true
                  },
                  "labelSettings": [
                    {
                      "columnId": "AffectedResource",
                      "label": "Affected Resource"
                    },
                    {
                      "columnId": "Category",
                      "label": "Recommendation Category"
                    },
                    {
                      "columnId": "SubCategory",
                      "label": "Affected Resource Type"
                    },
                    {
                      "columnId": "Recommendation",
                      "label": "Recommendation"
                    },
                    {
                      "columnId": "Impact",
                      "label": "Impact"
                    },
                    {
                      "columnId": "resourceGroup",
                      "label": "Resource Group"
                    },
                    {
                      "columnId": "subscriptionId",
                      "label": "Subscription ID"
                    }
                  ]
                }
              },
              "conditionalVisibility": {
                "parameterName": "isVisible",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "Get-AdvisorRecommendations-Storage"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": " resources\r\n    | where resourceGroup in ({ResourceGroup})\r\n    | where type has \"Microsoft.Storage\"\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend AffectedResource=id,ResourceRG=resourceGroup\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    | project id",
                "size": 0,
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "crossComponentResources": [
                  "{Subscription}"
                ]
              },
              "conditionalVisibility": {
                "parameterName": "isVisible",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "query - tags - list all storageresources"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"e84cba0d-e501-4f55-a761-9126fb305030\",\"mergeType\":\"innerunique\",\"leftTable\":\"Get-AdvisorRecommendations-Storage\",\"rightTable\":\"query - tags - list all storageresources\",\"leftColumn\":\"AffectedResource\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[Get-AdvisorRecommendations-Storage].AffectedResource\",\"mergedName\":\"Affected Resource\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].Category\",\"mergedName\":\"Recommendation Category\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].SubCategory\",\"mergedName\":\"Affected Resource Type\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].Recommendation\",\"mergedName\":\"Recommendation\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].Impact\",\"mergedName\":\"Impact\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].subscriptionId\",\"mergedName\":\"Subscription ID\",\"fromId\":\"e84cba0d-e501-4f55-a761-9126fb305030\"},{\"originalName\":\"[query - tags - list all storageresources].id\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].excludeProperty\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].isActive1\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].AdditionaInfo\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].lowCpuThreshold\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].excludeRecomm\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].recommendationTypeId\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].maxCpuP95\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].stableId\"},{\"originalName\":\"[Get-AdvisorRecommendations-Storage].id\"}]}",
                "size": 0,
                "title": "Azure Advisor Cost recommendations",
                "noDataMessage": "You are following all of our cost recommendations for Storage",
                "noDataMessageStyle": 3,
                "queryType": 7,
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Affected Resource Type",
                      "formatter": 5
                    },
                    {
                      "columnMatch": "Subscription ID",
                      "formatter": 15,
                      "formatOptions": {
                        "linkTarget": null,
                        "showIcon": true
                      }
                    }
                  ],
                  "rowLimit": 1000,
                  "filter": true,
                  "hierarchySettings": {
                    "treeType": 1,
                    "groupBy": [
                      "Recommendation"
                    ]
                  }
                }
              },
              "showPin": false,
              "name": "query - Merge - Storage Advisor recommendations"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "SelectedSubTab",
          "comparison": "isEqualTo",
          "value": "advisorStorage"
        },
        "name": "AdvisorGroupStorage"
      }
    ]
  },
  "name": "group - 0"
}
],
"fallbackResourceIds": [
  "Azure Monitor"
],
"$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}