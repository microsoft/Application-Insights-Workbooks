{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 9,
        "content": {
            "version": "KqlParameterItem/1.0",
            "parameters": [
            {
                "id": "aa0176d8-14ff-4dc5-9ae7-b8029f565674",
                "version": "KqlParameterItem/1.0",
                "name": "Subscriptions",
                "label": "Subscriptions",
                "type": 6,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "typeSettings": {
                "additionalResourceOptions": [
                    "value::all"
                ],
                "includeAll": false,
                "showDefault": false
                },
                "defaultValue": "value::all"
            },
            {
                "id": "91aa9ba3-ed60-4472-8dd9-1c2cb6255757",
                "version": "KqlParameterItem/1.0",
                "name": "ResourceGroup",
                "label": "Resource Group",
                "type": 2,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "query": "resources\r\n| distinct resourceGroup",
                "crossComponentResources": [
                "{Subscriptions}"
                ],
                "typeSettings": {
                "additionalResourceOptions": [
                    "value::all"
                ],
                "showDefault": false
                },
                "defaultValue": "value::all",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources"
            },
            {
                "id": "5a4f6d34-9f89-4ef8-b4ee-fb0580ec016d",
                "version": "KqlParameterItem/1.0",
                "name": "Environment",
                "label": "Environment",
                "type": 2,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\ntolower(name) contains \"prod\", \"Production\",\r\ntolower(name) contains \"dev\", \"Development\",\r\ntolower(name) contains \"qa\", \"QA\",\r\ntolower(name) contains \"uat\", \"UAT\",\r\ntolower(name) contains \"sit\", \"SIT\",\r\ntolower(name) contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                "crossComponentResources": [
                "{Subscriptions}"
                ],
                "typeSettings": {
                "additionalResourceOptions": [
                    "value::all"
                ],
                "showDefault": false
                },
                "defaultValue": "value::all",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources"
            },
            {
                "id": "9d6afcdc-172c-4bef-8bab-dc372c5d3bb4",
                "version": "KqlParameterItem/1.0",
                "name": "TagName",
                "label": "Tag Name",
                "type": 2,
                "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                "crossComponentResources": [
                "{Subscriptions}"
                ],
                "typeSettings": {
                "additionalResourceOptions": []
                },
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "value": null
            },
            {
                "id": "95781001-338b-4ed3-81dc-ce16f2a98bf0",
                "version": "KqlParameterItem/1.0",
                "name": "TagValue",
                "label": "Tag Value",
                "type": 2,
                "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
                "crossComponentResources": [
                "{Subscriptions}"
                ],
                "typeSettings": {
                "additionalResourceOptions": []
                },
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources",
                "value": null
            },
            {
                "id": "e929bc01-08ec-45fe-bc6a-4e0267460dfa",
                "version": "KqlParameterItem/1.0",
                "name": "SLA",
                "label": "Show SLA",
                "type": 10,
                "description": "This will show the SLA information for the focus area",
                "isRequired": true,
                "typeSettings": {
                "additionalResourceOptions": [],
                "showDefault": false
                },
                "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\", \"selected\":true},\r\n {\"value\": \"No\", \"label\": \"No\"}]"
            },
            {
                "id": "9581cbc6-0f0f-42be-8ae8-6fe94de00ab8",
                "version": "KqlParameterItem/1.0",
                "name": "Help",
                "label": "Show Help",
                "type": 10,
                "isRequired": true,
                "typeSettings": {
                "additionalResourceOptions": []
                },
                "jsonData": "[{\"value\": \"Yes\", \"label\": \"Yes\", \"selected\":true },\r\n {\"value\": \"No\", \"label\": \"No\"}]"
            }
            ],
            "style": "pills",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "name": "parameters - 13"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "Service Health alerts    allow customers to receive an alert when Azure sends service health    notifications to their Azure Subscription. \r\n\r\nAlerts can be configured based    on the class of notifications, the subscriptions affected, services    affected, and the region affected.    \r\n\r\nThe classes of    notification are:\r\n\r\n- **Service Issues** - Problems in the    Azure Services that affect you right now. \r\n- **Planned Maintenance** - Upcoming    Maintenance that can affect the availability of your services in the    future. \r\n- **Health Advisories** - Changes in    Azure Services that require your attention. Examples include deprecation    of Azure Feature or upgrade requirements (e.g., upgrade to a supported    PHP framework)Â·\r\n- **Security Advisories    -** Security related notifications or violations that may affect    the availability of your Azure Services.\r\n\r\nLearn More: [Documentation](https://docs.microsoft.com/en-us/azure/service-health/alerts-activity-log-service-notifications-portal)           ",
                  "style": "info"
                },
              "conditionalVisibility": {
                "parameterName": "Help",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              "name": "alert-help"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\n| distinct subscriptionId\n| join kind=leftouter(\n    resources\n    | where type =~ \"microsoft.insights/activitylogalerts\"\n    | mv-expand condition1 = properties.condition.allOf\n    | mv-expand condition2 = condition1.anyOf\n    | extend alertEnabled = tostring(properties.enabled)\n    | summarize set_condition1=make_set(condition1.equals), set_condition2=make_set(condition2.equals) by id, name,type,tenantId,resourceGroup,subscriptionId, alertEnabled\n    | where set_has_element(set_condition1, \"ServiceHealth\")\n    | extend category = \"ServiceHealth\"\n    | extend all = iff(set_has_element(set_condition1, \"ServiceHealth\") and array_length(set_condition2) == 0, true, false)\n    // Service issue\n    | extend incident = iff(all, true, iff(set_has_element(set_condition1, \"Incident\"), true, set_has_element(set_condition2, \"Incident\")))\n    // Planned maintenance\n    | extend maintenance = iff(all, true, iff(set_has_element(set_condition1, \"Maintenance\"), true, set_has_element(set_condition2, \"Maintenance\")))\n    // Health advisories\n    | extend informational = iff(all, true, iff(set_has_element(set_condition1, \"Informational\") or set_has_element(set_condition1, \"ActionRequired\"), true, set_has_element(set_condition2, \"Informational\") or set_has_element(set_condition2, \"ActionRequired\")))\n    // Security advisory\n    | extend security = iff(all, true, iff(set_has_element(set_condition1, \"Security\"), true, set_has_element(set_condition2, \"Security\")))\n    | project id, name, subscriptionId, category, tostring(alertEnabled), tostring(incident), tostring(maintenance), tostring(informational), tostring(security)\n    | summarize count_alertEnabled=countif(alertEnabled == \"true\"), count_incident=countif(incident == \"True\"), count_maintenance=countif(maintenance == \"True\"), count_informational=countif(informational == \"True\"), count_security=countif(security == \"True\") by subscriptionId\n    )\n    on subscriptionId\n| project subscriptionId, alertEnabled=iff(isnotnull(count_alertEnabled), count_alertEnabled, 0), incident=iff(isnotnull(count_incident), count_incident, 0), maintenance=iff(isnotnull(count_maintenance), count_maintenance, 0), informational=iff(isnotnull(count_informational), count_informational, 0), security=iff(isnotnull(count_security), count_security, 0)\n| summarize Sub_Count=count(subscriptionId), Sub_alertEnabled_count=countif(alertEnabled \u003e 0), Sub_Incident_Count=countif(incident \u003e 0), Sub_Maintenance_Count=countif(maintenance \u003e 0), Sub_Informational_Count=countif(informational \u003e 0), Sub_Security_Count=countif(security \u003e 0)\n",
                  "size": 4,
                  "title": "Service Health Alert Configuration - Overall Summary",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Sub_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Sub_alertEnabled_count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Sub_Incident_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Sub_Maintenance_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Sub_Informational_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Sub_Security_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                    "rowLimit": 10000,
                    "labelSettings": [
                      {
                        "columnId": "Sub_Count",
                        "label": "Total Subscription"
                      },
                      {
                        "columnId": "Sub_alertEnabled_count",
                    "label": "Alert Enabled"
                      },
                      {
                        "columnId": "Sub_Incident_Count",
                    "label": "Service Issues"
                      },
                      {
                        "columnId": "Sub_Maintenance_Count",
                    "label": "Planned Maintenance"
                      },
                      {
                        "columnId": "Sub_Informational_Count",
                    "label": "Health Advisories"
                      },
                      {
                        "columnId": "Sub_Security_Count",
                    "label": "Security Advisories"
                      }
                    ]
                  }
                },
                "name": "Aggregate Summary"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\n| distinct subscriptionId\n| join kind=leftouter(\n    resources\n    | where type =~ \"microsoft.insights/activitylogalerts\"\n    | mv-expand condition1 = properties.condition.allOf\n    | mv-expand condition2 = condition1.anyOf\n    | extend alertEnabled = tostring(properties.enabled)\n    | summarize set_condition1=make_set(condition1.equals), set_condition2=make_set(condition2.equals) by id, name,type,tenantId,resourceGroup,subscriptionId, alertEnabled\n    | where set_has_element(set_condition1, \"ServiceHealth\")\n    | extend category = \"ServiceHealth\"\n    | extend all = iff(set_has_element(set_condition1, \"ServiceHealth\") and array_length(set_condition2) == 0, true, false)\n    // Service issue\n    | extend incident = iff(all, true, iff(set_has_element(set_condition1, \"Incident\"), true, set_has_element(set_condition2, \"Incident\")))\n    // Planned maintenance\n    | extend maintenance = iff(all, true, iff(set_has_element(set_condition1, \"Maintenance\"), true, set_has_element(set_condition2, \"Maintenance\")))\n    // Health advisories\n    | extend informational = iff(all, true, iff(set_has_element(set_condition1, \"Informational\") or set_has_element(set_condition1, \"ActionRequired\"), true, set_has_element(set_condition2, \"Informational\") or set_has_element(set_condition2, \"ActionRequired\")))\n    // Security advisory\n    | extend security = iff(all, true, iff(set_has_element(set_condition1, \"Security\"), true, set_has_element(set_condition2, \"Security\")))\n    | project id, name, subscriptionId, category, tostring(alertEnabled), tostring(incident), tostring(maintenance), tostring(informational), tostring(security)\n    | summarize count_alertEnabled=countif(alertEnabled == \"true\"), count_incident=countif(incident == \"True\"), count_maintenance=countif(maintenance == \"True\"), count_informational=countif(informational == \"True\"), count_security=countif(security == \"True\") by subscriptionId\n    )\n    on subscriptionId\n| project subscriptionId, alertEnabled=iff(isnotnull(count_alertEnabled), count_alertEnabled, 0), incident=iff(isnotnull(count_incident), count_incident, 0), maintenance=iff(isnotnull(count_maintenance), count_maintenance, 0), informational=iff(isnotnull(count_informational), count_informational, 0), security=iff(isnotnull(count_security), count_security, 0)\n| summarize Sub_Count=count(subscriptionId), Sub_alertEnabled_count=countif(alertEnabled \u003e 0) * 100.0 / count(subscriptionId), Sub_Incident_Count=countif(incident \u003e 0) * 100.0 / count(subscriptionId), Sub_Maintenance_Count=countif(maintenance \u003e 0) * 100.0 / count(subscriptionId), Sub_Informational_Count=countif(informational \u003e 0) * 100.0 / count(subscriptionId), Sub_Security_Count=countif(security \u003e 0) * 100.0 / count(subscriptionId)\n",
                  "size": 4,
                  "title": "Service Health Alert Configuration - Overall percentage summary ",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                    "columnMatch": "Sub_Count",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                        "columnMatch": "Sub_alertEnabled_count",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "<",
                              "thresholdValue": "100",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      {
                        "columnMatch": "Sub_Incident_Count",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "<",
                              "thresholdValue": "100",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      {
                        "columnMatch": "Sub_Maintenance_Count",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "<",
                              "thresholdValue": "100",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      {
                        "columnMatch": "Sub_Informational_Count",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "<",
                              "thresholdValue": "100",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      {
                        "columnMatch": "Sub_Security_Count",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "<",
                              "thresholdValue": "100",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    ],
                    "rowLimit": 10000,
                    "labelSettings": [
                      {
                        "columnId": "Sub_Count",
                        "label": "Total Subscription"
                      },
                      {
                        "columnId": "Sub_alertEnabled_count",
                    "label": "Alert Enabled"
                      },
                      {
                        "columnId": "Sub_Incident_Count",
                    "label": "Service Issues"
                      },
                      {
                        "columnId": "Sub_Maintenance_Count",
                    "label": "Planned Maintenance"
                      },
                      {
                        "columnId": "Sub_Informational_Count",
                    "label": "Health Advisories"
                      },
                      {
                        "columnId": "Sub_Security_Count",
                    "label": "Security Advisories"
                      }
                    ]
                  }
                },
                "name": "Aggregate Summary Percentage"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\n| distinct subscriptionId\n| join kind=leftouter(\n    resources\n    | where type =~ \"microsoft.insights/activitylogalerts\"\n    | mv-expand condition1 = properties.condition.allOf\n    | mv-expand condition2 = condition1.anyOf\n    | extend alertEnabled = tostring(properties.enabled)\n    | summarize set_condition1=make_set(condition1.equals), set_condition2=make_set(condition2.equals) by id, name,type,tenantId,resourceGroup,subscriptionId, alertEnabled\n    | where set_has_element(set_condition1, \"ServiceHealth\")\n    | extend category = \"ServiceHealth\"\n    | extend all = iff(set_has_element(set_condition1, \"ServiceHealth\") and array_length(set_condition2) == 0, true, false)\n    // Service issue\n    | extend incident = iff(all, true, iff(set_has_element(set_condition1, \"Incident\"), true, set_has_element(set_condition2, \"Incident\")))\n    // Planned maintenance\n    | extend maintenance = iff(all, true, iff(set_has_element(set_condition1, \"Maintenance\"), true, set_has_element(set_condition2, \"Maintenance\")))\n    // Health advisories\n    | extend informational = iff(all, true, iff(set_has_element(set_condition1, \"Informational\") or set_has_element(set_condition1, \"ActionRequired\"), true, set_has_element(set_condition2, \"Informational\") or set_has_element(set_condition2, \"ActionRequired\")))\n    // Security advisory\n    | extend security = iff(all, true, iff(set_has_element(set_condition1, \"Security\"), true, set_has_element(set_condition2, \"Security\")))\n    | project id, name, subscriptionId, category, tostring(alertEnabled), tostring(incident), tostring(maintenance), tostring(informational), tostring(security)\n    | summarize count_alertEnabled=countif(alertEnabled == \"true\"), count_incident=countif(incident == \"True\"), count_maintenance=countif(maintenance == \"True\"), count_informational=countif(informational == \"True\"), count_security=countif(security == \"True\") by subscriptionId) \n    on subscriptionId\n| project subscriptionId, alertEnabled=iff(isnotnull(count_alertEnabled), count_alertEnabled, 0), incident=iff(isnotnull(count_incident), count_incident, 0), maintenance=iff(isnotnull(count_maintenance), count_maintenance, 0), informational=iff(isnotnull(count_informational), count_informational, 0), security=iff(isnotnull(count_security), count_security, 0)\n| order by incident, maintenance, informational, security desc\n",
                  "size": 0,
                  "title": "Service Health Alert Configuration Summary by Subscription",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                      "columnMatch": "subscriptionId",
                      "formatter": 13,
                        "formatOptions": {
                        "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "alertEnabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": ">=",
                              "thresholdValue": "1",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "incident",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": ">=",
                              "thresholdValue": "1",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "maintenance",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": ">=",
                              "thresholdValue": "1",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "informational",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": ">=",
                              "thresholdValue": "1",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "security",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": ">=",
                              "thresholdValue": "1",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                    },
                    {
                      "columnMatch": "Subscription",
                      "formatter": 13,
                      "formatOptions": {
                        "linkTarget": "Resource",
                        "showIcon": true
                      }
                      }
                    ],
                    "rowLimit": 10000,
                    "labelSettings": [
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "alertEnabled",
                        "label": "Alert Enabled"
                      },
                      {
                        "columnId": "incident",
                    "label": "Service Issues"
                      },
                      {
                        "columnId": "maintenance",
                    "label": "Planned Maintenance"
                      },
                      {
                        "columnId": "informational",
                    "label": "Health Advisories"
                      },
                      {
                        "columnId": "security",
                    "label": "Security Advisories"
                      }
                    ]
                  }
                },
                "name": "Aggregate Summary by Subscription"
              },
              {
                "type": 1,
                "content": {
                  "json": "The below list includes only subscriptions for which alerts are configured. Subscription details won't be listed if no alerts has been configured. \r\n\r\nPlease refer above section in this page (**Service Health Alert Configuration Summary by Subscription**) to get summary of alerts for all subscriptons you have access to.",
                  "style": "info"
                },
                "name": "text - 4"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\n| where type =~ \"microsoft.insights/activitylogalerts\"\n| mv-expand condition1 = properties.condition.allOf\n| mv-expand condition2 = condition1.anyOf\n| extend alertEnabled = tostring(properties.enabled)\n| summarize set_condition1=make_set(condition1.equals), set_condition2=make_set(condition2.equals) by id, name,type,tenantId,resourceGroup,subscriptionId, alertEnabled\n| where set_has_element(set_condition1, \"ServiceHealth\")\n| extend category = \"ServiceHealth\"\n| extend all = iff(set_has_element(set_condition1, \"ServiceHealth\") and array_length(set_condition2) == 0, true, false)\n// Service issue\n| extend incident = iff(all, true, iff(set_has_element(set_condition1, \"Incident\"), true, set_has_element(set_condition2, \"Incident\")))\n// Planned maintenance\n| extend maintenance = iff(all, true, iff(set_has_element(set_condition1, \"Maintenance\"), true, set_has_element(set_condition2, \"Maintenance\")))\n// Health advisories\n| extend informational = iff(all, true, iff(set_has_element(set_condition1, \"Informational\") or set_has_element(set_condition1, \"ActionRequired\"), true, set_has_element(set_condition2, \"Informational\") or set_has_element(set_condition2, \"ActionRequired\")))\n// Security advisory\n| extend security = iff(all, true, iff(set_has_element(set_condition1, \"Security\"), true, set_has_element(set_condition2, \"Security\")))\n| project id, name, subscriptionId, category, tostring(alertEnabled), tostring(incident), tostring(maintenance), tostring(informational), tostring(security)\n",
                  "size": 1,
                  "title": "Service Health Alert Configuration Details for Configured Subscriptions",
                  "noDataMessage": "No service alerts have been configured for any of the subscriptions",
                  "noDataMessageStyle": 4,
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "$gen_group",
                      "formatter": 13,
                        "formatOptions": {
                        "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                      "columnMatch": "Subscription",
                      "formatter": 13,
                      "formatOptions": {
                        "linkTarget": "Resource",
                        "showIcon": true
                      }
                    },
                    {
                      "columnMatch": "id",
                      "formatter": 5
                    },
                    {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 5
                      },
                      {
                    "columnMatch": "category",
                    "formatter": 1
                  },
                  {
                        "columnMatch": "alertEnabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "Enabled"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "2",
                              "text": "Not enabled"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Unknown",
                              "text": "Unknown"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "incident",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "maintenance",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "informational",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "security",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                      "columnMatch": "incidentType",
                      "formatter": 5
                      }
                    ],
                    "rowLimit": 10000,
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "subscriptionId"
                    ],
                    "finalBy": "id"
                    },
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Alert Id"
                      },
                      {
                        "columnId": "name",
                        "label": "Alert Name"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "category",
                        "label": "Category"
                      },
                      {
                        "columnId": "alertEnabled",
                        "label": "Alert Enabled"
                      },
                      {
                        "columnId": "incident",
                    "label": "Service Issues"
                      },
                      {
                        "columnId": "maintenance",
                    "label": "Planned Maintenance"
                      },
                      {
                        "columnId": "informational",
                    "label": "Health Advisories"
                      },
                      {
                        "columnId": "security",
                    "label": "Security Advisories"
                      }
                    ]
                  }
                },
                "showPin": false,
                "name": "query - 1"
              }
            ]
          },
          "name": "Service Alerts Item Group"
        }
    ]
}
