{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "09b17e35-83bf-4b45-9466-1b119e508a7f",
            "version": "KqlParameterItem/1.0",
            "name": "VmResourceId",
            "type": 1,
            "isRequired": true,
            "isGlobal": true,
            "value": "",
            "isHiddenWhenLocked": true
          },
          {
            "id": "c10f05b2-6ac2-4392-9ad0-f4eadf4ae632",
            "version": "KqlParameterItem/1.0",
            "name": "typeSystem",
            "type": 1,
            "value": "\"CPU\", \"IO\",\"Storage\"",
            "isHiddenWhenLocked": true
          },
          {
            "id": "6681e8b9-4cfc-4868-9875-f0b8138f15cf",
            "version": "KqlParameterItem/1.0",
            "name": "typeAdmins",
            "type": 1,
            "value": "\"TraceFlag\",\"Backup\",\"DBCC\", \"DBConfiguration\",\"SystemHealth\",\"Traces\",\"DBFileConfiguration\",\"Configuration\",\"Replication\",\"Agent\",\"Security\",\"DataIntegrity\",\"MaxDOP\",\"PageFile\",\"Memory\",\"Performance\",\"Statistics\"",
            "isHiddenWhenLocked": true
          },
          {
            "id": "e30520e4-f856-4611-8783-2fe994993233",
            "version": "KqlParameterItem/1.0",
            "name": "typeDevs",
            "type": 1,
            "value": "\"UpdateIssues\",\"Index\",\"Naming\",\"Deprecated\", \"masterDB\",\"QueryOptimizer\",\"QueryStore\",\"Indexes\"",
            "isHiddenWhenLocked": true
          },
          {
            "id": "edbdc5cb-8057-4ac4-adce-a3c715449bea",
            "version": "KqlParameterItem/1.0",
            "name": "AssessmentId",
            "type": 1,
            "isGlobal": true,
            "value": "\"\"",
            "isHiddenWhenLocked": true
          },
          {
            "id": "d690e9de-d6a6-4f84-a3ba-799ea3a6725e",
            "version": "KqlParameterItem/1.0",
            "name": "showDashboard",
            "type": 1,
            "isGlobal": true,
            "value": "0",
            "isHiddenWhenLocked": true
          },
          {
            "id": "04b9bbfe-afbf-40ce-8ed9-54545bf0f81b",
            "version": "KqlParameterItem/1.0",
            "name": "v2Date",
            "type": 1,
            "isGlobal": true,
            "query": "let v2Date = toscalar(\r\nSqlAssessment_CL\r\n| where TimeGenerated > ago(180d)\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8] == 1 or asmt[8] == 2\r\n| project asmtId = tostring(asmt[1])\r\n| join kind=inner (\r\n    SqlAssessment_CL\r\n    | where TimeGenerated > ago(180d)\r\n    | extend asmt = parse_csv(RawData)\r\n    | summarize maxAsmtDate = max(TimeGenerated) by asmtId = tostring(asmt[1])) on asmtId\r\n| summarize max(maxAsmtDate)\r\n);\r\nlet minDate = toscalar(SqlAssessment_CL\r\n| where TimeGenerated > ago(180d)\r\n| extend asmt = parse_csv(RawData)\r\n| summarize dtMin = min(TimeGenerated));\r\nprint strcat('\"', iif(isnull(v2Date), tostring(minDate), tostring(v2Date)), '\"')\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameters Group"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "4674933e-296e-4178-ae4a-f494de25188c",
            "cellValue": "showDashboard",
            "linkTarget": "parameter",
            "linkLabel": "Results",
            "subTarget": "0",
            "style": "link"
          },
          {
            "id": "a0548b0c-e297-4d6b-917c-9b28a504e862",
            "cellValue": "showDashboard",
            "linkTarget": "parameter",
            "linkLabel": "Trends",
            "subTarget": "1",
            "style": "link"
          }
        ]
      },
      "name": "links - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**<span style=\"font-size: 2em\">SQL best practices assessment Results</span>**"
                  },
                  "customWidth": "0",
                  "name": "title",
                  "styleSettings": {
                    "maxWidth": "150"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "ca3f7f64-12c1-49c9-b5bc-b29ba33e4d45",
                        "version": "KqlParameterItem/1.0",
                        "name": "AsmtId",
                        "label": " collected at",
                        "type": 2,
                        "isRequired": true,
                        "query": "SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| project AsmtId = tostring(asmt[1]), TimeGenerated\r\n| summarize AsmtTime = max(TimeGenerated) by AsmtId\r\n| order by AsmtTime desc\r\n| extend rn=row_number()\r\n| project value = AsmtId, label = strcat(format_datetime(AsmtTime, 'yyyy-MM-dd hh:mm tt'), ' UTC'), selected = iif(isnotempty({AssessmentId}), AsmtId == {AssessmentId}, rn == 1)",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": ""
                      },
                      {
                        "id": "e214c082-c616-4c9d-bf18-8c686dcb86d6",
                        "version": "KqlParameterItem/1.0",
                        "name": "selTotSev",
                        "type": 1,
                        "isHiddenWhenLocked": true
                      },
                      {
                        "id": "a94d2b90-517c-4fce-b7ca-c7b283c483aa",
                        "version": "KqlParameterItem/1.0",
                        "name": "selCategory",
                        "type": 1,
                        "isHiddenWhenLocked": true
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "20",
                  "name": "queryParameters",
                  "styleSettings": {
                    "margin": "5px 0 0 20px",
                    "maxWidth": "40"
                  }
                }
              ],
              "exportParameters": true
            },
            "name": "group - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "546c1256-f3a8-46b5-b5b7-2172a5b80043",
                        "version": "KqlParameterItem/1.0",
                        "name": "newIssuesCnt",
                        "type": 1,
                        "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]),           \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nlet cnt = toscalar(parsedAssessmentResult\r\n| join kind=inner resultList on AsmtId\r\n| join kind=leftouter parsedAssessmentResult on $left.prevAsmtId == $right.AsmtId \r\n        and $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName\r\n| where isnull(TargetType1) and AsmtId == \"{AsmtId}\"\r\n| project   TargetType,\r\n            TargetName,             \r\n            Severity, \r\n            Message,             \r\n            CheckId               \r\n| distinct *     \r\n| summarize count());\r\nprint iff(cnt>0, tostring(cnt), \"0\")",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "da7dcd69-c36d-4858-a436-86b67915dbe2",
                        "version": "KqlParameterItem/1.0",
                        "name": "resolvedIssuesCnt",
                        "type": 1,
                        "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]),           \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nlet prevAsmtId = toscalar(resultList | where AsmtId == \"{AsmtId}\" | project prevAsmtId);\r\nlet cnt = toscalar(parsedAssessmentResult\r\n| join kind=leftouter (parsedAssessmentResult | where AsmtId == \"{AsmtId}\")\r\non  $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName        \r\n| where AsmtId == prevAsmtId and isempty(AsmtId1)\r\n| project   TargetType,\r\n            TargetName,             \r\n            Severity, \r\n            Message,             \r\n            CheckId               \r\n| distinct *     \r\n| summarize count());\r\nprint iff(cnt>0, tostring(cnt), \"0\")\r\n\r\n\r\n",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 5"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "48d0e068-d398-4441-a862-f2ae7dbc0b6e",
                        "cellValue": "resultsTblType",
                        "linkTarget": "parameter",
                        "linkLabel": "All Issues",
                        "subTarget": "1",
                        "style": "link"
                      },
                      {
                        "id": "0361e5e7-da8b-4faf-86fd-ea4383ea3b23",
                        "cellValue": "resultsTblType",
                        "linkTarget": "parameter",
                        "linkLabel": "New Issues ({newIssuesCnt})",
                        "subTarget": "2",
                        "style": "link"
                      },
                      {
                        "id": "53b94023-1951-48d6-9239-2adf3575a8ac",
                        "cellValue": "resultsTblType",
                        "linkTarget": "parameter",
                        "linkLabel": "Resolved Issues ({resolvedIssuesCnt})",
                        "subTarget": "3",
                        "style": "link"
                      },
                      {
                        "id": "bf4c845a-4606-4cc8-ba96-f9a92f68f3fb",
                        "cellValue": "resultsTblType",
                        "linkTarget": "parameter",
                        "linkLabel": "Insights",
                        "subTarget": "4",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 1"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), Severity=tostring(asmt[8]), CheckId=tostring(asmt[2])\r\n| where AsmtId == \"{AsmtId}\"\r\n| distinct CheckId, Severity\r\n| summarize count() by Severity\r\n| render piechart ",
                                "size": 1,
                                "aggregation": 3,
                                "title": "Total Issues",
                                "exportMultipleValues": true,
                                "exportedParameters": [
                                  {
                                    "fieldName": "series",
                                    "parameterName": "selTotSev",
                                    "parameterType": 1,
                                    "quote": "'"
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "Date",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Count",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "Date",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "Count",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "showLegend": true,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "0",
                                      "label": "Info",
                                      "color": "blue"
                                    },
                                    {
                                      "seriesName": "30",
                                      "label": "High",
                                      "color": "red"
                                    },
                                    {
                                      "seriesName": "-1",
                                      "label": "Passed",
                                      "color": "green"
                                    },
                                    {
                                      "seriesName": "20",
                                      "label": "Medium",
                                      "color": "yellow"
                                    },
                                    {
                                      "seriesName": "10",
                                      "label": "Low",
                                      "color": "turquoise"
                                    },
                                    {
                                      "seriesName": "1",
                                      "label": "Warning",
                                      "color": "yellow"
                                    },
                                    {
                                      "seriesName": "2",
                                      "label": "Critical",
                                      "color": "red"
                                    }
                                  ]
                                }
                              },
                              "customWidth": "0",
                              "showPin": false,
                              "name": "Pie Total",
                              "styleSettings": {
                                "margin": "0",
                                "maxWidth": "25"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), TagsArr=split(tostring(asmt[10]), \",\")\r\n| where AsmtId == \"{AsmtId}\"\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3'), CheckId=tostring(asmt[2])\r\n| distinct CheckId, Category\r\n| summarize count() by Category\r\n| render piechart ",
                                "size": 4,
                                "title": "Category",
                                "exportMultipleValues": true,
                                "exportedParameters": [
                                  {
                                    "fieldName": "series",
                                    "parameterName": "selCategory",
                                    "parameterType": 1,
                                    "quote": "'"
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "chartSettings": {
                                  "showLegend": true,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "1",
                                      "label": "Administration",
                                      "color": "blue"
                                    },
                                    {
                                      "seriesName": "2",
                                      "label": "Application",
                                      "color": "orange"
                                    },
                                    {
                                      "seriesName": "3",
                                      "label": "General",
                                      "color": "gray"
                                    },
                                    {
                                      "seriesName": "0",
                                      "label": "System",
                                      "color": "turquoise"
                                    }
                                  ]
                                }
                              },
                              "customWidth": "0",
                              "name": "Pie Categories",
                              "styleSettings": {
                                "maxWidth": "25"
                              }
                            }
                          ],
                          "exportParameters": true
                        },
                        "name": "Pie Charts",
                        "styleSettings": {
                          "margin": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "f3b3e929-3f98-4cc9-9ad2-93e1168ffe7b",
                              "version": "KqlParameterItem/1.0",
                              "name": "filterTargetName",
                              "label": "Name",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), CheckId=tostring(asmt[2]),\r\nTagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8]), TargetType=toint(asmt[6]), TargetName=tostring(asmt[7])\r\n| where AsmtId == \"{AsmtId}\"\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| project CheckId, TargetType, TargetName\r\n| distinct *\r\n| summarize Cnt = count() by TargetName\r\n| project value = TargetName, label = strcat(TargetName, ' (', Cnt, ')')",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "d31a4bde-7f3a-43ee-808e-ff68090a0a99",
                              "version": "KqlParameterItem/1.0",
                              "name": "filterSev",
                              "label": "Severity",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), \r\nTagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8]), TargetType=toint(asmt[6]), TargetName=tostring(asmt[7]), Message=tostring(asmt[9])\r\n| where AsmtId == \"{AsmtId}\"\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3'),\r\nSeverity = case(Sev == 30, 'High', Sev == 20, 'Medium', Sev == 10, 'Low', \r\nSev == 0, 'Information',\r\nSev == 2, 'Critial', Sev == 1, 'Warning', Sev == -1, 'Passed', 'Unknown')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| project TargetType, TargetName, Message, Sev, Severity\r\n| distinct *\r\n| summarize Cnt = count() by Sev, Severity\r\n| order by Sev desc\r\n| project value = Sev, label = strcat(Severity, ' (', Cnt, ')')\r\n\r\n\r\n\r\n\r\n\r\n",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "3491d472-ad13-4893-8f4d-d7aaffc3e16a",
                              "version": "KqlParameterItem/1.0",
                              "name": "filterTags",
                              "label": "Tags",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), \r\nTagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8]), TargetType=toint(asmt[6]), TargetName=tostring(asmt[7]), Message=tostring(asmt[9]), CheckId=tostring(asmt[2])\r\n| where AsmtId == \"{AsmtId}\"\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| mv-expand TagsArr\r\n| where TagsArr != 'DefaultRuleset'\r\n| project Tag = tostring(TagsArr), TargetType, TargetName, Message, Sev, CheckId\r\n| distinct * \r\n| summarize Cnt = count() by Tag\r\n| order by Cnt desc\r\n| project value = Tag, label = strcat(Tag, ' (', Cnt, ')')\r\n",
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "6b9fd2af-37cd-4a83-8b8f-4f0fe19281b8",
                              "version": "KqlParameterItem/1.0",
                              "name": "filterCheckId",
                              "label": "Check Id",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), CheckId=tostring(asmt[2]),\r\nTagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8]), TargetType=toint(asmt[6]), TargetName=tostring(asmt[7]), Message=tostring(asmt[9])\r\n| where AsmtId == \"{AsmtId}\"\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| project CheckId, TargetType, TargetName, Message\r\n| distinct *\r\n| summarize Cnt = count() by CheckId\r\n| project value = CheckId, label = strcat(CheckId, ' (', Cnt, ')')\r\n\r\n\r\n\r\n",
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "gridsFilters"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "The first grid shows you each recommendation and the number of instances your environment hit that issue. When you select a row in the first grid, the second grid lists all the instances for that particular recommendation. If there is no selection in the first grid, the second grid shows all recommendations. Note that the results are limited to the first 100 instances per recommendation. You can use the drop downs above the grid to filter the results. You can also use “Export to Excel” and “Open the last run query in the Logs view” options by selecting the small icons on the top right corner of each grid."
                        },
                        "name": "drilldownExplanation",
                        "styleSettings": {
                          "padding": "0px"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), CheckId=tostring(asmt[2]), DisplayString=asmt[3], Description=tostring(asmt[4]), HelpLink=asmt[5], TargetType=case(asmt[6] == 1, \"Server\", asmt[6] == 2, \"Database\", \"\"), TargetName=tostring(asmt[7]), \r\nSeverity=case(asmt[8] == 30, \"High\", asmt[8] == 20, \"Medium\", asmt[8] == 10, \"Low\", asmt[8] == 0, \"Information\", asmt[8]==1, \"Warning\", asmt[8]==2, \"Critical\", \"Passed\"), Message=tostring(asmt[9]), TagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8])\r\n| where AsmtId == \"{AsmtId}\" \r\nand (set_has_element(dynamic([{filterCheckId}]), CheckId) or \"{filterCheckId}\" == \"'*'\")\r\nand (set_has_element(dynamic([{filterTargetName}]), TargetName)  or \"{filterTargetName}\" == \"'*'\")\r\nand set_has_element(dynamic([{filterSev}]), Sev)\r\nand (array_length(set_intersect(TagsArr, dynamic([{filterTags}]))) > 0 or \"{filterTags}\" == \"'*'\")\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| project TargetType, TargetName, Severity, Tags=strcat_array(array_slice(TagsArr, 1, -1), ','), CheckId, SeverityCode = toint(Sev), Message\r\n| distinct * \r\n| summarize Cnt = count() by SeverityCode, Severity, Tags, CheckId\r\n| project Severity, Tags, CheckId, Cnt, SeverityCode\r\n| order by SeverityCode desc, Cnt desc\r\n\r\n",
                                "size": 2,
                                "showAnalytics": true,
                                "exportedParameters": [
                                  {
                                    "fieldName": "CheckId",
                                    "parameterName": "selCheckId",
                                    "parameterType": 1,
                                    "defaultValue": "''"
                                  },
                                  {
                                    "fieldName": "SeverityCode",
                                    "parameterName": "selSeverity",
                                    "parameterType": 1,
                                    "defaultValue": "0"
                                  }
                                ],
                                "showExportToExcel": true,
                                "exportToExcelOptions": "all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Severity",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Medium",
                                            "representation": "Sev2",
                                            "text": "Medium"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Information",
                                            "representation": "1",
                                            "text": "Information"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "High",
                                            "representation": "Sev0",
                                            "text": "High"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Low",
                                            "representation": "Sev3",
                                            "text": "Low"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Critical",
                                            "representation": "Sev0",
                                            "text": "Critical"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Passed",
                                            "representation": "success",
                                            "text": "Passed"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Warning",
                                            "representation": "Sev2",
                                            "text": "Warning"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "unknown",
                                            "text": "Unknown"
                                          }
                                        ],
                                        "customColumnWidthSetting": "16ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Tags",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "40ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "CheckId",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "24ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Cnt",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "11ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "SeverityCode",
                                      "formatter": 5
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "CheckId",
                                      "label": "Check Id"
                                    },
                                    {
                                      "columnId": "Cnt",
                                      "label": "Issues"
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "textSettings": {
                                  "style": "markdown"
                                }
                              },
                              "customWidth": "35",
                              "name": "RecommentationList",
                              "styleSettings": {
                                "margin": "0",
                                "maxWidth": "100%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let selectedCategories = dynamic([{selCategory}]);\r\nlet selectedTotSev = dynamic([{selTotSev}]);\r\nSqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), CheckId=tostring(asmt[2]), DisplayString=asmt[3], Description=tostring(asmt[4]), HelpLink=asmt[5], TargetType=case(asmt[6] == 1, \"Server\", asmt[6] == 2, \"Database\", \"\"), TargetName=tostring(asmt[7]), \r\nSeverity=case(asmt[8] == 30, \"High\", asmt[8] == 20, \"Medium\", asmt[8] == 10, \"Low\", asmt[8] == 0, \"Information\", asmt[8]==1, \"Warning\", asmt[8]==2, \"Critical\", \"Passed\"), Message=tostring(asmt[9]), TagsArr=split(tostring(asmt[10]), \",\"), Sev = toint(asmt[8])\r\n| where AsmtId == \"{AsmtId}\" \r\nand (set_has_element(dynamic([{filterCheckId}]), CheckId) or \"{filterCheckId}\" == \"'*'\")\r\nand (set_has_element(dynamic([{filterTargetName}]), TargetName)  or \"{filterTargetName}\" == \"'*'\")\r\nand set_has_element(dynamic([{filterSev}]), Sev)\r\nand (array_length(set_intersect(TagsArr, dynamic([{filterTags}]))) > 0 or \"{filterTags}\" == \"'*'\")\r\nand (CheckId == '{selCheckId}' and Sev == {selSeverity} or \"{selCheckId}\" == \"''\")\r\n| extend Category = case(array_length(set_intersect(TagsArr, dynamic([{typeSystem:value}]))) > 0, '0',\r\narray_length(set_intersect(TagsArr, dynamic([{typeAdmins:value}]))) > 0, '1',\r\narray_length(set_intersect(TagsArr, dynamic([{typeDevs:value}]))) > 0, '2',\r\n'3')\r\n| where (Sev >= 0 and array_length(selectedTotSev) == 0 or Sev in (selectedTotSev))\r\nand (Category in (selectedCategories) or array_length(selectedCategories) == 0)\r\n| project TargetType, TargetName, Severity, Message, Tags=strcat_array(array_slice(TagsArr, 1, -1), ','), CheckId, Description, HelpLink = tostring(HelpLink), SeverityCode = toint(Sev)\r\n| order by SeverityCode desc, TargetType desc, TargetName asc\r\n| project-away SeverityCode\r\n\r\n",
                                "size": 2,
                                "showAnalytics": true,
                                "showExportToExcel": true,
                                "exportToExcelOptions": "all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "TargetType",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "11ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "TargetName",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Severity",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Medium",
                                            "representation": "Sev2",
                                            "text": "Medium"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Information",
                                            "representation": "1",
                                            "text": "Information"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "High",
                                            "representation": "Sev0",
                                            "text": "High"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Low",
                                            "representation": "Sev3",
                                            "text": "Low"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Critical",
                                            "representation": "Sev0",
                                            "text": "Critical"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Passed",
                                            "representation": "success",
                                            "text": "Passed"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Warning",
                                            "representation": "Sev2",
                                            "text": "Warning"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "unknown",
                                            "text": "Unknown"
                                          }
                                        ],
                                        "customColumnWidthSetting": "16ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Message",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "GenericDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "80%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Tags",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "CheckId",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Description",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "HelpLink",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SeverityCode",
                                      "formatter": 5
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TargetType",
                                      "label": "Target"
                                    },
                                    {
                                      "columnId": "TargetName",
                                      "label": "Name"
                                    },
                                    {
                                      "columnId": "CheckId",
                                      "label": "Check Id"
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "textSettings": {
                                  "style": "markdown"
                                }
                              },
                              "customWidth": "65",
                              "name": "RecommentationDrilldown",
                              "styleSettings": {
                                "margin": "0",
                                "padding": "0 0 0 15px",
                                "maxWidth": "100%"
                              }
                            }
                          ]
                        },
                        "name": "groupTables"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "resultsTblType",
                    "comparison": "isEqualTo",
                    "value": "1"
                  },
                  "name": "groupAllIssues"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]),           \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nparsedAssessmentResult\r\n| join kind=inner resultList on AsmtId\r\n| join kind=leftouter parsedAssessmentResult on $left.prevAsmtId == $right.AsmtId \r\n        and $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName\r\n| where isnull(TargetType1) and AsmtId == \"{AsmtId}\"\r\n| project   TargetType,\r\n            TargetName,             \r\n            Severity, \r\n            Message,             \r\n            CheckId               \r\n| distinct *     \r\n| summarize count() by Severity\r\n| render piechart \r\n",
                          "size": 4,
                          "noDataMessage": "There are no new issues since last run.",
                          "exportMultipleValues": true,
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "selTotSevNew",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "10",
                                "label": "Low",
                                "color": "turquoise"
                              },
                              {
                                "seriesName": "20",
                                "label": "Medium",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "0",
                                "label": "Information",
                                "color": "blue"
                              },
                              {
                                "seriesName": "30",
                                "label": "High",
                                "color": "red"
                              },
                              {
                                "seriesName": "1",
                                "label": "Warning",
                                "color": "yellow",
                                "comment": "Legacy"
                              },
                              {
                                "seriesName": "2",
                                "label": "Critical",
                                "color": "red",
                                "comment": "Legacy"
                              }
                            ]
                          }
                        },
                        "customWidth": "0",
                        "name": "stepNewIssuesPieChart",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let selectedTotSev = dynamic([{selTotSevNew}]);\r\nlet parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]), \r\n            TagsStr = tostring(asmt[10]),\r\n            DisplayString=tostring(asmt[3]), \r\n            Description=tostring(asmt[4]),\r\n            HelpLink=tostring(asmt[5]),\r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nparsedAssessmentResult\r\n| join kind=inner resultList on AsmtId\r\n| join kind=leftouter parsedAssessmentResult on $left.prevAsmtId == $right.AsmtId \r\n        and $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName\r\n| where isnull(TargetType1) and AsmtId == \"{AsmtId}\"\r\n| project   TargetType = case(TargetType == 1, \"Server\", TargetType == 2, \"Database\", \"\"), \r\n            TargetName,             \r\n            Severity = case(Severity == 30, \"High\",Severity == 20, \"Medium\", Severity == 10, \"Low\", Severity == 0, \"Information\", Severity == 1, \"Warning\", Severity == 2, \"Critical\", \"Passed\"), \r\n            Message, \r\n            Tags=strcat_array(array_slice(split(TagsStr, \",\"), 1, -1), ','), \r\n            CheckId, \r\n            Description, \r\n            HelpLink,\r\n            SeverityCode = Severity       \r\n| distinct *\r\n| where array_length(selectedTotSev) == 0  or SeverityCode in (selectedTotSev)\r\n| order by SeverityCode desc, TargetType, TargetName\r\n| project-away SeverityCode\r\n",
                          "size": 0,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TargetType",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 5,
                                  "palette": "blue",
                                  "customColumnWidthSetting": "11ch"
                                }
                              },
                              {
                                "columnMatch": "TargetName",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "Sev3",
                                      "text": "Low"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Information",
                                      "representation": "1",
                                      "text": "Information"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "Sev2",
                                      "text": "Medium"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Critical",
                                      "representation": "Sev0",
                                      "text": "Critical"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "Sev2",
                                      "text": "Warning"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "Sev0",
                                      "text": "High"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "Passed"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Message",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true,
                                  "customColumnWidthSetting": "80%"
                                }
                              },
                              {
                                "columnMatch": "Tags",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Description",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "HelpLink",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "SeverityCode",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          },
                          "sortBy": [],
                          "textSettings": {
                            "style": "markdown"
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "newIssuesCnt",
                          "comparison": "isNotEqualTo",
                          "value": "0"
                        },
                        "name": "NewIssuesTbl"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "resultsTblType",
                    "comparison": "isEqualTo",
                    "value": "2"
                  },
                  "name": "groupNewIssues"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]),           \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nlet prevAsmtId = toscalar(resultList | where AsmtId == \"{AsmtId}\" | project prevAsmtId);\r\nparsedAssessmentResult\r\n| join kind=leftouter (parsedAssessmentResult | where AsmtId == \"{AsmtId}\")\r\non  $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName        \r\n| where AsmtId == prevAsmtId and isempty(AsmtId1)\r\n| project   TargetType,\r\n            TargetName,             \r\n            Severity, \r\n            Message,             \r\n            CheckId               \r\n| distinct *     \r\n| summarize count() by Severity\r\n| render piechart \r\n",
                          "size": 4,
                          "noDataMessage": "There are no resolved issues since last run.",
                          "exportMultipleValues": true,
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "selTotSevResolved",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "20",
                                "label": "Medium",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "10",
                                "label": "Low",
                                "color": "turquoise"
                              },
                              {
                                "seriesName": "30",
                                "label": "High",
                                "color": "red"
                              },
                              {
                                "seriesName": "0",
                                "label": "Information",
                                "color": "blue"
                              },
                              {
                                "seriesName": "1",
                                "label": "Warning",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "2",
                                "label": "Critical",
                                "color": "red"
                              }
                            ]
                          }
                        },
                        "customWidth": "0",
                        "showPin": false,
                        "name": "Resolved Issues",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let selectedTotSev = dynamic([{selTotSevResolved}]);\r\nlet parsedAssessmentResult = SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]), \r\n            TagsStr = tostring(asmt[10]),\r\n            DisplayString=tostring(asmt[3]), \r\n            Description=tostring(asmt[4]),\r\n            HelpLink=tostring(asmt[5]),\r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId);\r\nlet prevAsmtId = toscalar(resultList | where AsmtId == \"{AsmtId}\" | project prevAsmtId);\r\nparsedAssessmentResult\r\n| join kind=leftouter (parsedAssessmentResult | where AsmtId == \"{AsmtId}\")\r\non  $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName        \r\n| where AsmtId == prevAsmtId and isempty(AsmtId1)\r\n| distinct *\r\n| project   TargetType = case(TargetType == 1, \"Server\", TargetType == 2, \"Database\", \"\"), \r\n            TargetName,             \r\n            Severity = case(Severity == 30, \"High\",Severity == 20, \"Medium\", Severity == 10, \"Low\", Severity == 0, \"Information\", Severity == 1, \"Warning\", Severity == 2, \"Critical\", \"Passed\"), \r\n            Message, \r\n            Tags=strcat_array(array_slice(split(TagsStr, \",\"), 1, -1), ','), \r\n            CheckId, \r\n            Description, \r\n            HelpLink,\r\n            SeverityCode = Severity \r\n| where array_length(selectedTotSev) == 0 or SeverityCode in (selectedTotSev)\r\n| order by SeverityCode desc, TargetType, TargetName\r\n| project-away SeverityCode    \r\n\r\n",
                          "size": 0,
                          "noDataMessage": "There are no resolved issues since last run.",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TargetType",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 5,
                                  "palette": "blue",
                                  "customColumnWidthSetting": "11ch"
                                }
                              },
                              {
                                "columnMatch": "TargetName",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "Sev3",
                                      "text": "Low"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Information",
                                      "representation": "1",
                                      "text": "Information"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "Sev0",
                                      "text": "High"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "Sev2",
                                      "text": "Medium"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "Sev2",
                                      "text": "Warning"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Critical",
                                      "representation": "Sev0",
                                      "text": "Critical"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "unknown",
                                      "text": "Passed"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Message",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true,
                                  "customColumnWidthSetting": "80%"
                                }
                              },
                              {
                                "columnMatch": "Tags",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Description",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "HelpLink",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "SeverityCode",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          },
                          "sortBy": [],
                          "textSettings": {
                            "style": "markdown"
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "resolvedIssuesCnt",
                          "comparison": "isNotEqualTo",
                          "value": "0"
                        },
                        "name": "ResolvedIssuesTbl"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "resultsTblType",
                    "comparison": "isEqualTo",
                    "value": "3"
                  },
                  "name": "groupResolvedIssues"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[1] == \"{AsmtId}\" and asmt[8] >= 0 \r\n| summarize Issues = count() by CheckId = tostring(asmt[2]), Name=tostring(asmt[3]), TargetName=tostring(asmt[7])\r\n| top 10 by Issues\r\n| project Issues, CheckId, Name, TargetName\r\n",
                                "size": 0,
                                "title": "Most recurring issues",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "query - 7"
                            }
                          ]
                        },
                        "customWidth": "100",
                        "name": "groupMostRecurrent",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SqlAssessment_CL\r\n| where TimeGenerated > ago(180d) and _ResourceId =~ {VmResourceId:value}\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[1] == \"{AsmtId}\" and asmt[8] >= 0 and asmt[6]==2\r\n| summarize DbIssues = count() by TargetName=tostring(asmt[7])\r\n| top 5 by DbIssues\r\n| project Issues=DbIssues, Database=TargetName\r\n",
                          "size": 0,
                          "title": "Top databases with issues",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "100",
                        "name": "query - 7 - Copy",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "resultsTblType",
                    "comparison": "isEqualTo",
                    "value": "4"
                  },
                  "name": "GroupPopularIssues"
                }
              ]
            },
            "name": "groupResultTables"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "showDashboard",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "ResultGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<span style=\"font-size: 14px\">**Total Issues**</span>\r\n\r\n"
                        },
                        "name": "textTotalIssues"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "This chart shows the number of issues for all the assessment runs available in your Log Analytics workspace. Each bar represents a single assessment run. If there are multiple runs on a given day, it only shows the latest one. The legend shows the averages for each severity level. If you hover over each bar, you can see the number of issues for individual runs. Ideally you should see the number of issues going down over time, especially for high and medium severity issues. "
                        },
                        "name": "explTotalIssues"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let resultList = SqlAssessment_CL \r\n| where _ResourceId =~ {VmResourceId:value} and TimeGenerated >todatetime({v2Date})\r\n| extend asmt = parse_csv(RawData)\r\n| extend AsmtId=tostring(asmt[1]), Severity=tostring(asmt[8]);\r\nlet latestResultByDay = resultList\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| join kind=inner  (\r\n    resultList\r\n    | summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n    | summarize max(AssessmentTime) by startofday(AssessmentTime)\r\n    ) on $left.AssessmentTime == $right.max_AssessmentTime;\r\nresultList\r\n| where asmt[8] >=0\r\n| join kind=inner latestResultByDay on AsmtId\r\n| project TimeGenerated, Severity, AsmtId, AssessmentTime\r\n| summarize count() by AssessmentTime, Severity",
                          "size": 0,
                          "aggregation": 3,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "AsmtId",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "AsmtId",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "0",
                                "label": "Info",
                                "color": "blue"
                              },
                              {
                                "seriesName": "20",
                                "label": "Medium",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "10",
                                "label": "Low",
                                "color": "turquoise"
                              },
                              {
                                "seriesName": "30",
                                "label": "High",
                                "color": "red"
                              },
                              {
                                "seriesName": "1",
                                "label": "Medium (Obs)",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "2",
                                "label": "High (Obs)",
                                "color": "red"
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "sizeSettings": "count_",
                            "sizeAggregation": "Sum",
                            "legendMetric": "count_",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "type": "heatmap",
                              "colorAggregation": "Sum",
                              "nodeColorField": "count_",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "name": "queryTotalIssues"
                      }
                    ]
                  },
                  "name": "groupTotalIssues"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<span style=\"font-size: 14px\">**New Issues**</span>\r\n\r\n"
                        },
                        "name": "textNewIssues"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "This chart shows the number of new issues that were identified in each assessment run. It also shows the total number of issues for ease of comparison. The legend shows the average number of new and total issues. If you hover over each bar, you can see these values for individual runs. If you notice a spike in new issues in a particular assessment, it might indicate an environment change. If the environment is stable, you should not see a lot of new issues showing up. Another reason for new issues might be introduction of new recommendations in SQL best practices assessment engine. If this is the case, you will see the total number of recommendations go up as well."
                        },
                        "name": "explNewIssues"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value} and TimeGenerated > todatetime({v2Date})\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]), \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend prevAsmtId = prev(AsmtId)\r\n| where isnotempty(prevAsmtId);\r\nlet newItemsResult = parsedAssessmentResult\r\n| join kind=inner resultList on AsmtId\r\n| join kind=leftouter parsedAssessmentResult on $left.prevAsmtId == $right.AsmtId \r\n        and $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName\r\n| where isnull(TargetType1)\r\n| summarize New=count() by AsmtId, AssessmentTime\r\n| join kind=inner ( \r\n    parsedAssessmentResult\r\n    | summarize Total=count() by AsmtId\r\n) on AsmtId\r\n| project AssessmentTime, New, Total;\r\nnewItemsResult\r\n| join kind=inner  (\r\n    newItemsResult    \r\n    | summarize max(AssessmentTime) by startofday(AssessmentTime)\r\n    ) on $left.AssessmentTime == $right.max_AssessmentTime\r\n| project AssessmentTime, New, Total\r\n| order by AssessmentTime asc",
                          "size": 0,
                          "aggregation": 3,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "xAxis": "AssessmentTime",
                            "yAxis": [
                              "New",
                              "Total"
                            ]
                          }
                        },
                        "name": "queryNewIssues"
                      }
                    ]
                  },
                  "name": "groupNewIssues"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<span style=\"font-size: 14px\">**Resolved Issues**</span>\r\n\r\n"
                        },
                        "name": "textResolved"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "This chart shows the number of resolved issues in each assessment run. It also shows the total number of issues for ease of comparison. The legend shows the average number of resolved and total issues. If you hover over each bar, you can see these values for individual runs. Depending on how frequently you resolve issues, in big batches or gradually over time, you should this reflected in the chart."
                        },
                        "name": "explResolvedIssues"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let parsedAssessmentResult = SqlAssessment_CL\r\n| where _ResourceId =~ {VmResourceId:value} and TimeGenerated > todatetime({v2Date})\r\n| extend asmt = parse_csv(RawData)\r\n| where asmt[8]>=0\r\n| project   AsmtId=tostring(asmt[1]), \r\n            Severity=tostring(asmt[8]),\r\n            CheckId=tostring(asmt[2]), \r\n            Message=tostring(asmt[9]), \r\n            TargetType=toint(asmt[6]), \r\n            TargetName=tostring(asmt[7]), \r\n            TimeGenerated;\r\nlet resultList = parsedAssessmentResult\r\n| summarize AssessmentTime = max(TimeGenerated) by AsmtId\r\n| order by AssessmentTime asc \r\n| extend nextAsmtId = next(AsmtId);\r\nlet resolvedItemsResult = parsedAssessmentResult\r\n| join kind=inner resultList on AsmtId\r\n| join kind=leftouter parsedAssessmentResult on $left.nextAsmtId == $right.AsmtId \r\n        and $left.Severity==$right.Severity \r\n        and $left.CheckId==$right.CheckId \r\n        and $left.Message==$right.Message \r\n        and $left.TargetType == $right.TargetType \r\n        and $left.TargetName == $right.TargetName         \r\n| where isnull(TargetType1)\r\n| join kind=inner resultList on $left.nextAsmtId == $right.AsmtId\r\n| summarize Resolved=count() by nextAsmtId, AssessmentTime1\r\n| join kind=inner ( \r\n    parsedAssessmentResult\r\n    | summarize Total=count() by AsmtId\r\n) on $left.nextAsmtId == $right.AsmtId\r\n| project AssessmentTime = AssessmentTime1, Resolved, Total;\r\nresolvedItemsResult\r\n| join kind=inner  (\r\n    resolvedItemsResult    \r\n    | summarize max(AssessmentTime) by startofday(AssessmentTime)\r\n    ) on $left.AssessmentTime == $right.max_AssessmentTime\r\n| project AssessmentTime, Resolved, Total\r\n| order by AssessmentTime asc",
                          "size": 0,
                          "aggregation": 3,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "xAxis": "AssessmentTime",
                            "yAxis": [
                              "Total",
                              "Resolved"
                            ]
                          }
                        },
                        "name": "graphResolvedQuery"
                      }
                    ]
                  },
                  "name": "groupResolvedIssues"
                }
              ]
            },
            "name": "trendingGraphs"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "showDashboard",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "customWidth": "0",
      "name": "Dashboard",
      "styleSettings": {
        "maxWidth": "800px"
      }
    }
  ],
  "styleSettings": {
    "spacingStyle": "none"
  },
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
