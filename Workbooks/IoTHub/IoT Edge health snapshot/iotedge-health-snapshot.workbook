{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "4f033854-b3ad-49fb-8e20-83074359af05",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "isGlobal": true,
            "value": "Microsoft.Devices/IotHubs",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\"Microsoft.Devices/IotHubs\"]"
          },
          {
            "id": "ac81a4e3-288e-4368-b0b1-99f936e9f147",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "59a4f202-f0c0-4ca3-9f36-bea664c4f751",
            "version": "KqlParameterItem/1.0",
            "name": "invokedFromFleetViewWorkbook",
            "type": 1,
            "isRequired": true,
            "isGlobal": true,
            "query": "print \"no\"",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "parameters - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "## This workbook is designed to be invoked from the IoT Edge Fleet view workbook.",
        "style": "upsell"
      },
      "conditionalVisibility": {
        "parameterName": "invokedFromFleetViewWorkbook",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "text - 8"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "dc44ee65-21ec-486d-9dad-d0efb00f4fa6",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Open Fleet view workbook",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/IoTHub/IoT Edge",
              "typeSource": "default",
              "gallerySource": "default",
              "locationSource": "default"
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "invokedFromFleetViewWorkbook",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "links - 9"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "fa06337f-d574-4824-b0ac-0ae47ee50285",
            "version": "KqlParameterItem/1.0",
            "name": "InsightsMetricsExists",
            "type": 1,
            "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 259200000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "55873e95-d307-447f-b424-658d974a6b35",
            "version": "KqlParameterItem/1.0",
            "name": "hostDiskPercentThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "d3772e57-23fc-4c88-9a94-789b42d1443b",
            "version": "KqlParameterItem/1.0",
            "name": "hostMemPercentThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "963fbd91-e407-4a8d-8ed7-819db38def1c",
            "version": "KqlParameterItem/1.0",
            "name": "hostCpuPercentThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "415e783d-36b0-4cb3-927c-542efc856401",
            "version": "KqlParameterItem/1.0",
            "name": "localMessagesSentThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "4440ff57-019f-4853-8f85-7ff21fca6c71",
            "version": "KqlParameterItem/1.0",
            "name": "upstreamMessagesSentThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "601fdb2e-7d15-4d8f-be85-cf618391e165",
            "version": "KqlParameterItem/1.0",
            "name": "qlenThreshold",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "MainParams"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1613525f-d44c-47d6-b556-154edf69b3b0",
            "version": "KqlParameterItem/1.0",
            "name": "SelectedDevice",
            "type": 1,
            "isGlobal": true,
            "query": "print \"rpi4\"",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "18b0553c-911b-44cc-96ac-32ac9a0ca844",
            "version": "KqlParameterItem/1.0",
            "name": "ShowCPU",
            "type": 1,
            "query": "print \"1\"",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "d1c4428c-9617-49d0-b980-d98f5418d52b",
            "version": "KqlParameterItem/1.0",
            "name": "CPUThreshold",
            "type": 1,
            "query": "print tolong(12)",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "664577f7-537f-490e-b668-49a25f7991b5",
            "version": "KqlParameterItem/1.0",
            "name": "MemThreshold",
            "type": 1,
            "query": "print tolong(80)",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "72cac956-dec6-49e2-9f3c-1a37ca330440",
            "version": "KqlParameterItem/1.0",
            "name": "timeBin",
            "type": 1,
            "query": "print time(5m)",
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "parameters - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "3310605a-8e22-4570-afc9-b678f9383b48",
            "version": "KqlParameterItem/1.0",
            "name": "resourceId",
            "type": 5,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1"
          },
          {
            "id": "2438e196-01bd-426d-b7c3-a1ce7e1ce151",
            "version": "KqlParameterItem/1.0",
            "name": "devicePath",
            "type": 1,
            "isGlobal": true,
            "query": "print strcat('/devices/device?deviceId=', '{SelectedDevice}')",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "devdetails-links"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "979649a8-9b99-407e-bd77-79ce9223ae1f",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 14400000
            },
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "parameters - 1 - Copy",
      "styleSettings": {
        "margin": "0px 0px -50px 0px"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "a746ca07-cb21-484d-8a3f-c5fe01f8c92d",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "📊 Explore detailed metrics",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "default",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
              "typeSource": "default",
              "gallerySource": "default",
              "locationSource": "default",
              "passSpecificParams": true,
              "templateParameters": [
                {
                  "name": "SelectedDevice",
                  "source": "parameter",
                  "value": "SelectedDevice"
                },
                {
                  "name": "timeRange",
                  "source": "parameter",
                  "value": "timeRange"
                }
              ]
            }
          },
          {
            "id": "c01bca81-7f1c-41a6-9074-e741bdb84181",
            "linkTarget": "OpenBlade",
            "linkLabel": "See device details...",
            "style": "secondary",
            "bladeOpenContext": {
              "bladeName": "StandaloneFrameBlade",
              "extensionName": "Microsoft_Azure_IotHub",
              "bladeParameters": [
                {
                  "name": "path",
                  "source": "parameter",
                  "value": "devicePath"
                },
                {
                  "name": "resourceId",
                  "source": "parameter",
                  "value": "resourceId"
                },
                {
                  "name": "title",
                  "source": "parameter",
                  "value": "SelectedDevice"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "invokedFromFleetViewWorkbook",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "0",
      "name": "links - 5",
      "styleSettings": {
        "margin": "5px -30px -25px -20px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "040b00a0-0343-4d43-b81f-987501ecfd5a",
            "version": "KqlParameterItem/1.0",
            "name": "Info",
            "label": "ℹ",
            "type": 10,
            "isRequired": true,
            "isGlobal": true,
            "value": "No",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"No\", \"Yes\"]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "invokedFromFleetViewWorkbook",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "25",
      "name": "parameters - 10",
      "styleSettings": {
        "margin": "5px 0px -15px 10px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "version": "KqlParameterItem/1.0",
            "name": "LastUpdated",
            "type": 1,
            "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where TimeGenerated < {timeRange:end}\n| where Name == \"edgehub_gettwin_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| summarize lastUpdateTime = max(TimeGenerated)\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, lastUpdateTime))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n                        strcat(lastUpdatedDays, iff(lastUpdatedHours == 1, \" day ago\", \" days ago\")))\n| project agoText\n",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "{resourceType}",
            "id": "396cd2ec-92f8-4be2-97d9-5130202dca93"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "NeverSet",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "name": "parameterskdk"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# <span style=\"color:teal\"> **{SelectedDevice}** </span>"
                  },
                  "customWidth": "0",
                  "name": "text - 5",
                  "styleSettings": {
                    "margin": "5px 0px -8px 0px",
                    "padding": "4px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<span style=\"color:teal\"> ***Reported metrics {LastUpdated}*** </span>"
                  },
                  "customWidth": "0",
                  "name": "text - 21",
                  "styleSettings": {
                    "margin": "20px 0px 0px 0px"
                  }
                }
              ]
            },
            "name": "snapshot-header",
            "styleSettings": {
              "margin": "-10px 0px -10x 0px"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Health snapshot uses the signals below to determine device health.\r\nThe last 3 measurements from the device are evaluated against the configured thresholds to report health information.\r\n\r\n\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Info",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 2",
            "styleSettings": {
              "margin": "-20px 0px 10px 0px"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nInsightsMetrics\n| where TimeGenerated > startTime and TimeGenerated < endTime\n| where Name == \"edgehub_messages_sent_total\"\n| where Tags contains \"upstream\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == '{SelectedDevice}'\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend messages = toint(Val)\n| order by source, TimeGenerated\n| serialize | extend nextCount = next(messages, 1) | extend nextSource = next(source, 1)\n| extend diff = iff((messages - nextCount) >= 0 and source == nextSource, messages - nextCount, iff(TimeGenerated - startTime > 2*time({timeBin}), messages, 0))\n| project source, TimeGenerated, messages=diff\n| make-series Count=sum(messages) on TimeGenerated from startTime to endTime step time({timeBin}) by source\n",
                    "size": 1,
                    "title": "Upstream messages",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "barchart",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Count",
                          "label": "Usage (%)"
                        },
                        {
                          "seriesName": "thresholdLine",
                          "label": "Health Threshold"
                        }
                      ],
                      "customThresholdLine": "{upstreamMessagesSentThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "upstream-messages"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nInsightsMetrics\n| where TimeGenerated > startTime and TimeGenerated < endTime\n| where Name == \"edgehub_messages_sent_total\"\n| where Tags !contains \"upstream\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == '{SelectedDevice}'\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend messages = toint(Val)\n| order by source, TimeGenerated\n| serialize | extend nextCount = next(messages, 1) | extend nextSource = next(source, 1)\n| extend diff = iff((messages - nextCount) >= 0 and source == nextSource, messages - nextCount, iff(TimeGenerated - startTime > 2*time({timeBin}), messages, 0))\n| project source, TimeGenerated, messages=diff\n| make-series Count=sum(messages) on TimeGenerated from startTime to endTime step time({timeBin}) by source\n",
                    "size": 1,
                    "title": "Local messages",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "barchart",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Count",
                          "label": "Usage (%)"
                        },
                        {
                          "seriesName": "thresholdLine",
                          "label": "Health Threshold"
                        }
                      ],
                      "customThresholdLine": "{localMessagesSentThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "Local messages"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet Qlen = InsightsMetrics\n| where TimeGenerated > startTime\n| where TimeGenerated < endTime\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend ep = tostring(dimensions.endpoint)\n| extend qlen = toint(Val)\n| project device, qlen, ep, TimeGenerated\n| make-series Count=sum(qlen) on TimeGenerated from startTime to endTime step time({timeBin});\nQlen",
                    "size": 1,
                    "aggregation": 3,
                    "title": "Queue length (sum)",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "unstackedbar",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Count",
                          "label": "QLen"
                        },
                        {
                          "seriesName": "thresholdLine",
                          "label": "Health Threshold"
                        }
                      ],
                      "customThresholdLine": "{qlenThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "queue-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet totalBytesByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where Name == \"edgeAgent_total_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | where device == \"{SelectedDevice}\"\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | extend diskfs = tostring(dimensions.disk_filesystem)\n    | where diskfs != \"overlay\"\n    | top-nested of device by Ignore0=max(1),\n      top-nested 1 of TimeGenerated by Ignore1=max(TimeGenerated),\n      top-nested of value by Ignore2=max(1),\n      top-nested of diskname by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, diskname, value, TimeGenerated\n    | summarize Bytes=max(value) by device, diskname\n    | summarize totalBytes=sum(Bytes) by device;\nlet used_disk_trend = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where Name == \"edgeAgent_available_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | where device == '{SelectedDevice}'\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | extend diskfs = tostring(dimensions.disk_filesystem)\n    | where diskfs != \"overlay\"\n    | project device, diskname, value, TimeGenerated\n    | summarize availBytes=sum(value) by device, TimeGenerated\n    | join kind=leftouter\n        totalBytesByDevice\n        on $left.device == $right.device\n    | extend percentUsed = round((todouble(totalBytes) - todouble(availBytes)) / todouble(totalBytes) * 100, 0)\n    | project TimeGenerated, device, percentUsed\n    | make-series Count=sum(percentUsed) on TimeGenerated from startTime to endTime step time({timeBin});\nused_disk_trend",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Disk space",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "unstackedbar",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Count",
                          "label": "Used (%)"
                        },
                        {
                          "seriesName": "thresholdLine",
                          "label": "Health Threshold"
                        }
                      ],
                      "customThresholdLine": "{hostDiskPercentThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "disk-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nInsightsMetrics\n| where TimeGenerated > startTime and TimeGenerated < endTime\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend quantile = tostring(dimensions.quantile)\n| where quantile == \"0.99\"\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend value = round(toint(Val),2)\n| make-series max(value) on TimeGenerated from startTime to endTime step time({timeBin})",
                    "size": 1,
                    "aggregation": 3,
                    "title": "Host-level CPU utilization",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "unstackedbar",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "thresholdLine",
                          "label": " Health Threshold"
                        },
                        {
                          "seriesName": "max_value",
                          "label": "CPU %"
                        }
                      ],
                      "customThresholdLine": "{hostCpuPercentThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "host-cpu-query - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet totalMemByDevice = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | where device == '{SelectedDevice}'\n    | extend value = tolong(Val)\n    | project device, value, TimeGenerated\n    | top-nested of device by Ignore0=max(1),\n      top-nested of TimeGenerated by Ignore1=max(TimeGenerated),\n      top-nested of value by Ignore2=max(1)\n    | project-away Ignore*\n    | summarize total_bytes=max(value) by device;\nInsightsMetrics\n    | where TimeGenerated > startTime\n    | where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | where device == '{SelectedDevice}'\n    | extend used_bytes = tolong(Val) \n    | project device, used_bytes, TimeGenerated\n    | join kind=leftouter totalMemByDevice on $left.device == $right.device\n    | extend mem_used_percent = (todouble(used_bytes) / todouble(total_bytes)) * 100\n    | extend mem_used_percent = round(mem_used_percent, 0)\n    | make-series max(mem_used_percent) on TimeGenerated from startTime to endTime step time({timeBin})",
                    "size": 1,
                    "aggregation": 3,
                    "title": "Host-level Memory utilization",
                    "noDataMessage": "Metric not reported",
                    "noDataMessageStyle": 4,
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "timeBrushParameterName": "timeRange",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "{resourceType}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "unstackedbar",
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "max_mem_used_percent",
                          "label": "Memory %"
                        },
                        {
                          "seriesName": "thresholdLine",
                          "label": "Health threshold"
                        }
                      ],
                      "customThresholdLine": "{hostMemPercentThreshold}",
                      "customThresholdLineStyle": 1,
                      "ySettings": {
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "memory-query"
                }
              ]
            },
            "name": "snapshot-charts",
            "styleSettings": {
              "margin": "-30px 0px 0px 0px"
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "invokedFromFleetViewWorkbook",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "name": "snapshot",
      "styleSettings": {
        "margin": "0px 0px 0px 0px",
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [
    ""
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}