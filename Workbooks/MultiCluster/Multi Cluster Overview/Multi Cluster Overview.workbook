{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "64f87c0f-eed6-4e3d-b820-996c88ae8a03",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 1800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            }
          },
          {
            "id": "a3a006f1-e89d-4628-8622-e06915226c05",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type in~ (\r\n'Microsoft.ContainerService/managedClusters', \r\n'Microsoft.Kubernetes/connectedClusters', \r\n'Microsoft.HybridContainerService/provisionedClusters')\r\n| summarize Count = count() by subscriptionId\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = subscriptionId, label = subscriptionId, selected = Rank == 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "1a1c7d2a-dee4-4c66-a179-3fdae9f0154f",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceType",
            "label": "Kubernetes cluster type",
            "type": 7,
            "isRequired": true,
            "query": "where type in~ (\r\n'Microsoft.ContainerService/managedClusters', \r\n'Microsoft.Kubernetes/connectedClusters', \r\n'Microsoft.HybridContainerService/provisionedClusters')\r\n| distinct type",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": "microsoft.containerservice/managedclusters",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "6920400e-5b98-4cc8-adc8-a0dc242d1685",
            "version": "KqlParameterItem/1.0",
            "name": "selectedCluster",
            "label": "Cluster Name",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubernetesConfigurationResources\r\n| where type =~ 'Microsoft.KubernetesConfiguration/extensions'\r\n| where tolower(id) contains '{ResourceType}'\r\n| extend id = tolower(split(id, '/providers/Microsoft.KubernetesConfiguration')[0])\r\n| extend properties = parse_json(tolower(properties))\r\n| where properties.extensiontype in ('microsoft.azuremonitor.containers')\r\n| project id, name,  workspaceResourceId = tostring(properties.configurationsettings.loganalyticsworkspaceresourceid)\r\n| where isnotempty(workspaceResourceId)\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5\r\n| union (\r\nresources\r\n| where type =~ '{ResourceType}'\r\n| project id, name,  workspaceResourceId = parse_json(tolower(properties)).addonprofiles.omsagent.config.loganalyticsworkspaceresourceid\r\n| where isnotempty(workspaceResourceId)\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5\r\n)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "61deb8e1-b47a-4dd1-83be-c46cb077648f",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceName",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "Kubernetes Service"
                }
              }
            ],
            "value": "Kubernetes Service"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "cluster parameter"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Common/noSubscriptions",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "Subscription",
        "comparison": "isEqualTo"
      },
      "name": "No subscriptions group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "<h2>Multi cluster dashboard</h2>"
            },
            "showPin": false,
            "name": "Title"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let NODE_HEALTHY_THRESHOLD = 0.85;\r\nlet NODE_CRITICAL_THRESHOLD = 0.6;\r\nlet USER_POD_HEALTHY_THRESHOLD = 1;\r\nlet USER_POD_CRITICAL_THRESHOLD = 0.9;\r\nlet SYSTEM_POD_HEALTHY_THRESHOLD = 1;\r\nlet Statuses = dynamic([\"Total\", \"Healthy\", \"Warning\", \"Critical\"]);\r\nlet NodeInventoryTable = materialize(KubeNodeInventory\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterRegion = tostring(parse_json(Labels)[0]['failure-domain.beta.kubernetes.io/region'])\r\n| project TimeGenerated, ClusterId, ClusterVersion = trim_start('v', KubeletVersion), Node = Computer, NodeStatus = Status, ClusterRegion);\r\n\r\nlet ClusterInfoTable = materialize(NodeInventoryTable\r\n| summarize arg_max(TimeGenerated, *) by ClusterId, ClusterVersion, ClusterRegion\r\n| project ClusterId, ClusterVersion, ClusterRegion);\r\n\r\nlet NodeTable = materialize(NodeInventoryTable\r\n| summarize arg_max(TimeGenerated, NodeStatus) by ClusterId, Node\r\n| project ClusterId, Node, NodeStatus\r\n| summarize HealthyNodeCount = sumif(1, NodeStatus == \"Ready\"), TotalNodeCount = sumif(1, true) by ClusterId);\r\n\r\nlet PodTable = materialize(KubePodInventory\r\n| where TimeGenerated {timeRange:query}\r\n| project TimeGenerated, ClusterId, Namespace, Node = Computer, PodUid, PodStatus\r\n| summarize arg_max(TimeGenerated, PodStatus) by ClusterId, Namespace, PodUid\r\n| project ClusterId, Namespace, PodUid, PodStatus\r\n| summarize HealthySystemPodsCount = sumif(1, Namespace =~ \"kube-system\" and ( PodStatus =~ \"Running\" or PodStatus  =~ \"succeeded\")),      HealthyUserPodsCount = sumif(1, Namespace !~ \"kube-system\" and ( PodStatus =~ \"Running\" or PodStatus  =~ \"succeeded\")),     TotalUserPodsCount = sumif(1, Namespace !~ \"kube-system\"),     TotalSystemPodsCount = sumif(1, Namespace =~ \"kube-system\") by ClusterId );\r\nNodeTable\r\n| join\r\n    ClusterInfoTable\r\non ClusterId\r\n| join\r\n    PodTable\r\non ClusterId\r\n| project-away ClusterId1, ClusterId2\r\n| project ClusterId, ClusterRegion, ClusterVersion, NodeHealthRatio = iff(HealthyNodeCount == 0 or TotalNodeCount == 0 , 0.0, todouble(HealthyNodeCount) / TotalNodeCount),  UserPodsHealthRatio = iff(TotalUserPodsCount == 0 , 1.0, todouble(HealthyUserPodsCount) / TotalUserPodsCount),  SystemPodsHealthRatio = iff(TotalSystemPodsCount == 0 , 0.0, todouble(HealthySystemPodsCount) / TotalSystemPodsCount),   HealthyNodeCount, TotalNodeCount, HealthyUserPodsCount, TotalUserPodsCount, HealthySystemPodsCount,TotalSystemPodsCount\r\n| project ClusterName = iff(isempty(split(ClusterId, \"/\")[8]), ClusterId, split(ClusterId, \"/\")[8]), ClusterRegion, ClusterVersion,    Status = case(NodeHealthRatio > NODE_HEALTHY_THRESHOLD and UserPodsHealthRatio >= USER_POD_HEALTHY_THRESHOLD and SystemPodsHealthRatio >= SYSTEM_POD_HEALTHY_THRESHOLD , \"healthy\",    NodeHealthRatio < NODE_CRITICAL_THRESHOLD or UserPodsHealthRatio < USER_POD_CRITICAL_THRESHOLD or SystemPodsHealthRatio < SYSTEM_POD_HEALTHY_THRESHOLD, \"critical\", \"warning\")\r\n| summarize Total = sumif(1, true), Healthy = sumif(1, Status == \"healthy\"), Warning = sumif(1, Status == \"warning\"), Critical = sumif(1, Status == \"critical\")\r\n| project Total, Healthy, Warning, Critical, Status = pack_all()\r\n| mv-apply Status1 = Statuses to typeof(string) on (\r\nproject Status1, status_count = tolong(Status[Status1])\r\n)\r\n| project Status1, status_count",
              "size": 3,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 1800000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{selectedCluster}"
              ],
              "visualization": "tiles",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Healthy",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Warning",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Critical",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "4",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Status1",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "status_count",
                  "formatter": 12
                },
                "rightContent": {
                  "columnMatch": "Status1",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Healthy",
                        "representation": "Available",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Warning",
                        "representation": "2",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Critical",
                        "representation": "4",
                        "text": ""
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": ""
                      }
                    ]
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "showPin": true,
            "name": "Multi cluster dashboard",
            "styleSettings": {
              "margin": "-50px 0px 0px 0px"
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "c1ad7695-24aa-42d3-b5f0-a5f5db959947",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "overview",
                  "style": "link"
                },
                {
                  "id": "afa49e5f-89ca-4a4a-a7fa-6688a0603159",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Cluster Performance",
                  "subTarget": "cpu",
                  "style": "link"
                },
                {
                  "id": "6400a3b1-6ad3-46a4-812b-b45ac9d4f15c",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Controllers",
                  "subTarget": "controllers",
                  "style": "link"
                },
                {
                  "id": "391212cf-0feb-4653-a192-cc94827ea72b",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Disk IO",
                  "subTarget": "io",
                  "style": "link"
                },
                {
                  "id": "b2c4f078-3bf4-4398-ba8f-6563879e92cb",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Disk Capacity",
                  "subTarget": "capacity",
                  "style": "link"
                },
                {
                  "id": "174badbb-c921-4e58-a5cc-8d09d9e4e527",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Network",
                  "subTarget": "network",
                  "style": "link"
                }
              ]
            },
            "name": "Tabs"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let NODE_HEALTHY_THRESHOLD = 0.85;\r\nlet NODE_CRITICAL_THRESHOLD = 0.6;\r\n\r\nlet USER_POD_HEALTHY_THRESHOLD = 1;\r\nlet USER_POD_CRITICAL_THRESHOLD = 0.9;\r\n\r\nlet SYSTEM_POD_HEALTHY_THRESHOLD = 1;\r\n\r\nlet NodeInventoryTable = materialize(KubeNodeInventory\r\n| where TimeGenerated {timeRange:query}\r\n| extend ClusterRegion = tostring(parse_json(Labels)[0]['failure-domain.beta.kubernetes.io/region'])\r\n| project TimeGenerated, ClusterId, ClusterVersion = trim_start('v', KubeletVersion), KubeProxyVersion = trim_start('v', KubeProxyVersion) , Node = Computer, NodeStatus = Status, ClusterRegion);\r\n\r\nlet ClusterInfoTable = materialize(NodeInventoryTable\r\n| where TimeGenerated {timeRange:query}\r\n| summarize arg_max(TimeGenerated, *) by ClusterId, ClusterVersion, KubeProxyVersion, ClusterRegion\r\n| project ClusterId, ClusterVersion, KubeProxyVersion, ClusterRegion);\r\n\r\nlet NodeTable = materialize(NodeInventoryTable\r\n| where TimeGenerated {timeRange:query}\r\n| summarize arg_max(TimeGenerated, NodeStatus) by ClusterId, Node\r\n| project ClusterId, Node, NodeStatus\r\n| summarize HealthyNodeCount = sumif(1, NodeStatus == \"Ready\"), TotalNodeCount = sumif(1, true) by ClusterId);\r\n\r\nlet PodTable = materialize(KubePodInventory\r\n| where TimeGenerated {timeRange:query}\r\n| project TimeGenerated, ClusterId, Namespace, Node = Computer, PodUid, PodStatus \r\n| summarize arg_max(TimeGenerated, PodStatus) by ClusterId, Namespace, PodUid\r\n| project ClusterId, Namespace, PodUid, PodStatus\r\n| summarize HealthySystemPodsCount = sumif(1, Namespace =~ \"kube-system\" and ( PodStatus =~ \"running\" or PodStatus  =~ \"succeeded\")), \r\n    HealthyUserPodsCount = sumif(1, Namespace !~ \"kube-system\" and ( PodStatus =~ \"running\" or PodStatus  =~ \"succeeded\")),\r\n    TotalUserPodsCount = sumif(1, Namespace !~ \"kube-system\"),\r\n    TotalSystemPodsCount = sumif(1, Namespace =~ \"kube-system\") by ClusterId\r\n);\r\n\r\nNodeTable \r\n| join ClusterInfoTable on ClusterId\r\n| join PodTable on ClusterId\r\n| project-away ClusterId1, ClusterId2\r\n| project ClusterId, ClusterRegion, ClusterVersion, KubeProxyVersion, NodeHealthRatio = iff(HealthyNodeCount == 0 or TotalNodeCount == 0 , 0.0, todouble(HealthyNodeCount) / TotalNodeCount),\r\n UserPodsHealthRatio = iff(TotalUserPodsCount == 0 , 1.0, todouble(HealthyUserPodsCount) / TotalUserPodsCount),\r\n SystemPodsHealthRatio = iff(TotalSystemPodsCount == 0 , 0.0, todouble(HealthySystemPodsCount) / TotalSystemPodsCount), \r\n HealthyNodeCount, TotalNodeCount, HealthyUserPodsCount, TotalUserPodsCount, HealthySystemPodsCount,TotalSystemPodsCount\r\n| project ClusterId, ClusterName = iff(isempty(split(ClusterId, \"/\")[8]), ClusterId, split(ClusterId, \"/\")[8]),ClusterType = case(ClusterId has 'microsoft.containerservice/managedclusters', 'AKS', ClusterId has 'microsoft.kubernetes/connectedclusters', 'Azure Arc', ClusterId has 'microsoft.hybridcontainerservice/provisionedclusters', 'AKS Hybrid', ClusterId has 'microsoft.containerservice/openshiftmanagedclusters', 'ARO', ClusterId has 'microsoft.redhatopenshift/openshiftclusters', 'AROv4', 'Unknown' ), ClusterRegion, ClusterVersion, KubeProxyVersion, Status = case(NodeHealthRatio > NODE_HEALTHY_THRESHOLD and UserPodsHealthRatio >= USER_POD_HEALTHY_THRESHOLD and SystemPodsHealthRatio >= SYSTEM_POD_HEALTHY_THRESHOLD , \"healthy\", \r\n  NodeHealthRatio < NODE_CRITICAL_THRESHOLD or UserPodsHealthRatio < USER_POD_CRITICAL_THRESHOLD or SystemPodsHealthRatio < SYSTEM_POD_HEALTHY_THRESHOLD, \"critical\", \"warning\"),\r\n  NodeHealthStatus = NodeHealthRatio,\r\n  Nodes = iff(TotalNodeCount == 0, \"0\", strcat_delim(\"/\", HealthyNodeCount, TotalNodeCount)),  \r\n  UserPodsHealthStatus = UserPodsHealthRatio, \r\n  UserPods = iff(TotalUserPodsCount == 0, \"0\", strcat_delim(\"/\", HealthyUserPodsCount, TotalUserPodsCount)),\r\n  SystemPodsHealthStatus = SystemPodsHealthRatio,  \r\n  SystemPods = iff(TotalSystemPodsCount == 0, \"0\", strcat_delim(\"/\", HealthySystemPodsCount, TotalSystemPodsCount))\r\n",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Cluster Status Summary",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ClusterId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "infrainsights",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "ClusterName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClusterRegion",
                          "formatter": 17,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            },
                            "emptyValCustomText": "-"
                          }
                        },
                        {
                          "columnMatch": "ClusterVersion",
                          "formatter": 0,
                          "tooltipFormat": {
                            "tooltip": "Kubernetes version"
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "healthy",
                                "representation": "Available",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "critical",
                                "representation": "critical",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "NodeHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0.85",
                                "representation": "Available",
                                "text": ""
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0.6",
                                "representation": "2",
                                "text": ""
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "0.6",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Nodes",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "UserPodsHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "Available",
                                "text": ""
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "0.9",
                                "representation": "warning",
                                "text": ""
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "0.9",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "UserPods",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "SystemPodsHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "Available",
                                "text": ""
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "1",
                                "representation": "critical",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Unknown",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SystemPods",
                          "formatter": 1
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "ClusterId",
                          "label": "Name"
                        },
                        {
                          "columnId": "ClusterName"
                        },
                        {
                          "columnId": "ClusterType"
                        },
                        {
                          "columnId": "ClusterRegion"
                        },
                        {
                          "columnId": "ClusterVersion",
                          "comment": ""
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "NodeHealthStatus"
                        },
                        {
                          "columnId": "Nodes"
                        },
                        {
                          "columnId": "UserPodsHealthStatus"
                        },
                        {
                          "columnId": "UserPods"
                        },
                        {
                          "columnId": "SystemPodsHealthStatus"
                        },
                        {
                          "columnId": "SystemPods"
                        }
                      ]
                    },
                    "sortBy": [],
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "1",
                    "comparison": "isEqualTo",
                    "value": "2"
                  },
                  "showPin": true,
                  "name": "Cluster Status Summary"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n | where type in~ ('Microsoft.Kubernetes/connectedClusters', 'Microsoft.HybridContainerService/provisionedClusters')\r\n| where id in~ ({selectedCluster})\r\n| project id = tolower(id), properties.kubernetesVersion\r\n| join  kind=innerunique (\r\nKubernetesConfigurationResources\r\n| where type =~ 'Microsoft.KubernetesConfiguration/extensions'\r\n| extend properties = parse_json(tolower(properties))\r\n| where properties.extensiontype in ('microsoft.azuremonitor.containers')\r\n| extend workspace = properties.configurationsettings.loganalyticsworkspaceresourceid\r\n| extend id = tolower(split(id, '/providers/Microsoft.KubernetesConfiguration')[0])\r\n| where id in~ ({selectedCluster})\r\n| project id, workspace\r\n)\r\n on id\r\n| project-away id1\r\n| union (\r\nresources\r\n| where type =~ 'Microsoft.ContainerService/managedClusters'\r\n| where id in~ ({selectedCluster})\r\n| extend aksproperties = parse_json(tolower(properties))\r\n| extend workspace =  aksproperties.addonprofiles.omsagent.config.loganalyticsworkspaceresourceid\r\n| project id, properties.kubernetesVersion, workspace\r\n)",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table"
                  },
                  "conditionalVisibility": {
                    "parameterName": "1",
                    "comparison": "isEqualTo",
                    "value": "2"
                  },
                  "name": "AKS Version"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\",\"mergeType\":\"inner\",\"leftTable\":\"Cluster Status Summary\",\"rightTable\":\"AKS Version\",\"leftColumn\":\"ClusterId\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[Cluster Status Summary].ClusterId\",\"mergedName\":\"Name\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].ClusterType\",\"mergedName\":\"ClusterType\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].ClusterRegion\",\"mergedName\":\"ClusterRegion\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[AKS Version].properties_kubernetesVersion\",\"mergedName\":\"AKS Ver.\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].ClusterVersion\",\"mergedName\":\"Kubelet Ver.\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].KubeProxyVersion\",\"mergedName\":\"KubeProxy Ver.\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].Status\",\"mergedName\":\"Status\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].NodeHealthStatus\",\"mergedName\":\"NodeHealthStatus\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].Nodes\",\"mergedName\":\"Nodes\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].UserPodsHealthStatus\",\"mergedName\":\"UserPodsHealthStatus\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].UserPods\",\"mergedName\":\"UserPods\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].SystemPodsHealthStatus\",\"mergedName\":\"SystemPodsHealthStatus\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].SystemPods\",\"mergedName\":\"SystemPods\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[AKS Version].id\",\"mergedName\":\"id\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[Cluster Status Summary].ClusterName\",\"mergedName\":\"ClusterName\",\"fromId\":\"0bcf2bc0-dacb-4313-8357-5f37bb866122\"},{\"originalName\":\"[AKS Version].name\",\"mergedName\":\"name\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].type\",\"mergedName\":\"type\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].tenantId\",\"mergedName\":\"tenantId\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].kind\",\"mergedName\":\"kind\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].location\",\"mergedName\":\"location\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].managedBy\",\"mergedName\":\"managedBy\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].sku\",\"mergedName\":\"sku\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].plan\",\"mergedName\":\"plan\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].properties\",\"mergedName\":\"properties\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].tags\",\"mergedName\":\"tags\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].identity\",\"mergedName\":\"identity\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].zones\",\"mergedName\":\"zones\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].extendedLocation\",\"mergedName\":\"extendedLocation\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].aksproperties\",\"mergedName\":\"aksproperties\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].version\",\"mergedName\":\"version\",\"fromId\":\"unknown\"},{\"originalName\":\"[AKS Version].workspace\",\"mergedName\":\"workspace\",\"fromId\":\"unknown\"}]}",
                    "size": 0,
                    "title": "Cluster Status Summary",
                    "showExportToExcel": true,
                    "queryType": 7,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "infrainsights",
                            "showIcon": true,
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "ClusterType",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "ClusterRegion",
                          "formatter": 17,
                          "formatOptions": {
                            "customColumnWidthSetting": "12ch"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "-"
                          }
                        },
                        {
                          "columnMatch": "AKS Ver.",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Kubelet Ver.",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "14ch"
                          }
                        },
                        {
                          "columnMatch": "KubeProxy Ver.",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "14ch"
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "healthy",
                                "representation": "Available",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "critical",
                                "representation": "critical",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "more",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "NodeHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": ".85",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": ">",
                                "thresholdValue": ".6",
                                "representation": "2",
                                "text": ""
                              },
                              {
                                "operator": "<=",
                                "thresholdValue": ".6",
                                "representation": "critical",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Nodes",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "SingleCluster.ReactView",
                              "extensionName": "Microsoft_Azure_ContainerInsightsExt",
                              "bladeJsonParameters": "{\r\n\t\"armClusterPath\": \"{id_column}\",\r\n\t\"armWorkspacePath\": \"{workspace_column}\",\r\n\t\"clusterRegion\": \"{ClusterRegion_column}\",\r\n\t\"selectedTab\": 2\r\n}"
                            }
                          }
                        },
                        {
                          "columnMatch": "UserPodsHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "Available",
                                "text": ""
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": ".9",
                                "representation": "2",
                                "text": ""
                              },
                              {
                                "operator": "<",
                                "thresholdValue": ".9",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Unknown",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "9.5ch"
                          }
                        },
                        {
                          "columnMatch": "UserPods",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "SingleCluster.ReactView",
                              "extensionName": "Microsoft_Azure_ContainerInsightsExt",
                              "bladeJsonParameters": "{\r\n\t\"armClusterPath\": \"{id_column}\",\r\n\t\"armWorkspacePath\": \"{workspace_column}\",\r\n\t\"clusterRegion\": \"{ClusterRegion_column}\",\r\n\t\"selectedTab\": 3,\r\n\t\"pillSelections\": {\"nameSpace\": \"user-pods\"}\r\n}"
                            }
                          }
                        },
                        {
                          "columnMatch": "SystemPodsHealthStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "1",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Unknown",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "9.5ch"
                          }
                        },
                        {
                          "columnMatch": "SystemPods",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "SingleCluster.ReactView",
                              "extensionName": "Microsoft_Azure_ContainerInsightsExt",
                              "bladeJsonParameters": "{\r\n\t\"armClusterPath\": \"{id_column}\",\r\n\t\"armWorkspacePath\": \"{workspace_column}\",\r\n\t\"clusterRegion\": \"{ClusterRegion_column}\",\r\n\t\"selectedTab\": 3,\r\n\t\"pillSelections\": {\"nameSpace\": \"system-pods\"}\r\n}"
                            }
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClusterName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "workspace",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "ClusterType"
                        },
                        {
                          "columnId": "ClusterRegion",
                          "label": "Region"
                        },
                        {
                          "columnId": "AKS Ver.",
                          "label": "Kubernetes Ver."
                        },
                        {
                          "columnId": "Kubelet Ver."
                        },
                        {
                          "columnId": "KubeProxy Ver."
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "NodeHealthStatus",
                          "label": " "
                        },
                        {
                          "columnId": "Nodes"
                        },
                        {
                          "columnId": "UserPodsHealthStatus",
                          "label": " "
                        },
                        {
                          "columnId": "UserPods"
                        },
                        {
                          "columnId": "SystemPodsHealthStatus",
                          "label": " "
                        },
                        {
                          "columnId": "SystemPods"
                        },
                        {
                          "columnId": "id"
                        },
                        {
                          "columnId": "ClusterName"
                        },
                        {
                          "columnId": "workspace"
                        }
                      ]
                    }
                  },
                  "showPin": false,
                  "name": "Displayed Summary"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "KubeNodeInventory\r\n| where TimeGenerated {timeRange:query}\r\n| where Computer !hasprefix \"virtual-\"\r\n| extend Location = tostring(parse_json(Labels)[0]['failure-domain.beta.kubernetes.io/region'])\r\n| summarize ClusterCount=dcount(ClusterId) by Location",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Azure regions where clusters are available",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "map",
                    "mapSettings": {
                      "locInfo": "AzureLoc",
                      "locInfoColumn": "Location",
                      "sizeSettings": "ClusterCount",
                      "sizeAggregation": "Sum",
                      "defaultSize": 25,
                      "labelSettings": "location",
                      "legendMetric": "ClusterCount",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "nodeColorField": "NodeCount",
                        "colorAggregation": "Max",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blue"
                          }
                        ]
                      }
                    }
                  },
                  "showPin": true,
                  "name": "Cluster Locations"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "overview"
            },
            "name": "Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "db383ce8-fd0f-45a8-811b-3af529843e18",
                        "version": "KqlParameterItem/1.0",
                        "name": "metricName",
                        "type": 2,
                        "value": "CPU",
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "\r\n    [\"CPU\",\"Memory\"]\r\n",
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "timeRange"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.insights/components"
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedTab",
                    "comparison": "isEqualTo",
                    "value": "cpu"
                  },
                  "name": "Node Metric"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "8b23e165-81fe-4258-bfdf-152d6c506640",
                        "cellValue": "cpuView",
                        "linkTarget": "parameter",
                        "linkLabel": "Hive",
                        "subTarget": "hive",
                        "preText": "Hive",
                        "style": "link"
                      },
                      {
                        "id": "6d1ae0a0-66fc-4f50-9d20-110bab61ea48",
                        "cellValue": "cpuView",
                        "linkTarget": "parameter",
                        "linkLabel": "Tabular",
                        "subTarget": "tabular",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "View Format"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trendBinSize=1m;\r\nlet precision =2;\r\nlet KPI = KubeNodeInventory\r\n| where isnotempty(Labels)\r\n| extend LabelsJSON = parse_json(Labels)[0]\r\n| extend NodePool = iff (isnotempty(LabelsJSON.agentpool), tostring(LabelsJSON.agentpool), \"Unknown\")\r\n| extend OS = iff(isnotempty(LabelsJSON.[\"beta.kubernetes.io/os\"]), tostring(LabelsJSON.[\"beta.kubernetes.io/os\"]), \"Unknown\")\r\n| project TimeGenerated, _ResourceId, NodePool, Computer, OS\r\n| summarize arg_max(TimeGenerated, *) by _ResourceId, NodePool, Computer, OS\r\n| project-away TimeGenerated;\r\n\r\nlet PerfTable = Perf\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName in (\"cpuUsageNanoCores\",  \"cpuCapacityNanoCores\",  \"memoryWorkingSetBytes\", \"memoryCapacityBytes\")\r\n| project TimeGenerated, _ResourceId, Computer, ObjectName, CounterName, CounterValue ;\r\n\r\nlet ExtendedPerfTable = PerfTable | join kind=leftouter  KPI on _ResourceId, Computer | project-away Computer1, _ResourceId1; \r\n\r\nlet calculateUtilization = (usageCounterName: string, capacityCounterName: string, usageObject: string)\r\n{\r\n\r\nlet filterMetric = (counterName: string, objectName: string) {  \r\n       ExtendedPerfTable\r\n       | where ObjectName =~ objectName and CounterName =~ counterName\r\n       | summarize CounterValue = avg(CounterValue) by _ResourceId, NodePool, OS,  bin(TimeGenerated, trendBinSize)       \r\n      };\r\n\r\n filterMetric(usageCounterName, usageObject)\r\n| project-rename Usage = CounterValue\r\n| join kind=leftouter\r\n(\r\n    filterMetric(capacityCounterName, usageObject)\r\n    | project-rename Available = CounterValue\r\n) on _ResourceId, NodePool, OS, TimeGenerated\r\n| project _ResourceId, NodePool, OS, TimeGenerated, pct = iff(isempty(Available) or isnull(Available), 0.0, round((100 * Usage)/Available,precision))\r\n| summarize percentiles(pct, 50, 90, 95, 99), Max = max(pct) by _ResourceId, NodePool, OS\r\n};\r\n\r\n\r\nlet utilizationTable = calculateUtilization('cpuUsageNanoCores', 'cpuCapacityNanoCores', 'K8SNode')\r\n| project-rename ['CPU P50'] = percentile_pct_50, ['CPU P90'] = percentile_pct_90, ['CPU P95'] = percentile_pct_95,  ['CPU P99'] = percentile_pct_99, ['CPU Max'] = Max\r\n| join\r\n(\r\n    calculateUtilization('memoryWorkingSetBytes', 'memoryCapacityBytes','K8SNode')\r\n   | project-rename ['Memory P50'] = percentile_pct_50, ['Memory P90'] = percentile_pct_90, ['Memory P95'] = percentile_pct_95, ['Memory P99'] = percentile_pct_99, ['Memory Max'] = Max\r\n)\r\non _ResourceId, OS;\r\n\r\nutilizationTable\r\n| project-away _ResourceId1, OS1, NodePool1\r\n| project-rename Cluster=_ResourceId\r\n| extend OSType = iif(OS =~'linux','🐧 ','🖥️')\r\n| project-reorder  Cluster, NodePool, OSType, ['CPU P50'],['CPU P90'],['CPU P95'], ['CPU P99'], ['CPU Max'], ['Memory P50'],['Memory P90'],['Memory P95'], ['Memory P99'], ['Memory Max']\r\n| extend Name = tostring(split(Cluster, \"/\")[-1])\r\n| extend DisplayValue = ['Memory P50']\r\n| sort by Name asc , OSType asc",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "View {cpuView}",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Name",
                        "parameterName": "metricForCluster"
                      },
                      {
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Cluster",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "CPU P50",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "CPU P90",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "CPU P95",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "CPU P99",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "CPU Max",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Memory P50",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Memory P90",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Memory P95",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Memory P99",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Memory Max",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "DisplayValue",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "CPU P75",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Mem P50",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Mem P75",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Mem P95",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          }
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "OS",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Cluster"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "OS",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "cpuView",
                    "comparison": "isEqualTo",
                    "value": "tabular"
                  },
                  "showPin": true,
                  "name": "Cluster Metrics Query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trendBinSize=1m;\r\nlet precision = 2;\r\nlet KPI = KubeNodeInventory\r\n| where isnotempty(Labels)\r\n| extend LabelsJSON = parse_json(Labels)[0]\r\n| extend NodePool = iff (isnotempty(LabelsJSON.agentpool), tostring(LabelsJSON.agentpool), \"Unknown\")\r\n| extend OS = iff(isnotempty(LabelsJSON.[\"beta.kubernetes.io/os\"]), tostring(LabelsJSON.[\"beta.kubernetes.io/os\"]), \"Unknown\")\r\n| project TimeGenerated, _ResourceId, NodePool, Computer, OS\r\n| summarize arg_max(TimeGenerated, *) by _ResourceId, NodePool, Computer, OS\r\n| project-away TimeGenerated;\r\nlet PerfTable = Perf\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName in (\"cpuUsageNanoCores\",  \"cpuCapacityNanoCores\",  \"memoryWorkingSetBytes\", \"memoryCapacityBytes\")\r\n| project TimeGenerated, _ResourceId, Computer, ObjectName, CounterName, CounterValue ;\r\nlet ExtendedPerfTable = PerfTable | join kind=leftouter  KPI on _ResourceId, Computer | project-away Computer1, _ResourceId1; \r\nlet calculateUtilization = (usageCounterName: string, capacityCounterName: string, usageObject: string)\r\n{\r\nlet filterMetric = (counterName: string, objectName: string) {  \r\n       ExtendedPerfTable\r\n       | where ObjectName == objectName and CounterName == counterName\r\n       | summarize CounterValue = avg(CounterValue) by _ResourceId, NodePool, OS,  bin(TimeGenerated, trendBinSize)       \r\n      };\r\n filterMetric(usageCounterName, usageObject)\r\n| project-rename Usage = CounterValue\r\n| join kind=leftouter\r\n(\r\n    filterMetric(capacityCounterName, usageObject)\r\n    | project-rename Available = CounterValue\r\n) on _ResourceId, NodePool, OS, TimeGenerated\r\n| project _ResourceId, NodePool, OS, TimeGenerated, pct = iff(isempty(Available) or isnull(Available), 0.0, round((100 * Usage)/Available, precision)) \r\n| summarize percentiles(pct, 50, 90, 95, 99), Max = max(pct) by _ResourceId, NodePool, OS\r\n};\r\nlet utilizationTable = calculateUtilization('cpuUsageNanoCores', 'cpuCapacityNanoCores', 'K8SNode')\r\n| project-rename ['CPU P50'] = percentile_pct_50, ['CPU P90'] = percentile_pct_90, ['CPU P95'] = percentile_pct_95,  ['CPU P99'] = percentile_pct_99, ['CPU Max'] = Max\r\n| join\r\n(    calculateUtilization('memoryWorkingSetBytes', 'memoryCapacityBytes','K8SNode')\r\n   | project-rename ['Memory P50'] = percentile_pct_50, ['Memory P90'] = percentile_pct_90, ['Memory P95'] = percentile_pct_95, ['Memory P99'] = percentile_pct_99, ['Memory Max'] = Max\r\n)\r\non _ResourceId, OS, NodePool;\r\nutilizationTable\r\n| project-away _ResourceId1, OS1, NodePool1\r\n| project-rename Cluster=_ResourceId\r\n| extend OSType = iif(OS =~'linux','🐧 ','🖥️')\r\n| project  Cluster, NodePool, OSType, ['CPU P50'],['CPU P90'],['CPU P95'], ['CPU P99'], ['CPU Max'], ['Memory P50'],['Memory P90'],['Memory P95'], ['Memory P99'], ['Memory Max'], OS\r\n| extend Name = tostring(split(Cluster, \"/\")[-1])\r\n| extend DisplayValue = ['Memory P50']\r\n| sort by Name asc , NodePool asc\r\n ",
                    "size": 0,
                    "aggregation": 3,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "Average Cluster {metricName} Utilization % By NodePool",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "NodePool",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "DisplayValue",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 2
                          }
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "OS",
                        "formatter": 1
                      },
                      "hivesContent": {
                        "columnMatch": "Name",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "nodeIdField": "Cluster",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "CPU P50",
                        "type": 4,
                        "heatmapPalette": "greenRed",
                        "heatmapMin": 0,
                        "heatmapMax": 100
                      },
                      "groupByField": "Name",
                      "hivesMargin": 2
                    }
                  },
                  "customWidth": "90",
                  "conditionalVisibility": {
                    "parameterName": "cpuView",
                    "comparison": "isNotEqualTo",
                    "value": "tabular"
                  },
                  "showPin": true,
                  "name": "cpu utilization table",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let capacityCounterName = \"cpuCapacityNanoCores\";\r\nlet usageCounterName = \"cpuUsageNanoCores\";\r\nlet precision = 2;\r\nKubeNodeInventory\r\n| where TimeGenerated {timeRange:query}\r\n| extend OS=tostring(parse_json(Labels)[0][\"beta.kubernetes.io/os\"])\r\n| distinct ClusterName, ClusterId, Computer , OS\r\n| project  InstanceName = strcat(ClusterId, \"/\", Computer), ClusterName, Computer , OS\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated {timeRange:query}    \r\n    | where ObjectName == \"K8SNode\"\r\n    | where CounterName == capacityCounterName\r\n    | project Computer, InstanceName, CapacityValue = CounterValue \r\n    ) on InstanceName\r\n    | join kind=inner hint.strategy=shuffle (\r\n        Perf\r\n         | where TimeGenerated {timeRange:query}        \r\n        | where ObjectName == \"K8SNode\"\r\n        | where CounterName == usageCounterName\r\n        | project TimeGenerated, Computer, InstanceName, UsageValue = CounterValue\r\n    ) on InstanceName \r\n| project TimeGenerated, Computer, InstanceName, ClusterName, UsagePercent = round((UsageValue * 100) / CapacityValue, precision), OS\r\n| extend ComputerId = strcat(InstanceName, \"|\", OS)\r\n| summarize Avg = avg(UsagePercent) by ComputerId\r\n| extend OS = split(ComputerId, \"|\")[1], NodeName = split(split(ComputerId, \"/\")[9], \"|\")[0], ClusterName = split(ComputerId, \"/\")[8]\r\n| project ClusterName, NodeName, OS, Avg\r\n",
                    "size": 2,
                    "aggregation": 3,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "Average Cluster CPU Utilization% - Select a node to see more details",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "NodeName",
                        "parameterName": "hiveSelectedNode",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Name",
                        "parameterName": "hiveSelectedCluster",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "NodeName",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Avg",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none",
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": false,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/MultiCluster/Multi Cluster Performance",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "selectedCluster",
                                "source": "parameter",
                                "value": "selectedCluster"
                              },
                              {
                                "name": "Subscription",
                                "source": "parameter",
                                "value": "Subscription"
                              },
                              {
                                "name": "timeRange",
                                "source": "parameter",
                                "value": "timeRange"
                              },
                              {
                                "name": "hiveSelectedNode",
                                "source": "column",
                                "value": "NodeName"
                              },
                              {
                                "name": "hiveSelectedCluster",
                                "source": "column",
                                "value": "ClusterName"
                              },
                              {
                                "name": "ResourceType",
                                "source": "parameter",
                                "value": "ResourceType"
                              }
                            ]
                          }
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "OS",
                        "formatter": 1
                      },
                      "hivesContent": {
                        "columnMatch": "ClusterName",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "nodeIdField": "NodeName",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "Avg",
                        "type": 4,
                        "heatmapPalette": "greenRed",
                        "heatmapMin": 0,
                        "heatmapMax": 100,
                        "emptyValueColor": "orange"
                      },
                      "groupByField": "ClusterName",
                      "hivesMargin": 2
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "dev-d01-nam-westus2-aks/aksap000000",
                          "label": "dev-westu2"
                        }
                      ],
                      "ySettings": {
                        "unit": 1,
                        "min": null,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "90",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "cpu"
                    },
                    {
                      "parameterName": "metricName",
                      "comparison": "isEqualTo",
                      "value": "CPU"
                    }
                  ],
                  "showPin": true,
                  "name": "cpu utilization per node",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let capacityCounterName = \"memoryCapacityBytes\";\r\nlet usageCounterName = \"memoryWorkingSetBytes\";\r\nlet precision = 2;\r\nKubeNodeInventory\r\n| where TimeGenerated {timeRange:query}\r\n| extend OS=tostring(parse_json(Labels)[0][\"beta.kubernetes.io/os\"])\r\n| distinct ClusterName, ClusterId, Computer , OS\r\n| project  InstanceName = strcat(ClusterId, \"/\", Computer), ClusterName, Computer , OS\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated {timeRange:query}    \r\n    | where ObjectName == \"K8SNode\"\r\n    | where CounterName == capacityCounterName\r\n    | project Computer, InstanceName, CapacityValue = CounterValue \r\n    ) on InstanceName\r\n    | join kind=inner hint.strategy=shuffle (\r\n        Perf\r\n         | where TimeGenerated {timeRange:query}        \r\n        | where ObjectName == \"K8SNode\"\r\n        | where CounterName == usageCounterName\r\n        | project TimeGenerated, Computer, InstanceName, UsageValue = CounterValue\r\n    ) on InstanceName \r\n| project TimeGenerated, Computer, InstanceName, ClusterName, UsagePercent = round((UsageValue * 100) / CapacityValue, precision), OS\r\n| extend ComputerId = strcat(InstanceName, \"|\", OS)\r\n| summarize Avg = avg(UsagePercent) by ComputerId\r\n| extend OS = split(ComputerId, \"|\")[1], NodeName = split(split(ComputerId, \"/\")[9], \"|\")[0], ClusterName = split(ComputerId, \"/\")[8]\r\n| project ClusterName, NodeName, OS, Avg",
                    "size": 2,
                    "aggregation": 3,
                    "showAnnotations": true,
                    "showAnalytics": true,
                    "title": "Average Node Memory Utilization% - Select a node to see more details",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "NodeName",
                        "parameterName": "hiveSelectedNode",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Cluster",
                        "parameterName": "hiveSelectedCluster",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "NodeName",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Ring"
                      },
                      "centerContent": {
                        "columnMatch": "Avg",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none",
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": false,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/MultiCluster/Multi Cluster Performance",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "hiveSelectedCluster",
                                "source": "column",
                                "value": "ClusterName"
                              },
                              {
                                "name": "hiveSelectedNode",
                                "source": "column",
                                "value": "NodeName"
                              },
                              {
                                "name": "timeRange",
                                "source": "parameter",
                                "value": "timeRange"
                              },
                              {
                                "name": "Subscription",
                                "source": "parameter",
                                "value": "Subscription"
                              },
                              {
                                "name": "ClusterType",
                                "source": "parameter",
                                "value": "ResourceType"
                              },
                              {
                                "name": "selectedCluster",
                                "source": "parameter",
                                "value": "selectedCluster"
                              }
                            ]
                          }
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Silo"
                      },
                      "bottomContent": {
                        "columnMatch": "OS"
                      },
                      "hivesContent": {
                        "columnMatch": "ClusterName",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "nodeIdField": "ClusterName",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "Avg",
                        "type": 4,
                        "heatmapPalette": "greenRed",
                        "heatmapMin": 0,
                        "heatmapMax": 100,
                        "emptyValueColor": "orange"
                      },
                      "groupByField": "ClusterName",
                      "hivesMargin": 2
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "dev-d01-nam-westus2-aks/aksap000000",
                          "label": "dev-westu2"
                        }
                      ],
                      "ySettings": {
                        "unit": 1,
                        "min": null,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "90",
                  "conditionalVisibility": {
                    "parameterName": "metricName",
                    "comparison": "isEqualTo",
                    "value": "Memory"
                  },
                  "showPin": true,
                  "name": "mem utilization hive ",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "cpu"
            },
            "name": "cpu-metrics-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "parameters": [
                      {
                        "id": "e57b2d9e-d036-463f-921f-2fa3def45ef2",
                        "version": "KqlParameterItem/1.0",
                        "name": "Status",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "KubePodInventory\r\n| where TimeGenerated {timeRange:query}    \r\n| extend ControllerKind = iff(isempty(ControllerKind), \"WithoutController\", ControllerKind)\r\n| summarize count() by PodStatus\r\n| project PodStatus",
                        "crossComponentResources": [
                          "{selectedCluster}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "timeRange",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "{ResourceType}",
                        "label": "Controller Status"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "{ResourceType}"
                  },
                  "name": "controller status selector"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "KubePodInventory\r\n| where TimeGenerated {timeRange:query}    \r\n| extend ControllerKind = iff(isempty(ControllerKind), \"WithoutController\", ControllerKind)\r\n| summarize PodCount = dcount(PodUid), ContainerCount = dcount(ContainerID) by ClusterId, Computer, Namespace, ControllerKind, ContainerName, PodName = Name, PodStatus, ControllerName, ContainerRestartCount\r\n| where PodStatus in ({Status})\r\n| extend Overall = case(PodStatus contains \"Failed\", 2, PodStatus contains \"Pending\",1, 0) \r\n| project ClusterId,Overall, PodCount, ContainerCount, ContainerRestartCount,PodStatus, ControllerKind, ControllerName, PodName, ContainerName, Namespace, Computer\r\n| sort by ContainerRestartCount desc\r\n| sort by Overall desc",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Controllers",
                    "noDataMessage": "No controllers were found matching the selected status",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "infrainsights",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "ClusterId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Overall",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "failed",
                                "text": ""
                              }
                            ],
                            "aggregation": "Max"
                          }
                        },
                        {
                          "columnMatch": "PodCount",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 3
                            },
                            "emptyValCustomText": "-"
                          }
                        },
                        {
                          "columnMatch": "ContainerCount",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "turquoise",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 3
                            },
                            "emptyValCustomText": "-"
                          }
                        },
                        {
                          "columnMatch": "ContainerRestartCount",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "yellow",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 3
                            },
                            "emptyValCustomText": "-"
                          }
                        },
                        {
                          "columnMatch": "PodStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Running",
                                "representation": "Available",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Pending",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "4",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ControllerName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "PodName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ContainerName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Namespace",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/MultiCluster/Multi Cluster Controllers",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "Subscription",
                                  "source": "parameter",
                                  "value": "Subscription"
                                },
                                {
                                  "name": "ResourceType",
                                  "source": "parameter",
                                  "value": "ResourceType"
                                },
                                {
                                  "name": "selectedCluster",
                                  "source": "column",
                                  "value": "ClusterId"
                                },
                                {
                                  "name": "selectedAppNamespace",
                                  "source": "column",
                                  "value": "Namespace"
                                },
                                {
                                  "name": "timeRange",
                                  "source": "parameter",
                                  "value": "timeRange"
                                }
                              ]
                            }
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            },
                            "emptyValCustomText": "-"
                          }
                        }
                      ],
                      "rowLimit": 2000,
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "ClusterId",
                          "ControllerName",
                          "PodName"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "ContainerName"
                      },
                      "labelSettings": [
                        {
                          "columnId": "ClusterId"
                        },
                        {
                          "columnId": "Overall",
                          "label": "OverallStatus"
                        },
                        {
                          "columnId": "PodCount"
                        },
                        {
                          "columnId": "ContainerCount"
                        },
                        {
                          "columnId": "ContainerRestartCount",
                          "label": "Restarts"
                        },
                        {
                          "columnId": "PodStatus"
                        },
                        {
                          "columnId": "ControllerKind"
                        },
                        {
                          "columnId": "PodName"
                        },
                        {
                          "columnId": "ContainerName"
                        },
                        {
                          "columnId": "Namespace"
                        },
                        {
                          "columnId": "Computer"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "controllers query"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "controllers"
            },
            "name": "controllers"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name)), ClusterName = tostring(Tags.[\"container.azm.ms/clusterId\"])\r\n| where ClusterName in~ ({selectedCluster})\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| extend partitionKey = strcat(NodeDisk, '/', Name)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, PrevTimeGenerated, ClusterName, HostName, Device, NodeDisk, Name, Rate, Val;\r\nlet bytesRead = data\r\n| where Name == 'read_bytes'\r\n| extend Rate = Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated);\r\nlet msPerByteRead = data\r\n| where Name == 'read_bytes'\r\n| extend Rate = (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000) / Rate;\r\nlet bytesWritten = data\r\n| where Name == 'write_bytes'\r\n| extend Rate = Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated);\r\nlet msPerByteWritten = data\r\n| where Name == 'write_bytes'\r\n| extend Rate = (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000) / Rate;\r\nlet readsPerSec = data \r\n| where Name == 'reads' \r\n| extend ReadsRate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated));\r\nlet writesPerSec = data \r\n| where Name == 'writes' \r\n| extend WritesRate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated)); \r\nlet iops = readsPerSec \r\n| join writesPerSec on TimeGenerated, HostName, Device \r\n| extend ReadsRate = iif(ReadsRate < 0, 0.0, ReadsRate) \r\n| extend WritesRate = iif(WritesRate < 0, 0.0, WritesRate) \r\n| extend Rate = WritesRate + WritesRate;\r\n\r\nlet diskBusy = data\r\n| where Name == 'io_time'\r\n| extend Rate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000));\r\nlet maxOn = -1;\r\nlet avgOn = -1;\r\nlet minOn = -1;\r\nlet bytesReadTableData = bytesRead // bytes read per sec \r\n| summarize BytesReadPerSecond = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by ClusterName, HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    bytesRead\r\n    | make-series BytesReadPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device),ClusterName, HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', BytesReadPerSecond, BytesReadPerSecondTrend;\r\nlet bytesWrittenTableData = bytesWritten // bytes witten per sec \r\n| summarize BytesWrittenPerSecond = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by ClusterName, HostName, Device // for devices\r\n| join kind = inner (\r\n    bytesWritten\r\n    | make-series BytesWrittenPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device),ClusterName, HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', BytesWrittenPerSecond, BytesWrittenPerSecondTrend;\r\nlet diskBusyTableData = diskBusy // disk busy\r\n| summarize DiskBusy = max(Rate) by ClusterName, HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    diskBusy\r\n    | make-series DiskBusyTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project ClusterName, Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', DiskBusy, DiskBusyTrend;\r\nlet iopsTableData = iops // iops\r\n| summarize IOPS = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by ClusterName, HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    iops\r\n    | make-series IOPSTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName,HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project ClusterName, Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', IOPS, IOPSTrend;\r\nbytesReadTableData\r\n| join kind = inner ( bytesWrittenTableData ) on Id\r\n| join kind = inner ( diskBusyTableData ) on Id\r\n| join kind = inner ( iopsTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, Id2, Name2, ParentId2, Kind2, Id3, Name3, ParentId3, Kind3, Device1, Device2, Device3, HostName1, HostName2, HostName3, ClusterName1, ClusterName2, ClusterName3\r\n| project-rename ClusterName, ['Read Bytes/sec'] = BytesReadPerSecond, ['Read Bytes/sec Trend'] = BytesReadPerSecondTrend, ['Write Bytes/sec'] = BytesWrittenPerSecond, ['Write Bytes/sec Trend'] = BytesWrittenPerSecondTrend, ['% Disk Busy'] = DiskBusy, ['% Disk Busy Trend'] = DiskBusyTrend, ['IOPS Trend'] = IOPSTrend\r\n| order by Id asc\r\n| project-rename ClusterName,  FullId = Id, GridId = Name, Name = ParentId",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Disk IO Overview",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportParameterName": "selectedRow",
                    "exportDefaultValue": "{\"Kind\":\"Unselected\"}",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "infrainsights",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "FullId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ClusterName",
                          "formatter": 5,
                          "formatOptions": {
                            "aggregation": "Min"
                          }
                        },
                        {
                          "columnMatch": "HostName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Device",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "GridId",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": false,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "ClusterName",
                              "resourceIdsSource": "column",
                              "resourceIds": "ClusterName",
                              "templateIdSource": "static",
                              "templateId": "community-Workbooks/AKS/Node Disk IO",
                              "typeSource": "workbook",
                              "gallerySource": "static",
                              "gallery": "container-insights",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "selectedDevices1",
                                  "source": "column",
                                  "value": "Device"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Read Bytes/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Read Bytes/sec Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "Write Bytes/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Write Bytes/sec Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "% Disk Busy",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "percent",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "% Disk Busy Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "IOPS",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "IOPS Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "Read Bytes/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "ClusterName",
                          "Name"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "GridId"
                      },
                      "labelSettings": [
                        {
                          "columnId": "ClusterName"
                        },
                        {
                          "columnId": "HostName"
                        },
                        {
                          "columnId": "Device"
                        },
                        {
                          "columnId": "GridId",
                          "label": "Drill-in"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Kind"
                        },
                        {
                          "columnId": "Read Bytes/sec Trend"
                        },
                        {
                          "columnId": "Write Bytes/sec"
                        },
                        {
                          "columnId": "Write Bytes/sec Trend"
                        },
                        {
                          "columnId": "% Disk Busy"
                        },
                        {
                          "columnId": "% Disk Busy Trend"
                        },
                        {
                          "columnId": "IOPS"
                        },
                        {
                          "columnId": "IOPS Trend"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Disk IO Overview"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "io"
            },
            "name": "Disk IO"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where TimeGenerated {timeRange:query}    \r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent' or Name == 'free'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device)), ClusterId = tostring(Tags.[\"container.azm.ms/clusterId\"])\r\n| where ClusterId in~ ({selectedCluster})\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| project TimeGenerated, ClusterId,  HostName, NodeDisk, Device, Name, Val;\r\n\r\nlet usedPercent = data\r\n| where Name == 'used_percent';\r\nlet free = data\r\n| where Name == 'free';\r\nlet worstDisksPerNode = usedPercent\r\n| partition by HostName (\r\n    summarize UsedPercent = max(Val) by ClusterId, HostName, Device, NodeDisk\r\n    | top 1 by UsedPercent desc\r\n);\r\n\r\nusedPercent // used percent for devices\r\n| summarize UsedPercent = max(Val) by ClusterId, HostName, Device\r\n| join kind = inner (\r\n    usedPercent \r\n    | make-series UsedPercentTrend = max(Val) default = 0 on {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterId, HostName, Device\r\n) on ClusterId, HostName, Device\r\n| project ClusterId, Id = strcat(HostName, Device), Name = strcat('🔹 ', Device), ParentId = HostName, Kind = 'Device', UsedPercent, UsedPercentTrend\r\n| union ( // used percent for nodes\r\n    usedPercent\r\n    | summarize UsedPercent = max(Val) by ClusterId, HostName\r\n    | join kind = inner (\r\n        usedPercent \r\n        | make-series UsedPercentTrend = max(Val) default = 0 on {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterId, HostName\r\n    ) on ClusterId, HostName\r\n    | project ClusterId, Id = HostName, Name = strcat('🖥️ ', HostName), ParentId = '', Kind = 'Node', UsedPercent, UsedPercentTrend\r\n)\r\n| join kind = inner (\r\n    free // free space for devices\r\n    | summarize Free = min(Val) by ClusterId, HostName, Device\r\n    | join kind = inner (\r\n        free    \r\n        | make-series FreeTrend = min(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterId, HostName, Device\r\n    ) on ClusterId, HostName, Device   \r\n    | project ClusterId, Id = strcat(HostName, Device), Name = Device, ParentId = HostName, Kind = 'Device', Free, FreeTrend\r\n    | union ( // free space for nodes\r\n        free\r\n        | summarize Free = min(Val) by ClusterId, HostName, Device\r\n        | join kind = inner ( // match the set of node-disk free space data to the nodes with the worst used percent data for setting the data in the node rows\r\n            worstDisksPerNode\r\n        ) on ClusterId, HostName, Device\r\n        | join kind = inner (\r\n            free \r\n            | make-series FreeTrend = min(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterId, HostName, Device\r\n            | join kind = inner (\r\n                worstDisksPerNode\r\n            ) on ClusterId, HostName, Device\r\n        ) on HostName\r\n        | project ClusterId, Id = HostName, Name = HostName, ParentId = '', Kind = 'Node', Free, FreeTrend\r\n    )\r\n) on Id\r\n| extend ClusterName = iff(isempty(split(ClusterId, \"/\")[8]), ClusterId, split(ClusterId, \"/\")[8])\r\n| project-away Id1, Name1, ParentId1, Kind1,  ClusterId1\r\n| project-rename ClusterName , ['Used Disk % (Max)'] = UsedPercent, ['Used Disk % Trend (Max)'] = UsedPercentTrend, ['Free Disk Space (Min)'] = Free, ['Free Disk Space Trend (Min)'] = FreeTrend\r\n| order by ['Used Disk % (Max)'] desc, Name asc\r\n| where isempty(ParentId) == false\r\n| extend Host = strcat('🖥️ ', ParentId)",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Disk Capacity Overview",
                    "timeContext": {
                      "durationMs": 1800000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportParameterName": "selectedRow",
                    "exportDefaultValue": "{\"Kind\":\"Unselected\"}",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "ClusterId",
                              "resourceIdsSource": "column",
                              "resourceIds": "ClusterId",
                              "templateIdSource": "static",
                              "templateId": "community-Workbooks/AKS/Node Disk Capacity AKS",
                              "typeSource": "workbook",
                              "gallerySource": "static",
                              "gallery": "container-insights",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "ComponentId",
                                  "source": "column",
                                  "value": "ClusterId"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "ClusterId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": false,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "ClusterId",
                              "resourceIdsSource": "column",
                              "resourceIds": "ClusterId",
                              "templateIdSource": "static",
                              "templateId": "community-Workbooks/AKS/Node Disk Capacity",
                              "typeSource": "workbook",
                              "gallerySource": "static",
                              "gallery": "container-insights",
                              "locationSource": "default"
                            }
                          }
                        },
                        {
                          "columnMatch": "ParentId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Used Disk % (Max)",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">=",
                                "thresholdValue": "90",
                                "representation": "2"
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "99",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "aggregation": "Max"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "Used Disk % Trend (Max)",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed",
                            "aggregation": "Max"
                          }
                        },
                        {
                          "columnMatch": "Free Disk Space (Min)",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Max"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "Free Disk Space Trend (Min)",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blueDark",
                            "aggregation": "Max"
                          }
                        },
                        {
                          "columnMatch": "ClusterName",
                          "formatter": 5,
                          "formatOptions": {
                            "aggregation": "Min"
                          }
                        },
                        {
                          "columnMatch": "Host",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "ClusterId",
                          "Host"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "ClusterId"
                        },
                        {
                          "columnId": "Id",
                          "label": ""
                        },
                        {
                          "columnId": "Name",
                          "label": "Drill-in"
                        },
                        {
                          "columnId": "ParentId"
                        },
                        {
                          "columnId": "Kind"
                        },
                        {
                          "columnId": "Used Disk % (Max)"
                        },
                        {
                          "columnId": "Used Disk % Trend (Max)"
                        },
                        {
                          "columnId": "Free Disk Space (Min)"
                        },
                        {
                          "columnId": "Free Disk Space Trend (Min)"
                        },
                        {
                          "columnId": "ClusterName"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Disk Capacity Overview"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "capacity"
            },
            "name": "Disk Capacity"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n| extend ClusterName = tostring(Tags.[\"container.azm.ms/clusterId\"])\r\n| where ClusterName in~ ({selectedCluster})\r\n| extend partitionKey = strcat(HostName, '/', Interface, '/', Name)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / datetime_diff('Second', TimeGenerated, PrevTimeGenerated), (Val - PrevVal) / datetime_diff('Second', TimeGenerated, PrevTimeGenerated))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, ClusterName, HostName, Interface, Name, Rate;\r\nlet bytesSent = data\r\n| where Name == 'bytes_sent';\r\nlet bytesReceived = data\r\n| where Name == 'bytes_recv';\r\nlet errorsOut = data\r\n| where Name == 'err_out';\r\nlet errorsIn = data\r\n| where Name == 'err_in';\r\nlet maxOn = -1;\r\nlet avgOn = -1;\r\nlet minOn = -1;\r\nlet bytesSentTableData = bytesSent // bytes sent per sec data\r\n| summarize BytesSentPerSecond = avg(Rate) by HostName, Interface // for interfaces, group by parentId (HostName) \r\n| join kind = inner (\r\n    bytesSent\r\n    | make-series BytesSentPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project ClusterName, Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', BytesSentPerSecond, BytesSentPerSecondTrend;\r\nlet bytesReceivedTableData = bytesReceived // bytes received per sec data\r\n| summarize BytesReceivedPerSecond = avg(Rate) by ClusterName, HostName, Interface\r\n| join kind = inner (\r\n    bytesReceived\r\n    | make-series BytesReceivedPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), ClusterName, HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', BytesReceivedPerSecond, BytesReceivedPerSecondTrend;\r\nlet errorsOutTableData = errorsOut // errors out per sec data\r\n| summarize ErrorsOutPerSecond = avg(Rate) by ClusterName, HostName, Interface\r\n| join kind = inner (\r\n    errorsOut\r\n    | make-series ErrorsOutPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), ClusterName, HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', ErrorsOutPerSecond, ErrorsOutPerSecondTrend;\r\nlet errorsInTableData = errorsIn // errors in per sec data\r\n| summarize ErrorsInPerSecond = avg(Rate) by ClusterName, HostName, Interface\r\n| join kind = inner (\r\n    errorsIn\r\n    | make-series ErrorsInPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by ClusterName, HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project ClusterName, Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', ErrorsInPerSecond, ErrorsInPerSecondTrend;\r\nbytesSentTableData\r\n| join kind = inner ( bytesReceivedTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| join kind = inner ( errorsOutTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| join kind = inner ( errorsInTableData ) on Id\r\n| project-away ClusterName1,ClusterName2, ClusterName3,Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| project-rename ['Sent Bytes/sec'] = BytesSentPerSecond, ['Sent Bytes/sec Trend'] = BytesSentPerSecondTrend, ['Received Bytes/sec'] = BytesReceivedPerSecond, ['Received Bytes/sec Trend'] = BytesReceivedPerSecondTrend, ['Errors Out/sec'] = ErrorsOutPerSecond, ['ErrorsOut/sec Trend'] = ErrorsOutPerSecondTrend, ['Errors In/sec'] = ErrorsInPerSecond, ['Errors In/sec Trend'] = ErrorsInPerSecondTrend\r\n| order by Id asc\r\n| project-rename ClusterName, FullId = Id, GridId = Name, Name = ParentId",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Network Overview",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "{ResourceType}",
                    "crossComponentResources": [
                      "{selectedCluster}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "infrainsights",
                            "linkIsContextBlade": false,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FullId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "HostName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Interface",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "GridId",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": false,
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "ClusterName",
                              "resourceIdsSource": "column",
                              "resourceIds": "ClusterName",
                              "templateIdSource": "static",
                              "templateId": "community-Workbooks/AKS/Node Network",
                              "typeSource": "workbook",
                              "gallerySource": "static",
                              "gallery": "container-insights",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "selectedInterfaces1",
                                  "source": "column",
                                  "value": "Interface"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Sent Bytes/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Sent Bytes/sec Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "Received Bytes/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 11,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Received Bytes/sec Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "Errors Out/sec",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "ErrorsOut/sec Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue",
                            "aggregation": "Sum"
                          }
                        },
                        {
                          "columnMatch": "Errors In/sec",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Errors In/sec Trend",
                          "formatter": 9
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "ClusterName",
                          "Name"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "GridId"
                      },
                      "labelSettings": [
                        {
                          "columnId": "ClusterName"
                        },
                        {
                          "columnId": "FullId"
                        },
                        {
                          "columnId": "HostName"
                        },
                        {
                          "columnId": "Interface"
                        },
                        {
                          "columnId": "GridId",
                          "label": "Drill-in"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Kind"
                        },
                        {
                          "columnId": "Sent Bytes/sec"
                        },
                        {
                          "columnId": "Sent Bytes/sec Trend"
                        },
                        {
                          "columnId": "Received Bytes/sec"
                        },
                        {
                          "columnId": "Received Bytes/sec Trend"
                        },
                        {
                          "columnId": "Errors Out/sec"
                        },
                        {
                          "columnId": "ErrorsOut/sec Trend"
                        },
                        {
                          "columnId": "Errors In/sec"
                        },
                        {
                          "columnId": "Errors In/sec Trend"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Network Overview"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "network"
            },
            "name": "network"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Subscription",
        "comparison": "isNotEqualTo"
      },
      "name": "Workbook Content"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}