{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "64f87c0f-eed6-4e3d-b820-996c88ae8a03",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            }
          },
          {
            "id": "a3a006f1-e89d-4628-8622-e06915226c05",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ 'Microsoft.ContainerService/managedClusters'\r\n| summarize Count = count() by subscriptionId\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = subscriptionId, label = subscriptionId, selected = Rank == 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "6920400e-5b98-4cc8-adc8-a0dc242d1685",
            "version": "KqlParameterItem/1.0",
            "name": "selectedCluster",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ 'Microsoft.ContainerService/managedClusters'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "efc14729-e496-4d20-bde5-2e3786ce2cdc",
            "version": "KqlParameterItem/1.0",
            "name": "selectedAppNamespace",
            "label": "Namespace",
            "type": 2,
            "isRequired": true,
            "query": "KubePodInventory\r\n|extend d=todynamic(parse_json(PodLabel)[0])\r\n|extend appType=iif(d[\"app\"]!=\"\", d[\"app\"], iif(d[\"component\"]!=\"\", d[\"component\"], iif(d[\"k8s-app\"]!=\"\", d[\"k8s-app\"], ServiceName))),\r\nversion=iif(d[\"app\"]!=\"\", d[\"version\"], \"\")\r\n|project-away d\r\n//| where  not (Namespace in ('default', 'kube-system'))\r\n| summarize InstanceCount = dcount(PodUid) by appType, Namespace\r\n| distinct Namespace\r\n| project Namespace",
            "crossComponentResources": [
              "{selectedCluster}"
            ],
            "value": "kube-system",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 0,
            "resourceType": "microsoft.containerservice/managedclusters"
          },
          {
            "id": "72d07cee-4c46-40d9-8e80-0465efda30d2",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceType",
            "type": 7,
            "query": "where type in~ (\r\n'Microsoft.ContainerService/managedClusters', \r\n'Microsoft.Kubernetes/connectedClusters', \r\n'Microsoft.RedHatOpenShift/OpenShiftClusters',\r\n'Microsoft.ContainerService/openshiftManagedClusters', \r\n'Microsoft.HybridContainerService/provisionedClusters')\r\n| distinct type",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": "microsoft.containerservice/managedclusters",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "cluster parameter"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Application Metrics",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "KubePodInventory\r\n| where TimeGenerated {timeRange:query} and  Namespace =~ '{selectedAppNamespace}' and PodStatus == 'Running'\r\n|extend d=todynamic(parse_json(PodLabel)[0])\r\n|extend appType=iif(d[\"app\"]!=\"\", d[\"app\"], iif(d[\"component\"]!=\"\", d[\"component\"], iif(d[\"k8s-app\"]!=\"\", d[\"k8s-app\"], ServiceName))),\r\nversion=iif(d[\"app\"]!=\"\", d[\"version\"], \"\")\r\n| join kind=inner (\r\n    KubeNodeInventory | extend Location = tostring(parse_json(Labels)[0]['failure-domain.beta.kubernetes.io/region'])\r\n    | summarize count() by Location, ClusterName\r\n) on ClusterName\r\n| summarize podcount=dcount(PodUid) by Location, appType",
              "size": 0,
              "showAnalytics": true,
              "title": "Locations {selectedAppNamespace} is available",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{selectedCluster}"
              ],
              "visualization": "map",
              "mapSettings": {
                "locInfo": "AzureLoc",
                "locInfoColumn": "Location",
                "sizeSettings": "podcount",
                "sizeAggregation": "Average",
                "maxSize": 50,
                "defaultSize": 0,
                "labelSettings": "Location",
                "legendMetric": "podcount",
                "legendAggregation": "Max",
                "itemColorSettings": {
                  "nodeColorField": "podcount",
                  "colorAggregation": "Max",
                  "type": "heatmap",
                  "heatmapPalette": "purpleBlue"
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedAppNamespace",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "App Available Map"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "KubePodInventory\r\n|extend d=todynamic(parse_json(PodLabel)[0])\r\n|extend appType=iif(d[\"app\"]!=\"\", d[\"app\"], iif(d[\"component\"]!=\"\", d[\"component\"], iif(d[\"k8s-app\"]!=\"\", d[\"k8s-app\"], ServiceName))),\r\nversion=iif(d[\"app\"]!=\"\", d[\"version\"], \"\")\r\n| project-away d\r\n| where TimeGenerated > ago(1h)  and  Namespace =~ '{selectedAppNamespace}' \r\n| summarize Count=dcount(Name) by  ClusterName, Status=PodStatus, version , AppName=appType\r\n| sort by ClusterName asc, version asc",
              "size": 0,
              "showAnalytics": true,
              "title": "{selectedAppNamespace} running in Clusters",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "ClusterName",
              "exportParameterName": "selectedClusterForApp",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{selectedCluster}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ClusterName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "3",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "version",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      },
                      "emptyValCustomText": "-"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Region",
                    "formatter": 5
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "AppName"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "ClusterName"
                },
                "sortBy": [
                  {
                    "itemKey": "Count",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Count",
                  "sortOrder": 1
                }
              ],
              "mapSettings": {
                "locInfo": "AzureLoc",
                "locInfoColumn": "Location",
                "sizeSettings": "Count",
                "sizeAggregation": "Sum",
                "defaultSize": 0,
                "labelSettings": "Location",
                "legendMetric": "Count",
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "Count",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "greenRed"
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedAppNamespace",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "App Availability Table"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "cellValue": "appUsageView",
                  "linkTarget": "parameter",
                  "linkLabel": "App CPU Usage",
                  "subTarget": "cpuView",
                  "preText": "App CPU Usage",
                  "style": "link"
                },
                {
                  "cellValue": "appUsageView",
                  "linkTarget": "parameter",
                  "linkLabel": "App Memory Usage",
                  "subTarget": "memoryView",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedAppNamespace",
              "comparison": "isNotEqualTo"
            },
            "name": "App usage tabs"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let trendBinSize = 1m;\r\nlet capacityCounterName = 'cpuLimitNanoCores';\r\nlet usageCounterName = 'cpuUsageNanoCores';\r\nlet selectedAppNamespace = '{selectedAppNamespace}';\r\n\r\nlet podsInfo = KubePodInventory\r\n|extend d=todynamic(parse_json(PodLabel)[0])\r\n|extend appType=iif(d[\"app\"]!=\"\", d[\"app\"], iif(d[\"component\"]!=\"\", d[\"component\"], iif(d[\"k8s-app\"]!=\"\", d[\"k8s-app\"], ServiceName))),\r\nversion=iif(d[\"app\"]!=\"\", d[\"version\"], \"\")\r\n| project-away d\r\n| where TimeGenerated {timeRange:query} and Namespace =~ selectedAppNamespace\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName)\r\n| summarize count() by Computer, InstanceName, Name, ClusterName, appType;\r\n\r\nPerf\r\n| where TimeGenerated{timeRange:query} and ObjectName == 'K8SContainer' and CounterName == capacityCounterName\r\n    | summarize LimitValue=avg(CounterValue) by  Computer, InstanceName\r\n    | join kind=inner\r\n        hint.strategy=shuffle ( \r\n         Perf\r\n        | where TimeGenerated {timeRange:query} and ObjectName == 'K8SContainer' and CounterName == usageCounterName\r\n            | project Computer, InstanceName, UsageValue = CounterValue, TimeGenerated\r\n        )\r\n        on Computer, InstanceName\r\n        | join\r\n            hint.strategy=shuffle (\r\n            podsInfo\r\n        ) on Computer, InstanceName\r\n        | summarize AggregatedValue = avg(UsageValue * 100.0 / LimitValue) by Name, tostring(InstanceName), ClusterName, appType",
              "size": 2,
              "showAnalytics": true,
              "title": "{selectedAppNamespace} CPU Usage",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{selectedCluster}"
              ],
              "visualization": "graph",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "appType",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "bottomContent": {
                  "columnMatch": "Name"
                },
                "hivesContent": {
                  "columnMatch": "ClusterName",
                  "formatter": 12
                },
                "nodeIdField": "InstanceName",
                "graphOrientation": 3,
                "showOrientationToggles": false,
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "AggregatedValue",
                  "type": 4,
                  "heatmapPalette": "greenRed",
                  "heatmapMin": 0,
                  "heatmapMax": 100
                },
                "groupByField": "ClusterName",
                "hivesMargin": 5
              }
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedAppNamespace",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "appUsageView",
                "comparison": "isEqualTo",
                "value": "cpuView"
              }
            ],
            "showPin": true,
            "name": "Container CPU Usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let trendBinSize = 1m;\r\nlet capacityCounterName = 'memoryAllocatableBytes';\r\nlet usageCounterName = 'memoryWorkingSetBytes';\r\nlet selectedAppNamespace = '{selectedAppNamespace}';\r\n\r\nlet podsInfo = KubePodInventory\r\n|extend d=todynamic(parse_json(PodLabel)[0])\r\n|extend appType=iif(d[\"app\"]!=\"\", d[\"app\"], iif(d[\"component\"]!=\"\", d[\"component\"], iif(d[\"k8s-app\"]!=\"\", d[\"k8s-app\"], ServiceName))),\r\nversion=iif(d[\"app\"]!=\"\", d[\"version\"], \"\")\r\n| project-away d\r\n| where TimeGenerated {timeRange:query} and Namespace =~ selectedAppNamespace\r\n    | extend InstanceName = strcat(ClusterId, '/', ContainerName)\r\n    | summarize count() by Computer, InstanceName, Name, ClusterName, appType;\r\n\r\nlet limits=Perf\r\n| where TimeGenerated{timeRange:query} and ObjectName == 'K8SNode' and CounterName == capacityCounterName\r\n| summarize LimitValue=avg(CounterValue) by  Computer;\r\n\r\nlet usage =  Perf\r\n| where TimeGenerated{timeRange:query} and  ObjectName == 'K8SContainer' and CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, TimeGenerated ;\r\n\r\npodsInfo\r\n    | join kind=inner\r\n        hint.strategy=shuffle (  usage)\r\n    on Computer, InstanceName\r\n    | join kind=inner\r\n        hint.strategy=shuffle (  limits)\r\n    on Computer\r\n    | summarize AggregatedValue = avg(UsageValue * 100.0 / LimitValue) by Name, ClusterName, appType",
              "size": 2,
              "showAnalytics": true,
              "title": "{selectedAppNamespace} Memory Usage",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{selectedCluster}"
              ],
              "visualization": "graph",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "appType",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "bottomContent": {
                  "columnMatch": "Name"
                },
                "hivesContent": {
                  "columnMatch": "ClusterName",
                  "formatter": 12
                },
                "nodeIdField": "Name",
                "graphOrientation": 3,
                "showOrientationToggles": false,
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "AggregatedValue",
                  "type": 4,
                  "heatmapPalette": "greenRed",
                  "heatmapMin": 0,
                  "heatmapMax": 100
                },
                "groupByField": "ClusterName",
                "hivesMargin": 5
              }
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedAppNamespace",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "appUsageView",
                "comparison": "isEqualTo",
                "value": "memoryView"
              }
            ],
            "showPin": true,
            "name": "Container CPU Usage - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "ApplicationInfo"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
