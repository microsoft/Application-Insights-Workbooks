{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Apdex\n\n[Apdex (Application Performance Index)](http://apdex.org/overview.html) is an open standard method for measuring application performance. It contextualizes your application's performance in terms of the quality of experience you provide to your users.\n\nApdex classifies performance into three zones based on a baseline performance threshold T you define for your app:\n\n| Zone | Minimum Response Time | Maximum Response Time |\n| --- |: --- |: --- |: --- |\n| Satisfied | 0 seconds | T seconds |\n| Tolerating | T seconds | 4T seconds |\n| Frustrated | 4T seconds | - |\n"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "### Apdex Parameters"
      },
      "conditionalVisibility": null
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "f3e68c23-278e-4175-815d-dc7961bf34a0",
            "version": "KqlParameterItem/1.0",
            "name": "Type",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable( column1:string, column2:string ) \r\n[ \r\n\"union pageViews, requests, dependencies\", \"Page Views, Requests and Dependencies\", \r\n\"union pageViews, requests\", \"Page Views and Requests\", \r\n\"pageViews\", \"Page Views\", \r\n\"requests\", \"Requests\", \r\n\"dependencies\", \"Dependencies\", \r\n] ",
            "isHiddenWhenLocked": false,
            "value": "pageViews"
          },
          {
            "id": "07a9044c-0e5d-40f2-b815-b002fdcf5220",
            "version": "KqlParameterItem/1.0",
            "name": "Operations",
            "type": 2,
            "description": "Comma seperated list of items to include in Apdex calculations. example: 'RequestA', 'RequestB', 'PageViewC'. Use '*' to include all",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{Type}\n| where timestamp >= ago(7d)\n| summarize count() by name\n| order by count_ desc\n| project Id=name, Title=name, Selected=false\n| union (\ndatatable(Id:string, Title:string, Selected:boolean)[\n'*', 'All Operations', true\n]\n)"
          },
          {
            "id": "9e8aba54-518d-443e-9eaf-4c8e87d513be",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "timeContextFromParameter": null
          },
          {
            "id": "e2d47629-1167-4d8b-bd88-3f5641e6d484",
            "version": "KqlParameterItem/1.0",
            "name": "OperationsFilter",
            "type": 1,
            "description": null,
            "isRequired": false,
            "isHiddenWhenLocked": false,
            "value": ""
          },
          {
            "id": "822d691d-da84-46c8-84de-e2b091fb8387",
            "version": "KqlParameterItem/1.0",
            "name": "ApdexThresholdInMilliseconds",
            "type": 1,
            "description": "The threshold to use in Apdex calculations. It defaults to the average operation duration for the select activities.",
            "isRequired": true,
            "query": "{Type}\n| where timestamp {TimeRange}\n| where name in ({Operations}) or '*' in ({Operations})\n| summarize SumOfDuration =  sum(duration), CountOfDuration = count()\n| project AverageDuration = round(iff(CountOfDuration == 0, 0.0, 1.0 * SumOfDuration / CountOfDuration))\n",
            "isHiddenWhenLocked": false,
            "timeContextFromParameter": null,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "17ac059b-c7b6-498c-81b8-23c3213f38ee",
            "version": "KqlParameterItem/1.0",
            "name": "Calculations",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x: string, y: string) [\r\n'ConsiderFailures', 'Consider failures as frustrating', \r\n'DoNotConsiderFailures', 'Do not consider failures as frustrating'\r\n]",
            "value": "ConsiderFailures"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "`ApdexThresholdInMilliseconds` defaults to the average duration for the selected operations. Set this to a threshold that makes sense for your app.\n\n### Drill-in parameters"
      },
      "conditionalVisibility": null
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "2f57173e-c1de-4b51-90a6-fc4baee9fec6",
            "version": "KqlParameterItem/1.0",
            "name": "SplitBy",
            "type": 2,
            "isRequired": true,
            "query": "datatable(value:string, text:string)[\r\n'name', '‚ö™ Activity Name',\r\n'cloud_RoleInstance', 'üñ•Ô∏è Machine',\r\n'client_CountryOrRegion', 'üìç Country or Region',\r\n'client_StateOrProvince', 'üìç State or Province',\r\n'application_Version', '‚ö™ Application Version',\r\n'operation_Name', '‚ö™ Operation',\r\n]\r\n| union ({Type}\r\n| where timestamp {TimeRange}\r\n| where name in ({Operations}) or '*' in ({Operations})\r\n| project customDimensions \r\n| summarize schema = buildschema(customDimensions) \r\n| mvexpand schema\r\n| extend e = extract(@'{\"(.+)\":.+}', 1, tostring(schema))\r\n| project text = strcat('‚ùÑÔ∏è ', e), value = strcat('customDimensions[\"', e, '\"]'))",
            "value": "name",
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContextFromParameter": null,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "6d8ec5b4-d1a7-45a0-9703-870eea3fad3d",
            "version": "KqlParameterItem/1.0",
            "name": "OrderBy",
            "type": 2,
            "isRequired": true,
            "query": "datatable(value:string, text:string)[\r\n'Relevance desc', 'Most Relevant',\r\n'[\"Apdex Score\"] desc', 'Highest Apdex',\r\n'[\"Apdex Score\"] asc', 'Lowest Apdex',\r\n'Users desc', 'Most Users',\r\n]",
            "value": "Relevance desc",
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContextFromParameter": null,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "dd476d22-f17b-4ad9-ad00-e5d0cf73fe25",
            "version": "KqlParameterItem/1.0",
            "name": "SegmentFilters",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{Type}\r\n| where timestamp {TimeRange}\r\n| where name in ({Operations}) or '*' in ({Operations})\r\n| extend Dim = iff(isempty({SplitBy})== true, 'Unknown', {SplitBy})\r\n| summarize by Value = Dim, Name = Dim\r\n| extend isDefault = false\r\n| order by Name asc\r\n| union (datatable(Value:string, Name:string, isDefault:boolean)[ '*', 'Include All', true])\r\n",
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContextFromParameter": null,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let apdexThreshhold = toint('{ApdexThresholdInMilliseconds}');\r\nlet apdexData = {Type}\r\n| where timestamp {TimeRange}\r\n| where name in ({Operations}) or '*' in ({Operations})\r\n{OperationsFilter}\r\n| extend success = columnifexists('success', true)\r\n| extend Failure = iff('{Calculations}' == 'ConsiderFailures' and success == false, 1, 0)\r\n| extend InterestingDimension = iff(isempty({SplitBy})== true, 'Unknown', {SplitBy})\r\n| where InterestingDimension in ({SegmentFilters}) or '*' in ({SegmentFilters})\r\n| summarize AverageDuration = avg(duration), Failures = sum(Failure) by user_Id\r\n| extend UserExperience = case(AverageDuration <= apdexThreshhold, 'Satisfied', AverageDuration <= 4 * apdexThreshhold, 'Tolerating', 'Frustrated')\r\n| extend UserExperience = case(Failures > 0, \"Frustrated\", UserExperience)\r\n| summarize Satisfied = countif(UserExperience == 'Satisfied'), Tolerating = countif(UserExperience == 'Tolerating'), Frustrated = countif(UserExperience == 'Frustrated'), Total = count()\r\n| project Satisfied, Tolerating, Frustrated, ApdexScore = round((Satisfied + (Tolerating / 2.0)) / Total, 2);\r\napdexData\r\n//| extend [\"Apdex Interpretation\"] = case([\"Apdex Score\"] <= 0.5, '‚õî Unacceptable', [\"Apdex Score\"] <= 0.7, '‚ö†Ô∏è Poor', [\"Apdex Score\"] <= 0.85, '‚ö†Ô∏è Fair', [\"Apdex Score\"] <= 0.94, '‚úîÔ∏è Good', '‚úîÔ∏è Excellent')\r\n| evaluate narrow()\r\n| extend Value = toreal(Value)\r\n| project Name = case(Column == 'Satisfied', 'Satisfied Users', Column == 'Tolerating', 'Tolerating Users', Column == 'Frustrated', 'Frustrated Users', 'Apdex Score'), Value, Rank = case(Column == 'Satisfied', 2, Column == 'Tolerating', 3, Column == 'Frustrated', 4, 1), Interperation = iff(Column == 'ApdexScore', case(Value <= 0.5, '‚õî Unacceptable', Value <= 0.7, '‚ö†Ô∏è Poor', Value <= 0.85, '‚ö†Ô∏è Fair', Value <= 0.94, '‚úîÔ∏è Good', '‚úîÔ∏è Excellent'), '')\r\n| order by Rank asc",
        "showQuery": false,
        "size": 3,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "timeContextFromParameter": null,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Name",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 0,
              "options": {
                "style": "decimal"
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "Interperation",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let apdexThreshhold = toint('{ApdexThresholdInMilliseconds}');\nlet apdexData = {Type}\n| where timestamp {TimeRange}\n| where name in ({Operations}) or '*' in ({Operations})\n{OperationsFilter}\n| extend success = columnifexists('success', true)\n| extend Failure = iff('{Calculations}' == 'ConsiderFailures' and success == false, 1, 0)\n| extend InterestingDimension = iff(isempty({SplitBy})== true, 'Unknown', {SplitBy})\n| where InterestingDimension in ({SegmentFilters}) or '*' in ({SegmentFilters})\n| summarize AverageDuration = avg(duration), Failures = sum(Failure) by user_Id, InterestingDimension\n| extend UserExperience = case(AverageDuration <= apdexThreshhold, 'Satisfied', AverageDuration <= 4 * apdexThreshhold, 'Tolerating', 'Frustrated')\n| extend UserExperience = case(Failures > 0, \"Frustrated\", UserExperience)\n| summarize Satisfied = countif(UserExperience == 'Satisfied'), Tolerating = countif(UserExperience == 'Tolerating'), Frustrated = countif(UserExperience == 'Frustrated'), Total = count() by InterestingDimension\n| project InterestingDimension, [\"Satisfied Users\"] = Satisfied, [\"Tolerating Users\"] = Tolerating, [\"Frustrated Users\"] = Frustrated, [\"Apdex Score\"] = round((Satisfied + (Tolerating / 2.0)) / Total, 2), Total\n| extend Relevance = iff([\"Apdex Score\"] == 0, pow(Total, 1.6), Total / [\"Apdex Score\"])\n| project-rename Users = Total\n| order by {OrderBy}\n| project-away Users, Relevance;\napdexData\n| extend [\"Apdex Interpretation\"] = case([\"Apdex Score\"] <= 0.5, '‚õî Unacceptable', [\"Apdex Score\"] <= 0.7, '‚ö†Ô∏è Poor', [\"Apdex Score\"] <= 0.85, '‚ö†Ô∏è Fair', [\"Apdex Score\"] <= 0.94, '‚úîÔ∏è Good', '‚úîÔ∏è Excellent')\n| project Values = InterestingDimension, [\"Apdex Score\"], [\"Apdex Interpretation\"], [\"Satisfied Users\"], [\"Tolerating Users\"], [\"Frustrated Users\"]\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": true,
        "timeContextFromParameter": null,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Apdex Score",
              "formatter": 3,
              "formatOptions": {
                "min": 0,
                "max": 1,
                "palette": "blue",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Satisfied",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "green",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Tolerating Users",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Frustrated Users",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "red",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibility": null,
      "alwaysShowPin": true
    },
    {
      "type": 1,
      "content": {
        "json": "# Daily Apdex Score\nSee how your Apdex Score changes over time."
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let apdexThreshhold = toint('{ApdexThresholdInMilliseconds}');\nlet failureThreshhold = 1;\nlet apdexData = {Type}\n| where timestamp {TimeRange}\n| where name in ({Operations}) or '*' in ({Operations})\n{OperationsFilter}\n| extend success = columnifexists('success', true)\n| extend Failure = iff('{Calculations}' == 'ConsiderFailures' and success == false, 1, 0)\n| extend InterestingDimension = iff(isempty({SplitBy})== true, 'Unknown', {SplitBy})\n| where InterestingDimension in ({SegmentFilters}) or '*' in ({SegmentFilters})\n| summarize AverageDuration = avg(duration), Failures = sum(Failure) by user_Id, bin(timestamp, {TimeRange:grain}), InterestingDimension\n| extend UserExperience = case(AverageDuration <= apdexThreshhold, 'Satisfied', AverageDuration <= 4 * apdexThreshhold, 'Tolerating', 'Frustrated')\n| extend UserExperience = case(Failures >= failureThreshhold, \"Frustrated\", UserExperience)\n| summarize Satisfied = countif(UserExperience == 'Satisfied'), Tolerating = countif(UserExperience == 'Tolerating'), Total = count() by timestamp, InterestingDimension\n| project timestamp, ApdexScore = (Satisfied + (Tolerating / 2.0)) / Total, Users = Total, InterestingDimension;\nlet pageRelevance = apdexData\n| summarize [\"Apdex Score\"] = avg(ApdexScore), Users=sum(Users) by InterestingDimension\n| extend Relevance = iff([\"Apdex Score\"] == 0, 1.0 * Users * Users, Users / [\"Apdex Score\"])\n| order by {OrderBy}\n| project InterestingDimension\n| take 7;\napdexData\n| join kind = leftouter (pageRelevance) on InterestingDimension\n| extend InterestingDimension = iff(isempty(InterestingDimension1) == true, 'Other', InterestingDimension)\n| project timestamp, ApdexScore, Users, InterestingDimension \n| summarize ApdexScore = avg(ApdexScore) by timestamp, InterestingDimension\n| extend ApdexScore = round(ApdexScore, 3)",
        "showQuery": false,
        "size": 0,
        "aggregation": 5,
        "showAnnotations": false,
        "showAnalytics": false,
        "timeContextFromParameter": null,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "timechart"
      },
      "conditionalVisibility": null
    },
    {
      "type": 1,
      "content": {
        "json": "# Daily Quality Trend\nSee your how the performance experience of your users have changed over time."
      },
      "conditionalVisibility": null
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let apdexThreshhold = toint('{ApdexThresholdInMilliseconds}');\nlet failureThreshhold = 1;\n{Type}\n| where timestamp {TimeRange}\n| where name in ({Operations}) or '*' in ({Operations})\n{OperationsFilter}\n| extend success = columnifexists('success', true)\n| extend Failure = iff('{Calculations}' == 'ConsiderFailures' and success == false, 1, 0)\n| extend InterestingDimension = iff(isempty({SplitBy})== true, 'Unknown', {SplitBy})\n| where InterestingDimension in ({SegmentFilters}) or '*' in ({SegmentFilters})\n| summarize AverageDuration = avg(duration), Failures = sum(Failure) by user_Id, bin(timestamp, {TimeRange:grain})\n| extend UserExperience = case(AverageDuration <= apdexThreshhold, 'Satisfied', AverageDuration <= 4 * apdexThreshhold, 'Tolerating', 'Frustrated')\n| extend UserExperience = case(Failures >= failureThreshhold, \"Frustrated\", UserExperience)\n| summarize count() by UserExperience, timestamp",
        "showQuery": false,
        "size": 0,
        "aggregation": 5,
        "showAnnotations": false,
        "showAnalytics": false,
        "timeContextFromParameter": null,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}