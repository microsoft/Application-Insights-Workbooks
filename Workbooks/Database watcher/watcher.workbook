{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5f4f51eb-4044-4d54-b6c1-cca6c1822fb6",
            "version": "KqlParameterItem/1.0",
            "name": "watcherResourceId",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "d034b664-76ae-4768-9624-0508eb0ab470",
            "version": "KqlParameterItem/1.0",
            "name": "showWatcherSelector",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "value": ""
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "input_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.DatabaseWatcher/watchers'\r\n| project watcherResourceId = id,\r\n          resourceGroupName = id,\r\n          location,\r\n          subscriptionName = id,\r\n          kustoOfferingType = tostring(properties.datastore.kustoOfferingType),\r\n          adxClusterResourceId = tostring(properties.datastore.adxClusterResourceId),\r\n          kustoDatabaseName = tostring(properties.datastore.kustoDatabaseName),\r\n          kustoManagementUrl = tostring(properties.datastore.kustoManagementUrl),\r\n          kustoClusterUri = tostring(properties.datastore.kustoClusterUri),\r\n          watcherName = name\r\n| extend adxDatabaseName = iif(kustoOfferingType == \"adx\", kustoDatabaseName, \"\"),\r\n         adxDatabaseResourceId = strcat(adxClusterResourceId, \"/databases/\", kustoDatabaseName),\r\n         kustoManagementUrl = iif(kustoOfferingType in (\"free\",\"fabric\"), kustoManagementUrl, \"\"),\r\n         kustoClusterUri = iif(\r\n                              isnotempty(kustoClusterUri) and isnotempty(kustoDatabaseName),\r\n                              strcat(trim_end(\"/\", kustoClusterUri), \"/\", kustoDatabaseName),\r\n                              \"\"\r\n                              ),\r\n         dataExplorerLinkText = iif(\r\n                                   isnotempty(kustoClusterUri) and isnotempty(kustoDatabaseName),\r\n                                   \"Data explorer\",\r\n                                   \"\"\r\n                                   )\r\n| project-away kustoDatabaseName\r\n| order by watcherName asc, resourceGroupName asc, subscriptionName asc\r\n| take 250\r\n",
        "size": 1,
        "title": "Select a watcher",
        "noDataMessage": "No watchers found in the default subscriptions.",
        "showRefreshButton": true,
        "exportFieldName": "watcherResourceId",
        "exportParameterName": "selectedWatcherResourceId",
        "exportDefaultValue": "",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "watcherResourceId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "35ch"
              },
              "tooltipFormat": {
                "tooltip": "Open watcher"
              }
            },
            {
              "columnMatch": "resourceGroupName",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "35ch"
              },
              "tooltipFormat": {
                "tooltip": "Open resource group"
              }
            },
            {
              "columnMatch": "location",
              "formatter": 17,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "subscriptionName",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "35ch"
              }
            },
            {
              "columnMatch": "kustoOfferingType",
              "formatter": 18,
              "formatOptions": {
                "linkColumn": "kustoManagementUrl",
                "linkTarget": "Url",
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "adx",
                    "representation": "dot-blue",
                    "text": "Azure Data Explorer",
                    "tooltipFormat": {
                      "tooltip": "Use the Azure Data Explorer cluster link to open and manage the cluster."
                    }
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "free",
                    "representation": "dot-blue",
                    "text": "Free Azure Data Explorer",
                    "tooltipFormat": {
                      "tooltip": "Open the free Azure Data Explorer cluster."
                    }
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "fabric",
                    "representation": "dot-blue",
                    "text": "Real-Time Analytics",
                    "tooltipFormat": {
                      "tooltip": "Open Real-Time Analytics in Microsoft Fabric."
                    }
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "dot-red",
                    "text": "None",
                    "tooltipFormat": {
                      "tooltip": "The watcher cannot be started because it does not have a data store."
                    }
                  }
                ],
                "customColumnWidthSetting": "30ch"
              }
            },
            {
              "columnMatch": "adxClusterResourceId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              },
              "tooltipFormat": {
                "tooltip": "Open and manage the Azure Data Explorer cluster used as the watcher data store"
              }
            },
            {
              "columnMatch": "kustoManagementUrl",
              "formatter": 5,
              "formatOptions": {
                "linkColumn": "kustoManagementUrl",
                "linkTarget": "Url",
                "linkLabel": "[\"manageDataStoreLinkText\"]"
              }
            },
            {
              "columnMatch": "kustoClusterUri",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Url",
                "linkLabel": "Data explorer"
              }
            },
            {
              "columnMatch": "watcherName",
              "formatter": 5
            },
            {
              "columnMatch": "adxDatabaseName",
              "formatter": 16,
              "formatOptions": {
                "linkColumn": "adxDatabaseResourceId",
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "35ch"
              },
              "tooltipFormat": {
                "tooltip": "Open and manage Azure Data Explorer database used as the watcher data store"
              }
            },
            {
              "columnMatch": "adxDatabaseResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "dataExplorerLinkText",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "kustoClusterUri",
                "linkTarget": "Url"
              },
              "tooltipFormat": {
                "tooltip": "Explore monitoring data in the watcher data store using KQL queries"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "watcherResourceId",
              "label": "Name"
            },
            {
              "columnId": "resourceGroupName",
              "label": "Resource group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "subscriptionName",
              "label": "Subscription"
            },
            {
              "columnId": "kustoOfferingType",
              "label": "Data store type"
            },
            {
              "columnId": "adxClusterResourceId",
              "label": "Azure Data Explorer cluster"
            },
            {
              "columnId": "adxDatabaseName",
              "label": "Azure Data Explorer database"
            },
            {
              "columnId": "dataExplorerLinkText",
              "label": "Explore data store"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "showWatcherSelector",
        "comparison": "isNotEqualTo"
      },
      "name": "watcher_selector"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "a3b98c78-bee1-488e-9c8e-01ba4cf7edb4",
            "version": "KqlParameterItem/1.0",
            "name": "activeWatcherResourceId",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "watcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "watcherResourceId"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "selectedWatcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "selectedWatcherResourceId"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "param",
                  "resultVal": "watcherResourceId"
                }
              }
            ]
          },
          {
            "id": "83420d36-0646-40aa-9637-d06a3d2a6145",
            "version": "KqlParameterItem/1.0",
            "name": "watcherResource",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{activeWatcherResourceId}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2024-07-19-preview\"}],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "a6cd9521-127a-43bd-9227-6bcd67756455",
            "version": "KqlParameterItem/1.0",
            "name": "watcherNameRaw",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          },
          {
            "id": "a6cd9521-127a-43bd-9227-6bcd67756456",
            "version": "KqlParameterItem/1.0",
            "name": "watcherName",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "activeWatcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "watcherNameRaw"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "\"\""
                }
              }
            ]
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxClusterUriRaw",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.kustoClusterUri\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "f0889b5f-3fa4-40a0-838d-443b4c0472b6"
          },
          {
            "id": "f0889b5f-3fa4-40a0-838d-443b4c0472b7",
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxClusterUri",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "activeWatcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "watcherAdxClusterUriRaw"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "\"\""
                }
              }
            ]
          },
          {
            "id": "0797c608-2ecf-4711-ba9b-6d110f10acd3",
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxDatabaseRaw",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.kustoDatabaseName\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          },
          {
            "id": "0797c608-2ecf-4711-ba9b-6d110f10acd4",
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxDatabase",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "activeWatcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "watcherAdxDatabaseRaw"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "\"\""
                }
              }
            ]
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "watcherDataStoreTypeRaw",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.kustoOfferingType\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "eff7b282-b5cf-461b-851b-f344cf1404b5"
          },
          {
            "id": "0797c608-2ecf-4711-ba9b-6d110f10acd5",
            "version": "KqlParameterItem/1.0",
            "name": "watcherDataStoreType",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "activeWatcherResourceId",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "watcherDataStoreTypeRaw"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "\"\""
                }
              }
            ]
          }
        ],
        "style": "above",
        "queryType": 0
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "watcher_selector_parameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "6b1d90af-d012-44b2-8010-5257454c8698",
            "linkTarget": "OpenBlade",
            "linkLabel": "Create a watcher",
            "style": "primary",
            "bladeOpenContext": {
              "bladeName": "CreateDatabaseWatcher.ReactView",
              "extensionName": "Microsoft_Azure_DatabaseInsights",
              "bladeParameters": []
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "showWatcherSelector",
        "comparison": "isNotEqualTo"
      },
      "name": "create_watcher_links"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Data store",
        "expandable": true,
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "394a23b6-9786-4e1b-bb03-37ef95dbcb1d",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStore",
                  "label": "Choose a data store",
                  "type": 10,
                  "description": "By default, the workbook loads data from the data store of the current database watcher. You can use an alternate data store by entering its Kusto query URI and database name.",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[{\\\"value\\\":\\\"watcher\\\",\\\"label\\\":\\\"{watcherName}\\\"},{\\\"value\\\":\\\"alternate\\\",\\\"label\\\":\\\"Alternate\\\"}]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 8,
                  "value": "watcher"
                }
              ],
              "style": "above",
              "queryType": 8
            },
            "customWidth": "30",
            "name": "data_store_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Kusto query URI: `{watcherAdxClusterUri}` </p>\r\nKusto database: `{watcherAdxDatabase}`"
            },
            "customWidth": "70",
            "conditionalVisibilities": [
              {
                "parameterName": "watcherName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxDatabase",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "dataStore",
                "comparison": "isEqualTo",
                "value": "watcher"
              }
            ],
            "name": "watcher_data_store"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bbce4b83-dae6-46e0-bf67-c99ee0ea21f0",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxClusterUri",
                  "label": "Kusto query URI",
                  "type": 1,
                  "description": "Enter a Kusto query URI for the alternate data store. Most commonly, Kusto query URI format is: https://{kusto-cluster-name}.{region}.kusto.windows.net/",
                  "isRequired": true
                },
                {
                  "id": "99cdb447-94d3-40c7-b902-c98628fb736a",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxDatabase",
                  "label": "Kusto database",
                  "type": 1,
                  "description": "Enter a Kusto database name for the alternate data store",
                  "isRequired": true
                }
              ],
              "style": "formHorizontal",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "70",
            "conditionalVisibility": {
              "parameterName": "dataStore",
              "comparison": "isEqualTo",
              "value": "alternate"
            },
            "name": "override_adx_parameters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "19f22da1-c8c7-42cc-9849-cf6aeddb7ba0",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterUri",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxClusterUri"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "watcherAdxClusterUri"
                      }
                    }
                  ]
                },
                {
                  "id": "b4b8f00b-7e05-4ae2-ad2b-2ba99f74b49a",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxDatabase",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxDatabase"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "watcherAdxDatabase"
                      }
                    }
                  ]
                },
                {
                  "id": "c5aca9de-de62-466e-bea8-9a149e935c4f",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterPingResult",
                  "label": "Kusto query URI ping result",
                  "type": 1,
                  "isRequired": true,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show databases\\r\\n| where DatabaseName =~ @\\\"{adxDatabase}\\\" // ADX\\r\\n        or\\r\\n        (PrettyName =~ @\\\"{adxDatabase}\\\" and isnotempty(toguid(DatabaseName))) // Fabric Kusto\\r\\n| project 1\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"\"}",
                  "isHiddenWhenLocked": true,
                  "queryType": 9
                },
                {
                  "id": "1051cf8a-cecc-45b0-ac25-5ab65b869292",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStoreSizeProperties",
                  "type": 1,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show database extents\\r\\n| summarize uncompressed_size_bytes = sum(OriginalSize),\\r\\n            compressed_size_bytes = sum(CompressedSize)\\r\\n| extend freeKustoWarning = iif(\\\"{watcherDataStoreType}\\\" == \\\"free\\\" and uncompressed_size_bytes > 85899345920, true, false) // Greater than 80 GiB\\r\\n| project uncompressed_size_bytes, compressed_size_bytes, 1formatted_uncompressed_size = format_bytes(uncompressed_size_bytes), 2formatted_compressed_size = format_bytes(compressed_size_bytes), freeKustoWarning\\r\\n| project dynamic_to_json(pack_all())\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                  "isHiddenWhenLocked": true,
                  "queryType": 9
                }
              ],
              "style": "pills",
              "queryType": 9
            },
            "conditionalVisibility": {
              "parameterName": "alwaysHidden",
              "comparison": "isNotEqualTo"
            },
            "name": "adx_parameters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "4d1aef87-cfcf-4dcb-93c9-77f5e405a902",
                  "version": "KqlParameterItem/1.0",
                  "name": "noWatcherResourceIdText",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "markdown"
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "A watcher is not selected."
                },
                {
                  "id": "20a4ed56-5b4e-4e25-8bbc-74fffe94fcf6",
                  "version": "KqlParameterItem/1.0",
                  "name": "noDataStoreText",
                  "type": 1,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{\\\"Text\\\":\\\"Watcher `{watcherName}` does not have a data store.\\\"}\",\"transformers\":null}",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "markdown"
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 8
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "noKustoQueryUriText",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "markdown"
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "The Kusto query URI is not specified.",
                  "id": "d0acaf74-9bee-4904-817b-99ba086d6239"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "noKustoDatabaseText",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "markdown"
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "The Kusto database is not specified.",
                  "id": "24c3fc88-c326-4aaa-9508-f357e3e839c3"
                },
                {
                  "id": "add7ef86-d620-42e6-8819-6038864e9b7a",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStoreTypeName",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "watcherDataStoreType",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "adx",
                        "resultValType": "static",
                        "resultVal": "on an Azure Data Explorer cluster"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "watcherDataStoreType",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "free",
                        "resultValType": "static",
                        "resultVal": "on a free Azure Data Explorer cluster"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "watcherDataStoreType",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "fabric",
                        "resultValType": "static",
                        "resultVal": "in Real-Time Analytics in Microsoft Fabric"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "of unknown type"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "e8a51676-5feb-41f1-b5ca-d2c0d5a2555c",
                  "version": "KqlParameterItem/1.0",
                  "name": "successfulDataStoreConnectionText",
                  "type": 1,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{\\\"Text\\\":\\\"Connected to a data store {dataStoreTypeName}.\\\"}\",\"transformers\":null}",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "markdown"
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 8
                },
                {
                  "id": "0f567986-9058-4d5c-8043-00f192274f27",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStoreStatusText",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "activeWatcherResourceId",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "noWatcherResourceIdText"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "watcherDataStoreType",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "noDataStoreText"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxClusterUri",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "noKustoQueryUriText"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxDatabase",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "noKustoDatabaseText"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxClusterPingResult",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "param",
                        "resultVal": "successfulDataStoreConnectionText"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": ""
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f0fde190-0fd4-4f4c-aea4-201ae72568d3",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStoreStatusStyle",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "activeWatcherResourceId",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "Info"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "watcherDataStoreType",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "Info"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxClusterUri",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "Info"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxDatabase",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "Info"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "adxClusterPingResult",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "1",
                        "resultValType": "static",
                        "resultVal": "Success"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "Plain"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "conditionalVisibility": {
              "parameterName": "alwaysHidden",
              "comparison": "isNotEqualTo"
            },
            "name": "adx_connection_status_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "{dataStoreStatusText}",
              "style": "{dataStoreStatusStyle}"
            },
            "name": "data_store_connection_status_text"
          },
          {
            "type": 1,
            "content": {
              "json": "Cannot connect to Kusto query URI `{adxClusterUri}`, database `{adxDatabase}`. The data store might be stopped or unreachable, specified query URI might be invalid, or permissions might be insufficient.\r\n\r\n**Common causes:**\r\n\r\n1. You do not have access to the data store. Ask an administrator to [grant access](https://go.microsoft.com/fwlink/?linkid=2297712).\r\n1. Public connectivity to the Azure Data Explorer cluster is disabled. Learn how to [set up private connectivity](https://go.microsoft.com/fwlink/?linkid=2297583).\r\n\r\n[Learn more](https://go.microsoft.com/fwlink/?linkid=2268015) to troubleshoot other causes.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "adxClusterPingResult",
                "comparison": "isNotEqualTo",
                "value": "1"
              },
              {
                "parameterName": "adxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "adxDatabase",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "missing_data_bad_permissions_text"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"1.0.0\",\"content\":\"{dataStoreSizeProperties}\",\"transformers\":null}",
              "size": 3,
              "title": "Data size",
              "showExportToExcel": true,
              "queryType": 8,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "1formatted_uncompressed_size",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "sourceColumn": "freeKustoWarning",
                          "operator": "==",
                          "thresholdValue": "true",
                          "representation": "2",
                          "text": "{0}{1}",
                          "tooltipFormat": {
                            "tooltip": "Database size is approaching or has reached the limit of a free Azure Data Explorer cluster. The limit might be reached sooner if there are other databases on the same cluster."
                          }
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "tooltipFormat": {
                      "tooltip": "Originally ingested data size before compression"
                    }
                  },
                  {
                    "columnMatch": "2formatted_compressed_size",
                    "formatter": 22,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "[\"2formatted_compressed_size\"]",
                        "columnSettings": [
                          {
                            "columnName": "compressed_size_bytes",
                            "color": "pink"
                          },
                          {
                            "columnName": "uncompressed_size_bytes",
                            "color": "blue"
                          }
                        ],
                        "noRowsScaling": true
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Stored data size after applying columnstore compression"
                    }
                  },
                  {
                    "columnMatch": "compressed_size_bytes",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "freeKustoWarning",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "uncompressed_size_bytes",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "1formatted_uncompressed_size",
                    "label": "Uncompressed"
                  },
                  {
                    "columnId": "2formatted_compressed_size",
                    "label": "Compressed"
                  }
                ]
              }
            },
            "customWidth": "30",
            "conditionalVisibility": {
              "parameterName": "adxClusterPingResult",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "data_store_size"
          }
        ],
        "exportParameters": true
      },
      "name": "data_store_group"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "38d18c5b-3cca-4bae-85b7-c74821db1d12",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserver_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlserver_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqlmi_instance_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlmi_instance_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "b3573a09-1578-4f01-b349-2d6d42a6759f"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_database_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "02dd3c28-de96-4552-b629-f0d0078ca231"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_elastic_pool_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_elastic_pool_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "6d3e9aa3-6079-493e-9710-438aeab4aef4"
          },
          {
            "id": "fac93a3b-a354-41ff-b673-3e094d86b664",
            "version": "KqlParameterItem/1.0",
            "name": "max_targets_per_type",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": "30"
          },
          {
            "id": "052e5129-5a9b-4c6e-bb99-1d6ad00f6de0",
            "version": "KqlParameterItem/1.0",
            "name": "time_range_hours",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "72"
          },
          {
            "id": "66ccd5b4-8437-402f-8863-6457131e9e52",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserverTargetQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlserver_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlserver_properties | where sample_time_utc > ago({time_range_hours}h) | project sample_time_utc, unique_name = strcat(server_name, machine_name), server_name, machine_name, database_engine_start_time_utc, logical_cpu_count, cluster_name, target_type = \"sqlserver\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", server_name = \"\", machine_name = \"\", database_engine_start_time_utc = datetime(null), service_tier = \"\", logical_cpu_count = int(null), cluster_name = \"\", target_type = \"sqlserver\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "6854e80e-2638-47ef-a316-c9a5781fe8b7",
            "version": "KqlParameterItem/1.0",
            "name": "sqlmiTargetQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlmi_instance_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlmi_instance_properties | where sample_time_utc > ago({time_range_hours}h) | project sample_time_utc, unique_name = strcat(managed_instance_name, replica_type), managed_instance_name, database_engine_start_time_utc, service_tier, logical_cpu_count, replica_type, target_type = \"sqlmi\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", managed_instance_name = \"\", database_engine_start_time_utc = datetime(null), service_tier = \"\", logical_cpu_count = int(null), replica_type = \"\", target_type = \"sqlmi\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c903b764-be31-44f5-8fe2-b6bc1c452cd1",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbDatabaseTargetQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_database_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_database_properties | where sample_time_utc > ago({time_range_hours}h) | project sample_time_utc, unique_name = strcat(logical_server_name, database_name, replica_type), logical_server_name, database_name, database_engine_start_time_utc, service_tier,  service_level_objective, logical_cpu_count, replica_type, elastic_pool_name, target_type = \"sqldb_database\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", logical_server_name = \"\", database_name = \"\", database_engine_start_time_utc = datetime(null), service_tier = \"\", service_level_objective = \"\", logical_cpu_count = int(null), replica_type = \"\", elastic_pool_name = \"\", target_type = \"sqldb_database\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "980b4e27-3e01-4d23-a64f-e789664f5747",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbElasticPoolTargetQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_elastic_pool_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_elastic_pool_properties | where sample_time_utc > ago({time_range_hours}h) | project sample_time_utc, unique_name = strcat(logical_server_name, elastic_pool_name, replica_type), logical_server_name, elastic_pool_name, database_engine_start_time_utc, service_tier, logical_cpu_count, replica_type, target_type = \"sqldb_elastic_pool\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", logical_server_name = \"\", elastic_pool_name = \"\", database_engine_start_time_utc = datetime(null), service_tier = \"\", logical_cpu_count = int(null), replica_type = \"\", target_type = \"sqldb_elastic_pool\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "table_presence_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let metric = datatable(key:int, target_type:string, tile_ordinal:int) [\\r\\n1, \\\"sqlserver\\\", 4,\\r\\n1, \\\"sqlmi\\\", 3,\\r\\n1, \\\"sqldb_database\\\", 1,\\r\\n1, \\\"sqldb_elastic_pool\\\", 2\\r\\n];\\r\\nunion\\r\\n(\\r\\n{sqldbDatabaseTargetQuery}\\r\\n),\\r\\n(\\r\\n{sqldbElasticPoolTargetQuery}\\r\\n),\\r\\n(\\r\\n{sqlmiTargetQuery}\\r\\n),\\r\\n(\\r\\n{sqlserverTargetQuery}\\r\\n)\\r\\n| summarize arg_max(max_sample_time_utc = sample_time_utc, machine_name, server_name, managed_instance_name, logical_server_name, database_name, elastic_pool_name, database_engine_start_time_utc, service_tier, service_level_objective, logical_cpu_count, cluster_name, replica_type)\\r\\n            by target_type, unique_name\\r\\n| extend sample_age_seconds = datetime_diff('second', now(), max_sample_time_utc),\\r\\nuptime_minutes = datetime_diff(\\\"minute\\\", max_sample_time_utc, database_engine_start_time_utc),\\r\\nservice_level_objective = iif(service_level_objective =~ \\\"ElasticPool\\\", \\\"Elastic pool\\\", service_level_objective),\\r\\nha_secondary = tolower(tostring(replica_type == \\\"HA secondary\\\")),\\r\\nrt_tooltip = case(\\r\\nreplica_type == \\\"Primary\\\", \\\"The primary replica always exists for any database, elastic pool, or managed instance. Primary replicas support read and write workloads. All other replica types support read workloads only.\\\",\\r\\nreplica_type == \\\"Geo-replication forwarder\\\", \\\"A geo-replication secondary replica, also known as a geo-replication forwarder, is created when you configure geo-replication or failover groups. Data from a primary replica is replicated to one or more geo-replication forwarders.\\\",\\r\\nreplica_type == \\\"Named secondary\\\", \\\"A named secondary replica can have a database name that is different from its associated primary replica, and can be placed on a different logical server. Data from a primary replica is replicated to one or more named secondary replicas.\\\",\\r\\nreplica_type == \\\"HA secondary\\\", \\\"Data from a primary, a geo-replication forwarder, or a named secondary replicas can be replicated to an HA secondary replica to provide high availability (HA). HA secondary replicas do not have their own names, but inherit the name of the replica for which they provide high availability.\\\",\\r\\n\\\"\\\"\\r\\n),\\r\\nreplica_type_indicator = case(\\r\\nreplica_type == \\\"Primary\\\", \\\"🔵\\\",\\r\\nreplica_type == \\\"HA secondary\\\", \\\"🔘\\\",\\r\\nreplica_type == \\\"Geo-replication forwarder\\\", \\\"🟣\\\",\\r\\nreplica_type == \\\"Named secondary\\\", \\\"🟢\\\",\\r\\n\\\"\\\"\\r\\n)\\r\\n| extend formatted_sample_age = format_timespan(1s * sample_age_seconds, \\\"d.hh:mm:ss\\\"),\\r\\n         formatted_uptime = format_timespan(1m * uptime_minutes, \\\"d.hh:mm:ss\\\"),\\r\\n         service_tier = case(service_tier =~ \\\"GeneralPurpose\\\", \\\"General Purpose\\\", service_tier =~ \\\"BusinessCritical\\\", \\\"Business Critical\\\", service_tier),\\r\\n         replica_type = strcat(replica_type_indicator, replica_type),\\r\\n         managed_instance_name = tostring(split(managed_instance_name, \\\".\\\")[0]),\\r\\n         managed_instance_full_name = managed_instance_name\\r\\n| extend target = bag_pack\\r\\n(\\r\\n\\\"machine_name\\\", machine_name,\\r\\n\\\"server_name\\\", server_name,\\r\\n\\\"cluster_name\\\", cluster_name,\\r\\n\\\"managed_instance_name\\\", managed_instance_name,\\r\\n\\\"managed_instance_full_name\\\", managed_instance_full_name,\\r\\n\\\"logical_srvr_name\\\", logical_server_name,\\r\\n\\\"database_name\\\", database_name,\\r\\n\\\"elastic_pool_name\\\", elastic_pool_name,\\r\\n\\\"uptime_minutes\\\", uptime_minutes,\\r\\n\\\"formatted_uptime\\\", formatted_uptime,\\r\\n\\\"service_tier\\\", service_tier,\\r\\n\\\"service_level_objective\\\", service_level_objective,\\r\\n\\\"logical_cpu_count\\\", logical_cpu_count,\\r\\n\\\"replica_type\\\", replica_type,\\r\\n\\\"sample_age_seconds\\\", sample_age_seconds,\\r\\n\\\"formatted_sample_age\\\", formatted_sample_age,\\r\\n\\\"ha_secondary\\\", ha_secondary,\\r\\n\\\"rt_tooltip\\\", rt_tooltip\\r\\n),\\r\\n         is_dropped_target = sample_age_seconds >= 15*60 and isnotempty(unique_name)\\r\\n| sort by iif(isempty(cluster_name), 1, 0) asc, machine_name asc, server_name asc, managed_instance_name asc, logical_server_name asc, database_name asc, elastic_pool_name asc, iif(ha_secondary == \\\"true\\\", 1, 0) asc\\r\\n| summarize total_target_count = dcountif(unique_name, isnotempty(unique_name)),\\r\\n            dropped_target_count = dcountif(unique_name, is_dropped_target),\\r\\n            targets = make_list(target, {max_targets_per_type}),\\r\\n            ha_secondary_count = countif(toboolean(ha_secondary))\\r\\n            by target_type\\r\\n| extend key = int(1)\\r\\n| join kind=rightouter metric on key, target_type\\r\\n| extend target_type = target_type1,\\r\\n         total_target_count = iif(isnull(total_target_count), 0, total_target_count)\\r\\n| where (target_type != \\\"sqlserver\\\" or (target_type == \\\"sqlserver\\\" and total_target_count > 0)) // show sqlserver targets only if present\\r\\n| project\\r\\ntarget_type,\\r\\ntarget_type_desc = case(\\r\\ntarget_type == \\\"sqldb_database\\\", \\\"Azure SQL databases\\\",\\r\\ntarget_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL elastic pools\\\",\\r\\ntarget_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\ntarget_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n\\\"\\\"\\r\\n),\\r\\ntotal_target_count,\\r\\ndropped_target_count = iif(total_target_count > 0, dropped_target_count, -1),\\r\\ntargets = iif(isempty(targets[0]), \\\"\\\", dynamic_to_json(targets)),\\r\\ntile_ordinal,\\r\\nfleet_link = case(\\r\\ntarget_type == \\\"sqldb_database\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\ntarget_type == \\\"sqldb_elastic_pool\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\ntarget_type == \\\"sqlmi\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Managed Instance/estate\\\",\\r\\ntarget_type == \\\"sqlserver\\\", \\\"Community-Workbooks/Database watcher/SQL Server/estate\\\",\\r\\n\\\"\\\"\\r\\n),\\r\\nfleet_workbook_name = case(\\r\\ntarget_type == \\\"sqldb_database\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\ntarget_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\ntarget_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\ntarget_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n\\\"\\\"\\r\\n),\\r\\ntooltip = case(\\r\\ntarget_type == \\\"sqlserver\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" SQL Server target(s) monitored within the last {time_range_hours} hours\\\", iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" SQL Server targets(s) for the last 15 minutes or longer.\\\"), \\\"\\\")),\\r\\ntarget_type == \\\"sqlmi\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" managed instance targets monitored within the last {time_range_hours} hours\\\", iif(ha_secondary_count > 0, strcat(\\\", including \\\", ha_secondary_count, \\\" HA secondaries\\\"), \\\"\\\"), iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" managed instance target(s) for the last 15 minutes or longer.\\\"), \\\"\\\")),\\r\\ntarget_type == \\\"sqldb_database\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" database target(s) monitored within the last {time_range_hours} hours\\\", iif(ha_secondary_count > 0, strcat(\\\", including \\\", ha_secondary_count, \\\" HA secondaries\\\"), \\\"\\\"), iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" database target(s) for the last 15 minutes or longer.\\\"), \\\"\\\")),\\r\\ntarget_type == \\\"sqldb_elastic_pool\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" elastic pool target(s) monitored within the last {time_range_hours} hours\\\", iif(ha_secondary_count > 0, strcat(\\\", including \\\", ha_secondary_count, \\\" HA secondaries\\\"), \\\"\\\"), iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" elastic pool target(s) for the last 15 minutes or longer.\\\"), \\\"\\\")),\\r\\n\\\"\\\"\\r\\n),\\r\\nfleet_workbook_tab_name = case(\\r\\ntarget_type == \\\"sqldb_database\\\", \\\"Database heatmaps\\\",\\r\\ntarget_type == \\\"sqldb_elastic_pool\\\", \\\"Elastic pool heatmaps\\\",\\r\\ntarget_type in (\\\"sqlmi\\\",\\\"sqlserver\\\"), \\\"Heatmaps\\\",\\r\\n\\\"\\\"\\r\\n),\\r\\ningestion_target_type = iif(target_type startswith \\\"sqldb_\\\", \\\"sqldb\\\", target_type),\\r\\nany_targets = iif(total_target_count > 0, \\\"yes\\\", \\\"no\\\"),\\r\\nlimited_targets_warning = iif(total_target_count > {max_targets_per_type}, \\\"yes\\\", \\\"no\\\")\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "exportedParameters": [
          {
            "fieldName": "targets",
            "parameterName": "targets",
            "parameterType": 1
          },
          {
            "fieldName": "target_type",
            "parameterName": "target_type",
            "parameterType": 1
          },
          {
            "fieldName": "target_type_desc",
            "parameterName": "target_type_desc",
            "parameterType": 1
          },
          {
            "fieldName": "ingestion_target_type",
            "parameterName": "ingestion_target_type",
            "parameterType": 1
          },
          {
            "fieldName": "any_targets",
            "parameterName": "any_targets",
            "parameterType": 1
          },
          {
            "fieldName": "limited_targets_warning",
            "parameterName": "limited_targets_warning",
            "parameterType": 1
          }
        ],
        "queryType": 9,
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "dropped_target_count",
            "formatter": 18,
            "formatOptions": {
              "linkColumn": "fleet_link",
              "linkTarget": "WorkbookTemplate",
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "-1",
                  "representation": "more",
                  "text": "[\"target_type_desc\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "[\"total_target_count\"]",
                  "representation": "3",
                  "text": "[\"target_type_desc\"]"
                },
                {
                  "operator": ">",
                  "thresholdValue": "0",
                  "representation": "2",
                  "text": "[\"target_type_desc\"]"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": "[\"target_type_desc\"]"
                }
              ],
              "workbookContext": {
                "componentIdSource": "parameter",
                "componentId": "activeWatcherResourceId",
                "resourceIdsSource": "workbook",
                "templateIdSource": "column",
                "templateId": "fleet_link",
                "typeSource": "workbook",
                "gallerySource": "static",
                "gallery": "microsoft.database-watcher",
                "locationSource": "workbook",
                "workbookName": "[\"fleet_workbook_name\"]",
                "passSpecificParams": true,
                "templateParameters": [
                  {
                    "name": "watcherResourceId",
                    "source": "parameter",
                    "value": "activeWatcherResourceId"
                  },
                  {
                    "name": "linkAdxClusterUri",
                    "source": "parameter",
                    "value": "adxClusterUri"
                  },
                  {
                    "name": "linkAdxDatabase",
                    "source": "parameter",
                    "value": "adxDatabase"
                  },
                  {
                    "name": "tabName",
                    "source": "column",
                    "value": "fleet_workbook_tab_name"
                  }
                ],
                "viewerMode": true
              }
            },
            "tooltipFormat": {
              "tooltip": "Open an estate dashboard for [\"target_type_desc\"]"
            }
          },
          "leftContent": {
            "columnMatch": "total_target_count",
            "formatter": 12,
            "formatOptions": {
              "min": 0,
              "max": 1,
              "palette": "blue"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            },
            "tooltipFormat": {
              "tooltip": "[\"tooltip\"]"
            }
          },
          "secondaryContent": {
            "columnMatch": "dropped_target_count",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": ">=",
                  "thresholdValue": "1",
                  "representation": "Disconnect",
                  "text": "{0}{1} out of [\"total_target_count\"] not collecting"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "Blank",
                  "text": ""
                }
              ]
            },
            "tooltipFormat": {
              "tooltip": "[\"tooltip\"]"
            }
          },
          "showBorder": false,
          "sortCriteriaField": "tile_ordinal",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "adxClusterPingResult",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqlserverTargetQuery",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "sqlmiTargetQuery",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "sqldbDatabaseTargetQuery",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "sqldbElasticPoolTargetQuery",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "target_counts"
    },
    {
      "type": 1,
      "content": {
        "json": "The list of targets shows the first {max_targets_per_type} targets. To see all {target_type_desc}, click the link at the top of the tile to open the estate overview dashboard.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        },
        {
          "parameterName": "limited_targets_warning",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "tile_description_text"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc}",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "cluster_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_full_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "workbookContext": {
                  "componentIdSource": "parameter",
                  "componentId": "activeWatcherResourceId",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Database watcher/Azure SQL Database/database",
                  "typeSource": "workbook",
                  "gallerySource": "static",
                  "gallery": "microsoft.database-watcher",
                  "locationSource": "workbook",
                  "workbookName": "Azure SQL database",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "databaseName",
                      "source": "column",
                      "value": "database_name"
                    },
                    {
                      "name": "serverName",
                      "source": "column",
                      "value": "logical_srvr_name"
                    },
                    {
                      "name": "watcherResourceId",
                      "source": "parameter",
                      "value": "activeWatcherResourceId"
                    },
                    {
                      "name": "linkAdxClusterUri",
                      "source": "parameter",
                      "value": "adxClusterUri"
                    },
                    {
                      "name": "linkAdxDatabase",
                      "source": "parameter",
                      "value": "adxDatabase"
                    },
                    {
                      "name": "tabName",
                      "source": "static",
                      "value": "Overview"
                    },
                    {
                      "name": "haReplica",
                      "source": "column",
                      "value": "ha_secondary"
                    }
                  ],
                  "viewerMode": true
                },
                "bladeOpenContext": {
                  "bladeParameters": []
                }
              },
              "tooltipFormat": {
                "tooltip": "Open a dashboard for this database"
              }
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "workbookContext": {
                  "componentIdSource": "parameter",
                  "componentId": "activeWatcherResourceId",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Database watcher/Azure SQL Database/elastic pool",
                  "typeSource": "workbook",
                  "gallerySource": "static",
                  "gallery": "microsoft.database-watcher",
                  "locationSource": "workbook",
                  "workbookName": "Azure SQL elastic pool",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "elasticPoolName",
                      "source": "column",
                      "value": "elastic_pool_name"
                    },
                    {
                      "name": "serverName",
                      "source": "column",
                      "value": "logical_srvr_name"
                    },
                    {
                      "name": "watcherResourceId",
                      "source": "parameter",
                      "value": "activeWatcherResourceId"
                    },
                    {
                      "name": "linkAdxClusterUri",
                      "source": "parameter",
                      "value": "adxClusterUri"
                    },
                    {
                      "name": "linkAdxDatabase",
                      "source": "parameter",
                      "value": "adxDatabase"
                    },
                    {
                      "name": "tabName",
                      "source": "static",
                      "value": "Overview"
                    },
                    {
                      "name": "haReplica",
                      "source": "column",
                      "value": "ha_secondary"
                    }
                  ],
                  "viewerMode": true
                }
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                },
                "emptyValCustomText": "(None)"
              },
              "tooltipFormat": {
                "tooltip": "Open a dashboard for this elastic pool"
              }
            },
            {
              "columnMatch": "uptime_minutes",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "1440",
                    "representation": "green",
                    "text": "[\"formatted_uptime\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "[\"formatted_uptime\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Database uptime as of the last sample, as days.hours:minutes:seconds. Highlighted in green for recently created or restarted databases."
              }
            },
            {
              "columnMatch": "formatted_uptime",
              "formatter": 5
            },
            {
              "columnMatch": "service_tier",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "logical_cpu_count",
              "formatter": 2,
              "formatOptions": {
                "customColumnWidthSetting": "16ch"
              }
            },
            {
              "columnMatch": "replica_type",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "26ch"
              },
              "tooltipFormat": {
                "tooltip": "[\"rt_tooltip\"]"
              }
            },
            {
              "columnMatch": "sample_age_seconds",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "86400",
                    "representation": "Sev0",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "10800",
                    "representation": "Sev1",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3600",
                    "representation": "Sev2",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "1800",
                    "representation": "Sev3",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "900",
                    "representation": "Sev4",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "Available",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "[\"formatted_sample_age\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the last sample in the database properties dataset"
              }
            },
            {
              "columnMatch": "formatted_sample_age",
              "formatter": 5
            },
            {
              "columnMatch": "ha_secondary",
              "formatter": 5
            },
            {
              "columnMatch": "rt_tooltip",
              "formatter": 5
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "logical_srvr_name"
            ],
            "expandTopLevel": true,
            "finalBy": "logical_srvr_name"
          },
          "labelSettings": [
            {
              "columnId": "logical_srvr_name",
              "label": "Logical server"
            },
            {
              "columnId": "database_name",
              "label": "Database"
            },
            {
              "columnId": "elastic_pool_name",
              "label": "Elastic pool"
            },
            {
              "columnId": "uptime_minutes",
              "label": "Uptime"
            },
            {
              "columnId": "service_tier",
              "label": "Service tier"
            },
            {
              "columnId": "service_level_objective",
              "label": "Compute size"
            },
            {
              "columnId": "logical_cpu_count",
              "label": "Logical CPUs"
            },
            {
              "columnId": "replica_type",
              "label": "Replica type"
            },
            {
              "columnId": "sample_age_seconds",
              "label": "Age of sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqldb_database"
        },
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "sqldb_database_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc}",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "cluster_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_full_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "workbookContext": {
                  "componentIdSource": "parameter",
                  "componentId": "activeWatcherResourceId",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Database watcher/Azure SQL Database/elastic pool",
                  "typeSource": "workbook",
                  "gallerySource": "static",
                  "gallery": "microsoft.database-watcher",
                  "locationSource": "workbook",
                  "workbookName": "Azure SQL elastic pool",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "elasticPoolName",
                      "source": "column",
                      "value": "elastic_pool_name"
                    },
                    {
                      "name": "serverName",
                      "source": "column",
                      "value": "logical_srvr_name"
                    },
                    {
                      "name": "watcherResourceId",
                      "source": "parameter",
                      "value": "activeWatcherResourceId"
                    },
                    {
                      "name": "linkAdxClusterUri",
                      "source": "parameter",
                      "value": "adxClusterUri"
                    },
                    {
                      "name": "linkAdxDatabase",
                      "source": "parameter",
                      "value": "adxDatabase"
                    },
                    {
                      "name": "tabName",
                      "source": "static",
                      "value": "Overview"
                    },
                    {
                      "name": "haReplica",
                      "source": "column",
                      "value": "ha_secondary"
                    }
                  ],
                  "viewerMode": true
                }
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                },
                "emptyValCustomText": "(None)"
              },
              "tooltipFormat": {
                "tooltip": "Open a dashboard for this elastic pool"
              }
            },
            {
              "columnMatch": "uptime_minutes",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "1440",
                    "representation": "green",
                    "text": "[\"formatted_uptime\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "[\"formatted_uptime\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Database uptime as of the last sample, as days.hours:minutes:seconds. Highlighted in green for recently created or restarted elastic pools."
              }
            },
            {
              "columnMatch": "formatted_uptime",
              "formatter": 5
            },
            {
              "columnMatch": "service_tier",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "service_level_objective",
              "formatter": 5
            },
            {
              "columnMatch": "logical_cpu_count",
              "formatter": 2,
              "formatOptions": {
                "customColumnWidthSetting": "16ch"
              }
            },
            {
              "columnMatch": "replica_type",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "26ch"
              },
              "tooltipFormat": {
                "tooltip": "[\"rt_tooltip\"]"
              }
            },
            {
              "columnMatch": "sample_age_seconds",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "86400",
                    "representation": "Sev0",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "10800",
                    "representation": "Sev1",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3600",
                    "representation": "Sev2",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "1800",
                    "representation": "Sev3",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "900",
                    "representation": "Sev4",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "Available",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "[\"formatted_sample_age\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the last sample in the elastic pool properties dataset"
              }
            },
            {
              "columnMatch": "formatted_sample_age",
              "formatter": 5
            },
            {
              "columnMatch": "ha_secondary",
              "formatter": 5
            },
            {
              "columnMatch": "rt_tooltip",
              "formatter": 5
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "logical_srvr_name"
            ],
            "expandTopLevel": true,
            "finalBy": "logical_srvr_name"
          },
          "labelSettings": [
            {
              "columnId": "logical_srvr_name",
              "label": "Logical server"
            },
            {
              "columnId": "database_name",
              "label": "Database"
            },
            {
              "columnId": "elastic_pool_name",
              "label": "Elastic pool"
            },
            {
              "columnId": "uptime_minutes",
              "label": "Uptime"
            },
            {
              "columnId": "service_tier",
              "label": "Service tier"
            },
            {
              "columnId": "service_level_objective",
              "label": "Compute size"
            },
            {
              "columnId": "logical_cpu_count",
              "label": "Logical CPUs"
            },
            {
              "columnId": "replica_type",
              "label": "Replica type"
            },
            {
              "columnId": "sample_age_seconds",
              "label": "Age of sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqldb_elastic_pool"
        },
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "sqldb_elastic_pool_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc}",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "cluster_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "workbookContext": {
                  "componentIdSource": "parameter",
                  "componentId": "activeWatcherResourceId",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Database watcher/Azure SQL Managed Instance/instance",
                  "typeSource": "workbook",
                  "gallerySource": "static",
                  "gallery": "microsoft.database-watcher",
                  "locationSource": "workbook",
                  "workbookName": "Managed instance",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "managedInstanceName",
                      "source": "column",
                      "value": "managed_instance_full_name"
                    },
                    {
                      "name": "watcherResourceId",
                      "source": "parameter",
                      "value": "activeWatcherResourceId"
                    },
                    {
                      "name": "linkAdxClusterUri",
                      "source": "parameter",
                      "value": "adxClusterUri"
                    },
                    {
                      "name": "linkAdxDatabase",
                      "source": "parameter",
                      "value": "adxDatabase"
                    },
                    {
                      "name": "tabName",
                      "source": "static",
                      "value": "Overview"
                    },
                    {
                      "name": "haReplica",
                      "source": "column",
                      "value": "ha_secondary"
                    }
                  ],
                  "viewerMode": true
                },
                "bladeOpenContext": {
                  "bladeParameters": []
                }
              },
              "tooltipFormat": {
                "tooltip": "Open a dashboard for this managed instance"
              }
            },
            {
              "columnMatch": "managed_instance_full_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 5
            },
            {
              "columnMatch": "uptime_minutes",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "1440",
                    "representation": "green",
                    "text": "[\"formatted_uptime\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "[\"formatted_uptime\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Managed instance uptime as of the last sample, as days.hours:minutes:seconds. Highlighted in green for recently created or restarted instances."
              }
            },
            {
              "columnMatch": "formatted_uptime",
              "formatter": 5
            },
            {
              "columnMatch": "service_tier",
              "formatter": 5
            },
            {
              "columnMatch": "service_level_objective",
              "formatter": 5
            },
            {
              "columnMatch": "logical_cpu_count",
              "formatter": 2,
              "formatOptions": {
                "customColumnWidthSetting": "16ch"
              }
            },
            {
              "columnMatch": "replica_type",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "26ch"
              },
              "tooltipFormat": {
                "tooltip": "[\"rt_tooltip\"]"
              }
            },
            {
              "columnMatch": "sample_age_seconds",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "86400",
                    "representation": "Sev0",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "10800",
                    "representation": "Sev1",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3600",
                    "representation": "Sev2",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "1800",
                    "representation": "Sev3",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "900",
                    "representation": "Sev4",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "Available",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "[\"formatted_sample_age\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the last sample in the managed instance properties dataset"
              }
            },
            {
              "columnMatch": "formatted_sample_age",
              "formatter": 5
            },
            {
              "columnMatch": "ha_secondary",
              "formatter": 5
            },
            {
              "columnMatch": "rt_tooltip",
              "formatter": 5
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "service_tier"
            ],
            "expandTopLevel": true,
            "finalBy": "service_tier"
          },
          "labelSettings": [
            {
              "columnId": "managed_instance_name",
              "label": "Managed instance"
            },
            {
              "columnId": "uptime_minutes",
              "label": "Uptime"
            },
            {
              "columnId": "service_tier",
              "label": "Service tier"
            },
            {
              "columnId": "logical_cpu_count",
              "label": "Logical CPUs"
            },
            {
              "columnId": "replica_type",
              "label": "Replica type"
            },
            {
              "columnId": "sample_age_seconds",
              "label": "Age of sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqlmi"
        },
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "sqlmi_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc}",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "workbookContext": {
                  "componentIdSource": "parameter",
                  "componentId": "activeWatcherResourceId",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/Database watcher/SQL Server/instance",
                  "typeSource": "workbook",
                  "gallerySource": "static",
                  "gallery": "microsoft.database-watcher",
                  "locationSource": "workbook",
                  "workbookName": "SQL Server instance",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "watcherResourceId",
                      "source": "parameter",
                      "value": "activeWatcherResourceId"
                    },
                    {
                      "name": "linkAdxClusterUri",
                      "source": "parameter",
                      "value": "adxClusterUri"
                    },
                    {
                      "name": "linkAdxDatabase",
                      "source": "parameter",
                      "value": "adxDatabase"
                    },
                    {
                      "name": "tabName",
                      "source": "static",
                      "value": "Overview"
                    },
                    {
                      "name": "machineName",
                      "source": "column",
                      "value": "machine_name"
                    },
                    {
                      "name": "serverName",
                      "source": "column",
                      "value": "server_name"
                    }
                  ],
                  "viewerMode": true
                },
                "bladeOpenContext": {
                  "bladeParameters": []
                }
              },
              "tooltipFormat": {
                "tooltip": "Open a dashboard for this server"
              }
            },
            {
              "columnMatch": "cluster_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_full_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 5
            },
            {
              "columnMatch": "uptime_minutes",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "1440",
                    "representation": "green",
                    "text": "[\"formatted_uptime\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "[\"formatted_uptime\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Server uptime as of the last sample, as days.hours:minutes:seconds. Highlighted in green for recently created or restarted servers."
              }
            },
            {
              "columnMatch": "formatted_uptime",
              "formatter": 5
            },
            {
              "columnMatch": "service_tier",
              "formatter": 5
            },
            {
              "columnMatch": "service_level_objective",
              "formatter": 5
            },
            {
              "columnMatch": "logical_cpu_count",
              "formatter": 2,
              "formatOptions": {
                "customColumnWidthSetting": "16ch"
              }
            },
            {
              "columnMatch": "replica_type",
              "formatter": 5
            },
            {
              "columnMatch": "sample_age_seconds",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "86400",
                    "representation": "Sev0",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "10800",
                    "representation": "Sev1",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3600",
                    "representation": "Sev2",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "1800",
                    "representation": "Sev3",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "900",
                    "representation": "Sev4",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "0",
                    "representation": "Available",
                    "text": "[\"formatted_sample_age\"]"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "[\"formatted_sample_age\"]"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the last sample in the server properties dataset"
              }
            },
            {
              "columnMatch": "formatted_sample_age",
              "formatter": 5
            },
            {
              "columnMatch": "ha_secondary",
              "formatter": 5
            },
            {
              "columnMatch": "rt_tooltip",
              "formatter": 5
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "cluster_name"
            ],
            "expandTopLevel": true,
            "finalBy": "machine_name"
          },
          "labelSettings": [
            {
              "columnId": "machine_name",
              "label": "Machine"
            },
            {
              "columnId": "server_name",
              "label": "Server"
            },
            {
              "columnId": "cluster_name",
              "label": "Cluster>Machine"
            },
            {
              "columnId": "uptime_minutes",
              "label": "Uptime"
            },
            {
              "columnId": "logical_cpu_count",
              "label": "Logical CPUs"
            },
            {
              "columnId": "sample_age_seconds",
              "label": "Age of sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqlserver"
        },
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "sqlserver_targets"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "list",
        "links": [
          {
            "id": "1b726e1d-7c7e-404a-a65a-dfaa5e3669a0",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "ingestion statistics",
            "preText": "View",
            "postText": "to see data ingestion latency for each dataset",
            "style": "link",
            "linkIsContextBlade": true,
            "workbookContext": {
              "componentIdSource": "parameter",
              "componentId": "activeWatcherResourceId",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Database watcher/Ingestion stats",
              "typeSource": "workbook",
              "gallerySource": "static",
              "gallery": "microsoft.database-watcher",
              "locationSource": "workbook",
              "workbookName": "Ingestion statistics",
              "passSpecificParams": true,
              "templateParameters": [
                {
                  "name": "adxClusterUri",
                  "source": "parameter",
                  "value": "adxClusterUri"
                },
                {
                  "name": "adxDatabase",
                  "source": "parameter",
                  "value": "adxDatabase"
                },
                {
                  "name": "targetType",
                  "source": "parameter",
                  "value": "ingestion_target_type"
                }
              ],
              "viewerMode": true
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "ingestion_target_type",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "any_targets",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "ingestion_latency_link"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Learn more",
        "expandable": true,
        "items": [
          {
            "type": 1,
            "content": {
              "json": "- [Overview](https://go.microsoft.com/fwlink/?linkid=2234011)\r\n- [Quickstart](https://go.microsoft.com/fwlink/?linkid=2259925)\r\n- [Create and configure](https://go.microsoft.com/fwlink/?linkid=2255788)\r\n- [Dashboard features](https://go.microsoft.com/fwlink/?linkid=2255893)\r\n- [Data collection and datasets](https://go.microsoft.com/fwlink/?linkid=2255892)\r\n- [Analyze monitoring data](https://go.microsoft.com/fwlink/?linkid=2259837)\r\n- [Troubleshoot](https://go.microsoft.com/fwlink/?linkid=2256731)\r\n- [FAQ](https://go.microsoft.com/fwlink/?linkid=2255670)"
            },
            "name": "learn_more_help"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "adxClusterPingResult",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "learn_more_group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}