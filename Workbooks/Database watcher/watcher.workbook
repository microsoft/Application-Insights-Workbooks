{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "a762a2ae-beec-4bf5-9f4a-28bea2d2f737",
            "version": "KqlParameterItem/1.0",
            "name": "watcherResourceId",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "83420d36-0646-40aa-9637-d06a3d2a6145",
            "version": "KqlParameterItem/1.0",
            "name": "watcherResource",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{watcherResourceId}?api-version=2023-03-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "a6cd9521-127a-43bd-9227-6bcd67756456",
            "version": "KqlParameterItem/1.0",
            "name": "watcherName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxClusterUri",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.adxClusterUri\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "f0889b5f-3fa4-40a0-838d-443b4c0472b6"
          },
          {
            "id": "0797c608-2ecf-4711-ba9b-6d110f10acd3",
            "version": "KqlParameterItem/1.0",
            "name": "watcherAdxDatabase",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.properties.datastore.adxDatabaseResourceId\",\"columnid\":\"value\",\"columnType\":\"string\",\"substringRegexMatch\":\".*/(.*)\",\"substringReplace\":\"$1\"}]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          }
        ],
        "style": "above",
        "queryType": 12
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "watcher_adx_parameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Data store",
        "expandable": true,
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "394a23b6-9786-4e1b-bb03-37ef95dbcb1d",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStore",
                  "label": "Choose a data store",
                  "type": 10,
                  "description": "By default, the workbook loads data from the data store for the current database watcher. You may use an alternate data store by entering its Kusto query URI and database name.",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[{\\\"value\\\":\\\"watcher\\\",\\\"label\\\":\\\"{watcherName}\\\"},{\\\"value\\\":\\\"alternate\\\",\\\"label\\\":\\\"Alternate\\\"}]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 8,
                  "value": "watcher"
                }
              ],
              "style": "above",
              "queryType": 12
            },
            "customWidth": "30",
            "name": "data_store_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Kusto query URI: `{watcherAdxClusterUri}` </p>\r\nKusto database: `{watcherAdxDatabase}`"
            },
            "customWidth": "70",
            "conditionalVisibilities": [
              {
                "parameterName": "watcherName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxDatabase",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "dataStore",
                "comparison": "isEqualTo",
                "value": "watcher"
              }
            ],
            "name": "watcher_data_store"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bbce4b83-dae6-46e0-bf67-c99ee0ea21f0",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxClusterUri",
                  "label": "Kusto query URI",
                  "type": 1,
                  "description": "Enter a Kusto query URI for the alternate data store. Most commonly, Kusto query URI format is: https://{kusto-cluster-name}.{region}.kusto.windows.net/",
                  "isRequired": true,
                  "value": ""
                },
                {
                  "id": "99cdb447-94d3-40c7-b902-c98628fb736a",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxDatabase",
                  "label": "Kusto database",
                  "type": 1,
                  "description": "Enter a Kusto database name for the alternate data store",
                  "isRequired": true,
                  "value": ""
                }
              ],
              "style": "formHorizontal",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "70",
            "conditionalVisibility": {
              "parameterName": "dataStore",
              "comparison": "isEqualTo",
              "value": "alternate"
            },
            "name": "override_adx_parameters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "19f22da1-c8c7-42cc-9849-cf6aeddb7ba0",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterUri",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxClusterUri"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "watcherAdxClusterUri"
                      }
                    }
                  ]
                },
                {
                  "id": "b4b8f00b-7e05-4ae2-ad2b-2ba99f74b49a",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxDatabase",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxDatabase"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "watcherAdxDatabase"
                      }
                    }
                  ]
                },
                {
                  "id": "c5aca9de-de62-466e-bea8-9a149e935c4f",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterPingResult",
                  "label": "Kusto query URI ping result",
                  "type": 1,
                  "isRequired": true,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show databases\\r\\n| where DatabaseName == @\\\"{adxDatabase}\\\"\\r\\n| project 1\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"\"}",
                  "isHiddenWhenLocked": true,
                  "queryType": 9
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "alwaysHidden",
              "comparison": "isNotEqualTo"
            },
            "name": "adx_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Cannot connect to Kusto query URI `{adxClusterUri}`, database `{adxDatabase}`. The Kusto cluster may be stopped or unreachable, specified cluster URI may be invalid, or permissions may be insufficient.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "adxClusterPingResult",
                "comparison": "isNotEqualTo",
                "value": "1"
              },
              {
                "parameterName": "adxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "adxDatabase",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "missing_data_bad_permissions_text"
          }
        ],
        "exportParameters": true
      },
      "name": "data_store_group"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "38d18c5b-3cca-4bae-85b7-c74821db1d12",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserver_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlserver_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqlmi_instance_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlmi_instance_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "b3573a09-1578-4f01-b349-2d6d42a6759f"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_single_database_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_single_database_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "02dd3c28-de96-4552-b629-f0d0078ca231"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_elastic_pool_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_elastic_pool_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "6d3e9aa3-6079-493e-9710-438aeab4aef4"
          },
          {
            "id": "66ccd5b4-8437-402f-8863-6457131e9e52",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserverTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlserver_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlserver_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(server_name, machine_name), server_name, machine_name, target_type = \"sqlserver\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", server_name = \"\", machine_name = \"\", target_type = \"sqlserver\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "6854e80e-2638-47ef-a316-c9a5781fe8b7",
            "version": "KqlParameterItem/1.0",
            "name": "sqlmiTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlmi_instance_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlmi_instance_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = managed_instance_name, managed_instance_name, target_type = \"sqlmi\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", managed_instance_name = \"\", target_type = \"sqlmi\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c903b764-be31-44f5-8fe2-b6bc1c452cd1",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbSingleDatabaseTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_single_database_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_single_database_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(logical_server_name, database_name), logical_server_name, database_name, target_type = \"sqldb_single_database\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", logical_server_name = \"\", database_name = \"\", target_type = \"sqldb_single_database\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "980b4e27-3e01-4d23-a64f-e789664f5747",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbElasticPoolTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_elastic_pool_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_elastic_pool_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(logical_server_name, elastic_pool_name), logical_server_name, elastic_pool_name, target_type = \"sqldb_elastic_pool\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", logical_server_name = \"\", elastic_pool_name = \"\", target_type = \"sqldb_elastic_pool\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "table_presence_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let metric = datatable(key:int, target_type:string, tile_ordinal:int) [\\r\\n1, \\\"sqlserver\\\", 4,\\r\\n1, \\\"sqlmi\\\", 3,\\r\\n1, \\\"sqldb_single_database\\\", 1,\\r\\n1, \\\"sqldb_elastic_pool\\\", 2\\r\\n];\\r\\nunion\\r\\n(\\r\\n{sqldbSingleDatabaseTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqldbElasticPoolTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqlmiTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqlserverTargetCountQuery}\\r\\n)\\r\\n| summarize max_sample_time_utc = max(sample_time_utc)\\r\\n            by target_type, unique_name, machine_name, server_name, managed_instance_name, logical_server_name, database_name, elastic_pool_name\\r\\n| extend minutes_since_last_sample = datetime_diff('minute', now(), max_sample_time_utc)\\r\\n| extend target = bag_pack(\\\"machine_name\\\", machine_name, \\\"server_name\\\", server_name, \\\"managed_instance_name\\\", managed_instance_name, \\\"logical_srvr_name\\\", logical_server_name, \\\"database_name\\\", database_name, \\\"elastic_pool_name\\\", elastic_pool_name, \\\"last_sample_time_utc\\\", max_sample_time_utc, \\\"minutes_since_last_sample\\\", minutes_since_last_sample),\\r\\n         is_dropped_target = minutes_since_last_sample >= 60 and isnotempty(unique_name)\\r\\n| sort by machine_name asc, server_name asc, managed_instance_name asc, logical_server_name asc, database_name asc, elastic_pool_name asc\\r\\n| summarize total_target_count = dcountif(unique_name, isnotempty(unique_name)),\\r\\n            dropped_target_count = dcountif(unique_name, is_dropped_target),\\r\\n            dropped_targets = make_list_if(target, is_dropped_target)\\r\\n            by target_type\\r\\n| extend key = int(1)\\r\\n| join kind=rightouter metric on key, target_type\\r\\n| extend target_type = target_type1,\\r\\n         total_target_count = iif(isnull(total_target_count), 0, total_target_count),\\r\\n         dropped_target_count = iif(isnotnull(dropped_target_count) and dropped_target_count > 0, dropped_target_count, int(null))\\r\\n| project target_type,\\r\\n          target_type_desc = case(\\r\\n                                 target_type == \\\"sqldb_single_database\\\", \\\"Azure SQL databases\\\",\\r\\n                                 target_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL elastic pools\\\",\\r\\n                                 target_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\n                                 target_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n                                 \\\"\\\"\\r\\n                                 ),\\r\\n          total_target_count,\\r\\n          dropped_target_count,\\r\\n          dropped_targets = iif(isempty(dropped_targets[0]), \\\"\\\", dynamic_to_json(dropped_targets)),\\r\\n          tile_ordinal,\\r\\n          fleet_link = case(\\r\\n                            target_type == \\\"sqldb_single_database\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\n                            target_type == \\\"sqldb_elastic_pool\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\n                            target_type == \\\"sqlmi\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Managed Instance/estate\\\",\\r\\n                            target_type == \\\"sqlserver\\\", \\\"Community-Workbooks/Database watcher/SQL Server/estate\\\",\\r\\n                            \\\"\\\"\\r\\n                            ),\\r\\n          fleet_workbook_name = case(\\r\\n                                     target_type == \\\"sqldb_single_database\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\n                                     target_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\n                                     target_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\n                                     target_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n                                     \\\"\\\"\\r\\n                                     ),\\r\\n          tooltip = case(\\r\\n                        target_type == \\\"sqlserver\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" SQL Server instance(s) monitored within the last 72 hours\\\", iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" SQL Server instance(s) for the last one hour or longer.\\\"), \\\"\\\")),\\r\\n                        target_type == \\\"sqlmi\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" managed instance(s) monitored within the last 72 hours\\\", iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" managed instance(s) for the last one hour or longer.\\\"), \\\"\\\")),\\r\\n                        target_type == \\\"sqldb_single_database\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" database(s) monitored within the last 72 hours\\\", iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" database(s) for the last one hour or longer.\\\"), \\\"\\\")),\\r\\n                        target_type == \\\"sqldb_elastic_pool\\\", strcat(\\\"There is a total of \\\", total_target_count, \\\" elastic pool(s) monitored within the last 72 hours\\\", iif(dropped_target_count > 0, strcat(\\\". No data was collected from \\\", dropped_target_count, \\\" elastic pool(s) for the last one hour or longer.\\\"), \\\"\\\")),\\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n          fleet_workbook_tab_name = case(\\r\\n                                        target_type == \\\"sqldb_single_database\\\", \\\"Database heatmaps\\\",\\r\\n                                        target_type == \\\"sqldb_elastic_pool\\\", \\\"Elastic pool heatmaps\\\",\\r\\n                                        target_type in (\\\"sqlmi\\\",\\\"sqlserver\\\"), \\\"Heatmaps\\\",\\r\\n                                        \\\"\\\"\\r\\n                                        )\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "exportedParameters": [
          {
            "fieldName": "dropped_targets",
            "parameterName": "dropped_targets",
            "parameterType": 1
          },
          {
            "fieldName": "dropped_target_count",
            "parameterName": "dropped_target_count",
            "parameterType": 1,
            "defaultValue": "0"
          },
          {
            "fieldName": "target_type",
            "parameterName": "target_type",
            "parameterType": 1
          },
          {
            "fieldName": "target_type_desc",
            "parameterName": "target_type_desc",
            "parameterType": 1
          }
        ],
        "queryType": 9,
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "target_type_desc",
            "formatter": 1,
            "formatOptions": {
              "linkColumn": "fleet_link",
              "linkTarget": "WorkbookTemplate",
              "workbookContext": {
                "componentIdSource": "workbook",
                "resourceIdsSource": "workbook",
                "templateIdSource": "column",
                "templateId": "fleet_link",
                "typeSource": "workbook",
                "gallerySource": "default",
                "locationSource": "workbook",
                "workbookName": "[\"fleet_workbook_name\"]",
                "passSpecificParams": true,
                "templateParameters": [
                  {
                    "name": "watcherResourceId",
                    "source": "parameter",
                    "value": "watcherResourceId"
                  },
                  {
                    "name": "linkAdxClusterUri",
                    "source": "parameter",
                    "value": "adxClusterUri"
                  },
                  {
                    "name": "linkAdxDatabase",
                    "source": "parameter",
                    "value": "adxDatabase"
                  },
                  {
                    "name": "tabName",
                    "source": "column",
                    "value": "fleet_workbook_tab_name"
                  }
                ]
              }
            },
            "tooltipFormat": {
              "tooltip": "[\"tooltip\"]"
            }
          },
          "leftContent": {
            "columnMatch": "total_target_count",
            "formatter": 12,
            "formatOptions": {
              "min": 0,
              "max": 1,
              "palette": "blue"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          },
          "secondaryContent": {
            "columnMatch": "dropped_target_count",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": ">=",
                  "thresholdValue": "1",
                  "representation": "Disconnect",
                  "text": "{0}{1} out of [\"total_target_count\"] not collecting"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "Blank",
                  "text": "{0}{1}"
                }
              ]
            }
          },
          "showBorder": false,
          "sortCriteriaField": "tile_ordinal",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "conditionalVisibility": {
        "parameterName": "adxClusterPingResult",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "target_counts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{dropped_targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc} - not collecting",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 5
            },
            {
              "columnMatch": "last_sample_time_utc",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "The time of the last collected sample in the \"properties\" dataset"
              }
            },
            {
              "columnMatch": "minutes_since_last_sample",
              "formatter": 4,
              "formatOptions": {
                "max": 1440,
                "palette": "yellowOrangeRed",
                "customColumnWidthSetting": "25ch"
              },
              "numberFormat": {
                "unit": 25,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              },
              "tooltipFormat": {
                "tooltip": "Elapsed time since last collected sample"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "logical_srvr_name",
              "label": "Logical server"
            },
            {
              "columnId": "database_name",
              "label": "Database"
            },
            {
              "columnId": "last_sample_time_utc",
              "label": "Last sample"
            },
            {
              "columnId": "minutes_since_last_sample",
              "label": "Time since last sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "dropped_targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqldb_single_database"
        }
      ],
      "name": "dropped_sqldb_single_database_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{dropped_targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc} - not collecting",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "last_sample_time_utc",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "The time of the last collected sample in the \"properties\" dataset"
              }
            },
            {
              "columnMatch": "minutes_since_last_sample",
              "formatter": 4,
              "formatOptions": {
                "max": 1440,
                "palette": "yellowOrangeRed",
                "customColumnWidthSetting": "25ch"
              },
              "numberFormat": {
                "unit": 25,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              },
              "tooltipFormat": {
                "tooltip": "Elapsed time since last collected sample"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "logical_srvr_name",
              "label": "Logical server"
            },
            {
              "columnId": "elastic_pool_name",
              "label": "Elastic pool"
            },
            {
              "columnId": "last_sample_time_utc",
              "label": "Last sample"
            },
            {
              "columnId": "minutes_since_last_sample",
              "label": "Time since last sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "dropped_targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqldb_elastic_pool"
        }
      ],
      "name": "dropped_sqldb_elastic_pool_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{dropped_targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc} - not collecting",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "machine_name",
              "formatter": 5
            },
            {
              "columnMatch": "server_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 5
            },
            {
              "columnMatch": "last_sample_time_utc",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "The time of the last collected sample in the \"properties\" dataset"
              }
            },
            {
              "columnMatch": "minutes_since_last_sample",
              "formatter": 4,
              "formatOptions": {
                "max": 1440,
                "palette": "yellowOrangeRed",
                "customColumnWidthSetting": "25ch"
              },
              "numberFormat": {
                "unit": 25,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              },
              "tooltipFormat": {
                "tooltip": "Elapsed time since last collected sample"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "managed_instance_name",
              "label": "Managed instance"
            },
            {
              "columnId": "last_sample_time_utc",
              "label": "Last sample"
            },
            {
              "columnId": "minutes_since_last_sample",
              "label": "Time since last sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "dropped_targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqlmi"
        }
      ],
      "name": "dropped_sqlmi_targets"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"{dropped_targets}\",\"transformers\":null}",
        "size": 3,
        "title": "{target_type_desc} - not collecting",
        "showExportToExcel": true,
        "queryType": 8,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "managed_instance_name",
              "formatter": 5
            },
            {
              "columnMatch": "logical_srvr_name",
              "formatter": 5
            },
            {
              "columnMatch": "database_name",
              "formatter": 5
            },
            {
              "columnMatch": "elastic_pool_name",
              "formatter": 5
            },
            {
              "columnMatch": "last_sample_time_utc",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "The time of the last collected sample in the \"properties\" dataset"
              }
            },
            {
              "columnMatch": "minutes_since_last_sample",
              "formatter": 4,
              "formatOptions": {
                "max": 1440,
                "palette": "yellowOrangeRed",
                "customColumnWidthSetting": "25ch"
              },
              "numberFormat": {
                "unit": 25,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              },
              "tooltipFormat": {
                "tooltip": "Elapsed time since last collected sample"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "machine_name",
              "label": "Machine"
            },
            {
              "columnId": "server_name",
              "label": "Server"
            },
            {
              "columnId": "last_sample_time_utc",
              "label": "Last sample"
            },
            {
              "columnId": "minutes_since_last_sample",
              "label": "Time since last sample"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "dropped_targets",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "target_type",
          "comparison": "isEqualTo",
          "value": "sqlserver"
        }
      ],
      "name": "dropped_sqlserver_targets"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}