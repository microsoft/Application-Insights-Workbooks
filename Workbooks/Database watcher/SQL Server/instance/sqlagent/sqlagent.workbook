{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "afdfedd6-1853-4e9f-8e78-19d86f65455e",
            "version": "KqlParameterItem/1.0",
            "name": "sqlagentstateSampleType",
            "label": "Data to show",
            "type": 10,
            "description": "\"Last available\" shows the most recent sample within specified time range, if any. \"Historical\" lets you select any sample within specified time range. Refresh the workbook to see most recent samples.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"value\":\"Latest\",\"label\":\"Last available\"},{\"value\":\"Historical\",\"label\":\"Historical\"}]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "Latest"
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "sqlagentstate_sample_type_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| make-series metric = dcount(sample_time_utc) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor}*2\\r\\n\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 4,
        "aggregation": 3,
        "title": "Select a sample",
        "noDataMessage": "No SQL Agent job state samples are available",
        "timeBrushParameterName": "timeRange",
        "exportFieldName": "",
        "exportParameterName": "sqlagentstateHistoricalSample",
        "exportDefaultValue": "0",
        "queryType": 9,
        "visualization": "barchart",
        "chartSettings": {
          "showMetrics": false,
          "seriesLabelSettings": [
            {
              "seriesName": "metric",
              "color": "purpleDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "sqlagentstateSampleType",
        "comparison": "isEqualTo",
        "value": "Historical"
      },
      "name": "sqlagentstate_timeline"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize count_samples = dcount(sample_time_utc)\\r\\n| project strcat(\\\"There are `\\\", count_samples, \\\"` samples in the selected time range. Each vertical bar stands for a group of samples. Bar height is the number of samples in a group. Select a bar to view one sample from that group. Zoom in to see smaller sample groups, down to individual samples.\\\")\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "noDataMessage": "No SQL Agent job state samples are available",
        "queryType": 9,
        "visualization": "card",
        "textSettings": {
          "style": "markdown"
        }
      },
      "conditionalVisibility": {
        "parameterName": "sqlagentstateSampleType",
        "comparison": "isEqualTo",
        "value": "Historical"
      },
      "name": "sqlagentstate_sample_count"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d91ea020-aca3-4834-83a1-f19730aa6c3c",
            "version": "KqlParameterItem/1.0",
            "name": "sqlagentstateLatestSampleTime",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 5m, ({timeRange:start} - 5m), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 5m, ({timeRange:end} + 5m), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (5m)\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize sample_time_utc = max(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "id": "587cb1f3-411c-4d74-bd7c-fc93dfc9d5af",
            "version": "KqlParameterItem/1.0",
            "name": "sqlagentstateHistoricalSampleTime",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc between (todatetime(\\\"{sqlagentstateHistoricalSample:$.x}\\\") .. (todatetime(\\\"{sqlagentstateHistoricalSample:$.x}\\\") + {timeRange:grain}))\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize sample_time_utc = min(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "value": null
          },
          {
            "id": "80ec1ea3-7583-4958-bb00-f18784698010",
            "version": "KqlParameterItem/1.0",
            "name": "sqlagentstateSampleTime",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlagentstateSampleType",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Latest",
                  "resultValType": "param",
                  "resultVal": "sqlagentstateLatestSampleTime"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "sqlagentstateSampleType",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Historical",
                  "resultValType": "param",
                  "resultVal": "sqlagentstateHistoricalSampleTime"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "param",
                  "resultVal": "sqlagentstateLatestSampleTime"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 9
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "50",
      "name": "sqlagentstate_sample_time_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc == todatetime(\\\"{sqlagentstateSampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize count_jobs = count() by sample_time_utc, sqlagent_start_time_local, sqlagent_status, sqlagent_process_id\\r\\n| project sample_time = sample_time_utc, sample_time_utc, sample_age = format_timespan(now() - sample_time_utc, \\\"d.hh:mm:ss\\\"), count_jobs, sqlagent_status, sqlagent_start_time_local, sqlagent_process_id\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "noDataMessage": "No SQL Agent job state samples are available",
        "queryType": 9,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "sample_time",
              "formatter": 6,
              "formatOptions": {
                "customColumnWidthSetting": "28ch"
              },
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "sample_time_utc",
              "formatter": 6,
              "formatOptions": {
                "customColumnWidthSetting": "28ch"
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "sample_age",
              "formatter": 2,
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the displayed sample"
              }
            },
            {
              "columnMatch": "sqlagent_start_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "collection_time",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "collection_time_utc",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "sample_time",
              "label": "Collection time"
            },
            {
              "columnId": "sample_time_utc",
              "label": "Collection time (UTC)"
            },
            {
              "columnId": "sample_age",
              "label": "Age of sample"
            },
            {
              "columnId": "count_jobs",
              "label": "Jobs"
            },
            {
              "columnId": "sqlagent_status",
              "label": "SQL Agent status"
            },
            {
              "columnId": "sqlagent_start_time_local",
              "label": "SQL Agent start time"
            },
            {
              "columnId": "sqlagent_process_id",
              "label": "SQL Agent process ID"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "sqlagentstateSampleTime",
        "comparison": "isNotEqualTo"
      },
      "name": "selected_sqlagentstate_sample"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_state\\r\\n| where sample_time_utc == todatetime(\\\"{sqlagentstateSampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| project-away sample_time_utc, server_name, machine_name, sqlagent_start_time_local, sqlagent_status, sqlagent_process_id, sqlagent_session_id\\r\\n| project job_name, job_category, is_job_enabled, is_job_running, start_execution_time_local, stop_execution_time_local, last_completed_execution_time_local, last_completed_execution_result, next_scheduled_execution_time_local, last_execution_requestor, last_executed_step_name, job_id\\r\\n| sort by tolower(job_name) asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "showAnalytics": true,
        "title": "Job state",
        "noDataMessage": "There is no data for specified parameters.",
        "showExportToExcel": true,
        "queryType": 9,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "is_job_enabled",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "1",
                    "representation": "Available",
                    "text": ""
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "disabled",
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Unknown",
                    "text": ""
                  }
                ]
              }
            },
            {
              "columnMatch": "is_job_running",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "true",
                    "representation": "pending",
                    "text": ""
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "false",
                    "representation": "stopped",
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "unknown",
                    "text": ""
                  }
                ]
              }
            },
            {
              "columnMatch": "start_execution_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "stop_execution_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "last_completed_execution_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "last_completed_execution_result",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Succeeded",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Failed",
                    "representation": "failed",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Retry",
                    "representation": "Clock",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Canceled",
                    "representation": "cancelled",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "representation": "pending",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "next_scheduled_execution_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "last_execution_start_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            },
            {
              "columnMatch": "last_execution_stop_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              },
              "tooltipFormat": {
                "tooltip": "Displayed in local time of the database engine instance"
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "job_name",
              "label": "Name"
            },
            {
              "columnId": "job_category",
              "label": "Category"
            },
            {
              "columnId": "is_job_enabled",
              "label": "Enabled"
            },
            {
              "columnId": "is_job_running",
              "label": "Running"
            },
            {
              "columnId": "start_execution_time_local",
              "label": "Start time"
            },
            {
              "columnId": "stop_execution_time_local",
              "label": "Stop time"
            },
            {
              "columnId": "last_completed_execution_time_local",
              "label": "Last execution time"
            },
            {
              "columnId": "last_completed_execution_result",
              "label": "Last result"
            },
            {
              "columnId": "next_scheduled_execution_time_local",
              "label": "Next start time"
            },
            {
              "columnId": "last_execution_requestor",
              "label": "Last executed by"
            },
            {
              "columnId": "last_executed_step_name",
              "label": "Last executed step"
            },
            {
              "columnId": "job_id",
              "label": "Job ID"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "sqlagentstateSampleTime",
        "comparison": "isNotEqualTo"
      },
      "name": "sql_agent_job_state"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_sqlagent_job_history\\r\\n| where collection_time_utc between (datetime_add(\\\"second\\\", -datetime_diff(\\\"second\\\", {timeRange:end}, {timeRange:start}), todatetime(\\\"{sqlagentstateSampleTime}\\\")) .. todatetime(\\\"{sqlagentstateSampleTime}\\\"))\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| where step_id == 0\\r\\n| summarize count_jobs = count() by job_id, job_name, run_status_desc\\r\\n| extend tooltip_suffix = case(run_status_desc==\\\"Succeeded\\\", \\\"have succeeded\\\", run_status_desc==\\\"In Progress\\\", \\\"are in progress\\\", run_status_desc==\\\"Retry\\\", \\\"are retrying\\\", run_status_desc==\\\"Canceled\\\", \\\"were canceled\\\", run_status_desc==\\\"Failed\\\", \\\"have failed\\\", \\\"have unknown status\\\")\\r\\n| sort by tolower(job_name) asc, status_ordinal = case(run_status_desc==\\\"Succeeded\\\", 1, run_status_desc==\\\"In Progress\\\", 2, run_status_desc==\\\"Retry\\\", 3, run_status_desc==\\\"Canceled\\\", 4, run_status_desc==\\\"Failed\\\", 5, 6) asc\\r\\n| extend tile_ordinal = row_number()\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "showAnalytics": true,
        "title": "Job execution statistics",
        "noDataMessage": "There is no data for specified parameters.",
        "exportFieldName": "job_id",
        "exportParameterName": "job_id",
        "showExportToExcel": true,
        "queryType": 9,
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "run_status_desc",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Succeeded",
                  "representation": "success",
                  "text": "[\"job_name\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Failed",
                  "representation": "failed",
                  "text": "[\"job_name\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Retry",
                  "representation": "2",
                  "text": "[\"job_name\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "Canceled",
                  "representation": "cancelled",
                  "text": "[\"job_name\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "In Progress",
                  "representation": "pending",
                  "text": "[\"job_name\"]"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "Unavailable",
                  "text": "[\"job_name\"]"
                }
              ]
            },
            "tooltipFormat": {
              "tooltip": "[\"count_jobs\"] executions of job \"[\"job_name\"]\" [\"tooltip_suffix\"]"
            }
          },
          "rightContent": {
            "columnMatch": "count_jobs",
            "formatter": 12,
            "formatOptions": {
              "palette": "none"
            },
            "tooltipFormat": {
              "tooltip": "[\"count_jobs\"] executions of job \"[\"job_name\"]\" [\"tooltip_suffix\"]"
            }
          },
          "secondaryContent": {
            "columnMatch": "run_status_desc",
            "formatter": 1,
            "tooltipFormat": {
              "tooltip": "[\"count_jobs\"] executions of job \"[\"job_name\"]\" [\"tooltip_suffix\"]"
            }
          },
          "showBorder": true,
          "sortCriteriaField": "tile_ordinal",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "sqlserver_sqlagent_job_history",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqlagentstateSampleTime",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "sql_agent_job_exec_stats"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let history = materialize (\\r\\nsqlserver_sqlagent_job_history\\r\\n| where collection_time_utc between (datetime_add(\\\"second\\\", -datetime_diff(\\\"second\\\", {timeRange:end}, {timeRange:start}), todatetime(\\\"{sqlagentstateSampleTime}\\\")) .. todatetime(\\\"{sqlagentstateSampleTime}\\\"))\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| where job_id == \\\"{job_id}\\\"\\r\\n| project-away collection_time_utc, server_name, machine_name\\r\\n| sort by start_execution_time_local asc, step_id asc // Arrange job steps together in the sort order, starting with job outcome step (step_id 0)\\r\\n| extend job_execution_id = row_number(1) - row_number(1, step_id == 0) // Number each job step sequentially within a job execution. The difference between global row number and job execution row number is constant for a given job execution.\\r\\n);\\r\\n// column labels for each grid\\r\\nlet column_labels_string = dynamic(\\r\\n[\\r\\n\\\"job_id\\\", \\\"job_name\\\", \\\"job_category\\\", \\\"subsystem\\\", \\\"output_file_name\\\", \\\"emailed_operator_name\\\", \\\"job_execution_server\\\"\\r\\n]);\\r\\nlet column_labels_number = dynamic(\\r\\n[\\r\\n\\\"job_history_id\\\", \\\"is_job_enabled\\\", \\\"job_version_number\\\", \\\"step_id\\\", \\\"sql_message_id\\\", \\\"sql_severity\\\"\\r\\n]);\\r\\nlet column_labels_datetime = dynamic(\\r\\n[\\r\\n\\\"job_create_time_local\\\", \\\"job_modify_time_local\\\"\\r\\n]);\\r\\n// result set for strings grid\\r\\nlet history_string = (\\r\\nhistory\\r\\n| project job_history_id, job_id, job_name, job_category, subsystem, output_file_name, emailed_operator_name, job_execution_server\\r\\n| project job_history_id, columns = pack_all() // put all columns into a property bag\\r\\n| mv-apply column_label = column_labels_string to typeof(string) on (project column_label, column_value = tostring(columns[column_label])) // create a row for each name/value pair\\r\\n| project-away columns\\r\\n| sort by column_label asc //make_list later will preserve sort order\\r\\n| project job_history_id, c = pack(\\\"Property\\\", column_label, \\\"Value\\\", column_value) // introduce \\\"Property\\\" and \\\"Value\\\" column names\\r\\n| summarize details_string = dynamic_to_json(make_list(c)) by job_history_id // for each job_history_id, aggregate rowset into a json array of rows, to be used as grid source\\r\\n);\\r\\n// result set for numbers grid\\r\\nlet history_number = (\\r\\nhistory\\r\\n| project job_history_id, is_job_enabled, job_version_number, step_id, sql_message_id, sql_severity\\r\\n| project job_history_id, columns = pack_all() // put all columns into a property bag\\r\\n| mv-apply column_label = column_labels_number to typeof(string) on (project column_label, column_value = toint(columns[column_label])) // create a row for each name/value pair\\r\\n| project-away columns\\r\\n| sort by column_label asc //make_list later will preserve sort order\\r\\n| project job_history_id, c = pack(\\\"Property\\\", column_label, \\\"Value\\\", column_value) // introduce \\\"Property\\\" and \\\"Value\\\" column names\\r\\n| summarize details_number = dynamic_to_json(make_list(c)) by job_history_id // for each job_history_id, aggregate rowset into a json array of rows, to be used as grid source\\r\\n);\\r\\n// result set for datetime grid\\r\\nlet history_datetime = (\\r\\nhistory\\r\\n| project job_history_id, job_create_time_local, job_modify_time_local\\r\\n| project job_history_id, columns = pack_all() // put all columns into a property bag\\r\\n| mv-apply column_label = column_labels_datetime to typeof(string) on (project column_label, column_value = todatetime(columns[column_label])) // create a row for each name/value pair\\r\\n| project-away columns\\r\\n| sort by column_label asc //make_list later will preserve sort order\\r\\n| project job_history_id, c = pack(\\\"Property\\\", column_label, \\\"Value\\\", column_value) // introduce \\\"Property\\\" and \\\"Value\\\" column names\\r\\n| summarize details_datetime = dynamic_to_json(make_list(c)) by job_history_id // for each job_history_id, aggregate rowset into a json array of rows, to be used as grid source\\r\\n);\\r\\nlet history_details = (\\r\\nhistory\\r\\n| join kind=inner history_string on job_history_id\\r\\n| join kind=inner history_number on job_history_id\\r\\n| join kind=inner history_datetime on job_history_id\\r\\n| project job_execution_id, start_execution_time_local, job_history_id, step_id, step_name, message, run_status_desc, job_duration_seconds, retries_attempted, details_string, details_number, details_datetime, message_json = dynamic_to_json(pack(\\\"message\\\", message))\\r\\n);\\r\\nhistory_details\\r\\n| where step_id == 0 // job outcome pseudo-step\\r\\n| extend grid_id = job_execution_id, grid_parent_id = tolong(0)\\r\\n| union (\\r\\nhistory_details\\r\\n| where step_id != 0 // job steps\\r\\n| extend grid_id = tolong(job_history_id), grid_parent_id = job_execution_id\\r\\n)\\r\\n| sort by start_execution_time_local desc, step_id asc, retries_attempted asc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 0,
        "showAnalytics": true,
        "title": "Job history",
        "noDataMessage": "There is no data for specified parameters.",
        "exportedParameters": [
          {
            "fieldName": "message_json",
            "parameterName": "message_json",
            "parameterType": 1,
            "defaultValue": "{\"message\":\"\"}"
          },
          {
            "fieldName": "details_string",
            "parameterName": "details_string",
            "parameterType": 1,
            "defaultValue": "{\"Property\":\"\",\"Value\":\"\"}"
          },
          {
            "fieldName": "details_number",
            "parameterName": "details_number",
            "parameterType": 1,
            "defaultValue": "{\"Property\":\"\",\"Value\":\"\"}"
          },
          {
            "fieldName": "details_datetime",
            "parameterName": "details_datetime",
            "parameterType": 1,
            "defaultValue": "{\"Property\":\"\",\"Value\":\"\"}"
          },
          {
            "fieldName": "grid_id",
            "parameterName": "job_history_grid_id",
            "parameterType": 1
          }
        ],
        "showExportToExcel": true,
        "queryType": 9,
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "job_execution_id",
              "formatter": 5
            },
            {
              "columnMatch": "start_execution_time_local",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "job_history_id",
              "formatter": 5
            },
            {
              "columnMatch": "job_duration_seconds",
              "formatter": 0,
              "numberFormat": {
                "unit": 24,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "retries_attempted",
              "formatter": 0,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              }
            },
            {
              "columnMatch": "details_string",
              "formatter": 5
            },
            {
              "columnMatch": "details_number",
              "formatter": 5
            },
            {
              "columnMatch": "details_datetime",
              "formatter": 5
            },
            {
              "columnMatch": "message_json",
              "formatter": 5
            },
            {
              "columnMatch": "grid_id",
              "formatter": 5
            },
            {
              "columnMatch": "grid_parent_id",
              "formatter": 5
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "grid_id",
            "parentColumn": "grid_parent_id",
            "treeType": 0,
            "expanderColumn": "start_execution_time_local",
            "expandTopLevel": false
          },
          "labelSettings": [
            {
              "columnId": "start_execution_time_local",
              "label": "Start time"
            },
            {
              "columnId": "step_id",
              "label": "Step ID"
            },
            {
              "columnId": "step_name",
              "label": "Step name"
            },
            {
              "columnId": "message",
              "label": "Message"
            },
            {
              "columnId": "run_status_desc",
              "label": "Run status"
            },
            {
              "columnId": "job_duration_seconds",
              "label": "Duration"
            },
            {
              "columnId": "retries_attempted",
              "label": "Retries"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "sqlserver_sqlagent_job_history",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "job_id",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "sqlagentstateSampleTime",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "sql_agent_job_history"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Job history details",
        "expandable": true,
        "expanded": true,
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"1.0.0\",\"content\":\"{message_json}\",\"transformers\":null}",
              "size": 3,
              "queryType": 8,
              "visualization": "card",
              "textSettings": {
                "style": "editor"
              }
            },
            "name": "job_history_message"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"1.0.0\",\"content\":\"{details_string}\",\"transformers\":null}",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 8
            },
            "customWidth": "33",
            "name": "job_history_details_string"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"1.0.0\",\"content\":\"{details_number}\",\"transformers\":null}",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 8
            },
            "customWidth": "33",
            "name": "job_history_details_number"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"1.0.0\",\"content\":\"{details_datetime}\",\"transformers\":null}",
              "size": 3,
              "showExportToExcel": true,
              "queryType": 8,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Value",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "name": "job_history_details_datetime"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "sqlserver_sqlagent_job_history",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "job_id",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "sqlagentstateSampleTime",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "job_history_grid_id",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "sql_agent_history_details_group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}