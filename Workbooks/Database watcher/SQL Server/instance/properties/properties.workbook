{
  "version": "Notebook/1.0",
  "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "d7ea0f46-a742-4e7d-8fed-b1c1dca01882",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertySampleType",
                  "label": "Data to show",
                  "type": 10,
                  "description": "\"Last available\" shows the most recent sample within specified time range, if any. \"Historical\" lets you select any sample within specified time range. Refresh the workbook to see most recent samples.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{\"value\":\"Latest\",\"label\":\"Last available\"},{\"value\":\"Historical\",\"label\":\"Historical\"}]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Latest"
                }
              ],
              "style": "formHorizontal",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "property_sample_type_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| make-series metric = count() default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor}*2\\r\\n\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 4,
              "aggregation": 3,
              "title": "Select a sample",
              "noDataMessage": "No server property samples are available",
              "timeBrushParameterName": "timeRange",
              "exportParameterName": "propertyHistoricalSample",
              "exportDefaultValue": "0",
              "queryType": 9,
              "visualization": "barchart",
              "chartSettings": {
                "showMetrics": false,
                "seriesLabelSettings": [
                  {
                    "seriesName": "metric",
                    "color": "purple"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "propertySampleType",
              "comparison": "isEqualTo",
              "value": "Historical"
            },
            "name": "property_timeline"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize count_samples = count()\\r\\n| project strcat(\\\"There are `\\\", count_samples, \\\"` samples in the selected time range. Each vertical bar stands for a group of samples. Bar height is the number of samples in a group. Select a bar to view one sample from that group. Zoom in to see smaller sample groups, down to individual samples.\\\")\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "noDataMessage": "No server property samples are available",
              "queryType": 9,
              "visualization": "card",
              "textSettings": {
                "style": "markdown"
              }
            },
            "conditionalVisibility": {
              "parameterName": "propertySampleType",
              "comparison": "isEqualTo",
              "value": "Historical"
            },
            "name": "property_sample_count"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "fffee6ff-a8f5-4b0e-ab23-0b28ffb25ef9",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyLatestSampleTime",
                  "type": 1,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize sample_time_utc = max(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 9
                },
                {
                  "id": "a18f210f-d185-49b4-a920-c1619a45769c",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyHistoricalSampleTime",
                  "type": 1,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc between (todatetime(\\\"{propertyHistoricalSample:$.x}\\\") .. (todatetime(\\\"{propertyHistoricalSample:$.x}\\\") + {timeRange:grain}))\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| summarize sample_time_utc = min(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 9,
                  "value": null
                },
                {
                  "id": "deccf901-119f-4c18-860a-bb34fbd64736",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertySampleTime",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "propertySampleType",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "Latest",
                        "resultValType": "param",
                        "resultVal": "propertyLatestSampleTime"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "propertySampleType",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "Historical",
                        "resultValType": "param",
                        "resultVal": "propertyHistoricalSampleTime"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "propertyLatestSampleTime"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "formHorizontal",
              "queryType": 9
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "alwaysHidden",
              "comparison": "isNotEqualTo"
            },
            "name": "property_sample_time_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| project sample_time = sample_time_utc, sample_time_utc, sample_age = format_timespan(now() - sample_time_utc, \\\"d.hh:mm:ss\\\")\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 4,
              "noDataMessage": "No sample is selected",
              "queryType": 9,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "sample_time",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "28ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "sample_time_utc",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "28ch"
                    },
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "sample_age",
                    "formatter": 2,
                    "tooltipFormat": {
                      "tooltip": "Time difference between the last dashboard refresh and the displayed sample"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "sample_time",
                    "label": "Collection time"
                  },
                  {
                    "columnId": "sample_time_utc",
                    "label": "Collection time (UTC)"
                  },
                  {
                    "columnId": "sample_age",
                    "label": "Age of sample"
                  }
                ]
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "propertySampleTime",
              "comparison": "isNotEqualTo"
            },
            "name": "selected_property_sample"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"datatable(key:int, service_name:string, service_ordinal:int) [\\r\\n1, \\\"SQL Server\\\", 1,\\r\\n1, \\\"SQL Agent\\\", 2,\\r\\n1, \\\"Full-Text Search\\\", 3,\\r\\n1, \\\"Launchpad\\\", 4\\r\\n]\\r\\n| join kind=inner\\r\\n(\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n) on key\\r\\n| project service_name, \\r\\n          service_ordinal,\\r\\n          service_status = case(\\r\\n                                service_name == \\\"SQL Server\\\", sqlserver_service_status, \\r\\n                                service_name == \\\"SQL Agent\\\", sqlagent_service_status, \\r\\n                                service_name == \\\"Full-Text Search\\\", fulltext_service_status, \\r\\n                                service_name == \\\"Launchpad\\\", launchpad_service_status, \\r\\n                                \\\"\\\"\\r\\n                                ),\\r\\n          service_startup_type = case(\\r\\n                                     service_name == \\\"SQL Server\\\", sqlserver_service_startup_type, \\r\\n                                     service_name == \\\"SQL Agent\\\", sqlagent_service_startup_type, \\r\\n                                     service_name == \\\"Full-Text Search\\\", fulltext_service_startup_type, \\r\\n                                     service_name == \\\"Launchpad\\\", launchpad_service_startup_type, \\r\\n                                     \\\"\\\"\\r\\n                                     ),\\r\\n          service_process_id = case(\\r\\n                                   service_name == \\\"SQL Server\\\", sqlserver_service_process_id, \\r\\n                                   service_name == \\\"SQL Agent\\\", sqlagent_service_process_id, \\r\\n                                   service_name == \\\"Full-Text Search\\\", fulltext_service_process_id, \\r\\n                                   service_name == \\\"Launchpad\\\", launchpad_service_process_id, \\r\\n                                   int(null)\\r\\n                                   )\\r\\n| sort by service_ordinal asc\\r\\n| project-away service_ordinal;\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Services",
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "labelSettings": [
                        {
                          "columnId": "service_name",
                          "label": "Service"
                        },
                        {
                          "columnId": "service_status",
                          "label": "Status"
                        },
                        {
                          "columnId": "service_startup_type",
                          "label": "Startup type"
                        },
                        {
                          "columnId": "service_process_id",
                          "label": "Process ID"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "properties_services"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| project cluster_members = todynamic(cluster_members)\\r\\n| mv-expand cluster_members\\r\\n| mv-expand member_name = cluster_members.member_name to typeof(string), member_type_desc = cluster_members.member_type_desc to typeof(string), member_state_desc = cluster_members.member_state_desc to typeof(string), count_quorum_votes = cluster_members.count_quorum_votes to typeof(int)\\r\\n| extend cluster_network = extract_json(\\\"$.cluster_network\\\", tostring(cluster_members), typeof(dynamic)),\\r\\n         machine_name = iif(member_type_desc == \\\"CLUSTER_NODE\\\", member_name, \\\"\\\"),\\r\\n         witness = iif(member_type_desc in (\\\"DISK_WITNESS\\\", \\\"FILE_SHARE_WITNESS\\\", \\\"CLOUD_WITNESS\\\"), member_name, \\\"\\\")\\r\\n| project machine_name, witness, member_type_desc, member_state_desc, count_quorum_votes, cluster_network, member_name\\r\\n| sort by tolower(iif(member_type_desc in (\\\"DISK_WITNESS\\\", \\\"FILE_SHARE_WITNESS\\\", \\\"CLOUD_WITNESS\\\"), \\\"|\\\", member_name)) asc, witness asc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Cluster members",
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "machine_name",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/Database watcher/SQL Server/instance",
                              "typeSource": "workbook",
                              "gallerySource": "default",
                              "locationSource": "workbook",
                              "workbookName": "SQL Server instance",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "machineName",
                                  "source": "column",
                                  "value": "machine_name"
                                },
                                {
                                  "name": "timeRange",
                                  "source": "parameter",
                                  "value": "timeRange"
                                },
                                {
                                  "name": "watcherResourceId",
                                  "source": "parameter",
                                  "value": "watcherResourceId"
                                },
                                {
                                  "name": "linkAdxClusterUri",
                                  "source": "parameter",
                                  "value": "adxClusterUri"
                                },
                                {
                                  "name": "linkAdxDatabase",
                                  "source": "parameter",
                                  "value": "adxDatabase"
                                },
                                {
                                  "name": "tabName",
                                  "source": "static",
                                  "value": "Properties"
                                },
                                {
                                  "name": "serverName",
                                  "source": "column",
                                  "value": "machine_name"
                                }
                              ],
                              "viewerMode": true
                            }
                          }
                        },
                        {
                          "columnMatch": "member_state_desc",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "UP",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "DOWN",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "cluster_network",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "130ch"
                          }
                        },
                        {
                          "columnMatch": "member_name",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "machine_name",
                          "label": "Machine"
                        },
                        {
                          "columnId": "witness",
                          "label": "Witness"
                        },
                        {
                          "columnId": "member_type_desc",
                          "label": "Type"
                        },
                        {
                          "columnId": "member_state_desc",
                          "label": "State"
                        },
                        {
                          "columnId": "count_quorum_votes",
                          "label": "Votes"
                        },
                        {
                          "columnId": "cluster_network",
                          "label": "Network"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "properties_cluster_members"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"sql_server_edition\\\",\\r\\n1, \\\"product_version\\\",\\r\\n1, \\\"sql_server_version\\\",\\r\\n1, \\\"product_level\\\",\\r\\n1, \\\"product_update_level\\\",\\r\\n1, \\\"fci_virtual_server_name\\\",\\r\\n1, \\\"current_utc_offset\\\",\\r\\n1, \\\"database_engine_memory_model\\\",\\r\\n1, \\\"virtual_machine_type_desc\\\",\\r\\n1, \\\"host_platform\\\",\\r\\n1, \\\"host_distribution\\\",\\r\\n1, \\\"host_release\\\",\\r\\n1, \\\"cluster_name\\\",\\r\\n1, \\\"quorum_type_desc\\\",\\r\\n1, \\\"quorum_state_desc\\\",\\r\\n1, \\\"server_name\\\",\\r\\n1, \\\"machine_name\\\"\\r\\n];\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, sql_server_edition, product_version, sql_server_version, product_level, product_update_level, fci_virtual_server_name, current_utc_offset, database_engine_memory_model, virtual_machine_type_desc, host_platform, host_distribution, host_release, cluster_name, quorum_type_desc = iif(is_clustered == 1 or is_availability_groups_enabled == 1, quorum_type_desc, \\\"\\\"), quorum_state_desc = iif(is_clustered == 1 or is_availability_groups_enabled == 1, quorum_state_desc, \\\"\\\"), is_clustered, is_availability_groups_enabled, server_name, machine_name\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"sql_server_edition\\\", sql_server_edition,\\r\\n                            property_name == \\\"product_version\\\", product_version,\\r\\n                            property_name == \\\"sql_server_version\\\", sql_server_version,\\r\\n                            property_name == \\\"product_level\\\", product_level,\\r\\n                            property_name == \\\"product_update_level\\\", product_update_level,\\r\\n                            property_name == \\\"fci_virtual_server_name\\\", fci_virtual_server_name,\\r\\n                            property_name == \\\"current_utc_offset\\\", current_utc_offset,\\r\\n                            property_name == \\\"database_engine_memory_model\\\", database_engine_memory_model,\\r\\n                            property_name == \\\"virtual_machine_type_desc\\\", virtual_machine_type_desc,\\r\\n                            property_name == \\\"host_platform\\\", host_platform,\\r\\n                            property_name == \\\"host_distribution\\\", host_distribution,\\r\\n                            property_name == \\\"host_release\\\", host_release,\\r\\n                            property_name == \\\"cluster_name\\\", cluster_name,\\r\\n                            property_name == \\\"quorum_type_desc\\\", quorum_type_desc,\\r\\n                            property_name == \\\"quorum_state_desc\\\", quorum_state_desc,\\r\\n                            property_name == \\\"server_name\\\", server_name,\\r\\n                            property_name == \\\"machine_name\\\", machine_name,\\r\\n                            \\\"\\\"\\r\\n                            )\\r\\n| project-away sql_server_edition, product_version, sql_server_version, product_level, product_update_level, fci_virtual_server_name, current_utc_offset, database_engine_memory_model, virtual_machine_type_desc, host_platform, host_distribution, host_release, cluster_name, quorum_type_desc, quorum_state_desc, server_name, machine_name\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"CONVENTIONAL\\\", \\\"warning\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"LOCK_PAGES\\\", \\\"info\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"LARGE_PAGES\\\", \\\"warning\\\", \\r\\n                        property_name == \\\"quorum_state_desc\\\" and (is_clustered == 1 or is_availability_groups_enabled == 1) and property_value != \\\"NORMAL_QUORUM\\\", \\\"warning\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"CONVENTIONAL\\\", \\\"Not commonly recommended\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"LOCK_PAGES\\\", \\\"Learn more\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"LARGE_PAGES\\\", \\\"Not commonly recommended\\\", \\r\\n                        property_name == \\\"quorum_state_desc\\\" and (is_clustered == 1 or is_availability_groups_enabled == 1) and property_value != \\\"NORMAL_QUORUM\\\", \\\"Unexpected value, investigate\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"CONVENTIONAL\\\", \\\"https://go.microsoft.com/fwlink/?linkid=2198638\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value == \\\"LOCK_PAGES\\\", \\\"https://go.microsoft.com/fwlink/?linkid=2201912\\\", \\r\\n                        property_name == \\\"database_engine_memory_model\\\" and property_value != \\\"LARGE_PAGES\\\", \\\"https://go.microsoft.com/fwlink/?linkid=2202820\\\", \\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| project-away is_clustered, is_availability_groups_enabled\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "note_icon",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "note_url",
                            "linkTarget": "Url",
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "info",
                                "representation": "1",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "50ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                          }
                        },
                        {
                          "columnMatch": "note_text",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "note_url",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "property_name",
                          "label": "Property"
                        },
                        {
                          "columnId": "property_value",
                          "label": "Value"
                        },
                        {
                          "columnId": "note_icon",
                          "label": "Note"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "server_properties_string"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"engine_edition\\\",\\r\\n1, \\\"logical_cpu_count\\\",\\r\\n1, \\\"server_maxdop\\\",\\r\\n1, \\\"cost_threshold_for_parallelism\\\",\\r\\n1, \\\"fill_factor_percent\\\",\\r\\n1, \\\"user_options\\\",\\r\\n1, \\\"max_workers_count\\\",\\r\\n1, \\\"socket_count\\\",\\r\\n1, \\\"cores_per_socket\\\",\\r\\n1, \\\"numa_node_count\\\",\\r\\n1, \\\"ipall_tcp_port\\\",\\r\\n1, \\\"ipall_dynamic_ports\\\",\\r\\n1, \\\"remote_dac_tcp_port\\\",\\r\\n1, \\\"count_dumps\\\"\\r\\n];\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, engine_edition, logical_cpu_count, server_maxdop, cost_threshold_for_parallelism, fill_factor_percent, user_options, max_workers_count, socket_count, cores_per_socket, numa_node_count, ipall_tcp_port, ipall_dynamic_ports, remote_dac_tcp_port, count_dumps\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"engine_edition\\\", toreal(engine_edition),\\r\\n                            property_name == \\\"logical_cpu_count\\\", toreal(logical_cpu_count),\\r\\n                            property_name == \\\"server_maxdop\\\", toreal(server_maxdop),\\r\\n                            property_name == \\\"cost_threshold_for_parallelism\\\", toreal(cost_threshold_for_parallelism),\\r\\n                            property_name == \\\"fill_factor_percent\\\", toreal(fill_factor_percent),\\r\\n                            property_name == \\\"user_options\\\", toreal(user_options),\\r\\n                            property_name == \\\"max_workers_count\\\", toreal(max_workers_count),\\r\\n                            property_name == \\\"socket_count\\\", toreal(socket_count),\\r\\n                            property_name == \\\"cores_per_socket\\\", toreal(cores_per_socket),\\r\\n                            property_name == \\\"numa_node_count\\\", toreal(numa_node_count),\\r\\n                            property_name == \\\"ipall_tcp_port\\\", toreal(ipall_tcp_port),\\r\\n                            property_name == \\\"ipall_dynamic_ports\\\", toreal(ipall_dynamic_ports),\\r\\n                            property_name == \\\"remote_dac_tcp_port\\\", toreal(remote_dac_tcp_port),\\r\\n                            property_name == \\\"count_dumps\\\", toreal(count_dumps),\\r\\n                            real(null)\\r\\n                            )\\r\\n| project-away engine_edition, server_maxdop, cost_threshold_for_parallelism, fill_factor_percent, user_options, max_workers_count, socket_count, cores_per_socket, numa_node_count, ipall_tcp_port, ipall_dynamic_ports, remote_dac_tcp_port, count_dumps\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"server_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"warning\\\", \\r\\n                        property_name == \\\"server_maxdop\\\" and toint(property_value) == 1, \\\"info\\\", \\r\\n                        property_name == \\\"fill_factor_percent\\\" and property_value !in (0,100), \\\"warning\\\", \\r\\n                        property_name == \\\"user_options\\\" and property_value != 0, \\\"info\\\", \\r\\n                        property_name == \\\"max_workers_count\\\" and case(\\r\\n                                                                     logical_cpu_count between (1 .. 4) and property_value != 512, true,\\r\\n                                                                     logical_cpu_count between (5 .. 8) and property_value != 576, true,\\r\\n                                                                     logical_cpu_count between (9 .. 16) and property_value != 704, true,\\r\\n                                                                     logical_cpu_count between (17 .. 32) and property_value != 960, true,\\r\\n                                                                     logical_cpu_count between (33 .. 64) and property_value != 1472, true,\\r\\n                                                                     logical_cpu_count between (65 .. 128) and property_value != 4480, true,\\r\\n                                                                     logical_cpu_count between (129 .. 256) and property_value != 8576, true,\\r\\n                                                                     false), \\\"info\\\", \\r\\n                        property_name == \\\"ipall_dynamic_ports\\\" and property_value == 0, \\\"warning\\\", \\r\\n                        property_name == \\\"count_dumps\\\" and property_value != 0, \\\"warning\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"server_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"Configure 'max degree of parallelism' as recommended\\\", \\r\\n                        property_name == \\\"server_maxdop\\\" and toint(property_value) == 1, \\\"Query parallelism is disabled\\\", \\r\\n                        property_name == \\\"fill_factor_percent\\\" and property_value !in (0,100), \\\"Commonly recommended value is 0 or 100\\\", \\r\\n                        property_name == \\\"user_options\\\" and property_value != 0, \\\"Non-default value\\\", \\r\\n                        property_name == \\\"max_workers_count\\\" and case(\\r\\n                                                                     logical_cpu_count between (1 .. 4) and property_value != 512, true,\\r\\n                                                                     logical_cpu_count between (5 .. 8) and property_value != 576, true,\\r\\n                                                                     logical_cpu_count between (9 .. 16) and property_value != 704, true,\\r\\n                                                                     logical_cpu_count between (17 .. 32) and property_value != 960, true,\\r\\n                                                                     logical_cpu_count between (33 .. 64) and property_value != 1472, true,\\r\\n                                                                     logical_cpu_count between (65 .. 128) and property_value != 4480, true,\\r\\n                                                                     logical_cpu_count between (129 .. 256) and property_value != 8576, true,\\r\\n                                                                     false), \\\"Non-default value\\\", \\r\\n                        property_name == \\\"ipall_dynamic_ports\\\" and isnotempty(property_value), \\\"Recommended practice is to use static ports\\\", \\r\\n                        property_name == \\\"count_dumps\\\" and property_value != 0, \\\"Investigate and/or contact support\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"server_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"https://go.microsoft.com/fwlink/?linkid=2201911\\\", \\r\\n                        property_name == \\\"server_maxdop\\\" and toint(property_value) == 1, \\\"https://go.microsoft.com/fwlink/?linkid=2201911\\\", \\r\\n                        property_name == \\\"fill_factor_percent\\\" and property_value !in (0,100), \\\"https://go.microsoft.com/fwlink/?linkid=2201715\\\", \\r\\n                        property_name == \\\"user_options\\\" and property_value != 0, \\\"https://go.microsoft.com/fwlink/?linkid=2201909\\\", \\r\\n                        property_name == \\\"max_workers_count\\\" and case(\\r\\n                                                                     logical_cpu_count between (1 .. 4) and property_value != 512, true,\\r\\n                                                                     logical_cpu_count between (5 .. 8) and property_value != 576, true,\\r\\n                                                                     logical_cpu_count between (9 .. 16) and property_value != 704, true,\\r\\n                                                                     logical_cpu_count between (17 .. 32) and property_value != 960, true,\\r\\n                                                                     logical_cpu_count between (33 .. 64) and property_value != 1472, true,\\r\\n                                                                     logical_cpu_count between (65 .. 128) and property_value != 4480, true,\\r\\n                                                                     logical_cpu_count between (129 .. 256) and property_value != 8576, true,\\r\\n                                                                     false), \\\"https://go.microsoft.com/fwlink/?linkid=2201716\\\", \\r\\n                        property_name == \\\"ipall_dynamic_ports\\\" and property_value == 0, \\\"https://go.microsoft.com/fwlink/?linkid=2201717\\\",\\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| project-away logical_cpu_count\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "note_icon",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "note_url",
                            "linkTarget": "Url",
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "info",
                                "representation": "1",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "50ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                          }
                        },
                        {
                          "columnMatch": "note_text",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "note_url",
                          "formatter": 5
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "property_name",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "property_name",
                          "label": "Property"
                        },
                        {
                          "columnId": "property_value",
                          "label": "Value"
                        },
                        {
                          "columnId": "note_icon",
                          "label": "Note"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "property_name",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "server_properties_number"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"server_optimize_for_ad_hoc_workloads\\\",\\r\\n1, \\\"backup_checksum_default\\\",\\r\\n1, \\\"backup_compression_default\\\",\\r\\n1, \\\"remote_admin_connections\\\",\\r\\n1, \\\"tempdb_metadata_memory_optimized\\\",\\r\\n1, \\\"xp_cmdshell\\\",\\r\\n1, \\\"is_instant_file_initialization_enabled\\\",\\r\\n1, \\\"is_clustered\\\",\\r\\n1, \\\"is_availability_groups_enabled\\\",\\r\\n1, \\\"is_windows_auth_only\\\"\\r\\n];\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, server_optimize_for_ad_hoc_workloads, backup_checksum_default, backup_compression_default, remote_admin_connections, tempdb_metadata_memory_optimized, xp_cmdshell, is_instant_file_initialization_enabled, is_clustered = tobool(is_clustered), is_availability_groups_enabled = tobool(is_availability_groups_enabled), is_windows_auth_only = tobool(is_windows_auth_only)\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"server_optimize_for_ad_hoc_workloads\\\", server_optimize_for_ad_hoc_workloads,\\r\\n                            property_name == \\\"backup_checksum_default\\\", backup_checksum_default,\\r\\n                            property_name == \\\"backup_compression_default\\\", backup_compression_default,\\r\\n                            property_name == \\\"remote_admin_connections\\\", remote_admin_connections,\\r\\n                            property_name == \\\"tempdb_metadata_memory_optimized\\\", tempdb_metadata_memory_optimized,\\r\\n                            property_name == \\\"xp_cmdshell\\\", xp_cmdshell,\\r\\n                            property_name == \\\"is_instant_file_initialization_enabled\\\", is_instant_file_initialization_enabled,\\r\\n                            property_name == \\\"is_clustered\\\", is_clustered,\\r\\n                            property_name == \\\"is_availability_groups_enabled\\\", is_availability_groups_enabled,\\r\\n                            property_name == \\\"is_windows_auth_only\\\", is_windows_auth_only,\\r\\n                            bool(null)\\r\\n                            )\\r\\n| project-away server_optimize_for_ad_hoc_workloads, backup_checksum_default, backup_compression_default, remote_admin_connections, tempdb_metadata_memory_optimized, xp_cmdshell, is_instant_file_initialization_enabled, is_clustered, is_availability_groups_enabled, is_windows_auth_only\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"server_optimize_for_ad_hoc_workloads\\\" and property_value == true, \\\"info\\\", \\r\\n                        property_name == \\\"backup_checksum_default\\\" and property_value == false, \\\"warning\\\", \\r\\n                        property_name == \\\"backup_compression_default\\\" and property_value == false, \\\"info\\\", \\r\\n                        property_name == \\\"remote_admin_connections\\\" and property_value == false, \\\"info\\\", \\r\\n                        property_name == \\\"tempdb_metadata_memory_optimized\\\" and property_value == true, \\\"info\\\", \\r\\n                        property_name == \\\"xp_cmdshell\\\" and property_value == true, \\\"warning\\\", \\r\\n                        property_name == \\\"is_instant_file_initialization_enabled\\\" and property_value == false, \\\"warning\\\", \\r\\n                        property_name == \\\"is_windows_auth_only\\\" and property_value == false, \\\"info\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"server_optimize_for_ad_hoc_workloads\\\", \\\"Non-default value\\\", \\r\\n                        property_name == \\\"backup_checksum_default\\\" and property_value == false, \\\"Recommended value is 'Enabled'\\\", \\r\\n                        property_name == \\\"backup_compression_default\\\" and property_value == false, \\\"Recommended value is 'Enabled'\\\", \\r\\n                        property_name == \\\"remote_admin_connections\\\" and property_value == false, \\\"Recommended value is 'Enabled'\\\", \\r\\n                        property_name == \\\"tempdb_metadata_memory_optimized\\\" and property_value == true, \\\"Non-default value\\\", \\r\\n                        property_name == \\\"xp_cmdshell\\\" and property_value == true, \\\"Recommended value is 'Disabled'\\\", \\r\\n                        property_name == \\\"is_instant_file_initialization_enabled\\\" and property_value == false, \\\"Recommended value is 'Enabled'\\\", \\r\\n                        property_name == \\\"is_windows_auth_only\\\" and property_value == false, \\\"Non-default value\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"server_optimize_for_ad_hoc_workloads\\\" and property_value == true, \\\"https://go.microsoft.com/fwlink/?linkid=2201714\\\", \\r\\n                        property_name == \\\"backup_checksum_default\\\" and property_value == false, \\\"https://go.microsoft.com/fwlink/?linkid=2201718\\\", \\r\\n                        property_name == \\\"backup_compression_default\\\" and property_value == false, \\\"https://go.microsoft.com/fwlink/?linkid=2201814\\\", \\r\\n                        property_name == \\\"remote_admin_connections\\\" and property_value == false, \\\"https://go.microsoft.com/fwlink/?linkid=2201815\\\", \\r\\n                        property_name == \\\"tempdb_metadata_memory_optimized\\\" and property_value == true, \\\"https://go.microsoft.com/fwlink/?linkid=2201816\\\", \\r\\n                        property_name == \\\"xp_cmdshell\\\" and property_value == true, \\\"https://go.microsoft.com/fwlink/?linkid=2201817\\\", \\r\\n                        property_name == \\\"is_instant_file_initialization_enabled\\\" and property_value == false, \\\"https://go.microsoft.com/fwlink/?linkid=2201902\\\", \\r\\n                        property_name == \\\"is_windows_auth_only\\\" and property_value == false, \\\"https://go.microsoft.com/fwlink/?linkid=2201903\\\", \\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "property_value",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "Check",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "Inactive",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "note_icon",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "note_url",
                            "linkTarget": "Url",
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "info",
                                "representation": "1",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "50ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                          }
                        },
                        {
                          "columnMatch": "note_text",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "note_url",
                          "formatter": 5
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "property_name",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "property_name",
                          "label": "Property"
                        },
                        {
                          "columnId": "property_value",
                          "label": "Value"
                        },
                        {
                          "columnId": "note_icon",
                          "label": "Note"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "property_name",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "server_properties_boolean"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"os_total_physical_memory\\\",\\r\\n1, \\\"min_server_memory\\\",\\r\\n1, \\\"max_server_memory\\\"\\r\\n];\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, os_total_physical_memory_mb, min_server_memory_mb, max_server_memory_mb\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"os_total_physical_memory\\\", toreal(os_total_physical_memory_mb),\\r\\n                            property_name == \\\"min_server_memory\\\", toreal(min_server_memory_mb),\\r\\n                            property_name == \\\"max_server_memory\\\", toreal(max_server_memory_mb),\\r\\n                            real(null)\\r\\n                            )\\r\\n| project-away os_total_physical_memory_mb, min_server_memory_mb, max_server_memory_mb\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"max_server_memory\\\" and property_value == 2147483647, \\\"warning\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"max_server_memory\\\" and property_value == 2147483647, \\\"Configure 'max server memory (MB)'\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"max_server_memory\\\" and property_value == 2147483647, \\\"https://go.microsoft.com/fwlink/?linkid=2201904\\\", \\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "property_value",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true
                            }
                          }
                        },
                        {
                          "columnMatch": "note_icon",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "note_url",
                            "linkTarget": "Url",
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "info",
                                "representation": "1",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "50ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                          }
                        },
                        {
                          "columnMatch": "note_text",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "note_url",
                          "formatter": 5
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "property_name",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "property_name",
                          "label": "Property"
                        },
                        {
                          "columnId": "property_value",
                          "label": "Value"
                        },
                        {
                          "columnId": "note_icon",
                          "label": "Note"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "property_name",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "server_properties_number_mb"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"database_engine_start_time_utc\\\",\\r\\n1, \\\"last_dump_time_utc\\\"\\r\\n];\\r\\nsqlserver_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where machine_name =~ @\\\"{machineName}\\\"\\r\\n| where server_name =~ @\\\"{serverName}\\\"\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, database_engine_start_time_utc, last_dump_time_utc\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"database_engine_start_time_utc\\\", database_engine_start_time_utc,\\r\\n                            property_name == \\\"last_dump_time_utc\\\", last_dump_time_utc,\\r\\n                            datetime(null)\\r\\n                            )\\r\\n| project-away database_engine_start_time_utc, last_dump_time_utc\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                    "size": 3,
                    "showAnalytics": true,
                    "noDataMessage": "There is no data for specified parameters.",
                    "showExportToExcel": true,
                    "queryType": 9,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "property_value",
                          "formatter": 6,
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true
                            }
                          },
                          "dateFormat": {
                            "showUtcTime": true,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "note_icon",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "note_url",
                            "linkTarget": "Url",
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "warning",
                                "representation": "2",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "info",
                                "representation": "1",
                                "text": "[\"note_text\"]"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "50ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                          }
                        },
                        {
                          "columnMatch": "note_text",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "note_url",
                          "formatter": 5
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "property_name",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "property_name",
                          "label": "Property"
                        },
                        {
                          "columnId": "property_value",
                          "label": "Value"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "property_name",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "server_properties_datetime"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Data is collected from [sys.dm_os_sys_info](https://go.microsoft.com/fwlink/?linkid=2198867), [sys.dm_os_sys_memory](https://go.microsoft.com/fwlink/?linkid=2201818), [sys.configurations](https://go.microsoft.com/fwlink/?linkid=2201905), [sys.dm_os_host_info](https://go.microsoft.com/fwlink/?linkid=2201906), [sys.dm_hadr_cluster](https://go.microsoft.com/fwlink/?linkid=2201907), [sys.dm_server_services](https://go.microsoft.com/fwlink/?linkid=2201720), [sys.dm_server_registry](https://go.microsoft.com/fwlink/?linkid=2201908) and several other system views."
                  },
                  "name": "properties_and_config_help"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "propertySampleTime",
              "comparison": "isNotEqualTo"
            },
            "name": "properties_and_configuration_group"
          }
        ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}