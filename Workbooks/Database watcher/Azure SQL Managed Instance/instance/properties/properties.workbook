{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d7ea0f46-a742-4e7d-8fed-b1c1dca01882",
            "version": "KqlParameterItem/1.0",
            "name": "propertySampleType",
            "label": "Data to show",
            "type": 10,
            "description": "\"Last available\" shows the most recent sample within specified time range, if any. \"Historical\" lets you select any sample within specified time range. Refresh the workbook to see most recent samples.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"value\":\"Latest\",\"label\":\"Last available\"},{\"value\":\"Historical\",\"label\":\"Historical\"}]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "Latest"
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "property_sample_type_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| make-series metric = count() default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor}*2\\r\\n\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 4,
        "aggregation": 3,
        "title": "Select a sample",
        "noDataMessage": "No server property samples are available",
        "timeBrushParameterName": "timeRange",
        "exportParameterName": "propertyHistoricalSample",
        "exportDefaultValue": "0",
        "queryType": 9,
        "visualization": "barchart",
        "chartSettings": {
          "showMetrics": false,
          "seriesLabelSettings": [
            {
              "seriesName": "metric",
              "color": "purple"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "propertySampleType",
        "comparison": "isEqualTo",
        "value": "Historical"
      },
      "name": "property_timeline"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| summarize count_samples = count()\\r\\n| project strcat(\\\"There are `\\\", count_samples, \\\"` samples in the selected time range. Each vertical bar stands for a group of samples. Bar height is the number of samples in a group. Select a bar to view one sample from that group. Zoom in to see smaller sample groups, down to individual samples.\\\")\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "noDataMessage": "No server property samples are available",
        "queryType": 9,
        "visualization": "card",
        "textSettings": {
          "style": "markdown"
        }
      },
      "conditionalVisibility": {
        "parameterName": "propertySampleType",
        "comparison": "isEqualTo",
        "value": "Historical"
      },
      "name": "property_sample_count"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "fffee6ff-a8f5-4b0e-ab23-0b28ffb25ef9",
            "version": "KqlParameterItem/1.0",
            "name": "propertyLatestSampleTime",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| summarize sample_time_utc = max(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "id": "a18f210f-d185-49b4-a920-c1619a45769c",
            "version": "KqlParameterItem/1.0",
            "name": "propertyHistoricalSampleTime",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc between (todatetime(\\\"{propertyHistoricalSample:$.x}\\\") .. (todatetime(\\\"{propertyHistoricalSample:$.x}\\\") + {timeRange:grain}))\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| summarize sample_time_utc = min(sample_time_utc)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "id": "deccf901-119f-4c18-860a-bb34fbd64736",
            "version": "KqlParameterItem/1.0",
            "name": "propertySampleTime",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "propertySampleType",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Latest",
                  "resultValType": "param",
                  "resultVal": "propertyLatestSampleTime"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "propertySampleType",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Historical",
                  "resultValType": "param",
                  "resultVal": "propertyHistoricalSampleTime"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "param",
                  "resultVal": "propertyLatestSampleTime"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 9
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "50",
      "name": "property_sample_time_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project sample_time = sample_time_utc, sample_time_utc, sample_age = format_timespan(now() - sample_time_utc, \\\"d.hh:mm:ss\\\")\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 4,
        "noDataMessage": "No sample is selected",
        "queryType": 9,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "sample_time",
              "formatter": 6,
              "formatOptions": {
                "customColumnWidthSetting": "28ch"
              },
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "sample_time_utc",
              "formatter": 6,
              "formatOptions": {
                "customColumnWidthSetting": "28ch"
              },
              "dateFormat": {
                "showUtcTime": true,
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "sample_age",
              "formatter": 2,
              "tooltipFormat": {
                "tooltip": "Time difference between the last dashboard refresh and the displayed sample"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "sample_time",
              "label": "Collection time"
            },
            {
              "columnId": "sample_time_utc",
              "label": "Collection time (UTC)"
            },
            {
              "columnId": "sample_age",
              "label": "Age of sample"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "propertySampleTime",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "50",
      "name": "selected_property_sample"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"replica_type\\\",\\r\\n1, \\\"service_tier\\\",\\r\\n1, \\\"hardware_generation\\\",\\r\\n1, \\\"service_level_objective_long\\\",\\r\\n1, \\\"database_engine_memory_model\\\",\\r\\n1, \\\"instance_collation\\\",\\r\\n1, \\\"current_utc_offset\\\",\\r\\n1, \\\"time_zone_name\\\",\\r\\n1, \\\"database_engine_file_version\\\",\\r\\n1, \\\"database_engine_product_version\\\",\\r\\n1, \\\"product_version\\\",\\r\\n1, \\\"product_level\\\",\\r\\n1, \\\"product_update_type\\\",\\r\\n1, \\\"product_update_level\\\"\\r\\n];\\r\\nsqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, replica_type, service_tier, hardware_generation, service_level_objective_long, database_engine_memory_model, instance_collation, current_utc_offset, time_zone_name, database_engine_file_version, database_engine_product_version, product_version, product_level, product_update_type, product_update_level\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"replica_type\\\", replica_type,\\r\\n                            property_name == \\\"service_tier\\\", service_tier,\\r\\n                            property_name == \\\"hardware_generation\\\", hardware_generation,\\r\\n                            property_name == \\\"service_level_objective_long\\\", service_level_objective_long,\\r\\n                            property_name == \\\"database_engine_memory_model\\\", database_engine_memory_model,\\r\\n                            property_name == \\\"instance_collation\\\", instance_collation,\\r\\n                            property_name == \\\"current_utc_offset\\\", current_utc_offset,\\r\\n                            property_name == \\\"time_zone_name\\\", time_zone_name,\\r\\n                            property_name == \\\"database_engine_file_version\\\", database_engine_file_version,\\r\\n                            property_name == \\\"database_engine_product_version\\\", database_engine_product_version,\\r\\n                            property_name == \\\"product_version\\\", product_version,\\r\\n                            property_name == \\\"product_level\\\", product_level,\\r\\n                            property_name == \\\"product_update_type\\\", product_update_type,\\r\\n                            property_name == \\\"product_update_level\\\", product_update_level,\\r\\n                            \\\"\\\"\\r\\n                            )\\r\\n| project-away replica_type, service_tier, hardware_generation, service_level_objective_long, database_engine_memory_model, instance_collation, current_utc_offset, time_zone_name, database_engine_file_version, database_engine_product_version, product_version, product_level, product_update_type, product_update_level\\r\\n| extend note_icon = \\\"\\\",\\r\\n         note_text = \\\"\\\",\\r\\n         note_url = \\\"\\\"\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "note_icon",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "note_url",
                      "linkTarget": "Url",
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "warning",
                          "representation": "2",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "info",
                          "representation": "1",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": ""
                        }
                      ],
                      "customColumnWidthSetting": "50ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                    }
                  },
                  {
                    "columnMatch": "note_text",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "note_url",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "property_name",
                    "label": "Property"
                  },
                  {
                    "columnId": "property_value",
                    "label": "Value"
                  },
                  {
                    "columnId": "note_icon",
                    "label": "Note"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "instance_properties_string"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"database_engine_memory_mb\\\",\\r\\n1, \\\"sos_target_memory_mb\\\",\\r\\n1, \\\"storage_space_used_mb\\\",\\r\\n1, \\\"reserved_storage_mb\\\",\\r\\n1, \\\"used_local_storage_size_mb\\\",\\r\\n1, \\\"max_local_storage_size_mb\\\"\\r\\n];\\r\\nsqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, database_engine_memory_mb, sos_target_memory_mb, storage_space_used_mb, reserved_storage_mb, used_local_storage_size_mb, max_local_storage_size_mb\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"database_engine_memory_mb\\\", toreal(database_engine_memory_mb),\\r\\n                            property_name == \\\"sos_target_memory_mb\\\", toreal(sos_target_memory_mb),\\r\\n                            property_name == \\\"storage_space_used_mb\\\", toreal(storage_space_used_mb),\\r\\n                            property_name == \\\"reserved_storage_mb\\\", toreal(reserved_storage_mb),\\r\\n                            property_name == \\\"used_local_storage_size_mb\\\", toreal(used_local_storage_size_mb),\\r\\n                            property_name == \\\"max_local_storage_size_mb\\\", toreal(max_local_storage_size_mb),\\r\\n                            real(null)\\r\\n                            )\\r\\n| project-away database_engine_memory_mb, sos_target_memory_mb, storage_space_used_mb, reserved_storage_mb, used_local_storage_size_mb, max_local_storage_size_mb\\r\\n| extend note_icon = \\\"\\\",\\r\\n         note_text = \\\"\\\",\\r\\n         note_url = \\\"\\\"\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "property_value",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true
                      }
                    }
                  },
                  {
                    "columnMatch": "note_icon",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "note_url",
                      "linkTarget": "Url",
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "warning",
                          "representation": "2",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "info",
                          "representation": "1",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": ""
                        }
                      ],
                      "customColumnWidthSetting": "50ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                    }
                  },
                  {
                    "columnMatch": "note_text",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "note_url",
                    "formatter": 5
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "property_name",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "property_name",
                    "label": "Property"
                  },
                  {
                    "columnId": "property_value",
                    "label": "Value"
                  },
                  {
                    "columnId": "note_icon",
                    "label": "Note"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "property_name",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "server_properties_number_mb"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"logical_cpu_count\\\",\\r\\n1, \\\"instance_maxdop\\\",\\r\\n1, \\\"instance_max_workers\\\",\\r\\n1, \\\"local_storage_max_iops\\\",\\r\\n1, \\\"cost_threshold_for_parallelism\\\",\\r\\n1, \\\"instance_max_log_rate_mbps\\\"\\r\\n];\\r\\nsqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, logical_cpu_count, instance_maxdop, cost_threshold_for_parallelism, instance_max_workers, local_storage_max_iops, instance_max_log_rate_mbps\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"logical_cpu_count\\\", toreal(logical_cpu_count),\\r\\n                            property_name == \\\"instance_maxdop\\\", toreal(instance_maxdop),\\r\\n                            property_name == \\\"cost_threshold_for_parallelism\\\", toreal(cost_threshold_for_parallelism),\\r\\n                            property_name == \\\"instance_max_workers\\\", toreal(instance_max_workers),\\r\\n                            property_name == \\\"local_storage_max_iops\\\", toreal(local_storage_max_iops),\\r\\n                            property_name == \\\"instance_max_log_rate_mbps\\\", toreal(instance_max_log_rate_mbps),\\r\\n                            real(null)\\r\\n                            )\\r\\n| project-away instance_maxdop, cost_threshold_for_parallelism, instance_max_workers, local_storage_max_iops, instance_max_log_rate_mbps\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"instance_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"warning\\\", \\r\\n                        property_name == \\\"instance_maxdop\\\" and toint(property_value) == 1, \\\"info\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"instance_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"Configure 'max degree of parallelism' as recommended\\\", \\r\\n                        property_name == \\\"instance_maxdop\\\" and toint(property_value) == 1, \\\"Query parallelism is disabled\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"instance_maxdop\\\" and logical_cpu_count > 8 and (toint(property_value) > 8 or toint(property_value) == 0), \\\"https://go.microsoft.com/fwlink/?linkid=2201911\\\", \\r\\n                        property_name == \\\"instance_maxdop\\\" and toint(property_value) == 1, \\\"https://go.microsoft.com/fwlink/?linkid=2201911\\\", \\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| project-away logical_cpu_count\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "note_icon",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "note_url",
                      "linkTarget": "Url",
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "warning",
                          "representation": "2",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "info",
                          "representation": "1",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": ""
                        }
                      ],
                      "customColumnWidthSetting": "50ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                    }
                  },
                  {
                    "columnMatch": "note_text",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "note_url",
                    "formatter": 5
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "property_name",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "property_name",
                    "label": "Property"
                  },
                  {
                    "columnId": "property_value",
                    "label": "Value"
                  },
                  {
                    "columnId": "note_icon",
                    "label": "Note"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "property_name",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "instance_properties_number"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"instance_optimize_for_ad_hoc_workloads\\\",\\r\\n1, \\\"is_currently_dst\\\"\\r\\n];\\r\\nsqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, instance_optimize_for_ad_hoc_workloads, is_currently_dst\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"instance_optimize_for_ad_hoc_workloads\\\", instance_optimize_for_ad_hoc_workloads,\\r\\n                            property_name == \\\"is_currently_dst\\\", is_currently_dst,\\r\\n                            bool(null)\\r\\n                            )\\r\\n| project-away instance_optimize_for_ad_hoc_workloads, is_currently_dst\\r\\n| extend note_icon = case(\\r\\n                        property_name == \\\"instance_optimize_for_ad_hoc_workloads\\\" and property_value == true, \\\"info\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_text = case(\\r\\n                        property_name == \\\"instance_optimize_for_ad_hoc_workloads\\\", \\\"Non-default value\\\", \\r\\n                        \\\"\\\"\\r\\n                        ),\\r\\n        note_url = case(\\r\\n                        property_name == \\\"instance_optimize_for_ad_hoc_workloads\\\" and property_value == true, \\\"https://go.microsoft.com/fwlink/?linkid=2201714\\\", \\r\\n                        \\\"\\\"\\r\\n                        )\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "property_value",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "true",
                          "representation": "Check",
                          "text": ""
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "false",
                          "representation": "Inactive",
                          "text": ""
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "note_icon",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "note_url",
                      "linkTarget": "Url",
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "warning",
                          "representation": "2",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "info",
                          "representation": "1",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": ""
                        }
                      ],
                      "customColumnWidthSetting": "50ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                    }
                  },
                  {
                    "columnMatch": "note_text",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "note_url",
                    "formatter": 5
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "property_name",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "property_name",
                    "label": "Property"
                  },
                  {
                    "columnId": "property_value",
                    "label": "Value"
                  },
                  {
                    "columnId": "note_icon",
                    "label": "Note"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "property_name",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "instance_properties_boolean"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let property = datatable(key:int, property_name:string) [\\r\\n1, \\\"database_engine_start_time_utc\\\",\\r\\n1, \\\"database_engine_build_time\\\"\\r\\n];\\r\\nsqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n| join kind=inner property on key\\r\\n| project property_name, database_engine_start_time_utc, database_engine_build_time\\r\\n| extend property_value = case(\\r\\n                            property_name == \\\"database_engine_start_time_utc\\\", database_engine_start_time_utc,\\r\\n                            property_name == \\\"database_engine_build_time\\\", database_engine_build_time,\\r\\n                            datetime(null)\\r\\n                            )\\r\\n| project-away database_engine_start_time_utc, database_engine_build_time\\r\\n| sort by property_name asc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "property_value",
                    "formatter": 6,
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true
                      }
                    },
                    "dateFormat": {
                      "showUtcTime": true,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "note_icon",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "note_url",
                      "linkTarget": "Url",
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "warning",
                          "representation": "2",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "info",
                          "representation": "1",
                          "text": "[\"note_text\"]"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": ""
                        }
                      ],
                      "customColumnWidthSetting": "50ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "A warning icon appears if the value might not be optimal. An info icon appears if the property is set to a non-default value, or is notable otherwise. Click the link to learn more."
                    }
                  },
                  {
                    "columnMatch": "note_text",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "note_url",
                    "formatter": 5
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "property_name",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "property_name",
                    "label": "Property"
                  },
                  {
                    "columnId": "property_value",
                    "label": "Value"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "property_name",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "instance_properties_datetime"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqlmi_instance_properties\\r\\n| where sample_time_utc == todatetime(\\\"{propertySampleTime}\\\")\\r\\n| where managed_instance_name =~ @\\\"{managedInstanceName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project local_net_addresses = todynamic(local_net_addresses)\\r\\n| mv-expand local_net_addresses\\r\\n| mv-expand local_net_address = local_net_addresses.local_net_address to typeof(string)\\r\\n| project local_net_address\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "showExportToExcel": true,
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "labelSettings": [
                  {
                    "columnId": "local_net_address",
                    "label": "Instance IP address"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "instance_properties_local_net_address"
          },
          {
            "type": 1,
            "content": {
              "json": "Data is collected from sys.dm_instance_resource_governance, [sys.dm_os_sys_info](https://go.microsoft.com/fwlink/?linkid=2198867), [sys.configurations](https://go.microsoft.com/fwlink/?linkid=2201905), and several other system views."
            },
            "name": "properties_and_config_help"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "propertySampleTime",
        "comparison": "isNotEqualTo"
      },
      "name": "properties_and_configuration_group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}