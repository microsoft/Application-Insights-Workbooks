{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "a762a2ae-beec-4bf5-9f4a-28bea2d2f737",
            "version": "KqlParameterItem/1.0",
            "name": "watcherResourceId",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "19f22da1-c8c7-42cc-9849-cf6aeddb7ba0",
            "version": "KqlParameterItem/1.0",
            "name": "linkAdxClusterUri",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "b4b8f00b-7e05-4ae2-ad2b-2ba99f74b49a",
            "version": "KqlParameterItem/1.0",
            "name": "linkAdxDatabase",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": ""
          }
        ],
        "style": "pills",
        "queryType": 9
      },
      "conditionalVisibility": {
        "parameterName": "neverShow",
        "comparison": "isNotEqualTo"
      },
      "name": "link_adx_parameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Data store",
        "expandable": true,
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "83420d36-0646-40aa-9637-d06a3d2a6145",
                  "version": "KqlParameterItem/1.0",
                  "name": "watcherResource",
                  "type": 1,
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{watcherResourceId}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-09-01-preview\"}],\"batchDisabled\":false,\"transformers\":null}",
                  "isHiddenWhenLocked": true,
                  "queryType": 12
                },
                {
                  "id": "a6cd9521-127a-43bd-9227-6bcd67756456",
                  "version": "KqlParameterItem/1.0",
                  "name": "watcherName",
                  "type": 1,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.name\",\"columns\":[]}}]}",
                  "isHiddenWhenLocked": true,
                  "queryType": 8
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "watcherAdxClusterUri",
                  "type": 1,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.kustoClusterUri\",\"columns\":[]}}]}",
                  "isHiddenWhenLocked": true,
                  "queryType": 8,
                  "id": "f0889b5f-3fa4-40a0-838d-443b4c0472b6"
                },
                {
                  "id": "0797c608-2ecf-4711-ba9b-6d110f10acd3",
                  "version": "KqlParameterItem/1.0",
                  "name": "watcherAdxDatabase",
                  "type": 1,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{watcherResource}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.datastore.kustoDatabaseName\",\"columns\":[]}}]}",
                  "isHiddenWhenLocked": true,
                  "queryType": 8
                },
                {
                  "id": "1b7d18f3-88a9-40ed-9162-92710b29ba69",
                  "version": "KqlParameterItem/1.0",
                  "name": "dataStore",
                  "label": "Choose a data store",
                  "type": 10,
                  "description": "By default, the workbook loads data from the data store of the current database watcher. You may use an alternate data store by entering its Kusto query URI and database name.",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[{\\\"value\\\":\\\"watcher\\\",\\\"label\\\":\\\"{watcherName}\\\"},{\\\"value\\\":\\\"alternate\\\",\\\"label\\\":\\\"Alternate\\\"}]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 8,
                  "value": "watcher"
                }
              ],
              "style": "above",
              "queryType": 12
            },
            "customWidth": "30",
            "name": "watcher_adx_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Kusto query URI: `{watcherAdxClusterUri}` </p>\r\nKusto database: `{watcherAdxDatabase}`"
            },
            "customWidth": "70",
            "conditionalVisibilities": [
              {
                "parameterName": "watcherName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "watcherAdxDatabase",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "dataStore",
                "comparison": "isEqualTo",
                "value": "watcher"
              }
            ],
            "name": "watcher_data_store"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bbce4b83-dae6-46e0-bf67-c99ee0ea21f0",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxClusterUri",
                  "label": "Kusto query URI",
                  "type": 1,
                  "description": "Enter a Kusto query URI for the alternate data store. Most commonly, Kusto query URI format is: https://{kusto-cluster-name}.{region}.kusto.windows.net/",
                  "isRequired": true,
                  "value": ""
                },
                {
                  "id": "99cdb447-94d3-40c7-b902-c98628fb736a",
                  "version": "KqlParameterItem/1.0",
                  "name": "overrideAdxDatabase",
                  "label": "Kusto database",
                  "type": 1,
                  "description": "Enter a Kusto database name for the alternate data store",
                  "isRequired": true,
                  "value": ""
                }
              ],
              "style": "formHorizontal",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "70",
            "conditionalVisibility": {
              "parameterName": "dataStore",
              "comparison": "isEqualTo",
              "value": "alternate"
            },
            "name": "override_adx_parameters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "19f22da1-c8c7-42cc-9849-cf6aeddb7ba0",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterUri",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxClusterUri"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "linkAdxClusterUri",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "linkAdxClusterUri"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "watcher",
                        "resultValType": "param",
                        "resultVal": "watcherAdxClusterUri"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "linkAdxClusterUri"
                      }
                    }
                  ]
                },
                {
                  "id": "b4b8f00b-7e05-4ae2-ad2b-2ba99f74b49a",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxDatabase",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "alternate",
                        "resultValType": "param",
                        "resultVal": "overrideAdxDatabase"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "linkAdxDatabase",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "linkAdxDatabase"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "dataStore",
                        "operator": "==",
                        "rightValType": "static",
                        "rightVal": "watcher",
                        "resultValType": "param",
                        "resultVal": "watcherAdxDatabase"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "param",
                        "resultVal": "linkAdxDatabase"
                      }
                    }
                  ]
                },
                {
                  "id": "c5aca9de-de62-466e-bea8-9a149e935c4f",
                  "version": "KqlParameterItem/1.0",
                  "name": "adxClusterPingResult",
                  "label": "Kusto query URI ping result",
                  "type": 1,
                  "isRequired": true,
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show databases\\r\\n| where DatabaseName == @\\\"{adxDatabase}\\\"\\r\\n| project 1\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"\"}",
                  "isHiddenWhenLocked": true,
                  "queryType": 9
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "alwaysHidden",
              "comparison": "isNotEqualTo"
            },
            "name": "adx_parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "Cannot connect to Kusto query URI `{adxClusterUri}`, database `{adxDatabase}`. The Kusto cluster may be stopped or unreachable, specified cluster URI may be invalid, or permissions may be insufficient.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "adxClusterPingResult",
                "comparison": "isNotEqualTo",
                "value": "1"
              },
              {
                "parameterName": "adxClusterUri",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "adxDatabase",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "missing_data_bad_permissions_text"
          }
        ],
        "exportParameters": true
      },
      "name": "data_store_group"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5983040c-ea5f-4997-a82b-6dcb209b9823",
            "version": "KqlParameterItem/1.0",
            "name": "tablePresence",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName startswith_cs \\\"sqldb_database_\\\"\\r\\n| project TableName\\r\\n| summarize sqldb_database_properties = take_anyif(1, TableName == \\\"sqldb_database_properties\\\"),\\r\\n            sqldb_database_storage_utilization = take_anyif(1, TableName == \\\"sqldb_database_storage_utilization\\\"),\\r\\n            sqldb_database_resource_utilization = take_anyif(1, TableName == \\\"sqldb_database_resource_utilization\\\"),\\r\\n            sqldb_database_performance_counters_common = take_anyif(1, TableName == \\\"sqldb_database_performance_counters_common\\\"),\\r\\n            sqldb_database_wait_stats = take_anyif(1, TableName == \\\"sqldb_database_wait_stats\\\"),\\r\\n            sqldb_database_memory_utilization = take_anyif(1, TableName == \\\"sqldb_database_memory_utilization\\\"),\\r\\n            sqldb_database_storage_io = take_anyif(1, TableName == \\\"sqldb_database_storage_io\\\"),\\r\\n            sqldb_database_active_sessions = take_anyif(1, TableName == \\\"sqldb_database_active_sessions\\\"),\\r\\n            sqldb_database_table_metadata = take_anyif(1, TableName == \\\"sqldb_database_table_metadata\\\"),\\r\\n            sqldb_database_geo_replicas = take_anyif(1, TableName == \\\"sqldb_database_geo_replicas\\\"),\\r\\n            sqldb_database_query_runtime_stats = take_anyif(1, TableName == \\\"sqldb_database_query_runtime_stats\\\"),\\r\\n            sqldb_database_query_wait_stats = take_anyif(1, TableName == \\\"sqldb_database_query_wait_stats\\\"),\\r\\n            sqldb_database_connectivity = take_anyif(1, TableName == \\\"sqldb_database_connectivity\\\"),\\r\\n            sqldb_database_sql_backup_history = take_anyif(1, TableName == \\\"sqldb_database_sql_backup_history\\\"),\\r\\n            sqldb_database_missing_indexes = take_anyif(1, TableName == \\\"sqldb_database_missing_indexes\\\"),\\r\\n            sqldb_database_index_metadata = take_anyif(1, TableName == \\\"sqldb_database_index_metadata\\\")\\r\\n| project table_presence = dynamic_to_json(pack_all());\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "json",
              "multiLineHeight": 2
            },
            "queryType": 9
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4100",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_properties",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_properties}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4101",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_storage_utilization",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_storage_utilization}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4102",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_resource_utilization",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_resource_utilization}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4103",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_performance_counters_common",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_performance_counters_common}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4104",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_wait_stats",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_wait_stats}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4105",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_memory_utilization",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_memory_utilization}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4106",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_storage_io",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_storage_io}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4107",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_active_sessions",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_active_sessions}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4108",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_table_metadata",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_table_metadata}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4109",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_geo_replicas",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_geo_replicas}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4110",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_query_runtime_stats",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_query_runtime_stats}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4111",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_query_wait_stats",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_query_wait_stats}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4112",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_connectivity",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_connectivity}"
                }
              }
            ]
          },
          {
            "id": "4efc99f1-4cd2-417f-94ca-60fec15d4113",
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_sql_backup_history",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_sql_backup_history}"
                }
              }
            ]
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_missing_indexes",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_missing_indexes}"
                }
              }
            ],
            "id": "b8f9355c-380d-4d86-8784-798f8564a06f"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_database_index_metadata",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{tablePresence:$.sqldb_database_index_metadata}"
                }
              }
            ],
            "id": "1da628fc-d19d-44bc-9683-ec35e3e579e3"
          }
        ],
        "style": "above",
        "queryType": 0
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "table_presence_parameters"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "eecd0908-04fd-4739-bef2-bcab66117f39",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 3600000
            }
          },
          {
            "id": "e61b3c5d-3911-4a7b-8c92-133c352a4b86",
            "version": "KqlParameterItem/1.0",
            "name": "serverName",
            "label": "Logical server",
            "type": 2,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where isnotempty(logical_server_name)\\r\\n| distinct logical_server_name\\r\\n| order by logical_server_name asc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "value": null
          },
          {
            "id": "af2070be-277a-4367-bf50-0023e84eb8c9",
            "version": "KqlParameterItem/1.0",
            "name": "databaseName",
            "label": "Database",
            "type": 2,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where logical_server_name in~ (\\\"{serverName}\\\")\\r\\n| distinct database_name\\r\\n| order by database_name asc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "value": null
          },
          {
            "id": "2d229abc-8212-421b-8cf0-6aae8a4797f1",
            "version": "KqlParameterItem/1.0",
            "name": "databaseProperties",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name =~ @\\\"{databaseName}\\\"\\r\\n| summarize is_pooled_database = max(iif(isnotempty(elastic_pool_name), '1', '0')),\\r\\n            is_hs_database = max(iif(service_tier == \\\"Hyperscale\\\", '1', '0'))\\r\\n| project dynamic_to_json(pack_all())\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "json",
              "multiLineHeight": 2
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "isPooledDatabase",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{databaseProperties:$.is_pooled_database}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            },
            "id": "a474508c-1b77-4350-af52-ed10d101d58c"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "isHyperscaleDatabase",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "{databaseProperties:$.is_hs_database}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            },
            "id": "f1891d2d-ba6c-48bb-afaf-ded59cb303c8"
          },
          {
            "id": "e39d65b4-fa00-41f6-a007-6ec9a16ec1db",
            "version": "KqlParameterItem/1.0",
            "name": "haReplica",
            "label": "Show HA secondary",
            "type": 10,
            "description": "Set to Yes to show data from the readable high availability secondary replica, if any",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"value\":\"false\",\"label\":\"No\"},{\"value\":\"true\",\"label\":\"Yes\"}]",
            "value": "false"
          },
          {
            "id": "859e1723-fba2-4371-88a2-3cce7b3cada6",
            "version": "KqlParameterItem/1.0",
            "name": "showDescriptions",
            "label": "Show descriptions",
            "type": 10,
            "description": "Shows descriptions next to charts",
            "isRequired": true,
            "isGlobal": true,
            "value": "false",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"value\":\"true\",\"label\":\"Yes\"},{\"value\":\"false\",\"label\":\"No\"}]"
          },
          {
            "id": "d540415a-9c4e-45fc-b7b8-1c37d0f06501",
            "version": "KqlParameterItem/1.0",
            "name": "grainFactor",
            "label": "Grain factor",
            "type": 2,
            "description": "Higher time grain provides more details on charts when granular data exists.",
            "isRequired": true,
            "value": "4",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"value\":1,\"label\":1},{\"value\":2,\"label\":2},{\"value\":3,\"label\":3},{\"value\":4,\"label\":4},{\"value\":5,\"label\":5},{\"value\":6,\"label\":6}]"
          },
          {
            "id": "32f86b95-6a99-4fc2-9124-5a6e46963d82",
            "version": "KqlParameterItem/1.0",
            "name": "tabName",
            "type": 1,
            "value": "Overview",
            "isHiddenWhenLocked": true
          },
          {
            "id": "3af29cde-af3a-4be8-a140-d700e7fd8717",
            "version": "KqlParameterItem/1.0",
            "name": "tabNames",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName in (\\\"sqldb_database_connectivity\\\",\\\"sqldb_database_table_metadata\\\",\\\"sqldb_database_sql_backup_history\\\",\\\"sqldb_database_index_metadata\\\",\\\"sqldb_database_geo_replicas\\\")\\r\\n| project TableName\\r\\n| summarize connectivity_tab_name = take_anyif(\\\"Connectivity\\\", TableName == \\\"sqldb_database_connectivity\\\"),\\r\\n            tables_tab_name = take_anyif(\\\"Tables\\\", TableName == \\\"sqldb_database_table_metadata\\\"),\\r\\n            backup_tab_name = take_anyif(\\\"Backup\\\", TableName == \\\"sqldb_database_sql_backup_history\\\"),\\r\\n            indexes_tab_name = take_anyif(\\\"Indexes\\\", TableName == \\\"sqldb_database_index_metadata\\\"),\\r\\n            geo_replicas_tab_name = take_anyif(\\\"Geo-replicas\\\", TableName == \\\"sqldb_database_geo_replicas\\\")\\r\\n| project table_presence = dynamic_to_json(pack_all());\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "text",
              "multiLineHeight": 2
            },
            "queryType": 9
          },
          {
            "id": "674f7ad3-f7c9-4c67-b8a0-276eef385362",
            "version": "KqlParameterItem/1.0",
            "name": "connectivityTabName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{tabNames}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.connectivity_tab_name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          },
          {
            "id": "674f7ad3-f7c9-4c67-b8a0-276eef385363",
            "version": "KqlParameterItem/1.0",
            "name": "geoReplTabName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{tabNames}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.geo_replicas_tab_name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "tablesTabName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{tabNames}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.tables_tab_name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "41e6053f-e0fe-418b-89e1-c546aaed887c"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "backupTabName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{tabNames}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.backup_tab_name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "5eaf51b1-6bae-41f9-ba89-4658aed464e6"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "indexesTabName",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"{tabNames}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.indexes_tab_name\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "id": "bb2af7ab-8c07-4e7b-9257-f88bf222ee5c"
          },
          {
            "id": "bf9f3984-1df1-480a-9881-d755c4c43ce9",
            "version": "KqlParameterItem/1.0",
            "name": "replicaType",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name =~ @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| top 1 by sample_time_utc\\r\\n| project replica_type\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          }
        ],
        "style": "pills",
        "queryType": 0
      },
      "conditionalVisibilities": [
        {
          "parameterName": "adxClusterPingResult",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqldb_database_properties",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "filter_parameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Overview",
        "expandable": true,
        "expanded": true,
        "loadType": "always",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let time_range = datatable(key:int, time_range_start:datetime, time_range_end:datetime) [\\r\\n1, datetime(\\\"{timeRange:startISO}\\\"), datetime(\\\"{timeRange:endISO}\\\")\\r\\n];\\r\\ntime_range\\r\\n| project time_range_start, time_range_end, time_range_duration = datetime_diff('second', time_range_end, time_range_start), last_refresh_time = now(), fleet_link = \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\", adx_link = strcat(trim_end(\\\"/\\\", \\\"{adxClusterUri}\\\"), \\\"/\\\", \\\"{adxDatabase}\\\")\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "noDataMessage": "There is no data for specified parameters.",
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "time_range_start",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Start of time range, as of last refresh"
                    }
                  },
                  {
                    "columnMatch": "time_range_end",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "End of time range, as of last refresh"
                    }
                  },
                  {
                    "columnMatch": "time_range_duration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "last_refresh_time",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    },
                    "tooltipFormat": {
                      "tooltip": "Workbook refresh date and time"
                    }
                  },
                  {
                    "columnMatch": "fleet_link",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkLabel": "All databases and elastic pools",
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "column",
                        "templateId": "fleet_link",
                        "typeSource": "workbook",
                        "gallerySource": "default",
                        "locationSource": "workbook",
                        "workbookName": "Azure SQL databases and elastic pools",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "watcherResourceId",
                            "source": "parameter",
                            "value": "watcherResourceId"
                          },
                          {
                            "name": "linkAdxClusterUri",
                            "source": "parameter",
                            "value": "adxClusterUri"
                          },
                          {
                            "name": "linkAdxDatabase",
                            "source": "parameter",
                            "value": "adxDatabase"
                          },
                          {
                            "name": "timeRange",
                            "source": "parameter",
                            "value": "timeRange"
                          },
                          {
                            "name": "showDescriptions",
                            "source": "parameter",
                            "value": "showDescriptions"
                          },
                          {
                            "name": "haReplica",
                            "source": "parameter",
                            "value": "haReplica"
                          }
                        ],
                        "viewerMode": true
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "View all monitored Azure SQL databases and elastic pools"
                    }
                  },
                  {
                    "columnMatch": "adx_link",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "Query ADX database"
                    },
                    "tooltipFormat": {
                      "tooltip": "Explore monitoring data using ad-hoc KQL queries"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "time_range_start",
                    "label": "Time range start"
                  },
                  {
                    "columnId": "time_range_end",
                    "label": "Time range end"
                  },
                  {
                    "columnId": "time_range_duration",
                    "label": "Time range duration"
                  },
                  {
                    "columnId": "last_refresh_time",
                    "label": "Last refresh"
                  },
                  {
                    "columnId": "fleet_link",
                    "label": "Estate"
                  },
                  {
                    "columnId": "adx_link",
                    "label": "Data store"
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "title",
                  "formatter": 1,
                  "tooltipFormat": {
                    "tooltip": "The time from collection to ingestion for the last data sample in selected time range, and latency trend in that range."
                  }
                },
                "leftContent": {
                  "columnMatch": "title",
                  "formatter": 1
                },
                "rightContent": {
                  "columnMatch": "last_latency_timespan",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "latency_trend",
                  "formatter": 10,
                  "formatOptions": {
                    "palette": "turquoise",
                    "compositeBarSettings": {
                      "labelText": "",
                      "columnSettings": []
                    }
                  }
                },
                "showBorder": false,
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "name": "header_time_range"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let data_max_size_mb = toscalar(\\r\\nsqldb_database_storage_utilization\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project sample_time_utc, data_max_size_mb = iif(data_max_size_mb == -1, decimal(null), data_max_size_mb)\\r\\n| top 1 by sample_time_utc desc\\r\\n| project-away sample_time_utc\\r\\n);\\r\\nsqldb_database_properties\\r\\n| where sample_time_utc between (\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:start} - 1h), {timeRange:start})\\r\\n                                ..\\r\\n                                iif(({timeRange:end} - {timeRange:start}) <= 1h, ({timeRange:end} + 1h), {timeRange:end})\\r\\n                                ) // Expand the range if selected range is shorter than the least frequent collection interval (1h)\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| top 1 by sample_time_utc desc\\r\\n| extend replica_type_indicator = case(\\r\\nreplica_type == \\\"Primary\\\", \\\"🔵\\\",\\r\\nreplica_type == \\\"HA secondary\\\", \\\"🔘\\\",\\r\\nreplica_type == \\\"Geo-replication forwarder\\\", \\\"🟣\\\",\\r\\nreplica_type == \\\"Named secondary\\\", \\\"🟢\\\",\\r\\n\\\"\\\"\\r\\n)\\r\\n| project logical_server_name, database_name, uptime = format_timespan(1s * datetime_diff(\\\"second\\\", sample_time_utc, database_engine_start_time_utc), \\\"d.hh:mm:ss\\\"), service_tier = case(service_tier =~ \\\"GeneralPurpose\\\", \\\"General Purpose\\\", service_tier =~ \\\"BusinessCritical\\\", \\\"Business Critical\\\", service_tier), service_level_objective = iif(service_level_objective =~ \\\"ElasticPool\\\", \\\"Elastic pool\\\", service_level_objective), logical_cpu_count, database_engine_memory_mb, data_max_size_mb, replica_type = strcat(replica_type_indicator, replica_type), elastic_pool_name, sample_age = datetime_diff(\\\"second\\\", now(), sample_time_utc),\\r\\nrt_tooltip = case(\\r\\nreplica_type == \\\"Primary\\\", \\\"The primary replica always exists for any database. Primary replicas support read and write workloads. All other replica types support read workloads only.\\\",\\r\\nreplica_type == \\\"Geo-replication forwarder\\\", \\\"A geo-replication secondary replica, also known as a geo-replication forwarder, is created when you configure geo-replication or failover groups. Data from a primary replica is replicated to one or more geo-replication forwarders.\\\",\\r\\nreplica_type == \\\"Named secondary\\\", \\\"A named secondary replica may have a database name that is different from its associated primary replica, and may be placed on a different logical server. Data from a primary replica is replicated to one or more named secondary replicas.\\\",\\r\\nreplica_type == \\\"HA secondary\\\", \\\"For primary, geo-replication forwarder, and named secondary replicas data may be replicated to an HA secondary replica to provide high availability (HA). HA secondary replicas do not have their own names, but inherit the name of the replica for which they provide high availability.\\\",\\r\\n\\\"\\\"\\r\\n)\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 3,
              "noDataMessage": "There is no data for specified parameters.",
              "queryType": 9,
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "uptime",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "Database uptime as of the last sample, as days.hours:minutes:seconds."
                    }
                  },
                  {
                    "columnMatch": "logical_cpu_count",
                    "formatter": 2,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "database_engine_memory_mb",
                    "formatter": 2,
                    "formatOptions": {
                      "customColumnWidthSetting": "14ch"
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "data_max_size_mb",
                    "formatter": 2,
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true
                      },
                      "emptyValCustomText": "(N/A)"
                    }
                  },
                  {
                    "columnMatch": "replica_type",
                    "formatter": 0,
                    "tooltipFormat": {
                      "tooltip": "[\"rt_tooltip\"]"
                    }
                  },
                  {
                    "columnMatch": "elastic_pool_name",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Database watcher/Azure SQL Database/elastic pool",
                        "typeSource": "workbook",
                        "gallerySource": "default",
                        "locationSource": "workbook",
                        "workbookName": "Azure SQL elastic pool",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "elasticPoolName",
                            "source": "column",
                            "value": "elastic_pool_name"
                          },
                          {
                            "name": "serverName",
                            "source": "parameter",
                            "value": "serverName"
                          },
                          {
                            "name": "timeRange",
                            "source": "parameter",
                            "value": "timeRange"
                          },
                          {
                            "name": "watcherResourceId",
                            "source": "parameter",
                            "value": "watcherResourceId"
                          },
                          {
                            "name": "linkAdxClusterUri",
                            "source": "parameter",
                            "value": "adxClusterUri"
                          },
                          {
                            "name": "linkAdxDatabase",
                            "source": "parameter",
                            "value": "adxDatabase"
                          },
                          {
                            "name": "tabName",
                            "source": "static",
                            "value": "Overview"
                          },
                          {
                            "name": "haReplica",
                            "source": "parameter",
                            "value": "haReplica"
                          },
                          {
                            "name": "showDescriptions",
                            "source": "parameter",
                            "value": "showDescriptions"
                          }
                        ],
                        "viewerMode": true
                      }
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      },
                      "emptyValCustomText": "(None)"
                    }
                  },
                  {
                    "columnMatch": "sample_age",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "360",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Time difference between the last workbook refresh and the last sample in the database properties dataset."
                    }
                  },
                  {
                    "columnMatch": "rt_tooltip",
                    "formatter": 5
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "service_tier",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "logical_server_name",
                    "label": "Logical server"
                  },
                  {
                    "columnId": "database_name",
                    "label": "Database"
                  },
                  {
                    "columnId": "uptime",
                    "label": "Uptime"
                  },
                  {
                    "columnId": "service_tier",
                    "label": "Service tier"
                  },
                  {
                    "columnId": "service_level_objective",
                    "label": "Compute size"
                  },
                  {
                    "columnId": "logical_cpu_count",
                    "label": "Logical CPUs"
                  },
                  {
                    "columnId": "database_engine_memory_mb",
                    "label": "Memory"
                  },
                  {
                    "columnId": "data_max_size_mb",
                    "label": "Max data storage"
                  },
                  {
                    "columnId": "replica_type",
                    "label": "Replica type"
                  },
                  {
                    "columnId": "elastic_pool_name",
                    "label": "Elastic pool"
                  },
                  {
                    "columnId": "sample_age",
                    "label": "Age of sample"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "service_tier",
                  "sortOrder": 1
                }
              ]
            },
            "name": "header_db_properties"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "sqldb_database_properties",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqldb_database_storage_utilization",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqldb_database_resource_utilization",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "header_group"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "tabStyle": "bigger",
        "links": [
          {
            "id": "e108c42f-d83e-470e-baf3-579e5018fb7b",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "Performance",
            "subTarget": "Overview",
            "style": "secondary"
          },
          {
            "id": "341b21d7-3e64-49aa-8665-cbf41f016c7e",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "Activity",
            "subTarget": "Activity",
            "style": "secondary"
          },
          {
            "id": "3d9c1aaf-fcc2-41f5-8738-c59cc0076213",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "Top queries",
            "subTarget": "Top queries",
            "style": "link"
          },
          {
            "id": "9f26ac72-497e-4b7b-bd31-9e1216f83fb8",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "Storage",
            "subTarget": "Storage",
            "style": "secondary"
          },
          {
            "id": "282f8932-cee9-4123-a2fe-872558a8d230",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "{tablesTabName}",
            "subTarget": "Tables",
            "style": "secondary"
          },
          {
            "id": "8e63a2e7-f0df-4b95-b563-7bf9dfaa3d8a",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "{indexesTabName}",
            "subTarget": "Indexes",
            "style": "secondary"
          },
          {
            "id": "c2ccad7b-6a89-4449-9038-2353fb3ce59b",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "{connectivityTabName}",
            "subTarget": "Connectivity",
            "style": "link"
          },
          {
            "id": "811b1d60-37fd-4de6-a947-f3f8e5a8a301",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "{geoReplTabName}",
            "subTarget": "Geo-replicas",
            "style": "secondary"
          },
          {
            "id": "a027676c-7651-470d-b987-f50db7d6c6d3",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "{backupTabName}",
            "subTarget": "Backup",
            "style": "link"
          },
          {
            "id": "5f25321e-8c04-44b8-9867-bcbe0f949016",
            "cellValue": "tabName",
            "linkTarget": "parameter",
            "linkLabel": "Properties",
            "subTarget": "Properties",
            "style": "secondary"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "adxClusterPingResult",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "top_tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Resources and requests",
        "expandable": true,
        "expanded": true,
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "18c7490d-6c49-4e1a-9ec4-e3e65dd77a8c",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedResourceMetrics",
                  "label": "Select metrics",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\":\"CPU\",\"label\":\"CPU\"},\r\n    {\"value\":\"Instance CPU\",\"label\":\"Instance CPU\"},\r\n    {\"value\":\"Data IO\",\"label\":\"Data IO\"},\r\n    {\"value\":\"Log write\",\"label\":\"Log write\"},\r\n    {\"value\":\"Workers\",\"label\":\"Workers\"},\r\n    {\"value\":\"DTU\",\"label\":\"DTU\"},\r\n    {\"value\":\"Memory\",\"label\":\"Memory\"},\r\n    {\"value\":\"Instance memory\",\"label\":\"Instance memory\"},\r\n    {\"value\":\"XTP memory\",\"label\":\"XTP memory\"},\r\n    {\"value\":\"Sessions\",\"label\":\"Sessions\"}\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "CPU",
                    "Instance CPU",
                    "Data IO",
                    "Log write",
                    "Workers"
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "resource_metric_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"datatable(key:int, metric_name:string) [\\r\\n1, \\\"CPU\\\",\\r\\n1, \\\"Data IO\\\",\\r\\n1, \\\"Log write\\\",\\r\\n1, \\\"Workers\\\",\\r\\n1, \\\"Memory\\\",\\r\\n1, \\\"Instance CPU\\\",\\r\\n1, \\\"Instance memory\\\",\\r\\n1, \\\"XTP memory\\\",\\r\\n1, \\\"Sessions\\\",\\r\\n1, \\\"DTU\\\"\\r\\n]\\r\\n| join kind=inner\\r\\n(\\r\\nsqldb_database_resource_utilization\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| extend key = int(1)\\r\\n) on key\\r\\n| project metric_name, sample_time_utc, avg_cpu_percent, avg_data_io_percent, avg_log_write_percent, xtp_storage_percent, max_worker_percent, avg_memory_usage_percent, avg_instance_cpu_percent, avg_instance_memory_percent, max_session_percent, avg_dtu_percent\\r\\n| where \\\"{selectedResourceMetrics}\\\" == \\\"'*'\\\" or metric_name in ({selectedResourceMetrics})\\r\\n| extend metric = case(\\r\\n                    metric_name == \\\"CPU\\\", avg_cpu_percent,\\r\\n                    metric_name == \\\"Data IO\\\", avg_data_io_percent,\\r\\n                    metric_name == \\\"Log write\\\", avg_log_write_percent,\\r\\n                    metric_name == \\\"Workers\\\", max_worker_percent,\\r\\n                    metric_name == \\\"Memory\\\", avg_memory_usage_percent,\\r\\n                    metric_name == \\\"Instance CPU\\\", avg_instance_cpu_percent,\\r\\n                    metric_name == \\\"Instance memory\\\", avg_instance_memory_percent,\\r\\n                    metric_name == \\\"XTP memory\\\", xtp_storage_percent,\\r\\n                    metric_name == \\\"Sessions\\\", max_session_percent,\\r\\n                    metric_name == \\\"DTU\\\", avg_dtu_percent,\\r\\n                    decimal(null))\\r\\n| make-series metric = max(metric) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by metric_name\\r\\n| project metric_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Resource utilization",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "exportToExcelOptions": "all",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Instance memory",
                    "color": "purple"
                  },
                  {
                    "seriesName": "CPU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Workers",
                    "color": "orange"
                  },
                  {
                    "seriesName": "Memory",
                    "color": "pink"
                  },
                  {
                    "seriesName": "Instance CPU",
                    "color": "red"
                  },
                  {
                    "seriesName": "Sessions",
                    "color": "brown"
                  },
                  {
                    "seriesName": "Log write",
                    "color": "green"
                  },
                  {
                    "seriesName": "DTU",
                    "color": "gray"
                  },
                  {
                    "seriesName": "Data IO",
                    "color": "blue"
                  },
                  {
                    "seriesName": "XTP memory",
                    "color": "turquoise"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "textSettings": {
                "style": "markdown"
              }
            },
            "name": "resource_utilization"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`CPU`|CPU utilization relative to the CPU maximum limit per database, as measured by the database engine. As the limit is approached, query latency may increase. Includes only CPU utilization by user workload. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198628).|\r\n|`Instance CPU`|CPU utilization relative to the maximum limit for the database engine instance, as measured by the operating system. As the limit is approached, query latency may increase. Includes all CPU utilization by the database engine, including user and system workloads. Measured at one minute granularity. If high instance CPU utilization persists, consider scaling up the database or the elastic pool containing the database. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198861).|\r\n|`Data IO`|IO utilization relative to the maximum IOPS limit per database. Reflects physical data file reads, not transaction log writes. As the limit is approached, query latency may increase. If this impacts applications, consider workload tuning to reduce the volume of data reads, or scale up to a compute size with a higher `Data IO` limit. Common workload tuning includes [creating indexes](https://go.microsoft.com/fwlink/?linkid=2198640) and implementing [data compression](https://go.microsoft.com/fwlink/?linkid=2198735) (row, page, [columnstore](https://go.microsoft.com/fwlink/?linkid=2198859)). [Learn more](https://go.microsoft.com/fwlink/?linkid=2198851).|\r\n|`Log write`|Transaction log write throughput, relative to the log throughput limit per database. When this metric approaches 100%, data ingestion and data modification become slower. If this impacts applications, consider workload tuning to reduce the volume of log writes, or scale up to a compute size with a higher `Log write` limit. Workload tuning includes implementing [data compression](https://go.microsoft.com/fwlink/?linkid=2198735) (row, page, [columnstore](https://go.microsoft.com/fwlink/?linkid=2198859)), and/or using `tempdb` for transient data by using temporary tables or permanent tables created in `tempdb`. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198639).|\r\n|`Workers`|Worker thread utilization relative to maximum worker thread limit per database. If values over 50% occur consistently, consider workload tuning to reduce worker consumption (for example, reduce [MAXDOP](https://go.microsoft.com/fwlink/?linkid=2198634)), or proactively scale up to a compute size with a higher `Workers` limit. When worker threads are exhausted, new queries and connections will fail. Metric value is obtained by periodic sampling. Actual worker utilization *may spike to higher values* between samples. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198862).|\r\n|`Memory`| Memory utilization relative to the maximum memory limit per database. Expected to be at or near 100% for databases with active workloads to provide optimal performance. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198856).|\r\n|`Instance memory`|Memory utilization relative to the maximum limit for the database engine instance, as measured by the operating system. Expected to be at or near 100% for databases with active workloads to provide optimal performance. Measured at one minute granularity.|\r\n|`Sessions`|Session (connection) utilization relative to the maximum limit per database. High utilization is rare, and most commonly occurs due to not using connection pooling. It may also indicate a connection leak in the application.|\r\n|`DTU`|This metric is derived from the `CPU`, `Data IO`, and `Log write` metrics, as the largest of these values at each point in time. `DTU = MAX(CPU, Data IO, Log write)`. Available only for databases using the [DTU model](https://go.microsoft.com/fwlink/?linkid=2198637), not the newer [vCore model](https://go.microsoft.com/fwlink/?linkid=2198646).|\r\n|`XTP memory`|Utilization of memory for [In-Memory OLTP](https://go.microsoft.com/fwlink/?linkid=2198858) (also known as \"exteme transaction processing\", or XTP), relative to the maximum XTP memory limit per database. When this metric reaches 100%, XTP transactions that add or modify data or create memory-optimized objects will fail. Available only for service tiers that support In-Memory OLTP.|\r\n\r\n[Learn more](https://go.microsoft.com/fwlink/?linkid=2198742) about resource management in Azure SQL Database. Data is collected from [sys.dm_db_resource_stats](https://go.microsoft.com/fwlink/?linkid=2198641)."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "resource_stats_help"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Workload Group Stats\\\" and counter_name in (\\\"Total request count\\\")\\r\\n| project replica_id, sample_time_utc, object_name, counter_name, cntr_value\\r\\n| sort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project-away object_name, cntr_value, delta_cntr_value, delta_sample_time_utc\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Request rate",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Total request count",
                    "label": "Requests",
                    "color": "greenDark"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "name": "requests"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Requests`|A request is one or more SQL statements (queries) that a client sends to the database engine to execute. Requests rate is a commonly used measure of workload throughput.|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "sql_stats_help"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "sqldb_database_performance_counters_common",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqldb_database_resource_utilization",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "resources_and_requests_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Waits",
        "expandable": true,
        "expanded": true,
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "7ae3f51d-d369-4ab7-aa86-76f80ccdc98b",
                  "cellValue": "waitChartName",
                  "linkTarget": "parameter",
                  "linkLabel": "Cumulative waits",
                  "subTarget": "wait_stats_resource_cumulative",
                  "style": "link"
                },
                {
                  "id": "7b11612a-5427-4472-b1ed-e56aab7e01af",
                  "cellValue": "waitChartName",
                  "linkTarget": "parameter",
                  "linkLabel": "Average waits",
                  "subTarget": "wait_stats_resource_average",
                  "style": "link"
                },
                {
                  "id": "cea87ec4-e50a-4eba-a8e8-c4ca7fc3c123",
                  "cellValue": "waitChartName",
                  "linkTarget": "parameter",
                  "linkLabel": "Average signal waits",
                  "subTarget": "wait_stats_signal_average",
                  "style": "link"
                },
                {
                  "id": "0f53f0f1-53b2-43bf-9c97-b26ea4d74609",
                  "cellValue": "waitChartName",
                  "linkTarget": "parameter",
                  "linkLabel": "Waiting tasks",
                  "subTarget": "wait_stats_waiting_tasks",
                  "style": "link"
                }
              ]
            },
            "name": "waits_tabs"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_wait_stats\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project replica_id, sample_time_utc, wait_type, wait_time_ms\\r\\n| partition hint.strategy=shuffle by wait_type\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_wait_time_ms = iif(wait_time_ms >= prev(wait_time_ms) and replica_id == prev(replica_id), wait_time_ms - prev(wait_time_ms), long(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = toreal(delta_wait_time_ms) / delta_sample_time_utc * 1000\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by wait_type\\r\\n)\\r\\n| project wait_type, metric = series_fill_linear(metric, int(null), false), sample_time_utc\\r\\n\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "areachart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "group": "wait_type",
                "createOtherGroup": 7,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "ASYNC_IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "ASYNC_NETWORK_IO",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "BACKUPBUFFER",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPIO",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPTHREAD",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "CXCONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXPACKET",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXROWSET_SYNC",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_CONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_PORT",
                    "color": "orange"
                  },
                  {
                    "seriesName": "EXCHANGE",
                    "color": "orange"
                  },
                  {
                    "seriesName": "HADR_GROUP_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_SYNC_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_LOG_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_MISMATCHED_SLO",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEEDING",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEND_RECV_QUEUE_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SLO_DOWNGRADE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_REFRESH_MAX_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "INSTANCE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "LATCH_DT",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_EX",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_KP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_NL",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_SH",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_UP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LCK_M_BU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "LOGMGR_FLUSH",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_PMM_LOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_QUEUE",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_RESERVE_APPEND",
                    "color": "green"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_DT",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_EX",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_KP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_NL",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_SH",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_UP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGELATCH_DT",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_EX",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_KP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_NL",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_SH",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_UP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "POOL_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "RESOURCE_SEMAPHORE",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "SOS_SCHEDULER_YIELD",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "THREADPOOL",
                    "color": "brown"
                  },
                  {
                    "seriesName": "THROTTLE_LOG_RATE_LOG_STORAGE",
                    "color": "red"
                  },
                  {
                    "seriesName": "WAIT_ON_SYNC_STATISTICS_REFRESH",
                    "color": "greenDarkDark"
                  },
                  {
                    "seriesName": "WRITE_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "WRITELOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "Other",
                    "color": "gray"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "waitChartName",
              "comparison": "isEqualTo",
              "value": "wait_stats_resource_cumulative"
            },
            "name": "wait_stats_resource_cumulative"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_wait_stats\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project replica_id, sample_time_utc, wait_type, wait_time_ms, waiting_tasks_count\\r\\n| partition hint.strategy=shuffle by wait_type\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_wait_time_ms = iif(wait_time_ms >= prev(wait_time_ms) and replica_id == prev(replica_id), wait_time_ms - prev(wait_time_ms), long(null)),\\r\\n         delta_waiting_tasks_count = iif(waiting_tasks_count >= prev(waiting_tasks_count) and wait_type == prev(wait_type) and replica_id == prev(replica_id), waiting_tasks_count - prev(waiting_tasks_count), long(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend delta_avg_wait_time_ms = iif(delta_waiting_tasks_count != 0, toreal(delta_wait_time_ms) / delta_waiting_tasks_count, real(null))\\r\\n| make-series metric = max(delta_avg_wait_time_ms) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by wait_type\\r\\n)\\r\\n| project wait_type, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "areachart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "group": "wait_type",
                "createOtherGroup": 7,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "ASYNC_IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "ASYNC_NETWORK_IO",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "BACKUPBUFFER",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPIO",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPTHREAD",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "CXCONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXPACKET",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXROWSET_SYNC",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_CONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_PORT",
                    "color": "orange"
                  },
                  {
                    "seriesName": "EXCHANGE",
                    "color": "orange"
                  },
                  {
                    "seriesName": "HADR_GROUP_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_SYNC_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_LOG_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_MISMATCHED_SLO",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEEDING",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEND_RECV_QUEUE_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SLO_DOWNGRADE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_REFRESH_MAX_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "INSTANCE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "LATCH_DT",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_EX",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_KP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_NL",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_SH",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_UP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LCK_M_BU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "LOGMGR_FLUSH",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_PMM_LOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_QUEUE",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_RESERVE_APPEND",
                    "color": "green"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_DT",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_EX",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_KP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_NL",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_SH",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_UP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGELATCH_DT",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_EX",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_KP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_NL",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_SH",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_UP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "POOL_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "RESOURCE_SEMAPHORE",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "SOS_SCHEDULER_YIELD",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "THREADPOOL",
                    "color": "brown"
                  },
                  {
                    "seriesName": "THROTTLE_LOG_RATE_LOG_STORAGE",
                    "color": "red"
                  },
                  {
                    "seriesName": "WAIT_ON_SYNC_STATISTICS_REFRESH",
                    "color": "greenDarkDark"
                  },
                  {
                    "seriesName": "WRITE_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "WRITELOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "Other",
                    "color": "gray"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "waitChartName",
              "comparison": "isEqualTo",
              "value": "wait_stats_resource_average"
            },
            "name": "wait_stats_resource_average"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_wait_stats\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project replica_id, sample_time_utc, wait_type, signal_wait_time_ms, waiting_tasks_count\\r\\n| partition hint.strategy=shuffle by wait_type\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_signal_wait_time_ms = iif(signal_wait_time_ms >= prev(signal_wait_time_ms) and replica_id == prev(replica_id), signal_wait_time_ms - prev(signal_wait_time_ms), long(null)),\\r\\n         delta_waiting_tasks_count = iif(waiting_tasks_count >= prev(waiting_tasks_count) and replica_id == prev(replica_id), waiting_tasks_count - prev(waiting_tasks_count), long(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend delta_avg_signal_wait_time_ms = iif(delta_waiting_tasks_count != 0, toreal(delta_signal_wait_time_ms) / delta_waiting_tasks_count, real(null))\\r\\n| make-series metric = max(delta_avg_signal_wait_time_ms) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by wait_type\\r\\n)\\r\\n| project wait_type, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "areachart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "group": "wait_type",
                "createOtherGroup": 7,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "ASYNC_IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "ASYNC_NETWORK_IO",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "BACKUPBUFFER",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPIO",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPTHREAD",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "CXCONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXPACKET",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXROWSET_SYNC",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_CONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_PORT",
                    "color": "orange"
                  },
                  {
                    "seriesName": "EXCHANGE",
                    "color": "orange"
                  },
                  {
                    "seriesName": "HADR_GROUP_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_SYNC_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_LOG_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_MISMATCHED_SLO",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEEDING",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEND_RECV_QUEUE_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SLO_DOWNGRADE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_REFRESH_MAX_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "INSTANCE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "LATCH_DT",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_EX",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_KP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_NL",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_SH",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_UP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LCK_M_BU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "LOGMGR_FLUSH",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_PMM_LOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_QUEUE",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_RESERVE_APPEND",
                    "color": "green"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_DT",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_EX",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_KP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_NL",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_SH",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_UP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGELATCH_DT",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_EX",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_KP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_NL",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_SH",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_UP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "POOL_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "RESOURCE_SEMAPHORE",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "SOS_SCHEDULER_YIELD",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "THREADPOOL",
                    "color": "brown"
                  },
                  {
                    "seriesName": "THROTTLE_LOG_RATE_LOG_STORAGE",
                    "color": "red"
                  },
                  {
                    "seriesName": "WAIT_ON_SYNC_STATISTICS_REFRESH",
                    "color": "greenDarkDark"
                  },
                  {
                    "seriesName": "WRITE_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "WRITELOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "Other",
                    "color": "gray"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "waitChartName",
              "comparison": "isEqualTo",
              "value": "wait_stats_signal_average"
            },
            "name": "wait_stats_signal_average"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_wait_stats\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| project replica_id, sample_time_utc, wait_type, waiting_tasks_count\\r\\n| partition hint.strategy=shuffle by wait_type\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_waiting_tasks_count = iif(waiting_tasks_count >= prev(waiting_tasks_count) and replica_id == prev(replica_id), waiting_tasks_count - prev(waiting_tasks_count), long(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = toreal(delta_waiting_tasks_count) / delta_sample_time_utc * 1000\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by wait_type\\r\\n)\\r\\n| project wait_type, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "areachart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "group": "wait_type",
                "createOtherGroup": 7,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "ASYNC_IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "ASYNC_NETWORK_IO",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "BACKUPBUFFER",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPIO",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "BACKUPTHREAD",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "CXCONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXPACKET",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXROWSET_SYNC",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_CONSUMER",
                    "color": "orange"
                  },
                  {
                    "seriesName": "CXSYNC_PORT",
                    "color": "orange"
                  },
                  {
                    "seriesName": "EXCHANGE",
                    "color": "orange"
                  },
                  {
                    "seriesName": "HADR_GROUP_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_SYNC_COMMIT",
                    "color": "pink"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_LOG_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_MISMATCHED_SLO",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEEDING",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SEND_RECV_QUEUE_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_LOG_RATE_SLO_DOWNGRADE",
                    "color": "red"
                  },
                  {
                    "seriesName": "HADR_THROTTLE_REFRESH_MAX_SIZE",
                    "color": "red"
                  },
                  {
                    "seriesName": "INSTANCE_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "IO_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "LATCH_DT",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_EX",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_KP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_NL",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_SH",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LATCH_UP",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "LCK_M_BU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_BU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IS_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_IX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_NL_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RIn_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RS_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_RX_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_M_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SCH_S_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIU_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_SIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_U_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_UIX_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_ABORT_BLOCKERS",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LCK_M_X_LOW_PRIORITY",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "LOGMGR_FLUSH",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_PMM_LOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_QUEUE",
                    "color": "green"
                  },
                  {
                    "seriesName": "LOGMGR_RESERVE_APPEND",
                    "color": "green"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_DT",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_EX",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_KP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_NL",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_SH",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGEIOLATCH_UP",
                    "color": "lightBlue"
                  },
                  {
                    "seriesName": "PAGELATCH_DT",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_EX",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_KP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_NL",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_SH",
                    "color": "purple"
                  },
                  {
                    "seriesName": "PAGELATCH_UP",
                    "color": "purple"
                  },
                  {
                    "seriesName": "POOL_LOG_RATE_GOVERNOR",
                    "color": "red"
                  },
                  {
                    "seriesName": "RESOURCE_SEMAPHORE",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "SOS_SCHEDULER_YIELD",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "THREADPOOL",
                    "color": "brown"
                  },
                  {
                    "seriesName": "THROTTLE_LOG_RATE_LOG_STORAGE",
                    "color": "red"
                  },
                  {
                    "seriesName": "WAIT_ON_SYNC_STATISTICS_REFRESH",
                    "color": "greenDarkDark"
                  },
                  {
                    "seriesName": "WRITE_COMPLETION",
                    "color": "grayBlue"
                  },
                  {
                    "seriesName": "WRITELOG",
                    "color": "green"
                  },
                  {
                    "seriesName": "Other",
                    "color": "gray"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "waitChartName",
              "comparison": "isEqualTo",
              "value": "wait_stats_waiting_tasks"
            },
            "name": "wait_stats_waiting_tasks"
          },
          {
            "type": 1,
            "content": {
              "json": "|Chart|Description|\r\n|:-|:-|\r\n|Cumulative waits|The Y axis shows the cumulative time all tasks spent waiting per second, for top wait types.|\r\n|Average waits|The Y axis shows the average time a task has spent waiting, for wait types. Calculated as *cumulative resource wait time* / *number of waiting tasks*.|\r\n|Average signal waits|The Y axis shows the average time a task spent waiting for CPU to become available after the resource wait was over. High values may indicate CPU pressure.|\r\n|Waiting tasks|The Y axis shows the number of waiting tasks, for top wait types.|\r\n\r\nData is collected from [sys.dm_os_wait_stats](https://go.microsoft.com/fwlink/?linkid=2198648), or [sys.dm_db_wait_stats](https://go.microsoft.com/fwlink/?linkid=2198633) for databases in an elastic pool."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "waits_help"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "sqldb_database_wait_stats",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "waits_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Common performance counters",
        "expandable": true,
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Batch Resp Statistics\\\" and instance_name == \\\"Elapsed Time:Requests\\\"\\r\\n| project replica_id, sample_time_utc, counter_name, cntr_value\\r\\n| partition hint.strategy = shuffle by counter_name\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| summarize count_requests = sum(delta_cntr_value) by counter_name\\r\\n)\\r\\n| project low_elapsed_time_ms = case(\\r\\n                                    counter_name == \\\"Batches >=000000ms & <000001ms\\\", \\\"≥0 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000001ms & <000002ms\\\", \\\"≥1 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000002ms & <000005ms\\\", \\\"≥2 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000005ms & <000010ms\\\", \\\"≥5 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000010ms & <000020ms\\\", \\\"≥10 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000020ms & <000050ms\\\", \\\"≥20 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000050ms & <000100ms\\\", \\\"≥50 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000100ms & <000200ms\\\", \\\"≥100 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000200ms & <000500ms\\\", \\\"≥200 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=000500ms & <001000ms\\\", \\\"≥500 ms\\\",\\r\\n                                    counter_name == \\\"Batches >=001000ms & <002000ms\\\", \\\"≥1 s\\\",\\r\\n                                    counter_name == \\\"Batches >=002000ms & <005000ms\\\", \\\"≥2 s\\\",\\r\\n                                    counter_name == \\\"Batches >=005000ms & <010000ms\\\", \\\"≥5 s\\\",\\r\\n                                    counter_name == \\\"Batches >=010000ms & <020000ms\\\", \\\"≥10 s\\\",\\r\\n                                    counter_name == \\\"Batches >=020000ms & <050000ms\\\", \\\"≥20 s\\\",\\r\\n                                    counter_name == \\\"Batches >=050000ms & <100000ms\\\", \\\"≥50 s\\\",\\r\\n                                    counter_name == \\\"Batches >=100000ms\\\", \\\"≥100 s\\\",\\r\\n                                    \\\"\\\"\\r\\n                                    ),\\r\\n        count_requests, counter_name\\r\\n| sort by counter_name asc;\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "showAnalytics": true,
              "title": "Requests by duration",
              "noDataMessage": "There is no data for specified parameters.",
              "queryType": 9,
              "visualization": "categoricalbar",
              "chartSettings": {
                "group": "low_elapsed_time_ms",
                "createOtherGroup": 0,
                "showLegend": true
              }
            },
            "name": "batch_response_stats"
          },
          {
            "type": 1,
            "content": {
              "json": "This chart shows a distribution of request durations by elapsed time. Each bar on the histogram corresponds to the number of requests with durations in certain time bucket. For example, the bar labeled `≥1 ms` shows the number of requests with elapsed time ranging from 1 millisecond (inclusive) to 2 milliseconds.\r\n\r\nFor the same workload, a shift in the number of requests to the right over time indicates an increase in query response time. "
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "batch_response_stats_help"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "18c7490d-6c49-4e1a-9ec4-e3e65dd77a8c",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedPerformanceCounters1",
                  "label": "Select counters",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\":\"SQL Compilations/sec\",\"label\":\"SQL compilations\"},\r\n    {\"value\":\"SQL Re-Compilations/sec\",\"label\":\"SQL recompilations\"},\r\n    {\"value\":\"Temp Tables Creation Rate\",\"label\":\"Temp tables creation\"},\r\n    {\"value\":\"Query optimizations/sec\",\"label\":\"Query optimizations\"}\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "rate_statistics_1_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where (\\r\\n        (object_name == \\\"SQL Statistics\\\" and counter_name in (\\\"SQL Compilations/sec\\\",\\\"SQL Re-Compilations/sec\\\"))\\r\\n        or\\r\\n        (object_name == \\\"General Statistics\\\" and counter_name in (\\\"Temp Tables Creation Rate\\\"))\\r\\n        or\\r\\n        (object_name == \\\"Workload Group Stats\\\" and counter_name in (\\\"Query optimizations/sec\\\") and instance_name startswith \\\"UserPrimaryGroup.DBId\\\")\\r\\n        )\\r\\n| where \\\"{selectedPerformanceCounters1}\\\" == \\\"'*'\\\" or counter_name in ({selectedPerformanceCounters1})\\r\\n| project replica_id, sample_time_utc, object_name, cntr_value, counter_name\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, long(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Compilation, optimization, temp tables",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "SQL Compilations/sec",
                    "label": "SQL compilations",
                    "color": "redDark"
                  },
                  {
                    "seriesName": "SQL Re-Compilations/sec",
                    "label": "SQL recompilations",
                    "color": "red"
                  },
                  {
                    "seriesName": "Temp Tables Creation Rate",
                    "label": "Temp tables creation",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Query optimizations/sec",
                    "label": "Query optimizations",
                    "color": "redBright"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "name": "rate_statistics_1"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`SQL compilations`|A query is compiled when it is not found in plan cache. If a query is parameterized (explicitly or automatically), it may be matched to an existing query in plan cache. Such queries may still be compiled, but they avoid CPU-intensive optimization.|\r\n|`Query optimizations`|As part of query compilation, a query may be optimized to create an execution plan. Optimization is a CPU-intensive process. Make sure queries are parameterized to avoid unnecessary optimization. Specify data type, length, precision, and scale in parameter definition. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198744).|\r\n|`SQL recompilations`|A query is re-compiled because its previously cached plan is no longer valid or optimal. This may happen because of schema and data changes. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198738).|\r\n|`Temp tables creation`|The number of temporary tables and table variables created per second. Temp table caching alleviates possible contention due to high rate of temp table creation.|\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "sql_stats_help_1"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0e2ec1f6-bd82-42ec-af47-9e1ca90280d5",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedPerformanceCounters2",
                  "label": "Select counters",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\":\"SQL Attention rate\",\"label\":\"Attentions\"},\r\n    {\"value\":\"Number of Deadlocks/sec\",\"label\":\"Deadlocks\"},\r\n    {\"value\":\"Full Scans/sec\",\"label\":\"Full scans\"},\r\n    {\"value\":\"Logins/sec\",\"label\":\"Logins\"},\r\n    {\"value\":\"Logouts/sec\",\"label\":\"Logouts\"},\r\n    {\"value\":\"Page Splits/sec\",\"label\":\"Page splits\"},\r\n    {\"value\":\"Table Lock Escalations/sec\",\"label\":\"Table lock escalations\"},\r\n    {\"value\":\"Errors/sec\",\"label\":\"User errors\"}\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "rate_statistics_2_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where (\\r\\n        (object_name == \\\"SQL Statistics\\\" and counter_name in (\\\"SQL Attention rate\\\"))\\r\\n        or\\r\\n        (object_name == \\\"General Statistics\\\" and counter_name in (\\\"Logins/sec\\\",\\\"Logouts/sec\\\"))\\r\\n        or\\r\\n        (object_name == \\\"SQL Errors\\\" and counter_name == \\\"Errors/sec\\\" and instance_name == \\\"User Errors\\\")\\r\\n        or\\r\\n        (object_name == \\\"Access Methods\\\" and counter_name in (\\\"Table Lock Escalations/sec\\\", \\\"Full Scans/sec\\\", \\\"Page Splits/sec\\\"))\\r\\n        or\\r\\n        (object_name == \\\"Locks\\\" and counter_name == \\\"Number of Deadlocks/sec\\\" and instance_name == \\\"_Total\\\")\\r\\n        )\\r\\n| where \\\"{selectedPerformanceCounters2}\\\" == \\\"'*'\\\" or counter_name in ({selectedPerformanceCounters2})\\r\\n| project replica_id, sample_time_utc, object_name, cntr_value, \\r\\n          counter_name = case(\\r\\n                             counter_name == \\\"Errors/sec\\\" and instance_name == \\\"User Errors\\\", \\\"User Errors/sec\\\",\\r\\n                             counter_name == \\\"Number of Deadlocks/sec\\\", \\\"Deadlocks/sec\\\",\\r\\n                             counter_name\\r\\n                             )\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Deadlocks, lock escalation, logins, logouts, timeouts, full scans, page splits",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Logouts/sec",
                    "label": "Logouts",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "Logins/sec",
                    "label": "Logins",
                    "color": "green"
                  },
                  {
                    "seriesName": "SQL Attention rate",
                    "label": "Attentions",
                    "color": "orange"
                  },
                  {
                    "seriesName": "User Errors/sec",
                    "label": "User errors",
                    "color": "gray"
                  },
                  {
                    "seriesName": "Table Lock Escalations/sec",
                    "label": "Table lock escalations",
                    "color": "pink"
                  },
                  {
                    "seriesName": "Deadlocks/sec",
                    "label": "Deadlocks",
                    "color": "purpleDark"
                  },
                  {
                    "seriesName": "Page Splits/sec",
                    "label": "Page splits",
                    "color": "red"
                  },
                  {
                    "seriesName": "Full Scans/sec",
                    "label": "Full scans",
                    "color": "grayBlue"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "name": "rate_statistics_2"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Deadlocks`|A deadlock occurs when two or more requests block each other, requiring the database engine to terminate one of them. In some workloads, deadlocks occur routinely. A spike in the number of deadlocks may require investigation. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198741).|\r\n|`Logins`|A high number of logins and logouts per second may indicate that connection pooling is not used. Learn more: [connection pooling in ADO.NET (SqlClient)](https://go.microsoft.com/fwlink/?linkid=2198736), and [connection pooling in JDBC Driver for SQL Server](https://go.microsoft.com/fwlink/?linkid=2198857).|\r\n|`Logouts`|A spike in logouts per second may indicate a restart of client application.|\r\n|`User errors`|In many applications, user errors occur routinely. A spike in the number of user errors may require investigation.|\r\n|`Attentions`|An attention event occurs when a query times out or is canceled. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198868).|\r\n|`Table lock escalations`|Lock escalation to the object (table) level reduces memory use, but may cause lock blocking. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198651).|\r\n|`Full scans`|A sudden increase in the number of full scans can indicate a change in query plan for a frequently executed query.|\r\n|`Page splits`|A page split occurs when an index page cannot accommodate modified data and needs to be split in two. If the split page is in the middle of an index, this causes additional IO and fragments the index.|"
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "sql_stats_help_2"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "44c07f96-2fdf-43e3-8311-2f370f9fed28",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedPerformanceCounters3",
                  "label": "Select counters",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\":\"Active Temp Tables\",\"label\":\"Active temp tables\"},\r\n    {\"value\":\"Logical Connections\",\"label\":\"Logical connections\"},\r\n    {\"value\":\"Processes blocked\",\"label\":\"Processes blocked\"},\r\n    {\"value\":\"User Connections\",\"label\":\"User connections\"}\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "rate_statistics_3_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where (object_name == \\\"General Statistics\\\" and counter_name in (\\\"Active Temp Tables\\\",\\\"Logical Connections\\\",\\\"Processes blocked\\\",\\\"User Connections\\\"))\\r\\n| where \\\"{selectedPerformanceCounters3}\\\" == \\\"'*'\\\" or counter_name in ({selectedPerformanceCounters3})\\r\\n| project sample_time_utc, counter_name, cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Connections, blocked processes, temp tables",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "User Connections",
                    "label": "User connections",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "Active Temp Tables",
                    "label": "Active temp tables",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Logical Connections",
                    "label": "Logical connections",
                    "color": "pink"
                  },
                  {
                    "seriesName": "Processes blocked",
                    "label": "Processes blocked",
                    "color": "redBright"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "name": "count_statistics"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Active temp tables`|The number of temporary tables or table variables in use.|\r\n|`Logical connections`|If multiple active result sets (MARS) is used, each physical connection may be used by multiple logical sessions. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198630).|\r\n|`Processes blocked`|The number of sessions that were blocked at data collection time. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198855).|\r\n|`User connections`|The number of physical connections, excluding system connections.|\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "sql_stats_help_3"
          },
          {
            "type": 1,
            "content": {
              "json": "Data is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "sql_stats_help_4"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "sqldb_database_performance_counters_common",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "isPooledDatabase",
          "comparison": "isNotEqualTo",
          "value": "1"
        }
      ],
      "name": "common_perf_counters_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Memory",
        "expandable": true,
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "44c07f96-2fdf-43e3-8311-2f370f9fed28",
                  "version": "KqlParameterItem/1.0",
                  "name": "excludedClerks",
                  "label": "Exclude memory clerks",
                  "type": 2,
                  "description": "Select one or more memory clerks to exclude from the chart. This can be used to hide the dominant clerks and rescale the chart to show clerks with smaller memory consumption more clearly.",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_memory_utilization\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| summarize memory_size_mb = sum(memory_size_mb) by memory_clerk_type\\r\\n| top 10 by memory_size_mb desc\\r\\n| project value = memory_clerk_type\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 9,
                  "value": null
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "excludedMemoryClerks",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "excludedClerks",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "{excludedClerks}"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "\"\""
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "0dca51e2-f158-45fe-ae9a-d7f303203554"
                }
              ],
              "style": "above",
              "queryType": 9
            },
            "name": "memory_clerk_parameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_memory_utilization\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where memory_clerk_type !in ({excludedMemoryClerks})\\r\\n| project sample_time_utc, memory_clerk_type, memory_clerk_name, memory_size_mb\\r\\n| make-series metric = max(memory_size_mb) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by memory_clerk_type\\r\\n| project memory_clerk_type, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Memory clerks",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "group": "memory_clerk_type",
                "createOtherGroup": 7,
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 4,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "name": "memory_clerks"
          },
          {
            "type": 1,
            "content": {
              "json": "All significant memory allocations by components of the database engine are tracked under specific  memory clerks. It is common for some memory clerks, such as `MEMORYCLERK_SQLBUFFERPOOL` and `CACHESTORE_COLUMNSTOREOBJECTPOOL`, to allocate large amounts of memory to cache data pages. Persistently high memory utilization by other memory clerks may require investigation. Data is collected from [sys.dm.os_memory_clerks](https://go.microsoft.com/fwlink/?linkid=2198866)."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_clerks"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Memory Manager\\\"\\r\\n| where counter_name in (\\\"Target Server Memory (KB)\\\",\\\"Total Server Memory (KB)\\\",\\\"Granted Workspace Memory (KB)\\\",\\\"Lock Memory (KB)\\\")\\r\\n| project sample_time_utc, counter_name = replace_string(counter_name, \\\" (KB)\\\", \\\"\\\"), cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Memory manager",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Target Server Memory",
                    "label": "Target server memory"
                  },
                  {
                    "seriesName": "Total Server Memory",
                    "label": "Total server memory"
                  },
                  {
                    "seriesName": "Lock Memory",
                    "label": "Lock memory"
                  },
                  {
                    "seriesName": "Granted Workspace Memory",
                    "label": "Granted workspace memory"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 3,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "memory_manager"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Resource Pool Stats\\\" and counter_name in (\\\"Active memory grants count\\\",\\\"Pending memory grants count\\\")\\r\\n| extend series_name = case(\\r\\n                           (instance_name == \\\"SloSharedPool1\\\" or instance_name startswith \\\"UserPool.\\\") and counter_name == \\\"Active memory grants count\\\", \\\"User pool active grants\\\",\\r\\n                           (instance_name == \\\"SloSharedPool1\\\" or instance_name startswith \\\"UserPool.\\\") and counter_name == \\\"Pending memory grants count\\\", \\\"User pool pending grants\\\",\\r\\n                           instance_name == \\\"SloHkPool\\\" and counter_name == \\\"Active memory grants count\\\", \\\"XTP pool active grants\\\",\\r\\n                           instance_name == \\\"SloHkPool\\\" and counter_name == \\\"Pending memory grants count\\\", \\\"XTP pool pending grants\\\",\\r\\n                           \\\"\\\"\\r\\n                           )\\r\\n| project sample_time_utc, series_name, cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by series_name\\r\\n| project series_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Memory grants",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "User pool active grants",
                    "color": "amethyst"
                  },
                  {
                    "seriesName": "User pool pending grants",
                    "color": "red"
                  },
                  {
                    "seriesName": "XTP pool active grants",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "XTP pool pending grants",
                    "color": "pink"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "memory_grants"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Target server memory`|The database engine does not allocate memory beyond its current target memory. Target memory is determined by initial engine configuration, and may be adjusted if external memory pressure occurs.|\r\n|`Total server memory`|Total memory allocated by the database engine. Commonly, total server memory closely matches target server memory because the database engine allocates all available memory for various caches. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198638).|\r\n|`Lock memory`|Memory allocated for locks. High lock memory may be due to large transactions and/or disabled lock escalation. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198651).|\r\n|`Granted workspace memory`|Memory allocated for query processing, also known as query memory grants. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198869).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_memory_manager"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Active grants`|A non-zero value indicates that some of the currently running queries have allocated query workspace memory.|\r\n|`Pending grants`|A non-zero value indicates that some queries cannot start or continue execution because they are waiting for a memory grant. Such waits are tracked under `RESOURCE_SEMAPHORE` wait type. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198636).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_memory_grants"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Resource Pool Stats\\\" and counter_name == \\\"Out of memory count\\\"\\r\\n| extend instance_name = case(instance_name == \\\"SloSharedPool1\\\" or instance_name startswith \\\"UserPool.\\\", \\\"User pool OOM\\\", instance_name == \\\"SloHkPool\\\", \\\"XTP pool OOM\\\", \\\"\\\")\\r\\n| project sample_time_utc, instance_name, cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by instance_name\\r\\n| project instance_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Resource pool out of memory (OOM) events",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "XTP pool",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "User pool",
                    "color": "redBright"
                  }
                ],
                "showDataPoints": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "resource_pools_oom"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where (\\r\\n        (object_name == \\\"Buffer Manager\\\" and counter_name == \\\"Buffer cache hit ratio\\\")\\r\\n        or\\r\\n        (object_name == \\\"Plan Cache\\\" and counter_name == \\\"Cache Hit Ratio\\\" and instance_name == \\\"_Total\\\")\\r\\n        )\\r\\n| project sample_time_utc, counter_name = iif(object_name == \\\"Plan Cache\\\" and counter_name == \\\"Cache Hit Ratio\\\", \\\"Plan cache hit ratio\\\", counter_name), cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Cache hit ratios",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Buffer cache hit ratio",
                    "color": "green"
                  },
                  {
                    "seriesName": "Plan cache hit ratio",
                    "color": "magenta"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "minimumFractionDigits": 2,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "cache_hit_ratios"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`User pool OOM`|The number of out-of-memory events that have occurred in the resource pool allocated for user workloads. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198856).|\r\n|`XTP pool OOM`|The number of out-of-memory events that have occurred in the resource pool allocated for memory-optimized tables and other [In-Memory OLTP](https://go.microsoft.com/fwlink/?linkid=2198858) (aka XTP) objects.|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_pool_oom"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Buffer cache hit ratio`|Percentage of data pages that were found in the buffer pool (an in-memory data cache), avoiding slower reads from storage. When sufficient memory is provisioned for the workload, the value at steady state is close to 100%. Occasional dips are possible as IO-intensive queries execute. [Learn more](https://go.microsoft.com/fwlink/?linkid=2197944).|\r\n|`Plan cache hit ratio`|Query execution plans are optimized and stored in an in-memory cache for reuse. This metric is the percentage of plans that were found in plan cache during query execution. When queries are properly parameterized (by specifying data type, length, precision, and scale in parameter definition), query plan reuse is facilitated and this metric tends to be close to 100%. When this metric is much lower than 100%, it may indicate that essentially the same queries are optimized and stored repeatedly, increasing CPU and memory usage. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198738).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_cache_hit_ratios"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Buffer Manager\\\"\\r\\n| where counter_name in (\\\"Background writer pages/sec\\\",\\\"Checkpoint pages/sec\\\",\\\"Lazy writes/sec\\\",\\\"Page reads/sec\\\",\\\"Page writes/sec\\\",\\\"Readahead pages/sec\\\")\\r\\n| extend counter_name = replace_string(counter_name, \\\"/sec\\\", \\\"\\\")\\r\\n| project replica_id, sample_time_utc, counter_name, cntr_value\\r\\n| partition hint.strategy = shuffle by counter_name\\r\\n(\\r\\nsort by replica_id asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project-away cntr_value, delta_cntr_value, delta_sample_time_utc\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n)\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Buffer manager",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "buffer_manager"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Buffer Node\\\" and counter_name == \\\"Page life expectancy\\\"\\r\\n| project sample_time_utc, numa_node = strcat(\\\"NUMA node: \\\", instance_name), cntr_value\\r\\n| make-series metric = max(cntr_value) default = 0 on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by numa_node\\r\\n| project numa_node, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Page life expectancy",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 24,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "page_life_expectancy"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Background writer pages`|Data pages written by indirect checkpoint. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198733).|\r\n|`Checkpoint pages`|Data pages written by automatic or manual checkpoints. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198739).|\r\n|`Lazy writes`|Data pages written by the lazy writer. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198747).|\r\n|`Readahead pages`|Pages read from storage using larger and more efficient IO requests in anticipation of their use by the workload. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198865).|\r\n|`Page reads`|Pages read from storage into the buffer pool. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198853).|\r\n|`Page writes`|Data pages written to data files. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198747).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_buffer_manager"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Page life expectancy`|The time a page is predicted to stay in the buffer pool if it is not referenced by workload. Deep drops in page life expectancy, or consistently low values may be caused by IO intensive queries that flush out most of cached pages from the buffer pool.|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "memory_help_ple"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "sqldb_database_performance_counters_common",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "sqldb_database_memory_utilization",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "isPooledDatabase",
          "comparison": "isNotEqualTo",
          "value": "1"
        }
      ],
      "name": "memory_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Transactions and replicas",
        "expandable": true,
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Databases\\\" and counter_name in (\\\"Transactions/sec\\\",\\\"Write Transactions/sec\\\",\\\"Log Flushes/sec\\\")\\r\\n| project replica_id, sample_time_utc, object_name, counter_name, instance_name, cntr_value\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, instance_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project sample_time_utc, series_name = strcat(counter_name, iif(instance_name == \\\"tempdb\\\", \\\" | tempdb\\\", \\\"\\\")), value\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by series_name\\r\\n| project series_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Transaction and log flush rate",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Transactions/sec | tempdb",
                    "label": "Transactions | tempdb",
                    "color": "blueDark"
                  },
                  {
                    "seriesName": "Write Transactions/sec | tempdb",
                    "label": "Write transactions | tempdb",
                    "color": "redDark"
                  },
                  {
                    "seriesName": "Log Flushes/sec | tempdb",
                    "label": "Log flushes | tempdb",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "Transactions/sec",
                    "label": "Transactions",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Log Flushes/sec",
                    "label": "Log flushes",
                    "color": "green"
                  },
                  {
                    "seriesName": "Write Transactions/sec",
                    "label": "Write transactions",
                    "color": "red"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 31,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "name": "transactions"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Transactions`|Transaction rate for all transactions, including read and write transactions, and user and system transactions. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198854).|\r\n|`Write transactions`|The rate of transactions that wrote to the transaction log of the database. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198644).|\r\n|`Log flushes`|The rate of writes to transaction log as the number of writes per second.|\r\n\r\nMetrics are provided separately for the user database, and for the `tempdb` database. Data is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "transactions_and_replicas_help_transactions"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where object_name == \\\"Databases\\\" and counter_name == \\\"Log Bytes Flushed/sec\\\"\\r\\n| project replica_id, sample_time_utc, object_name, counter_name, instance_name, cntr_value\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, instance_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project sample_time_utc, series_name = strcat(counter_name, iif(instance_name == \\\"tempdb\\\", \\\" | tempdb\\\", \\\"\\\")), value\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by series_name\\r\\n| project series_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Log flush rate",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Log Bytes Flushed/sec | tempdb",
                    "label": "Log flush rate | tempdb",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "Log Bytes Flushed/sec",
                    "label": "Log flush rate",
                    "color": "green"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 11,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "transaction_log"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where instance_name == @\\\"{databaseName}\\\"\\r\\n| where (object_name == \\\"Database Replica\\\" and counter_name == \\\"Transaction Delay\\\")\\r\\n        or\\r\\n        (object_name == \\\"Databases\\\" and counter_name == \\\"Write Transactions/sec\\\")\\r\\n// Transaction Delay reports cumulative delay in ms/second for all transactions. Derive average per-transaction delay by dividing by the number of write transactions for this database\\r\\n| project replica_id, sample_time_utc, object_name, counter_name, cntr_value\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project sample_time_utc, counter_name, value\\r\\n| summarize transaction_delay = sumif(value, counter_name == \\\"Transaction Delay\\\"),\\r\\n            write_transactions = sumif(value, counter_name == \\\"Write Transactions/sec\\\")\\r\\n            by sample_time_utc\\r\\n| project sample_time_utc, transaction_delay_per_transaction = iif(write_transactions != 0 and isnotempty(transaction_delay) and isnotempty(write_transactions), transaction_delay / write_transactions, real(null))\\r\\n| make-series transaction_delay_per_transaction = max(transaction_delay_per_transaction) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor}\\r\\n| project transaction_delay_per_transaction = series_fill_linear(transaction_delay_per_transaction, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Transaction delay",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "transaction_delay_per_transaction"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "transaction_delay_per_transaction",
                    "label": "Transaction delay",
                    "color": "red"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "transaction_delay"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Log flush rate`|The rate of writes to the transaction log, as the amount of data per second. Provided separately for the user database, and for the `tempdb` database.|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "transactions_and_replicas_help_transaction_log"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Transaction delay`|The average delay encountered by each transaction to guarantee that committed data is hardened in the transaction log of synchronous commit replicas. The value is zero when the database does not have any availability group replicas with synchronous commit.|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "showDescriptions",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "transactions_and_replicas_help_transaction_delay"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between (({timeRange:start} - {timeRange:grain}) .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where (replica_type != \\\"Primary\\\" and object_name == \\\"Database Replica\\\" and counter_name in (\\\"Log Bytes Received/sec\\\",\\\"Redone Bytes/sec\\\"))\\r\\n| project replica_id, sample_time_utc, object_name, counter_name, instance_name, cntr_value\\r\\n| sort by replica_id asc, object_name asc, counter_name asc, instance_name asc, sample_time_utc asc\\r\\n| extend delta_cntr_value = iif(cntr_value >= prev(cntr_value) and object_name == prev(object_name) and counter_name == prev(counter_name) and replica_id == prev(replica_id), cntr_value - prev(cntr_value), real(null)),\\r\\n         delta_sample_time_utc = iif(sample_time_utc >= prev(sample_time_utc), datetime_diff(\\\"Millisecond\\\", sample_time_utc, prev(sample_time_utc)), long(null))\\r\\n| where isnotempty(delta_sample_time_utc)\\r\\n| extend value = delta_cntr_value / delta_sample_time_utc * 1000\\r\\n| project sample_time_utc, counter_name, value\\r\\n| make-series metric = max(value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Secondary replica rates",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Log Bytes Received/sec",
                    "label": "Log receive rate",
                    "color": "greenDark"
                  },
                  {
                    "seriesName": "Redone Bytes/sec",
                    "label": "Redo rate",
                    "color": "orange"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 11,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "isHyperscaleDatabase",
              "comparison": "isNotEqualTo",
              "value": "1"
            },
            "name": "redo"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"sqldb_database_performance_counters_common\\r\\n| where sample_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| where logical_server_name =~ @\\\"{serverName}\\\"\\r\\n| where database_name == @\\\"{databaseName}\\\"\\r\\n| where instance_name == @\\\"{databaseName}\\\"\\r\\n| where ({haReplica} and replica_type == \\\"HA secondary\\\") or (not ({haReplica}) and replica_type != \\\"HA secondary\\\")\\r\\n| where replica_type != \\\"Primary\\\" and object_name == \\\"Database Replica\\\" and counter_name in (\\\"Recovery Queue\\\")\\r\\n| project sample_time_utc, counter_name, cntr_value\\r\\n| make-series metric = max(cntr_value) default = long(null) on sample_time_utc from {timeRange:start} to {timeRange:end} step {timeRange:grain}/{grainFactor} by counter_name\\r\\n| project counter_name, metric = series_fill_linear(metric, int(null), false), sample_time_utc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
              "size": 1,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Secondary replica redo queue",
              "noDataMessage": "There is no data for specified parameters.",
              "timeBrushParameterName": "timeRange",
              "queryType": 9,
              "visualization": "linechart",
              "chartSettings": {
                "yAxis": [
                  "metric"
                ],
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Recovery Queue",
                    "label": "Redo queue",
                    "color": "purple"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 3,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "isHyperscaleDatabase",
              "comparison": "isNotEqualTo",
              "value": "1"
            },
            "name": "secondary_replica_redo_queue"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Log receive rate`, `Redo rate`|The rates of receiving and applying transaction log on a secondary replica. When redo rate is comparable to log receive rate, data latency on a secondary replica is minimal; in case of failover to this secondary replica, failover time is minimal as well. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198629).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "showDescriptions",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "isHyperscaleDatabase",
                "comparison": "isNotEqualTo",
                "value": "1"
              }
            ],
            "name": "transactions_and_replicas_secondary_redo_rate"
          },
          {
            "type": 1,
            "content": {
              "json": "|Metric|Description|\r\n|:-|:-|\r\n|`Redo queue`|The amount of transaction log data waiting to be redone, or applied to data files. When redo queue is low, data latency on a secondary replica is minimal; in case of failover to this secondary replica, failover time is minimal as well. This metric is only available for secondary replicas. [Learn more](https://go.microsoft.com/fwlink/?linkid=2198629).|\r\n\r\nData is collected from [sys.dm_os_performance_counters](https://go.microsoft.com/fwlink/?linkid=2198647)."
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "showDescriptions",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "isHyperscaleDatabase",
                "comparison": "isNotEqualTo",
                "value": "1"
              }
            ],
            "name": "transactions_and_replicas_secondary_redo_queue"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "sqldb_database_performance_counters_common",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "transactions_and_replicas_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/storage",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Storage"
        },
        {
          "parameterName": "sqldb_database_storage_utilization",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "storage_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/properties",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Properties"
        },
        {
          "parameterName": "sqldb_database_properties",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "properties_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/tables",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Tables"
        },
        {
          "parameterName": "sqldb_database_table_metadata",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "tables_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/indexes",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "sqldb_database_index_metadata",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Indexes"
        }
      ],
      "name": "indexes_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/activity",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Activity"
        },
        {
          "parameterName": "sqldb_database_active_sessions",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "activity_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/georeplicas",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Geo-replicas"
        },
        {
          "parameterName": "sqldb_database_geo_replicas",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "georeplicas_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/top queries",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Top queries"
        },
        {
          "parameterName": "sqldb_database_query_runtime_stats",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "haReplica",
          "comparison": "isEqualTo",
          "value": "false"
        }
      ],
      "name": "top_queries_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/connectivity",
        "items": [],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Connectivity"
        },
        {
          "parameterName": "sqldb_database_connectivity",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "connectivity_group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Database watcher/Azure SQL Database/database/backup",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabName",
          "comparison": "isEqualTo",
          "value": "Backup"
        },
        {
          "parameterName": "sqldb_database_sql_backup_history",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "serverName",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "databaseName",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "backup_group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}