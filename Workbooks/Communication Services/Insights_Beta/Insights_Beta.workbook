{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Communication Service"
      },
      "name": "general-title"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b1841bbb-0dec-444a-9873-ee90e6749e99",
            "version": "KqlParameterItem/1.0",
            "name": "time_range",
            "label": "Time range",
            "type": 4,
            "description": "Define a time range to aggregate logs over",
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 604800000
            }
          },
          {
            "id": "83d98c35-4d74-457c-9353-79397fcbfa81",
            "version": "KqlParameterItem/1.0",
            "name": "time_granularity",
            "label": "Time granularity",
            "type": 2,
            "description": "Choose the time granularity to use to aggregate logs",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"1m\", \"label\":\"1 minute\" },\r\n    { \"value\":\"10m\", \"label\":\"10 minutes\" },\r\n    { \"value\":\"15m\", \"label\":\"15 minutes\" },\r\n    { \"value\":\"30m\", \"label\":\"30 minutes\" },\r\n    { \"value\":\"1h\", \"label\":\"1 hour\", \"selected\":true  },\r\n    { \"value\":\"2h\", \"label\":\"2 hours\" },\r\n    { \"value\":\"12h\", \"label\":\"12 hours\" },\r\n    { \"value\":\"1d\", \"label\":\"1 day\"},\r\n    { \"value\":\"2d\", \"label\":\"2 days\" },\r\n    { \"value\":\"3d\", \"label\":\"3 days\" },\r\n    { \"value\":\"7d\", \"label\":\"1 week\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "12h"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.communication/communicationservices"
      },
      "name": "global-params"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "bb077035-d197-45dc-bfb4-d872a204bf47",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "overview",
            "style": "link"
          },
          {
            "id": "666e153e-688d-4c46-aa22-958401423542",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Voice and video",
            "subTarget": "calling",
            "style": "link"
          },
          {
            "id": "8c3e53ce-25cd-432e-b9f8-e7201f501111",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Authentication",
            "subTarget": "auth",
            "style": "link"
          },
          {
            "id": "ab89abea-8f97-4f27-8c8a-42c91d71d90f",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "SMS",
            "subTarget": "sms",
            "style": "link"
          },
          {
            "id": "a72508b3-b261-4226-a907-06dd581cd903",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Chat",
            "subTarget": "chat",
            "style": "link"
          },
          {
            "id": "c1361cd8-a3b2-4e2d-ba47-5ee3a55745c6",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "TURN",
            "subTarget": "turn",
            "style": "link"
          },
          {
            "id": "bfb30085-cd9e-446d-a38e-cd39c45228a7",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Email",
            "subTarget": "email",
            "style": "link"
          }
        ]
      },
      "name": "nav_menu"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The Overview tab displays counts over time of your key communications services' activity.\r\n\r\n**Click any bar in the chart to display the associated logs (note that this only works for the last bar that is clicked)**"
            },
            "name": "overview-text"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0cfaad60-33d7-4643-89e3-17cb0b99eb03",
                  "version": "KqlParameterItem/1.0",
                  "name": "plot_type",
                  "label": "Plot type",
                  "type": 2,
                  "description": "Select the type of plot to visualize the data",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[\r\n    {\"value\": \"columnchart\", \"label\": \"Bar chart\", \"selected\":true},\r\n    {\"value\": \"areachart\", \"label\": \"Area chart\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "Microsoft.Communication/CommunicationServices"
            },
            "name": "overview-params"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let CallStreams = ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query}\r\n| project Timestamp=CallStartTime, Operation=tostring(\"CallStreams\");\r\n\r\nlet ChatOperations = ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| project Timestamp=TimeGenerated, Operation=tostring(\"ChatOperations\");\r\n\r\nlet SMSOperations = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| project Timestamp=TimeGenerated, Operation=tostring(\"SMSOperations\");\r\n\r\nlet AuthOperations = ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| project Timestamp=TimeGenerated, Operation=tostring(\"AuthOperations\");\r\n\r\nlet TURNOperations = ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| project Timestamp=TimeGenerated, Operation=tostring(\"TURNOperations\");\r\n\r\nCallStreams\r\n| union ChatOperations, SMSOperations, AuthOperations, TURNOperations\r\n| extend time_span = floor(Timestamp, {time_granularity})\r\n| make-series count() default=0 on Timestamp from {time_range:start} to {time_range:end} step {time_granularity} by Operation\r\n| render {plot_type}",
              "size": 0,
              "noDataMessage": "No Communication Services operations found in the specified time range",
              "exportedParameters": [
                {
                  "fieldName": "series",
                  "parameterName": "operation_type",
                  "parameterType": 1
                },
                {
                  "parameterName": "all_operations",
                  "parameterType": 1
                },
                {
                  "fieldName": "x",
                  "parameterName": "operation_time",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.communication/communicationservices"
            },
            "name": "all-operations-query"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selected_operations = todynamic('{all_operations}');\r\n\r\nlet CallData = ACSCallDiagnostics | join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId | extend OperationType = tostring(\"CallStreams\"), Timestamp = CallStartTime;\r\nlet AuthData = ACSAuthIncomingOperations | extend OperationType = tostring(\"AuthOperations\"), Timestamp = TimeGenerated;\r\nlet SMSData = ACSSMSIncomingOperations | extend OperationType = tostring(\"SMSOperations\"), Timestamp = TimeGenerated;\r\nlet ChatData = ACSChatIncomingOperations | extend OperationType = tostring(\"ChatOperations\"), Timestamp = TimeGenerated;\r\nlet TURNData = ACSNetworkTraversalIncomingOperations | extend OperationType = tostring(\"TURNOperations\"), Timestamp = TimeGenerated;\r\n\r\nlet AllData = CallData\r\n| union AuthData, SMSData, ChatData, TURNData\r\n| where OperationType == '{operation_type}' and Timestamp between (todatetime(selected_operations.x) .. {time_granularity});\r\n\r\nlet all_cols = toscalar(AllData\r\n| extend all_cols = pack_all()\r\n| project all_cols\r\n| extend col_names = bag_keys(all_cols)\r\n| summarize make_set(col_names));\r\n\r\nlet schemas_dict = dynamic({\r\n    \"CallStreams\": [\"CorrelationId\", \"CallStartTime\", \"CallType\", \"Identifier\", \"ParticipantId\", \"EndpointId\", \"EndpointType\", \"TeamsThreadId\", \"SdkVersion\", \"OsVersion\", \"ParticipantEndReason\", \"MediaType\", \"StreamId\", \"TransportType\", \"JitterAvg\", \"JitterMax\", \"RoundTripTimeAvg\", \"RoundTripTimeMax\", \"PacketLossRateAvg\", \"PacketLossRateMax\"],\r\n    \"ChatOperations\": [\"TimeGenerated\", \"OperationName\", \"CorrelationId\", \"OperationVersion\", \"Category\", \"ResultType\", \"ResultSignature\", \"ResultDescription\", \"DurationMs\", \"CallerIpAddress\", \"Level\", \"URI\", \"UserId\", \"ChatThreadId\", \"ChatMessageId\", \"SdkType\", \"PlatformType\", \"Type\"],\r\n    \"SMSOperations\": [\"TimeGenerated\", \"OperationName\", \"CorrelationId\", \"OperationVersion\", \"Category\", \"ResultType\", \"ResultSignature\", \"ResultDescription\", \"DurationMs\", \"CallerIpAddress\", \"Level\", \"URI\", \"OutgoingMessageLength\", \"IncomingMessageLength\", \"DeliveryAttempts\", \"PhoneNumber\", \"SdkType\", \"PlatformType\", \"Method\", \"Type\"],\r\n    \"AuthOperations\": [\"TimeGenerated\", \"OperationName\", \"CorrelationId\", \"OperationVersion\", \"Category\", \"ResultType\", \"ResultSignature\", \"ResultDescription\", \"DurationMs\", \"CallerIpAddress\", \"Level\", \"URI\", \"Identity\", \"Scopes\", \"SdkType\", \"PlatformType\", \"Type\"],\r\n    \"TURNOperations\": [\"TenantId\", \"TimeGenerated\", \"OperationName\", \"CorrelationId\", \"OperationVersion\", \"Category\", \"ResultType\", \"ResultSignature\", \"DurationMs\", \"Level\", \"URI\", \"Identity\", \"SdkType\", \"PlatformType\", \"RouteType\", \"Type\"]\r\n});\r\n\r\nlet remove_cols = set_difference(all_cols, todynamic(schemas_dict.{operation_type}));\r\n\r\nAllData\r\n| extend rec = pack_all()\r\n| project filteredRec = bag_remove_keys(rec, remove_cols)\r\n| evaluate bag_unpack(filteredRec)",
              "size": 0,
              "title": "{operation_type} logs at time {operation_time}",
              "noDataMessage": "No operations registered at the specified time",
              "queryType": 0,
              "resourceType": "microsoft.communication/communicationservices"
            },
            "conditionalVisibility": {
              "parameterName": "operation_type",
              "comparison": "isNotEqualTo"
            },
            "name": "selected-operation-logs"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "7c2f282b-4005-4f41-ab99-ed720c1e14b7",
                  "cellValue": "calling_tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Summary",
                  "subTarget": "general",
                  "style": "link"
                },
                {
                  "id": "8614c8ca-beb7-4cac-9766-119a196393ff",
                  "cellValue": "calling_tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Volume",
                  "subTarget": "usage",
                  "style": "link"
                },
                {
                  "id": "6747113b-1bd8-42f6-9b83-636e6b6a97a3",
                  "cellValue": "calling_tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Quality",
                  "subTarget": "quality",
                  "style": "link"
                },
                {
                  "id": "91fd1f28-5f6f-4c4e-a731-2c7c61cfdf75",
                  "cellValue": "calling_tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Details",
                  "subTarget": "details",
                  "style": "link"
                }
              ]
            },
            "name": "voice-video-nav"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "The Quality tab within \"Voice and video\" displays counts and ratios of key entities that signal call quality."
                  },
                  "name": "voice-video-quality-text"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "bb9e8d89-0532-49e5-b699-403c33fce006",
                        "version": "KqlParameterItem/1.0",
                        "name": "call_quality_media_types",
                        "label": "Media types",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                          "AppSharing",
                          "Video",
                          "VBSS",
                          "Audio"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n    {\"value\": \"Audio\", \"label\": \"Audio\", \"selected\":true},\r\n    {\"value\": \"Video\", \"label\": \"Video\", \"selected\":true},\r\n    {\"value\": \"VBSS\", \"label\": \"Screen sharing\", \"selected\":true},\r\n    {\"value\": \"AppSharing\", \"label\": \"App sharing\", \"selected\":true}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "call_quality_endpoint_types",
                        "label": "Endpoint types",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n    {\"value\": \"VoIP\", \"label\": \"VoIP\", \"selected\":true},\r\n    {\"value\": \"PSTN\", \"label\": \"PSTN\", \"selected\":true},\r\n    {\"value\": \"Bot\", \"label\": \"Bot\", \"selected\":true},\r\n    {\"value\": \"Server\", \"label\": \"Server\", \"selected\":true},\r\n    {\"value\": \"Unknown\", \"label\": \"Unknown\", \"selected\":true}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "id": "2666fe6a-842f-46ad-9f75-5e52e8517ff8",
                        "value": [
                          "Unknown",
                          "Server",
                          "Bot",
                          "PSTN",
                          "VoIP"
                        ]
                      },
                      {
                        "id": "868602ec-a0f7-4983-a292-4acde38c2f2a",
                        "version": "KqlParameterItem/1.0",
                        "name": "call_quality_os",
                        "label": "OS version",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "ACSCallSummary\r\n| where CallStartTime {time_range:query}\r\n| extend OsVersion = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| distinct OsVersion\r\n| order by OsVersion\r\n| where isnotempty(OsVersion)",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices",
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "voice-video-quality-params"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Stream health",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "Streams are classified as healthy if they exhibit telemetry values within the following ranges:\r\n\r\n- Round trip time under 500 milliseconds\r\n- Packet loss rate of less than 10%\r\n- Jitter under 30 milliseconds"
                        },
                        "name": "stream-health-info"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query} and MediaType in (dynamic([{call_quality_media_types}])) and EndpointType in (dynamic([{call_quality_endpoint_types}]))\r\n| extend SimpleOsVersion = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| where SimpleOsVersion in (dynamic([{call_quality_os}]))\r\n| order by CallStartTime asc, ParticipantStartTime asc\r\n| extend JitterQuality = iff(JitterAvg > 30, \"jitter\", \"\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"packet loss rate\", \"\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"round-trip time\", \"\")\r\n| extend TelemetryString = JitterQuality\r\n| extend TelemetryString = iff(isempty(PacketLossRateQuality), TelemetryString, iff(isempty(TelemetryString), PacketLossRateQuality, strcat_delim(\" and \", TelemetryString, PacketLossRateQuality)))\r\n| extend TelemetryString = iff(isempty(RoundTripTimeQuality), TelemetryString, iff(isempty(TelemetryString), RoundTripTimeQuality, strcat_delim(\" and \", TelemetryString, RoundTripTimeQuality)))\r\n//| extend TelemetryString = strcat_delim(\" and \", JitterQuality, PacketLossRateQuality, RoundTripTimeQuality)\r\n| extend StreamClassification = iff(isempty(TelemetryString), \"Healthy\", strcat(\"Unhealthy \", TelemetryString))\r\n//| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"Poor\", \"Good\")\r\n| summarize count() by StreamClassification\r\n| render piechart",
                          "size": 0,
                          "noDataMessage": "No streams were found for the specified time range",
                          "queryType": 0,
                          "resourceType": "microsoft.communication/communicationservices"
                        },
                        "name": "voice-video-quality-streams"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "stream-health-group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Impacted calls",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "An impacted call is defined here as a call that has at least one unhealthy media stream as defined in **Stream health**"
                        },
                        "name": "impacted-calls-info"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query} and MediaType in (dynamic([{call_quality_media_types}])) and EndpointType in (dynamic([{call_quality_endpoint_types}]))\r\n| extend SimpleOsVersion = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| where SimpleOsVersion in (dynamic([{call_quality_os}]))\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"Impacted\", \"Not impacted\")\r\n| distinct CorrelationId, StreamQuality\r\n| summarize CallQuality=arg_min(StreamQuality, *) by CorrelationId\r\n| summarize count() by CallQuality\r\n| render piechart",
                          "size": 0,
                          "noDataMessage": "No calls found in the specified time range",
                          "queryType": 0,
                          "resourceType": "microsoft.communication/communicationservices"
                        },
                        "name": "voice-video-quality-calls"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "impacted-calls-group"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query} and MediaType in (dynamic([{call_quality_media_types}])) and EndpointType in (dynamic([{call_quality_endpoint_types}]))\r\n| extend SimpleOsVersion = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| where SimpleOsVersion in (dynamic([{call_quality_os}]))\r\n| order by CallStartTime asc, ParticipantStartTime asc\r\n| extend ParticipantEndReason = case(\r\n                                tostring(ParticipantEndReason) startswith \"0\", \"Success\",\r\n                                tostring(ParticipantEndReason) startswith \"1\", \"Provisional\",\r\n                                tostring(ParticipantEndReason) startswith \"2\", \"Success\",\r\n                                tostring(ParticipantEndReason) startswith \"3\", \"Redirection\",\r\n                                tostring(ParticipantEndReason) startswith \"4\", \"Client Failure\",\r\n                                tostring(ParticipantEndReason) startswith \"5\", \"Server Failure\",\r\n                                tostring(ParticipantEndReason) startswith \"6\", \"Global Failure\",\r\n                            ParticipantEndReason\r\n                        )\r\n| summarize count() by ParticipantEndReason\r\n| render piechart",
                    "size": 0,
                    "title": "Participant end reason categories",
                    "noDataMessage": "No participants found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "end_reason_category",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "customWidth": "50",
                  "name": "voice-video-quality-participant-end-reason-class"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\",   \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden / Authentication failure\", \"Ensure that your Communication Services token is valid and not expired.\",\r\n    \"404\", \"Call not found\", \"Ensure that the number you're calling (or call you're joining) exists.\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Call controller timed out\", \"Call Controller timed out waiting for protocol messages from user endpoints. Ensure clients are connected and available.\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Local media stack or media infrastructure error\", \"Ensure that you're using the latest SDK in a supported environment.\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Provide Referrer Identity\", \"\",\r\n    \"430\", \"Unable to deliver message to client application\", \"Ensure that the client application is running and available.\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Remote client endpoint not registered\", \"Ensure that the remote endpoint is available.\",\r\n    \"481\", \"Failed to handle incoming call\", \"File a support request through the Azure portal.\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Call canceled, locally declined, ended due to an endpoint mismatch issue, or failed to generate media offer\", \"Expected behavior.\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"490\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"491\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"496\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"497\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"498\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"500\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"504\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Call globally declined by remote Communication Services participant\", \"Expected behavior.\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\",\r\n];\r\n\r\nACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| where CallStartTime {time_range:query} and MediaType in (dynamic([{call_quality_media_types}])) and EndpointType in (dynamic([{call_quality_endpoint_types}]))\r\n| extend SimpleOsVersion = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| where SimpleOsVersion in (dynamic([{call_quality_os}]))\r\n| summarize ParticipantEndReasonCounts=count() by EndReason, Troubleshooting\r\n| order by ParticipantEndReasonCounts",
                    "size": 0,
                    "title": "Participant end reasons {end_reason_category}",
                    "noDataMessage": "No participants found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ParticipantEndReasonCounts",
                          "formatter": 3,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "voice-video-quality-participant-end-reasons"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "calling_tab",
              "comparison": "isEqualTo",
              "value": "quality"
            },
            "name": "call_quality"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "The Summary tab within \"Voice and video\" displays high level stats ratios of key call dimensions."
                  },
                  "customWidth": "100",
                  "name": "voice-video-text"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This chart provides information about the proportion of impacted calls, either by poor telemetry or failed participant end reasons.\r\n\r\n**Click any bar in the chart to display the associated usage logs (note that this only works for the last bar that is clicked)**"
                        },
                        "name": "overview-impacted-calls-text"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query}\r\n| order by CallStartTime asc, ParticipantStartTime asc\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"Failed end reason\")\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"Unhealthy stream\", \"\")\r\n| extend IsImpacted = case(\r\n                            isnotempty(UnsuccessfulEndReason) and isnotempty(StreamQuality), 4,\r\n                            isnotempty(StreamQuality), 3,\r\n                            isnotempty(UnsuccessfulEndReason), 2,\r\n                            1)\r\n| summarize arg_max(IsImpacted, *) by CorrelationId\r\n| extend Classification = case(\r\n                                IsImpacted == 4, strcat(UnsuccessfulEndReason, \" and \", StreamQuality),\r\n                                IsImpacted == 3, StreamQuality,\r\n                                IsImpacted == 2, UnsuccessfulEndReason,\r\n                                \"Successful\"\r\n                            )\r\n//| project CallDate, InteropType, CallLabel, CallId = CorrelationId\r\n| make-series NumCalls=dcount(CorrelationId) default=0 on CallStartTime from {time_range:start} to {time_range:end} step {time_granularity} by Classification\r\n| render barchart",
                          "size": 0,
                          "noDataMessage": "No calling logs found in the specified time range",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "call_impact_time",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "label",
                              "parameterName": "call_impact_type",
                              "parameterType": 1
                            },
                            {
                              "parameterName": "call_impact",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.communication/communicationservices"
                        },
                        "name": "impacted-calls-barchart"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let selected_call_impact = todynamic('{call_impact}');\r\n\r\nACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime between (todatetime(selected_call_impact.x) .. {time_granularity})\r\n| order by CallStartTime asc, ParticipantStartTime asc\r\n| extend CallDate=format_datetime(CallStartTime, 'MM/dd/y')\r\n| extend CallTime=format_datetime(CallStartTime, 'hh:mm:ss')\r\n| extend InteropType = iff(isempty(TeamsThreadId), \"📞 ACS call\", \"🔀 Teams interop\")\r\n\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"Failed end reason\")\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"Unhealthy stream\", \"\")\r\n| extend IsImpacted = case(\r\n                            isnotempty(UnsuccessfulEndReason) and isnotempty(StreamQuality), 4,\r\n                            isnotempty(StreamQuality), 3,\r\n                            isnotempty(UnsuccessfulEndReason), 2,\r\n                            1)\r\n| summarize arg_max(IsImpacted, *) by CorrelationId\r\n| extend Classification = case(\r\n                                IsImpacted == 4, strcat(UnsuccessfulEndReason, \" and \", StreamQuality),\r\n                                IsImpacted == 3, StreamQuality,\r\n                                IsImpacted == 2, UnsuccessfulEndReason,\r\n                                \"Successful\"\r\n                            )\r\n| where Classification == selected_call_impact.label\r\n| extend CallIcon = case(\r\n                                IsImpacted == 4, \"🛑🚩\",\r\n                                IsImpacted == 3, \"🚩\",\r\n                                IsImpacted == 2, \"🛑\",\r\n                                \"\"\r\n                            )\r\n| extend CallLabel = strcat(CallTime, \" \", CallIcon)\r\n| summarize arg_max(CallLabel, *) by CorrelationId\r\n| project CallDate, InteropType, CallLabel, CallId = CorrelationId",
                                "size": 0,
                                "title": "{call_impact_type} calls aat {call_impact_time}",
                                "noDataMessage": "No calls found in the specified time range",
                                "exportFieldName": "CallId",
                                "exportParameterName": "call_impact_id",
                                "queryType": 0,
                                "resourceType": "microsoft.communication/communicationservices",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "CallDate",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "CallLabel",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "$gen_group",
                                      "formatter": 0,
                                      "tooltipFormat": {
                                        "tooltip": "Details for call {0}"
                                      }
                                    }
                                  ],
                                  "hierarchySettings": {
                                    "treeType": 1,
                                    "groupBy": [
                                      "CallDate"
                                    ],
                                    "expandTopLevel": true,
                                    "finalBy": "CallLabel"
                                  }
                                }
                              },
                              "customWidth": "30",
                              "conditionalVisibility": {
                                "parameterName": "call_impact",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "call-impact-list"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\",   \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden / Authentication failure\", \"Ensure that your Communication Services token is valid and not expired.\",\r\n    \"404\", \"Call not found\", \"Ensure that the number you're calling (or call you're joining) exists.\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Call controller timed out\", \"Call Controller timed out waiting for protocol messages from user endpoints. Ensure clients are connected and available.\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Local media stack or media infrastructure error\", \"Ensure that you're using the latest SDK in a supported environment.\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Provide Referrer Identity\", \"\",\r\n    \"430\", \"Unable to deliver message to client application\", \"Ensure that the client application is running and available.\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Remote client endpoint not registered\", \"Ensure that the remote endpoint is available.\",\r\n    \"481\", \"Failed to handle incoming call\", \"File a support request through the Azure portal.\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Call canceled, locally declined, ended due to an endpoint mismatch issue, or failed to generate media offer\", \"Expected behavior.\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"490\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"491\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"496\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"497\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"498\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"500\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"504\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Call globally declined by remote Communication Services participant\", \"Expected behavior.\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\",\r\n];\r\n\r\nACSCallDiagnostics\r\n| where CorrelationId == \"{call_impact_id}\"\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"🛑\")\r\n| extend ParticipantTime=format_datetime(ParticipantStartTime, 'hh:mm:ss')\r\n| extend EndpointType = case(  indexof(EndpointType, \"VoIP\") != -1, strcat(\"🗣️ \", EndpointType),\r\n                            indexof(EndpointType, \"PSTN\") != -1, strcat(\"📞 \", EndpointType),\r\n                            indexof(EndpointType, \"Bot\") != -1, strcat(\"🤖 \", EndpointType),\r\n                            indexof(EndpointType, \"Server\") != -1, strcat(\"🖥️ \", EndpointType),\r\n                            indexof(EndpointType, \"Unknown\") != -1, strcat(\"👽 \", EndpointType),\r\n                            EndpointType\r\n                        )\r\n| extend IsInterop = Identifier !startswith \"acs:\"\r\n| extend ParticipantType = iff(IsInterop, \"🔀 Teams\", EndpointType)\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"🚩\", \"\")\r\n| extend Participant = strcat(ParticipantType, \" \", UnsuccessfulEndReason, \" \", StreamQuality, \" \", ParticipantTime, \" (\", iff(isnotempty(ParticipantId), ParticipantId, strcat(\"Endpoint ID: \", EndpointId)), \")\")\r\n| extend MediaType = case(  indexof(MediaType, \"Audio\") != -1, strcat(\"🔊 \", MediaType),\r\n                            indexof(MediaType, \"Video\") != -1, strcat(\"🎥 \", MediaType),\r\n                            indexof(MediaType, \"VBSS\") != -1, strcat(\"💻 \", MediaType),\r\n                            indexof(MediaType, \"AppSharing\") != -1, strcat(\"📲 \", MediaType),\r\n                            MediaType\r\n                        )\r\n| project CallId = strcat(\"📞 \", CorrelationId), Participant, MediaType, ParticipantDuration, EndReason, JitterAvg, PacketLossRateAvg, RoundTripTimeAvg",
                                "size": 0,
                                "title": "Details for call {call_impact_id}",
                                "noDataMessage": "Please select a call from the left column",
                                "queryType": 0,
                                "resourceType": "microsoft.communication/communicationservices",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "CallId",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Participant",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "MediaType",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "EndReason",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "startsWith",
                                            "thresholdValue": "2",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "startsWith",
                                            "thresholdValue": "0",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "3",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "JitterAvg",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": "30",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "PacketLossRateAvg",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": ".1",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "RoundTripTimeAvg",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": "500",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "hierarchySettings": {
                                    "treeType": 1,
                                    "groupBy": [
                                      "CallId",
                                      "Participant"
                                    ],
                                    "expandTopLevel": true,
                                    "finalBy": "MediaType"
                                  }
                                }
                              },
                              "customWidth": "70",
                              "conditionalVisibility": {
                                "parameterName": "call_impact_id",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "call-impact-details"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "**Select a call from the left column to visualize its details**",
                                "style": "info"
                              },
                              "customWidth": "70",
                              "conditionalVisibility": {
                                "parameterName": "call_impact_id",
                                "comparison": "isEqualTo"
                              },
                              "name": "call-impact-details-info"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "call_impact",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "call-impact-details-group"
                      }
                    ]
                  },
                  "name": "overview-impacted-calls"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let CallOverview = ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId;\r\n\r\nCallOverview\r\n| where CallStartTime {time_range:query}\r\n| summarize media_types=count() by MediaType\r\n| render piechart",
                    "size": 0,
                    "title": "Media Type Ratio",
                    "noDataMessage": "No media streams found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "customWidth": "50",
                  "name": "voice-video-media-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let CallOverview = ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId;\r\n\r\nCallOverview\r\n| where CallStartTime {time_range:query}\r\n| summarize endpoint_types=count() by EndpointType\r\n| render piechart",
                    "size": 0,
                    "title": "Endpoint Types",
                    "noDataMessage": "No endpoints found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "customWidth": "50",
                  "name": "voice-video-endpoint-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSCallSummary\r\n| where CallStartTime {time_range:query}\r\n| extend SimpleOs = case(  indexof(OsVersion, \"Android\") != -1, tostring(split(OsVersion, \";\")[0]),\r\n                            indexof(OsVersion, \"Darwin\") != -1, tostring(split(OsVersion, \":\")[0]),\r\n                            indexof(OsVersion, \"Windows\") != -1, tostring(split(OsVersion, \".\")[0]),\r\n                            OsVersion\r\n                        )\r\n| summarize OsCounts=count() by SimpleOs\r\n| render piechart",
                    "size": 0,
                    "title": "OS Usage",
                    "noDataMessage": "No OS information reported in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "customWidth": "50",
                  "name": "voice-video-os-usage"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Participant End Reasons",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string)\r\n[\r\n    \"0\",   \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden / Authentication failure\",\r\n    \"404\", \"Call not found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Call controller timed out\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Local media stack or media infrastructure error\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Unable to deliver message to client application\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Remote client endpoint not registered\",\r\n    \"481\", \"Failed to handle incoming call\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Call canceled, locally declined, ended due to an endpoint mismatch issue, or failed to generate media offer\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"490\", \"Local endpoint network issues\",\r\n    \"491\", \"Local endpoint network issues\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"496\", \"Local endpoint network issues\",\r\n    \"497\", \"Local endpoint network issues\",\r\n    \"498\", \"Local endpoint network issues\",\r\n    \"500\", \"Communication Services infrastructure error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Communication Services infrastructure error\",\r\n    \"504\", \"Communication Services infrastructure error\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Call globally declined by remote Communication Services participant\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\n\r\nACSCallSummary\r\n| where CallStartTime {time_range:query}\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| summarize EndReasonCounts=count() by EndReason//ParticipantEndReason, SIPCode=SIPCode\r\n| render piechart",
                          "size": 0,
                          "noDataMessage": "No participants found in the specified time range",
                          "exportFieldName": "series",
                          "exportParameterName": "selected_end_reason",
                          "queryType": 0,
                          "resourceType": "microsoft.communication/communicationservices"
                        },
                        "name": "voice-video-participant-end-reasons"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "voice-video-participant-end-reasons-group"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "calling_tab",
              "comparison": "isEqualTo",
              "value": "general"
            },
            "name": "voice-video-summary"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "The Volume tab within \"Voice and video\" displays counts of calls and participants over time."
                  },
                  "name": "voice-video-volume-text"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "d2f5dd7b-1559-4d49-aff9-d7e046049210",
                        "version": "KqlParameterItem/1.0",
                        "name": "usage_grouping",
                        "label": "Grouping",
                        "type": 2,
                        "value": "by Interop",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n    {\"value\": \"by Interop\", \"label\": \"Interop type\"},\r\n    {\"value\": \"by CallType\", \"label\": \"Call type\"}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "1ca814c8-26f3-457f-9170-c41449e167a7",
                        "version": "KqlParameterItem/1.0",
                        "name": "duration_unit",
                        "label": "Duration unit",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\r\n    { \"value\":\"1\", \"label\":\"Seconds\" },\r\n    { \"value\":\"60\", \"label\":\"Minutes\", \"selected\":true },\r\n    { \"value\":\"3600\", \"label\":\"Hours\" },\r\n    { \"value\":\"86400\", \"label\":\"Days\" }\r\n]"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "voice-video-volume-params"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSCallSummary\r\n| distinct CorrelationId, TeamsThreadId, CallStartTime, CallType, CallDuration\r\n//| extend Interop=iff(isnull(TeamsThreadId), \"ACS\", \"Teams Interop\") // Current data might not have the right null format\r\n| extend Interop=iff(isempty(TeamsThreadId), \"ACS\", \"Teams Interop\")\r\n| make-series time_seconds=toreal(sum(CallDuration)) / {duration_unit} default=0 on CallStartTime from {time_range:start} to {time_range:end} step {time_granularity} {usage_grouping}",
                    "size": 0,
                    "title": "Calling time in {duration_unit:label} {usage_grouping}",
                    "noDataMessage": "No calls found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "visualization": "barchart"
                  },
                  "customWidth": "50",
                  "name": "voice-video-volume-calls"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSCallSummary\r\n| distinct CorrelationId, TeamsThreadId, CallStartTime, CallType, ParticipantId, ParticipantDuration, EndpointId, Identifier\r\n//| extend Interop=iff(isnull(TeamsThreadId), \"ACS\", \"Teams Interop\")\r\n| extend Interop=iff(Identifier startswith \"acs:\", \"ACS\", \"Teams Interop\")\r\n| make-series time_seconds=toreal(sum(ParticipantDuration)) / {duration_unit} default=0 on CallStartTime from {time_range:start} to {time_range:end} step {time_granularity} {usage_grouping}",
                    "size": 0,
                    "title": "Participant calling time in {duration_unit:label} {usage_grouping}",
                    "noDataMessage": "No participant found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "visualization": "barchart"
                  },
                  "customWidth": "50",
                  "name": "voice-video-volume-participants"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "calling_tab",
              "comparison": "isEqualTo",
              "value": "usage"
            },
            "name": "voice-video-volume"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Call drill-down",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "The Details tab within \"Voice and video\" displays an expandable view of individual calls, broken down to the participant and stream level, with duration and quality metrics.\r\n\r\nTo easily detect problematic calls and participants, the following icons denote specific situations:\r\n- 🛑 indicates a failed participant end reason\r\n- 🚩 indicates a call with at least one stream with unhealthy telemetry values\r\n- 🔀 marks Teams interop calls or participants\r\n- 📞 marks a call that consists entirely of Azure Communication Services (ACS)"
                  },
                  "name": "text - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query}\r\n| order by CallStartTime asc, ParticipantStartTime asc\r\n| extend CallDate=strcat(\"📅\", format_datetime(CallStartTime, 'MM/dd/y'))\r\n| extend CallTime=format_datetime(CallStartTime, 'hh:mm:ss')\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"🛑\")\r\n| extend InteropType = iff(isempty(TeamsThreadId), \"📞 ACS call\", \"🔀 Teams interop\")\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"🚩\", \"\")\r\n| extend CallLabel = strcat(CallTime, \" \", UnsuccessfulEndReason, \" \", StreamQuality)\r\n| summarize arg_max(CallLabel, *) by CorrelationId\r\n| project CallDate, InteropType, CallLabel, CallId = CorrelationId",
                    "size": 0,
                    "noDataMessage": "No calls found for the specified time range",
                    "exportFieldName": "CallId",
                    "exportParameterName": "call_id",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CallDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "CallLabel",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "CallTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "CallDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "CallLabel"
                      }
                    }
                  },
                  "customWidth": "30",
                  "name": "call_ids"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\",   \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden / Authentication failure\", \"Ensure that your Communication Services token is valid and not expired.\",\r\n    \"404\", \"Call not found\", \"Ensure that the number you're calling (or call you're joining) exists.\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Call controller timed out\", \"Call Controller timed out waiting for protocol messages from user endpoints. Ensure clients are connected and available.\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Local media stack or media infrastructure error\", \"Ensure that you're using the latest SDK in a supported environment.\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Provide Referrer Identity\", \"\",\r\n    \"430\", \"Unable to deliver message to client application\", \"Ensure that the client application is running and available.\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Remote client endpoint not registered\", \"Ensure that the remote endpoint is available.\",\r\n    \"481\", \"Failed to handle incoming call\", \"File a support request through the Azure portal.\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Call canceled, locally declined, ended due to an endpoint mismatch issue, or failed to generate media offer\", \"Expected behavior.\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"490\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"491\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"496\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"497\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"498\", \"Local endpoint network issues\", \"Check your network.\",\r\n    \"500\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"504\", \"Communication Services infrastructure error\", \"File a support request through the Azure portal.\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Call globally declined by remote Communication Services participant\", \"Expected behavior.\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\",\r\n];\r\n\r\nACSCallDiagnostics\r\n| where CorrelationId == \"{call_id}\"\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"🛑\")\r\n| extend ParticipantTime=strcat(format_datetime(ParticipantStartTime, 'hh:mm:ss'), \"⏳ \", ParticipantDuration, \" seconds\")\r\n| extend EndpointType = case(  indexof(EndpointType, \"VoIP\") != -1, strcat(\"🗣️ \", EndpointType),\r\n                            indexof(EndpointType, \"PSTN\") != -1, strcat(\"📞 \", EndpointType),\r\n                            indexof(EndpointType, \"Bot\") != -1, strcat(\"🤖 \", EndpointType),\r\n                            indexof(EndpointType, \"Server\") != -1, strcat(\"🖥️ \", EndpointType),\r\n                            indexof(EndpointType, \"Unknown\") != -1, strcat(\"👽 \", EndpointType),\r\n                            EndpointType\r\n                        )\r\n| extend IsInterop = Identifier !startswith \"acs:\"\r\n| extend ParticipantType = iff(IsInterop, \"🔀 Teams\", EndpointType)\r\n| extend JitterQuality = iff(JitterAvg > 30, \"Poor\", \"Good\")\r\n| extend PacketLossRateQuality = iff(PacketLossRateAvg > 0.1, \"Poor\", \"Good\")\r\n| extend RoundTripTimeQuality = iff(RoundTripTimeAvg > 500, \"Poor\", \"Good\")\r\n| extend StreamQuality = iff((JitterQuality == \"Poor\") or (PacketLossRateQuality == \"Poor\") or (RoundTripTimeQuality == \"Poor\"), \"🚩\", \"\")\r\n| extend Participant = strcat(ParticipantType, \" \", UnsuccessfulEndReason, \" \", StreamQuality, \" \", ParticipantTime, \" (\", iff(isnotempty(ParticipantId), ParticipantId, strcat(\"Endpoint ID:\", EndpointId)), \")\")\r\n| extend MediaType = case(  indexof(MediaType, \"Audio\") != -1, strcat(\"🔊 \", MediaType),\r\n                            indexof(MediaType, \"Video\") != -1, strcat(\"🎥 \", MediaType),\r\n                            indexof(MediaType, \"VBSS\") != -1, strcat(\"💻 \", MediaType),\r\n                            indexof(MediaType, \"AppSharing\") != -1, strcat(\"📲 \", MediaType),\r\n                            MediaType\r\n                        )\r\n| project CallId = strcat(\"📞 \", CorrelationId), Participant, MediaType, ParticipantDuration, EndReason, JitterAvg, PacketLossRateAvg, RoundTripTimeAvg",
                    "size": 0,
                    "title": "Details for call {call_id}",
                    "noDataMessage": "Please select a call from the left column",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CallId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Participant",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MediaType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "EndReason",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "startsWith",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "JitterAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "30",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "PacketLossRateAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": ".1",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "RoundTripTimeAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "500",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "CallId",
                          "Participant"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "MediaType"
                      }
                    }
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "call_id",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "call-details"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a call from the left column to visualize its details**",
                    "style": "info"
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "call_id",
                    "comparison": "isEqualTo"
                  },
                  "name": "call-drill-down-message"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "calling_tab",
              "comparison": "isEqualTo",
              "value": "details"
            },
            "name": "call-drill-down"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "calling"
      },
      "name": "call_quality"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The following visualizations represent data from the Authentication Operational logs.\r\n\r\n**Click on any part of the pie charts below to visualize filtered logs.**"
            },
            "name": "auth-text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Authentication API Results",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by ResultType\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No authentication operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "auth_result",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "auth-result-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesAuth =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_auth_results = ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultType\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultType;\r\n\r\nACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query} and (ResultType in (dynamic([{auth_result}])) or iff(\"Other\" in (dynamic([{auth_result}])), (ResultType in (other_auth_results)), false))\r\n| join kind=leftouter SIPCodesAuth on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Authentication operations with result type {auth_result}",
                    "noDataMessage": "No authentication operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "auth_result",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "auth-by-result"
                }
              ]
            },
            "customWidth": "50",
            "name": "auth-results-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Authentication API Result Signatures",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesAuth =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n//| summarize count() by ResultSignature\r\n| join kind=leftouter SIPCodesAuth on ResultSignature\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| summarize count() by Result//Signature\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No authentication operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "auth_signature",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "auth-results-signature"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesAuth =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_auth_signatures = ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultSignature\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultSignature;\r\n\r\nACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query} // and (ResultSignature in (dynamic([{auth_signature}])) or iff(\"Other\" in (dynamic([{auth_signature}])), (ResultSignature in (other_auth_signatures)), false))\r\n| join kind=leftouter SIPCodesAuth on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| where (Result in (dynamic([{auth_signature}])) or iff(\"Other\" in (dynamic([{auth_signature}])), (ResultSignature in (other_auth_signatures)), false))\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Authentication operations with result type {auth_signature}",
                    "noDataMessage": "No authentication operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "auth_signature",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "auth-by-signature"
                }
              ]
            },
            "customWidth": "50",
            "name": "auth-signatures-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Authentication Operation Names",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationName\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No authentication operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "auth_operation",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "auth-operation-names"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_auth_operations = ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationName\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationName;\r\n\r\nACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationName in (dynamic([{auth_operation}])) or iff(\"Other\" in (dynamic([{auth_operation}])), (OperationName in (other_auth_operations)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Identity, Level, Result, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Authentication operations with result type {auth_operation}",
                    "noDataMessage": "No authentication operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "auth_operation",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "auth-by-operation"
                }
              ]
            },
            "customWidth": "50",
            "name": "auth-operation-names-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Authentication Operation Versions",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationVersion\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No authentication operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "auth_version",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "showPin": false,
                  "name": "auth-operation-versions"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_auth_versions = ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationVersion\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationVersion;\r\n\r\nACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationVersion in (dynamic([{auth_version}])) or iff(\"Other\" in (dynamic([{auth_version}])), (OperationVersion in (other_auth_versions)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Identity, Level, Result, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Authentication operations with result type {auth_version}",
                    "noDataMessage": "No authentication operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "auth_version",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "auth-by-version"
                }
              ]
            },
            "customWidth": "50",
            "name": "auth-operation-versions-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Identity drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "identity",
                        "label": "Identity",
                        "type": 2,
                        "description": "Choose an identity to visualize",
                        "query": "ACSAuthIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct Identity\r\n| where isnotempty(Identity)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "auth-identity-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select an identity from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "identity",
                    "comparison": "isEqualTo"
                  },
                  "name": "identity-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query} and Identifier == substring(\"{identity}\", indexof(\"{identity}\", \"acs:\"))\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| extend CallDate=strcat(\"📅\", format_datetime(CallStartTime, 'MM/dd/y'))\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"🛑\")\r\n| extend ParticipantTime=format_datetime(ParticipantStartTime, 'hh:mm:ss')\r\n| extend EndpointType = case(  indexof(EndpointType, \"VoIP\") != -1, strcat(\"🗣️ \", EndpointType),\r\n                            indexof(EndpointType, \"PSTN\") != -1, strcat(\"📞 \", EndpointType),\r\n                            indexof(EndpointType, \"Bot\") != -1, strcat(\"🤖 \", EndpointType),\r\n                            indexof(EndpointType, \"Server\") != -1, strcat(\"🖥️ \", EndpointType),\r\n                            indexof(EndpointType, \"Unknown\") != -1, strcat(\"👽 \", EndpointType),\r\n                            EndpointType\r\n                        )\r\n| extend Participant = strcat(EndpointType, \" \", UnsuccessfulEndReason, \" \", ParticipantTime, \" (\", ParticipantId, \")\")\r\n| extend MediaType = case(  indexof(MediaType, \"Audio\") != -1, strcat(\"🔊 \", MediaType),\r\n                            indexof(MediaType, \"Video\") != -1, strcat(\"🎥 \", MediaType),\r\n                            indexof(MediaType, \"VBSS\") != -1, strcat(\"💻 \", MediaType),\r\n                            indexof(MediaType, \"AppSharing\") != -1, strcat(\"📲 \", MediaType),\r\n                            MediaType\r\n                        )\r\n| project CallDate, CallId = strcat(\"📞 \", CorrelationId), Participant, MediaType, ParticipantDuration, EndReason, JitterAvg, PacketLossRateAvg, RoundTripTimeAvg",
                    "size": 0,
                    "title": "Calls for identity {identity}",
                    "noDataMessage": "No calls found for the specified time range and identity",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CallDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "CallId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Participant",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MediaType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "EndReason",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "startsWith",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "JitterAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "30",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "PacketLossRateAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": ".1",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "RoundTripTimeAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "500",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "CallDate",
                          "CallId",
                          "Participant"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "MediaType"
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "identity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "identity-call-details"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and UserId == \"{identity}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Chat operations for identity {identity}",
                    "noDataMessage": "No chat operations found for the specified  time range and identity",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "identity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "identity-chat-details"
                }
              ]
            },
            "name": "identity-drill-down-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "auth"
      },
      "name": "Auth-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The following visualizations represent data from the Chat Operational logs.\r\n\r\n**Click on any part of the pie charts below to visualize filtered logs.**"
            },
            "name": "auth-text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat API Results",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by ResultType\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No chat operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "chat_result",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "chat-result-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_chat_results = ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultType\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultType;\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and (ResultType in (dynamic([{chat_result}])) or iff(\"Other\" in (dynamic([{chat_result}])), (ResultType in (other_chat_results)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, ResultDescription, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Chat operations with result type {chat_result}",
                    "noDataMessage": "No chat operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_result",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-by-result"
                }
              ]
            },
            "customWidth": "50",
            "name": "chat-results-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat API Result Signatures",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\", \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"Ensure that your Communication Services token is valid and not expired.\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden\", \"Ensure that the initiator of the request has access to the resource.\",\r\n    \"404\", \"Not Found\", \"\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Request Timeout\", \"\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Gone\", \"\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Too many requests\", \"Ensure that your client-side application handles this scenario in a user-friendly manner. If the error persists please file a support request.\",\r\n    \"430\", \"Flow Failed\", \"\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Temporarily Unavailable\", \"\",\r\n    \"481\", \"Call/Transaction Does Not Exist\", \"\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Request Terminated\", \"\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"491\", \"Request Pending\", \"\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"500\", \"Internal Server Error\", \"\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Service Unavailable\", \"File a support request through the Azure portal.\",\r\n    \"504\", \"Server Time-out\", \"\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Decline\", \"\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\"\r\n];\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| summarize count() by Result//Signature\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No chat operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "chat_signature",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-results-signature"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\", \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"Ensure that your Communication Services token is valid and not expired.\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden\", \"Ensure that the initiator of the request has access to the resource.\",\r\n    \"404\", \"Not Found\", \"\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Request Timeout\", \"\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Gone\", \"\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Too many requests\", \"Ensure that your client-side application handles this scenario in a user-friendly manner. If the error persists please file a support request.\",\r\n    \"430\", \"Flow Failed\", \"\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Temporarily Unavailable\", \"\",\r\n    \"481\", \"Call/Transaction Does Not Exist\", \"\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Request Terminated\", \"\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"491\", \"Request Pending\", \"\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"500\", \"Internal Server Error\", \"\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Service Unavailable\", \"File a support request through the Azure portal.\",\r\n    \"504\", \"Server Time-out\", \"\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Decline\", \"\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\"\r\n];\r\n\r\nlet other_chat_signature = ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultSignature\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultSignature;\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} // and (ResultSignature in (dynamic([{chat_signature}])) or iff(\"Other\" in (dynamic([{chat_signature}])), (ResultSignature in (other_chat_signature)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| where (Result in (dynamic([{chat_signature}])) or iff(\"Other\" in (dynamic([{chat_signature}])), (ResultSignature in (other_chat_signature)), false))\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, ResultDescription, Troubleshooting, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Chat operations with result signature {chat_signature}",
                    "noDataMessage": "No chat operations found for the specified time range and result signature",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_signature",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-by-signature"
                }
              ]
            },
            "customWidth": "50",
            "name": "chat-signatures-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat Operation Names",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationName\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No chat operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "chat_operation",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "chat-operation-names"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_chat_operations = ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationName\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationName;\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationName in (dynamic([{chat_operation}])) or iff(\"Other\" in (dynamic([{chat_operation}])), (OperationName in (other_chat_operations)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, UserId, ChatThreadId, CallerIpAddress, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Chat operations with operation name {chat_operation}",
                    "noDataMessage": "No chat operations found for the specified time range and operation name",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_operation",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-by-operation"
                }
              ]
            },
            "customWidth": "50",
            "name": "chat-operation-names-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat Operation Versions",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationVersion\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No chat operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "chat_version",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "showPin": false,
                  "name": "chat-operation-versions"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_chat_versions = ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationVersion\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationVersion;\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationVersion in (dynamic([{chat_version}])) or iff(\"Other\" in (dynamic([{chat_version}])), (OperationVersion in (other_chat_versions)), false))\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, UserId, ChatThreadId, CallerIpAddress, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "Chat operations with operation version {chat_version}",
                    "noDataMessage": "No chat operations found for the specified time range and operation version",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_version",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-by-version"
                }
              ]
            },
            "customWidth": "50",
            "name": "chat-operation-versions-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Identity drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "chat_identity",
                        "label": "Identity",
                        "type": 2,
                        "description": "Choose an identity to visualize",
                        "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct UserId\r\n| where isnotempty(UserId)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "chat-identity-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select an identity from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_identity",
                    "comparison": "isEqualTo"
                  },
                  "name": "chat-identity-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodes =  datatable(ParticipantEndReason: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSCallDiagnostics\r\n| join kind=inner ACSCallSummary on CorrelationId, ParticipantId, EndpointId\r\n| where CallStartTime {time_range:query} and Identifier == substring(\"{chat_identity}\", indexof(\"{chat_identity}\", \"acs:\"))\r\n| join kind=leftouter SIPCodes on ParticipantEndReason\r\n| extend EndReason=strcat(ParticipantEndReason, \": \", SIPCode)\r\n| extend CallDate=strcat(\"📅\", format_datetime(CallStartTime, 'MM/dd/y'))\r\n| extend UnsuccessfulEndReason = iff((ParticipantEndReason startswith \"0\") or (ParticipantEndReason startswith \"2\"), \"\", \"🛑\")\r\n| extend ParticipantTime=format_datetime(ParticipantStartTime, 'hh:mm:ss')\r\n| extend EndpointType = case(  indexof(EndpointType, \"VoIP\") != -1, strcat(\"🗣️ \", EndpointType),\r\n                            indexof(EndpointType, \"PSTN\") != -1, strcat(\"📞 \", EndpointType),\r\n                            indexof(EndpointType, \"Bot\") != -1, strcat(\"🤖 \", EndpointType),\r\n                            indexof(EndpointType, \"Server\") != -1, strcat(\"🖥️ \", EndpointType),\r\n                            indexof(EndpointType, \"Unknown\") != -1, strcat(\"👽 \", EndpointType),\r\n                            EndpointType\r\n                        )\r\n| extend Participant = strcat(EndpointType, \" \", UnsuccessfulEndReason, \" \", ParticipantTime, \" (\", ParticipantId, \")\")\r\n| extend MediaType = case(  indexof(MediaType, \"Audio\") != -1, strcat(\"🔊 \", MediaType),\r\n                            indexof(MediaType, \"Video\") != -1, strcat(\"🎥 \", MediaType),\r\n                            indexof(MediaType, \"VBSS\") != -1, strcat(\"💻 \", MediaType),\r\n                            indexof(MediaType, \"AppSharing\") != -1, strcat(\"📲 \", MediaType),\r\n                            MediaType\r\n                        )\r\n| project CallDate, CallId = strcat(\"📞 \", CorrelationId), Participant, MediaType, ParticipantDuration, EndReason, JitterAvg, PacketLossRateAvg, RoundTripTimeAvg",
                    "size": 0,
                    "title": "Calls for identity {chat_identity}",
                    "noDataMessage": "No calls found for the specified time range and identity",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CallDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "CallId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Participant",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MediaType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "EndReason",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "startsWith",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "JitterAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "30",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "PacketLossRateAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": ".1",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "RoundTripTimeAvg",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "500",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "CallDate",
                          "CallId",
                          "Participant"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "MediaType"
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "chat_identity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-identity-call-details"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and UserId == \"{chat_identity}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Chat operations for identity {chat_identity}",
                    "noDataMessage": "No chat operations found for the specified  time range and identity",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "chat_identity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-identity-chat-details"
                }
              ]
            },
            "name": "chat-identity-drill-down-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat meeting drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "chat_meeting",
                        "label": "Chat meeting ID",
                        "type": 2,
                        "description": "Choose a chat meeting ID to visualize",
                        "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct ChatThreadId\r\n| where isnotempty(ChatThreadId)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "chat-meeting-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a chat meeting ID from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_meeting",
                    "comparison": "isEqualTo"
                  },
                  "name": "chat-meeting-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and ChatThreadId == \"{chat_meeting}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Chat operations for meeting {chat_meeting}",
                    "noDataMessage": "No chat operations found for the specified time range and meeting ID",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_meeting",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-meeting-details"
                }
              ]
            },
            "name": "chat-meeting-drill-down-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Chat IP address drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "chat_ip",
                        "label": "IP address",
                        "type": 2,
                        "description": "Choose an IP address to visualize",
                        "query": "ACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct CallerIpAddress\r\n| where isnotempty(CallerIpAddress)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "chat-ip-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select an IP address from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_ip",
                    "comparison": "isEqualTo"
                  },
                  "name": "chat-ip-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSChatIncomingOperations\r\n| where TimeGenerated {time_range:query} and CallerIpAddress == \"{chat_ip}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "Chat operations for IP address {chat_ip}",
                    "noDataMessage": "No chat operations found for the specified time range and IP address",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "chat_ip",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "chat-ip-details"
                }
              ]
            },
            "name": "chat-ip-drill-down-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "chat"
      },
      "name": "chat-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The following visualizations represent data from the SMS Operational logs.\r\n\r\n**Click on any part of the pie charts below to visualize filtered logs.**"
            },
            "name": "sms-text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Outgoing Message Lengths",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize NumMessages=count() by bin(OutgoingMessageLength, 10)\r\n| order by OutgoingMessageLength asc\r\n| render columnchart ",
                    "size": 0,
                    "noDataMessage": "No SMS messages found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-outgoing-msg"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-outgoing-msg-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Incoming Message Lengths",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize NumMessages=count() by bin(IncomingMessageLength, 10)\r\n| order by IncomingMessageLength asc\r\n| render columnchart ",
                    "size": 0,
                    "noDataMessage": "No SMS messages found in the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-outgoing-msg"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-incoming-msg-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS API Results",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by ResultType\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_result",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-result-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_sms_results = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultType\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultType;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and (ResultType in (dynamic([{sms_result}])) or iff(\"Other\" in (dynamic([{sms_result}])), (ResultType in (other_sms_results)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, ResultDescription, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "SMS operations with result type {sms_result}",
                    "noDataMessage": "No SMS operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_result",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-result"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-results-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS API Result Signatures",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\", \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden\", \"\",\r\n    \"404\", \"Not Found\", \"\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Request Timeout\", \"\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Gone\", \"\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Provide Referrer Identity\", \"\",\r\n    \"430\", \"Flow Failed\", \"\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Temporarily Unavailable\", \"\",\r\n    \"481\", \"Call/Transaction Does Not Exist\", \"\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Request Terminated\", \"\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"491\", \"Request Pending\", \"\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"500\", \"Internal Server Error\", \"\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Service Unavailable\", \"\",\r\n    \"504\", \"Server Time-out\", \"\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Decline\", \"\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\",\r\n    \"2000\",\t\"Message Delivered Successfully\", \"\",\r\n    \"4000\",\t\"Message is rejected due to fraud detection\", \"Ensure you are not exceeding the maximum number of messages allowed for your number\",\r\n    \"4001\",\t\"Message is rejected due to invalid Source/From number format\", \"Ensure the To number is in E.164 format and From number format is in E.164 or Short code format\",\r\n    \"4002\",\t\"Message is rejected due to invalid Destination/To number format\", \"Ensure the To number is in E.164 format\",\r\n    \"4003\",\t\"Message failed to deliver due to unsupported destination\", \"Check if the destination you are trying to send to is supported\",\r\n    \"4004\",\t\"Message failed to deliver since Destination/To number does not exist\", \"Ensure the To number you are sending to is valid\",\r\n    \"4005\",\t\"Message is blocked by Destination carrier\", \"\",\t\r\n    \"4006\",\t\"The Destination/To number is not reachable\", \"Try re-sending the message at a later time\",\r\n    \"4007\",\t\"The Destination/To number has opted out of receiving messages from you\", \"Mark the Destination/To number as opted out so that no further message attempts are made to the number\",\r\n    \"4008\",\t\"You have exceeded the maximum number of messages allowed for your profile\", \"Ensure you are not exceeding the maximum number of messages allowed for your number or use queues to batch the messages\",\r\n    \"5000\",\t\"Message failed to deliver, Please reach out Microsoft support team for more details\", \"File a support request through the Azure portal\",\r\n    \"5001\",\t\"Message failed to deliver due to temporary unavailability of application/system\", \"\",\r\n    \"5002\",\t\"Message Delivery Timeout\", \"Try re-sending the message\",\r\n    \"9999\",\t\"Message failed to deliver due to unknown error/failure\", \"Try re-sending the message\"\r\n];\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n//| summarize count() by ResultSignature\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| summarize count() by Result//Signature\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_signature",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-results-signature"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string, Troubleshooting: string)\r\n[\r\n    \"0\", \"Success\", \"\",\r\n    \"100\", \"Trying\", \"\",\r\n    \"180\", \"Ringing\", \"\",\r\n    \"181\", \"Call Is Being Forwarded\", \"\",\r\n    \"182\", \"Queued\", \"\",\r\n    \"183\", \"Session Progress\", \"\",\r\n    \"199\", \"Early Dialog Terminated\", \"\",\r\n    \"200\", \"Success\", \"\",\r\n    \"202\", \"Accepted\", \"\",\r\n    \"204\", \"No Notification\", \"\",\r\n    \"300\", \"Multiple Choices\", \"\",\r\n    \"301\", \"Moved Permanently\", \"\",\r\n    \"302\", \"Moved Temporarily\", \"\",\r\n    \"305\", \"Use Proxy\", \"\",\r\n    \"380\", \"Alternative Service\", \"\",\r\n    \"400\", \"Bad Request\", \"\",\r\n    \"401\", \"Unauthorized\", \"\",\r\n    \"402\", \"Payment Required\", \"\",\r\n    \"403\", \"Forbidden\", \"\",\r\n    \"404\", \"Not Found\", \"\",\r\n    \"405\", \"Method Not Allowed\", \"\",\r\n    \"406\", \"Not Acceptable\", \"\",\r\n    \"407\", \"Proxy Authentication Required\", \"\",\r\n    \"408\", \"Request Timeout\", \"\",\r\n    \"409\", \"Conflict\", \"\",\r\n    \"410\", \"Gone\", \"\",\r\n    \"411\", \"Length Required\", \"\",\r\n    \"412\", \"Conditional Request Failed\", \"\",\r\n    \"413\", \"Request Entity Too Large\", \"\",\r\n    \"414\", \"Request-URI Too Large\", \"\",\r\n    \"415\", \"Unsupported Media Type\", \"\",\r\n    \"416\", \"Unsupported URI Scheme\", \"\",\r\n    \"417\", \"Unknown Resource-Priority\", \"\",\r\n    \"420\", \"Bad Extension\", \"\",\r\n    \"421\", \"Extension Required\", \"\",\r\n    \"422\", \"Session Interval Too Small\", \"\",\r\n    \"423\", \"Interval Too Brief\", \"\",\r\n    \"424\", \"Bad Location Information\", \"\",\r\n    \"428\", \"Use Identity Header\", \"\",\r\n    \"429\", \"Provide Referrer Identity\", \"\",\r\n    \"430\", \"Flow Failed\", \"\",\r\n    \"433\", \"Anonymity Disallowed\", \"\",\r\n    \"436\", \"Bad Identity-Info\", \"\",\r\n    \"437\", \"Unsupported Certificate\", \"\",\r\n    \"438\", \"Invalid Identity Header\", \"\",\r\n    \"439\", \"First Hop Lacks Outbound Support\", \"\",\r\n    \"440\", \"Max-Breadth Exceeded\", \"\",\r\n    \"469\", \"Bad Info Package\", \"\",\r\n    \"470\", \"Consent Needed\", \"\",\r\n    \"480\", \"Temporarily Unavailable\", \"\",\r\n    \"481\", \"Call/Transaction Does Not Exist\", \"\",\r\n    \"482\", \"Loop Detected\", \"\",\r\n    \"483\", \"Too Many Hops\", \"\",\r\n    \"484\", \"Address Incomplete\", \"\",\r\n    \"485\", \"Ambiguous\", \"\",\r\n    \"486\", \"Busy Here\", \"\",\r\n    \"487\", \"Request Terminated\", \"\",\r\n    \"488\", \"Not Acceptable Here\", \"\",\r\n    \"489\", \"Bad Event\", \"\",\r\n    \"491\", \"Request Pending\", \"\",\r\n    \"493\", \"Undecipherable\", \"\",\r\n    \"494\", \"Security Agreement Required\", \"\",\r\n    \"500\", \"Internal Server Error\", \"\",\r\n    \"501\", \"Not Implemented\", \"\",\r\n    \"502\", \"Bad Gateway\", \"\",\r\n    \"503\", \"Service Unavailable\", \"\",\r\n    \"504\", \"Server Time-out\", \"\",\r\n    \"505\", \"Version Not Supported\", \"\",\r\n    \"513\", \"Message Too Large\", \"\",\r\n    \"555\", \"Push Notification Service Not Supported\", \"\",\r\n    \"580\", \"Precondition Failure\", \"\",\r\n    \"600\", \"Busy Everywhere\", \"\",\r\n    \"603\", \"Decline\", \"\",\r\n    \"604\", \"Does Not Exist Anywhere\", \"\",\r\n    \"606\", \"Not Acceptable\", \"\",\r\n    \"607\", \"Unwanted\", \"\",\r\n    \"608\", \"Rejected\", \"\",\r\n    \"2000\",\t\"Message Delivered Successfully\", \"\",\r\n    \"4000\",\t\"Message is rejected due to fraud detection\", \"Ensure you are not exceeding the maximum number of messages allowed for your number\",\r\n    \"4001\",\t\"Message is rejected due to invalid Source/From number format\", \"Ensure the To number is in E.164 format and From number format is in E.164 or Short code format\",\r\n    \"4002\",\t\"Message is rejected due to invalid Destination/To number format\", \"Ensure the To number is in E.164 format\",\r\n    \"4003\",\t\"Message failed to deliver due to unsupported destination\", \"Check if the destination you are trying to send to is supported\",\r\n    \"4004\",\t\"Message failed to deliver since Destination/To number does not exist\", \"Ensure the To number you are sending to is valid\",\r\n    \"4005\",\t\"Message is blocked by Destination carrier\", \"\",\t\r\n    \"4006\",\t\"The Destination/To number is not reachable\", \"Try re-sending the message at a later time\",\r\n    \"4007\",\t\"The Destination/To number has opted out of receiving messages from you\", \"Mark the Destination/To number as opted out so that no further message attempts are made to the number\",\r\n    \"4008\",\t\"You have exceeded the maximum number of messages allowed for your profile\", \"Ensure you are not exceeding the maximum number of messages allowed for your number or use queues to batch the messages\",\r\n    \"5000\",\t\"Message failed to deliver, Please reach out Microsoft support team for more details\", \"File a support request through the Azure portal\",\r\n    \"5001\",\t\"Message failed to deliver due to temporary unavailability of application/system\", \"\",\r\n    \"5002\",\t\"Message Delivery Timeout\", \"Try re-sending the message\",\r\n    \"9999\",\t\"Message failed to deliver due to unknown error/failure\", \"Try re-sending the message\"\r\n];\r\n\r\nlet other_sms_signature = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by ResultSignature\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project ResultSignature;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} //and (ResultSignature in (dynamic([{sms_signature}])) or iff(\"Other\" in (dynamic([{sms_signature}])), (ResultSignature in (other_sms_signature)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| where (Result in (dynamic([{sms_signature}])) or iff(\"Other\" in (dynamic([{sms_signature}])), (ResultSignature in (other_sms_signature)), false))\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, ResultDescription, Troubleshooting, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "SMS operations with result signature {sms_signature}",
                    "noDataMessage": "No SMS operations found for the specified time range and result signature",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_signature",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-signature"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-signatures-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Operation Names",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationName\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_operation",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-operation-names"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_sms_operation = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationName\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationName;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationName in (dynamic([{sms_operation}])) or iff(\"Other\" in (dynamic([{sms_operation}])), (OperationName in (other_sms_operation)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, PhoneNumber, CallerIpAddress, OutgoingMessageLength, IncomingMessageLength, DeliveryAttempts, Method, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "SMS operations with operation name {sms_operation}",
                    "noDataMessage": "No SMS operations found for the specified time range and operation name",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_operation",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-operation"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-operation-names-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Operation Versions",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationVersion\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_version",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "showPin": false,
                  "name": "sms-operation-versions"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_sms_version = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by OperationVersion\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project OperationVersion;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and (OperationVersion in (dynamic([{sms_version}])) or iff(\"Other\" in (dynamic([{sms_version}])), (OperationVersion in (other_sms_version)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, PhoneNumber, CallerIpAddress, OutgoingMessageLength, IncomingMessageLength, DeliveryAttempts, Method, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "SMS operations with operation version {sms_version}",
                    "noDataMessage": "No SMS operations found for the specified time range and operation version",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_version",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-version"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-operation-versions-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Method",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by Method\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_method",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-operation-names"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_sms_method = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by Method\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project Method;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and (Method in (dynamic([{sms_method}])) or iff(\"Other\" in (dynamic([{sms_method}])), (Method in (other_sms_method)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, PhoneNumber, CallerIpAddress, OutgoingMessageLength, IncomingMessageLength, DeliveryAttempts, Method, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "SMS operations with {sms_method} method",
                    "noDataMessage": "No SMS operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_method",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-method"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-method-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS Delivery Attempts",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize NumMessages=count() by tostring(DeliveryAttempts)\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No SMS operations found in the specified time range",
                    "showRefreshButton": true,
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "sms_attempts",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-delivery-attempts"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nlet other_sms_attempts = ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize operation_count=count() by DeliveryAttempts\r\n| order by operation_count desc\r\n| extend Rank=row_number()\r\n| where Rank > 5\r\n| project DeliveryAttempts;\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and (DeliveryAttempts in (dynamic([{sms_attempts}])) or iff(\"Other\" in (dynamic([{sms_attempts}])), (DeliveryAttempts in (other_sms_attempts)), false))\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, PhoneNumber, Method, Level, Result, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "SMS operations with {sms_attempts} delivery attempts",
                    "noDataMessage": "No SMS operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_attempts",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-by-attempts"
                }
              ]
            },
            "customWidth": "50",
            "name": "sms-delivery-attempts-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS phone drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "sms_phone",
                        "label": "Phone number",
                        "type": 2,
                        "description": "Choose an phone number to visualize",
                        "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct PhoneNumber\r\n| where isnotempty(PhoneNumber)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-phone-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a phone number from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_phone",
                    "comparison": "isEqualTo"
                  },
                  "name": "sms-phone-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and PhoneNumber == \"{sms_phone}\"\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, OutgoingMessageLength, IncomingMessageLength, DeliveryAttempts, CallerIpAddress, Method, Level, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "SMS operations for phone number {sms_phone}",
                    "noDataMessage": "No SMS operations found for the specified time range and phone number",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_phone",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-phone-details"
                }
              ]
            },
            "name": "sms-phone-drill-down-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SMS IP address drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "sms_ip",
                        "label": "IP address",
                        "type": 2,
                        "description": "Choose an phone number to visualize",
                        "query": "ACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct CallerIpAddress\r\n| where isnotempty(CallerIpAddress)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "sms-ip-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select an IP address from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_ip",
                    "comparison": "isEqualTo"
                  },
                  "name": "sms-ip-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesSMS =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSSMSIncomingOperations\r\n| where TimeGenerated {time_range:query} and CallerIpAddress == \"{sms_ip}\"\r\n| join kind=leftouter SIPCodesSMS on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, OutgoingMessageLength, IncomingMessageLength, DeliveryAttempts, PhoneNumber, Method, Level, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "SMS operations for IP address {sms_ip}",
                    "noDataMessage": "No SMS operations found for the specified time range and IP address",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "sms_ip",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "sms-ip-details"
                }
              ]
            },
            "name": "sms-ip-drill-down-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "sms"
      },
      "name": "SMS-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The following visualizations represent data from the TURN logs."
            },
            "name": "auth-text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "TURN Results",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by ResultType\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No TURN operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "turn_result",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-result-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations \r\n| where TimeGenerated {time_range:query} and ResultType in ({turn_result})\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result,  OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "TURN operations with result type {turn_result}",
                    "noDataMessage": "No TURN operations found for the specified time range and result type",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_result",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-by-result"
                }
              ]
            },
            "customWidth": "50",
            "name": "turn-results-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "TURN Levels",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by Level\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No TURN operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "turn_level",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-level"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query} and Level in ({turn_level})\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result,  OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "TURN with result level {turn_level}",
                    "noDataMessage": "No TURN operations found for the specified time range and result signature",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_level",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-by-level"
                }
              ]
            },
            "customWidth": "50",
            "name": "turn-level-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "TURN Operation Names",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by OperationName\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No TURN operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "turn_operation",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-operation-names"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query} and OperationName in ({turn_operation})\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result,  Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "TURN operations with operation name {turn_operation}",
                    "noDataMessage": "No TURN operations found for the specified time range and operation name",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_operation",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-by-operation"
                }
              ]
            },
            "customWidth": "50",
            "name": "Turn-operation-names-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "TURN Categories",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by Category\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No TURN operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "turn_category",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-category"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query} and Category in ({turn_category})\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Result, Level, OperationDate, OperationTime, DurationMs",
                    "size": 0,
                    "title": "TURN operations with category {turn_category}",
                    "noDataMessage": "No TURN operations found for the specified time range and operation version",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_category",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-by-category"
                }
              ]
            },
            "customWidth": "50",
            "name": "turn-category-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Identity drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "turn_identity",
                        "label": "Identity",
                        "type": 2,
                        "description": "Choose an identity to visualize",
                        "query": "ACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct Identity\r\n| where isnotempty(Identity)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-identity-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select an identity from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "identity",
                    "comparison": "isEqualTo"
                  },
                  "name": "identity-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations\r\n| where TimeGenerated {time_range:query} and Identity == \"{turn_identity}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "TURN operations for identity {turn_identity}",
                    "noDataMessage": "No TURN operations found for the specified  time range and identity",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "turn_identity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-identity-details"
                }
              ]
            },
            "name": "turn-identity-drill-down-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Route Type drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "turn_route_type",
                        "label": "Route Type",
                        "type": 2,
                        "description": "Choose a chat meeting ID to visualize",
                        "query": "ACSNetworkTraversalIncomingOperations \r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct RouteType\r\n| where isnotempty(RouteType)",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "turn-route-parameters"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a Route Type from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_route_type",
                    "comparison": "isEqualTo"
                  },
                  "name": "turn-route-type-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let SIPCodesChat =  datatable(ResultSignature: string, SIPCode: string)\r\n[\r\n    \"0\", \"Success\",\r\n    \"100\", \"Trying\",\r\n    \"180\", \"Ringing\",\r\n    \"181\", \"Call Is Being Forwarded\",\r\n    \"182\", \"Queued\",\r\n    \"183\", \"Session Progress\",\r\n    \"199\", \"Early Dialog Terminated\",\r\n    \"200\", \"Success\",\r\n    \"202\", \"Accepted\",\r\n    \"204\", \"No Notification\",\r\n    \"300\", \"Multiple Choices\",\r\n    \"301\", \"Moved Permanently\",\r\n    \"302\", \"Moved Temporarily\",\r\n    \"305\", \"Use Proxy\",\r\n    \"380\", \"Alternative Service\",\r\n    \"400\", \"Bad Request\",\r\n    \"401\", \"Unauthorized\",\r\n    \"402\", \"Payment Required\",\r\n    \"403\", \"Forbidden\",\r\n    \"404\", \"Not Found\",\r\n    \"405\", \"Method Not Allowed\",\r\n    \"406\", \"Not Acceptable\",\r\n    \"407\", \"Proxy Authentication Required\",\r\n    \"408\", \"Request Timeout\",\r\n    \"409\", \"Conflict\",\r\n    \"410\", \"Gone\",\r\n    \"411\", \"Length Required\",\r\n    \"412\", \"Conditional Request Failed\",\r\n    \"413\", \"Request Entity Too Large\",\r\n    \"414\", \"Request-URI Too Large\",\r\n    \"415\", \"Unsupported Media Type\",\r\n    \"416\", \"Unsupported URI Scheme\",\r\n    \"417\", \"Unknown Resource-Priority\",\r\n    \"420\", \"Bad Extension\",\r\n    \"421\", \"Extension Required\",\r\n    \"422\", \"Session Interval Too Small\",\r\n    \"423\", \"Interval Too Brief\",\r\n    \"424\", \"Bad Location Information\",\r\n    \"428\", \"Use Identity Header\",\r\n    \"429\", \"Provide Referrer Identity\",\r\n    \"430\", \"Flow Failed\",\r\n    \"433\", \"Anonymity Disallowed\",\r\n    \"436\", \"Bad Identity-Info\",\r\n    \"437\", \"Unsupported Certificate\",\r\n    \"438\", \"Invalid Identity Header\",\r\n    \"439\", \"First Hop Lacks Outbound Support\",\r\n    \"440\", \"Max-Breadth Exceeded\",\r\n    \"469\", \"Bad Info Package\",\r\n    \"470\", \"Consent Needed\",\r\n    \"480\", \"Temporarily Unavailable\",\r\n    \"481\", \"Call/Transaction Does Not Exist\",\r\n    \"482\", \"Loop Detected\",\r\n    \"483\", \"Too Many Hops\",\r\n    \"484\", \"Address Incomplete\",\r\n    \"485\", \"Ambiguous\",\r\n    \"486\", \"Busy Here\",\r\n    \"487\", \"Request Terminated\",\r\n    \"488\", \"Not Acceptable Here\",\r\n    \"489\", \"Bad Event\",\r\n    \"491\", \"Request Pending\",\r\n    \"493\", \"Undecipherable\",\r\n    \"494\", \"Security Agreement Required\",\r\n    \"500\", \"Internal Server Error\",\r\n    \"501\", \"Not Implemented\",\r\n    \"502\", \"Bad Gateway\",\r\n    \"503\", \"Service Unavailable\",\r\n    \"504\", \"Server Time-out\",\r\n    \"505\", \"Version Not Supported\",\r\n    \"513\", \"Message Too Large\",\r\n    \"555\", \"Push Notification Service Not Supported\",\r\n    \"580\", \"Precondition Failure\",\r\n    \"600\", \"Busy Everywhere\",\r\n    \"603\", \"Decline\",\r\n    \"604\", \"Does Not Exist Anywhere\",\r\n    \"606\", \"Not Acceptable\",\r\n    \"607\", \"Unwanted\",\r\n    \"608\", \"Rejected\",\r\n];\r\n\r\nACSNetworkTraversalIncomingOperations \r\n| where TimeGenerated {time_range:query} and RouteType == \"{turn_route_type}\"\r\n| join kind=leftouter SIPCodesChat on ResultSignature\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| extend ResultIcon=iff(ResultType == \"Succeeded\", \"✔️\", \"❌\")\r\n| extend Result=strcat(ResultIcon, \" \", ResultSignature, \": \", SIPCode)\r\n| order by TimeGenerated\r\n| project OperationName, Level, Result, OperationDate, OperationTime, DurationMs\r\n",
                    "size": 0,
                    "title": "TURN operations for Route Type {turn_route_type}",
                    "noDataMessage": "No TURN operations found for the specified time range and meeting ID",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "turn_route_type",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "turn-route-type-details"
                }
              ]
            },
            "name": "Route-type-drill-down-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "turn"
      },
      "name": "Turn-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "The following visualizations represent data from the Email Operational logs."
            },
            "name": "email-text"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email API Results",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailStatusUpdateOperational\r\n| where TimeGenerated {time_range:query}\r\n| where isnotempty(RecipientId)\r\n| summarize count() by DeliveryStatus\r\n| render piechart",
                    "size": 0,
                    "noDataMessage": "No email operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "email_status",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "email-status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailStatusUpdateOperational\r\n| where isnotempty(RecipientId)\r\n| where TimeGenerated {time_range:query}\r\n| where DeliveryStatus in ({email_status})\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| project OperationDate, DeliveryStatus, CorrelationId\r\n| join kind=leftouter ACSEmailSendMailOperational on CorrelationId\r\n| project OperationDate, CorrelationId, DeliveryStatus, ToRecipientsCount, CcRecipientsCount, BccRecipientsCount, AttachmentsCount, Size",
                    "size": 0,
                    "title": "Email with Delivery Status {email_status}",
                    "noDataMessage": "No email operations found for the specified time range and status",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      },
                      "sortBy": [
                        {
                          "itemKey": "$gen_count_$gen_group_0",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_count_$gen_group_0",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "email_status",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "email-by-status"
                }
              ]
            },
            "customWidth": "50",
            "name": "email-status-group "
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email Sizes",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailSendMailOperational\r\n| where TimeGenerated {time_range:query}\r\n| extend time_span = floor(TimeGenerated, {time_granularity})\r\n| summarize emails=sum(Size) by time_span\r\n| render barchart",
                    "size": 0,
                    "noDataMessage": "No email operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "email_recipients",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "email-recipients"
                }
              ]
            },
            "customWidth": "50",
            "name": "email-size2-group "
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email Count by Size",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailSendMailOperational\r\n| where TimeGenerated {time_range:query}\r\n| summarize count() by bin(Size, 0.0005)\r\n| render columnchart ",
                    "size": 0,
                    "noDataMessage": "No email operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "email_recipients",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "email-recipients"
                }
              ]
            },
            "customWidth": "50",
            "name": "email-size-group "
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email Recipient Count (To, Cc and Bcc)",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailSendMailOperational\r\n| where TimeGenerated {time_range:query}\r\n| extend Recipients = ToRecipientsCount + CcRecipientsCount + BccRecipientsCount\r\n| summarize count() by bin(Recipients, 1)\r\n| render columnchart ",
                    "size": 0,
                    "noDataMessage": "No email operations found in the specified time range",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "series",
                        "parameterName": "email_recipients",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "email-recipients"
                }
              ]
            },
            "customWidth": "50",
            "name": "email-recipient-count-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email Count",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailSendMailOperational\r\n| where TimeGenerated {time_range:query}\r\n| extend time_span = floor(TimeGenerated, {time_granularity})\r\n| summarize emails=count() by time_span\r\n| render barchart\r\n\r\n",
                    "size": 0,
                    "noDataMessage": "No email operations found in the specified time range",
                    "exportedParameters": [
                      {
                        "fieldName": "",
                        "parameterName": "email_result",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "x",
                        "parameterName": "timebin",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    
                    "sortBy": []
                  },
                  "name": "email-result-types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let email_results = todynamic('{email_result}');\r\nACSEmailSendMailOperational\r\n| where TimeGenerated between (todatetime(email_results.x) .. {time_granularity})\r\n\r\n\r\n\r\n\r\n",
                    "size": 0,
                    "title": "Email within selected TimeBin",
                    "noDataMessage": "No email operations found for the specified time range",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      }
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "email_result",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "email-by-date"
                }
              ]
            },
            "customWidth": "100",
            "name": "email-results-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email Delivery Status drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "email_corrId",
                        "label": "CorrelationId",
                        "type": 2,
                        "description": "Choose a delivery status to visualize",
                        "query": "ACSEmailStatusUpdateOperational\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct CorrelationId",
                        "value": "d58b6b20-dbef-4cd2-9ac0-40e233295688",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a delivery status from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "email_corrId",
                    "comparison": "isEqualTo"
                  },
                  "name": "correlationId-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailStatusUpdateOperational\r\n| where TimeGenerated {time_range:query} and CorrelationId == \"{email_corrId}\"\r\n| join kind = leftouter (ACSEmailSendMailOperational | project CorrelationId, AttachmentsCount, Size) on CorrelationId\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| project-away CorrelationId1\r\n\r\n",
                    "size": 0,
                    "title": "Email operations for CorrelationId {email_corrId}",
                    "noDataMessage": "No email operations found for the specified  time range and correlationId",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      },
                      "sortBy": [
                        {
                          "itemKey": "$gen_count_$gen_group_0",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_count_$gen_group_0",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "email_corrId",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "email-corrId-details"
                }
              ]
            },
            "customWidth": "100",
            "name": "email-delivery-status-drill-down-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Email RecipientId drill-down",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    
                    "parameters": [
                      {
                        "id": "0c0b56fd-ffd9-4761-b14e-c916660f9ccc",
                        "version": "KqlParameterItem/1.0",
                        "name": "email_recipientId",
                        "label": "RecipientId",
                        "type": 2,
                        "description": "Choose a delivery status to visualize",
                        "query": "ACSEmailStatusUpdateOperational\r\n| where TimeGenerated {time_range:query}\r\n| order by TimeGenerated\r\n| distinct RecipientId\r\n",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.communication/communicationservices"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Select a RecipientId from the drop-down menu to display its associated data**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "email_recipientId",
                    "comparison": "isEqualTo"
                  },
                  "name": "correlationId-drilldown-info"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ACSEmailStatusUpdateOperational\r\n| where TimeGenerated {time_range:query} and RecipientId == \"{email_recipientId}\"\r\n| join kind = leftouter (ACSEmailSendMailOperational | project CorrelationId, AttachmentsCount, Size) on CorrelationId\r\n| extend OperationDate=strcat(\"📅\", format_datetime(TimeGenerated, 'MM/dd/y'))\r\n| extend OperationTime=format_datetime(TimeGenerated, 'hh:mm:ss')\r\n| project-away CorrelationId1\r\n",
                    "size": 0,
                    "title": "Email operations for RecipientId {email_recipientId}",
                    "noDataMessage": "No email operations found for the specified  time range and RecipientId",
                    "queryType": 0,
                    "resourceType": "microsoft.communication/communicationservices",
                    
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationDate",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "OperationTime",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "OperationDate"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "OperationTime"
                      },
                      "sortBy": [
                        {
                          "itemKey": "$gen_count_$gen_group_0",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_count_$gen_group_0",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "email_recipientId",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "email-recipientId-details"
                }
              ]
            },
            "customWidth": "100",
            "name": "email-recipientid-drill-down-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "email"
      },
      "name": "Email-group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
