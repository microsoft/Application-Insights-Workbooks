{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "version": "KqlParameterItem/1.0",
            "name": "Resource",
            "label": "ADX-Cluster",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.kusto/clusters": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.kusto/clusters"
      },
      "name": "parameters - 0",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "version": "KqlParameterItem/1.0",
            "name": "TableLogs",
            "type": 1,
            "isRequired": true,
            "query": "let hasNonEmptyTable = (T:string, T2:string) \r\n{ \r\n   toscalar( \r\n   union isfuzzy=true \r\n   ( table(T) | where TimeGenerated > ago(30d) | take 1 | count as Count ),\r\n   ( table(T2) | take 1 | count as Count),\r\n   (print Count=0) \r\n   | summarize sum(Count) \r\n   ) > 0\r\n};\r\nlet TableName = 'ADXQuery';\r\nlet TableName2 = 'ADXTableUsageStatistics';\r\nprint  IsPresent=iif(hasNonEmptyTable(TableName,TableName2 ), \"present\", \"not present\")",
            "crossComponentResources": [
              "{Resource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.kusto/clusters"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "Stats",
            "type": 1,
            "query": "ADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| summarize percentiles(TableCount, 50, 90), \r\npercentiles(ScannedRowsCount, 50, 90),\r\npercentiles(TotalExtentsCount, 50, 90),\r\npercentiles(ScannedExtentsCount, 50, 90),\r\npercentiles(TotalRowsCount, 50, 90),\r\npercentiles(TotalCPU, 50, 90),\r\npercentiles(MemoryPeak, 50, 90),\r\npercentiles(Duration, 50, 90),\r\npercentiles(CacheMemoryHits, 50, 90),\r\npercentiles(CacheMemoryMisses, 50, 90),\r\npercentiles(CacheDiskHits, 50, 90),\r\npercentiles(CacheDiskMisses, 50, 90),\r\npercentiles(CacheShardsHotHits, 50, 90),\r\npercentiles(CacheShardsHotMisses, 50, 90),\r\npercentiles(CacheShardsColdHits, 50, 90),\r\npercentiles(CacheShardsColdMisses, 50, 90),\r\npercentiles(CacheShardsBypassBytes, 50, 90),\r\npercentiles(TableCount, 50, 90)\r\n| project pack_all()",
            "queryType": 0,
            "resourceType": "microsoft.kusto/clusters"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.kusto/clusters"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "2"
      },
      "name": "HiddenParametersBeforeTopParemeters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "This section provides additional monitoring coverage that is based on platform logs (diagnostic logs).</br></br>If you have not activated additional monitoring, you must enable the **ADXQuery** and **ADXTableUsageStatistics** platform logs and send them to a Log Analytics workspace. [Learn more](https://docs.microsoft.com/en-us/azure/data-explorer/using-diagnostic-logs?tabs=commands-and-queries#set-up-diagnostic-logs-for-an-azure-data-explorer-cluster)",
              "style": "upsell"
            },
            "customWidth": "60",
            "name": "text - 2"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "cellValue": "{Resource}",
                  "linkTarget": "Resource",
                  "linkLabel": "Configure Logs for Monitoring >",
                  "subTarget": "diagnostics",
                  "style": "primary"
                }
              ]
            },
            "customWidth": "60",
            "name": "links - 8"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TableLogs",
        "comparison": "isEqualTo",
        "value": "not present"
      },
      "name": "Onboarding Message - Commands"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time range",
                  "type": 4,
                  "isRequired": true,
                  "isGlobal": true,
                  "value": {
                    "durationMs": 604800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.kusto/clusters"
            },
            "name": "TopParameters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "IsScoreValidTimeRange",
                  "type": 1,
                  "query": "print todatetime('{TimeRange:endISO}') - todatetime('{TimeRange:startISO}') >= 7d",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.kusto/clusters"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.kusto/clusters"
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "HiddenParametersAfterTopParemeters"
          },
          {
            "type": 1,
            "content": {
              "json": "#### Guide for using this tab\r\nSelect a time window to investigate the root cause for the error spikes. The time window should contain both errors and a baseline to compare to errors to.",
              "style": "info"
            },
            "name": "Guide for using this tab"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let dt = 1h;\r\nlet testDuration = 1d;\r\nlet latency = 5m;\r\nlet endTime = datetime({TimeRange:endISO}) - latency;\r\nlet startTime = datetime({TimeRange:startISO});\r\nADXQuery\r\n   | where State == \"Completed\" or State == \"Failed\"\r\n   | where FailureReason !has \"semantic\"\r\n   | where FailureReason !has \"syntax\"\r\n   | where FailureReason !has \"not authorized\"\r\n   | where FailureReason !has \"of kind 'Database' was not found.\"\r\n   | where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n   | make-series QueryErrorRate=1.0*countif(State == \"Failed\")/count() on TimeGenerated from startTime to endTime step dt",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "Server query error rate",
              "color": "redBright",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "timeBrushParameterName": "ServerQueryErrorTimeRange",
              "timeBrushExportOnlyWhenBrushed": true,
              "queryType": 0,
              "resourceType": "microsoft.kusto/clusters",
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "name": "Server query error rate chart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Time parameters\r\nlet dt = 1h;\r\nlet testDuration = 1d;\r\nlet latency = 5m;\r\nlet lookback = 14d;\r\nlet endTime = datetime({TimeRange:endISO}) - latency;\r\nlet startTime = datetime({TimeRange:startISO});\r\n// series_decompose parameters\r\nlet seasonality = -1;\r\nlet seasonalityThreshold = 0.4;\r\nlet trend = 'avg';\r\nlet testPoints = toint(testDuration/dt);\r\n// Weights for final score - should sum-up to 1\r\nlet errorRateDifferenceScoreWeight = 0.3;\r\nlet absoluteErrorRateWeight = 0.05;\r\nlet pValueScoreWeight = 0.65;\r\n// Score thresholds\r\nlet healthyClustersScoreThreshold = 0.15;\r\nlet healthyClustersSloThreshold = 0.99;\r\n// Coefficients\r\nlet healthyClustersScoreCoefficient = 0.01;\r\nlet scoreTransformationCoefficient = 5;\r\nlet pValueHealthyCoefficient = 20;\r\n// Welch test parameters\r\nlet welchTestAlpha = 0.001;\r\nlet series = ADXQuery\r\n   | where State == \"Completed\" or State == \"Failed\"\r\n   | where FailureReason !has \"semantic\"\r\n   | where FailureReason !has \"syntax\"\r\n   | where FailureReason !has \"not authorized\"\r\n   | where FailureReason !has \"of kind 'Database' was not found.\"\r\n   | where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n   | make-series QueryErrorsRate=(countif(State == \"Failed\")/(count()+1.0)) on TimeGenerated from startTime to endTime step dt;\r\nlet SloScore = toscalar(series\r\n   | extend series_decompose(QueryErrorsRate, seasonality, trend, testPoints, seasonalityThreshold)\r\n   | project TimeGenerated, QueryErrorsRate, series_decompose_QueryErrorsRate_residual\r\n   | mv-expand QueryErrorsRate to typeof(double), series_decompose_QueryErrorsRate_residual to typeof(double), TimeGenerated to typeof(datetime)\r\n   | extend isTest = TimeGenerated >= (endTime - testDuration)\r\n   // Calculating series stats (avg, variance, count) for welch test devide into the train group and the test group\r\n   | summarize avgTrain = avgif(series_decompose_QueryErrorsRate_residual, not(isTest)), \r\n   varianceTrain = varianceif(series_decompose_QueryErrorsRate_residual, not(isTest)), \r\n   countTrain = countif(not(isTest)),\r\n   avgTest = avgif(series_decompose_QueryErrorsRate_residual, isTest), \r\n   varianceTest = varianceif(series_decompose_QueryErrorsRate_residual, isTest), \r\n   countTest = countif(isTest),\r\n   avgErrorRateTrain = avgif(QueryErrorsRate, not(isTest)), \r\n   avgErrorRateTest = avgif(QueryErrorsRate, isTest)\r\n   // Calculating the score basing on a weighted average over the following features:\r\n   // 1. Average error rate difference (between the train set and the test set)\r\n   // 2. The p-value - given by welch test\r\n   | extend pValue = welch_test(avgTrain, varianceTrain, countTrain, avgTest, varianceTest, countTest)\r\n   | extend avgErrorRateDiff = avgErrorRateTest - avgErrorRateTrain\r\n   | extend avgErrorRateScore = iff(avgErrorRateTest <= avgErrorRateTrain, \r\n       toreal(1), \r\n       1- avgErrorRateDiff / (avgErrorRateTest + avgErrorRateTrain))\r\n   | extend pValueScore = iff(isnan(pValue), \r\n   toreal(1), min_of(iff(avgTest <= avgTrain,  \r\n   toreal(1), iff(pValue >= welchTestAlpha, pValue * pValueHealthyCoefficient, pValue)), 1))\r\n   | extend absoluteErrorRateWeightScore = 1 - avgErrorRateTest\r\n   | extend score = errorRateDifferenceScoreWeight*avgErrorRateScore + pValueScoreWeight*pValueScore +absoluteErrorRateWeight*absoluteErrorRateWeightScore\r\n   // Transforming the score to the reqeusted range (at least 0.99 for healthy clusters)\r\n   | extend SloScore = iff(score < healthyClustersScoreThreshold, \r\n   max_of(0, healthyClustersSloThreshold - scoreTransformationCoefficient*(healthyClustersScoreThreshold - score)), healthyClustersSloThreshold + healthyClustersScoreCoefficient*score)\r\n   | project SloScore = SloScore*100);\r\nprint SloScore=iff(isnan(SloScore), 100, toint(SloScore))\r\n| extend text = iff(SloScore > 99, \"Your query error rate in the last day is lower compared to the past usage\", \"Your query error rate in the last day is higher compared to the past usage\")",
              "size": 4,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.kusto/clusters",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SloScore",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "<",
                        "thresholdValue": "99",
                        "representation": "failed",
                        "text": "Last day score: {0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "Last day score: {0}{1}"
                      }
                    ]
                  }
                },
                "leftContent": {
                  "columnMatch": "text",
                  "formatter": 1
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "conditionalVisibility": {
              "parameterName": "IsScoreValidTimeRange",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "score query"
          },
          {
            "type": 1,
            "content": {
              "json": "You can get the score of the last day usage by setting the time range parameter to be equal or longer than 7 days.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "IsScoreValidTimeRange",
              "comparison": "isNotEqualTo",
              "value": "true"
            },
            "name": "ScoreNotVisibleExplanation"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "cellValue": "CompareCategory",
                        "linkTarget": "parameter",
                        "linkLabel": "Compare failed queries versus completed queries",
                        "subTarget": "CompareByStatus",
                        "postText": "",
                        "style": "link"
                      },
                      {
                        "cellValue": "CompareCategory",
                        "linkTarget": "parameter",
                        "linkLabel": "Compare suceeded and failed queries in two different time windows",
                        "subTarget": "CompareBySelection",
                        "postText": "",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "Comparison tabs"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Server Query Error Rate - Selected Time Window Chart",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "In this chart you can view the time window you have selected. Select a time range with errors to compare it with the unselected time."
                        },
                        "name": "text - 5 - Copy",
                        "styleSettings": {
                          "margin": "0px 20px 0px 0px"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let dt = 1h;\r\nlet testDuration = 1d;\r\nlet latency = 5m;\r\nlet lookback = 14d;\r\nlet endTime = datetime({ServerQueryErrorTimeRange:endISO}) - latency;\r\nlet startTime = datetime({ServerQueryErrorTimeRange:startISO});\r\nADXQuery\r\n   | where State == \"Completed\" or State == \"Failed\"\r\n   | where FailureReason !has \"semantic\"\r\n   | where FailureReason !has \"syntax\"\r\n   | where FailureReason !has \"not authorized\"\r\n   | where FailureReason !has \"of kind 'Database' was not found.\"\r\n   | where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n   | make-series QueryErrorRate=1.0*countif(State == \"Failed\")/count() on TimeGenerated from startTime to endTime step dt",
                          "size": 0,
                          "aggregation": 3,
                          "showAnalytics": true,
                          "color": "redBright",
                          "noDataMessage": "You have no server errors in the last 14 days",
                          "noDataMessageStyle": 3,
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "ServerQueryErrorTimeRange",
                          "timeBrushParameterName": "SelectedErrors",
                          "timeBrushExportOnlyWhenBrushed": true,
                          "queryType": 0,
                          "resourceType": "microsoft.kusto/clusters",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "visualization": "timechart",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "good",
                                "formatter": 19,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              }
                            ]
                          },
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "QueryErrors",
                                "color": "redBright"
                              },
                              {
                                "seriesName": "QueryCount",
                                "color": "blue"
                              }
                            ]
                          }
                        },
                        "name": "Server Query Error Rate - Selected Time Window Chart",
                        "styleSettings": {
                          "margin": "0px 20px 0px 0px",
                          "padding": "0"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "In the tables below we compare the patterns that appear in queries that were used in the selected time window in the chart above with the patterns that appear in the unselected time window (which will be considered as baseline). You can view the patterns' count and percentage in each category: selected and unselected queries. This may be helpful finding patterns that are the root cause for the failures. \r\n\r\n\r\n💡 Use the filters below to filter the chart and tables result (DatabaseName, TableName, ApplicationName, User and WorkloadGroup have values that only appear in the time window you have selected)."
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Selected time window vs non selected queries - Explanation"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "DatabaseName",
                              "type": 2,
                              "query": "ADXQuery\r\n| distinct DatabaseName",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "SelectedErrors",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableName",
                              "type": 2,
                              "query": "ADXQuery\r\n| where DatabaseName == \"{DatabaseName}\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| distinct TableName",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "SelectedErrors",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ApplicationName",
                              "type": 2,
                              "query": "ADXQuery\r\n| distinct ApplicationName",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "SelectedErrors",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "User",
                              "type": 2,
                              "query": "ADXQuery\r\n| distinct User",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "SelectedErrors",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "WorkloadGroup",
                              "type": 2,
                              "query": "ADXQuery\r\n| distinct WorkloadGroup",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "SelectedErrors",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "MemoryPeak",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TotalCPU",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "Duration",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ScannedExtentsCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ScannedRowsCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ExtentsMinDataScannedTime",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ExtentsMaxDataScannedTime",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableMinCreatedOn",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableMaxCreatedOn",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheMemoryHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheMemoryMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheDiskHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheDiskMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsHotHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsHotMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsColdHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsColdMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsBypassBytes",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.kusto/clusters"
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Selected time window vs non selected queries - parameters"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Top users and apps in selected time window",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this chart you can view the top users and applications that had server query failures in the selected time range in the chart above.\r\n\r\n"
                              },
                              "name": "Top users and apps in selected time window text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away FailureReason, Text, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend UserOrApp = iff(Principal startswith \"aadapp=\", ApplicationName, User)\r\n| where State == \"Failed\"\r\n| summarize count() by UserOrApp",
                                "size": 1,
                                "showAnalytics": true,
                                "noDataMessage": "Nor users or applications were found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "SelectedErrors",
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "visualization": "piechart"
                              },
                              "conditionalVisibility": {
                                "parameterName": "SelectedErrors",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "Top users and apps in selected time window chart"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Top users and apps in selected time window group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Failure reason patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view failure reason patterns which are more likely to appear in queries in the selcted time, compared to the queries which were used in the time which wasn't selected. The asterix ('*') character repesents wildcards.\r\n"
                              },
                              "name": "Failure reason patterns selected window text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away Text, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend IsTest = TimeGenerated {SelectedErrors}\r\n| evaluate diffpatterns_text(FailureReason, IsTest, 5, 0.05, 100)\r\n| where Percent_of_True >= Percent_of_False\r\n| extend PercentDiff = Percent_of_True - Percent_of_False\r\n| where PercentDiff > 0\r\n| top 20 by PercentDiff\r\n| order by PercentDiff\r\n| project-away PercentDiff\r\n| project-reorder Pattern, Percent_of_True, Count_of_True\r\n| project-rename FailureReasonPattern=Pattern",
                                "size": 3,
                                "showAnalytics": true,
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "SelectedSpikeWindow",
                                    "parameterName": "SelectedSpikeWindow",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimeRange",
                                    "parameterName": "SelectedWindowPatternTimeRange",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimestamp",
                                    "parameterName": "SelectedWindowPatternTimestamp",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "FailureReasonPattern",
                                    "parameterName": "SelectedWindowFailureReasonPattern",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "FailureReasonPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Percent_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Percent_of_True\"]% of selected, [\"Percent_of_False\"]% of baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "Percent_of_True",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "Percent_of_False",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Count_of_True\"] selected, [\"Count_of_False\"] baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "Count_of_True",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "Count_of_False",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Percent_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimeRange",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedSpikeWindow",
                                      "formatter": 5
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "FailureReasonPattern",
                                      "label": "Pattern"
                                    },
                                    {
                                      "columnId": "Percent_of_True",
                                      "label": "Percentage"
                                    },
                                    {
                                      "columnId": "Count_of_True",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "Count_of_False"
                                    },
                                    {
                                      "columnId": "Percent_of_False"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "SelectedErrors",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "Failure reason patterns selected window table"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Failure reason patterns selected window group",
                        "styleSettings": {
                          "margin": "0px"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Query text patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view query text patterns which are more likely to appear in queries in the selcted time, compared to the queries which were used in the time which wasn't selected. The asterix ('*') character repesents wildcards.\r\n"
                              },
                              "name": "Query Text Patterns selected window text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away FailureReason, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend IsTest = TimeGenerated {SelectedErrors}\r\n| evaluate diffpatterns_text(Text, IsTest, 5, 0.05, 30)\r\n| where Percent_of_True >= Percent_of_False\r\n| extend PercentDiff = Percent_of_True - Percent_of_False\r\n| where PercentDiff > 0\r\n| top 20 by PercentDiff\r\n| order by PercentDiff\r\n| project-away PercentDiff\r\n| project-reorder Pattern, Percent_of_True, Count_of_True\r\n| project-rename QueryTextPattern=Pattern",
                                "size": 3,
                                "showAnalytics": true,
                                "title": "Query text patterns",
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "SelectedSpikeWindow",
                                    "parameterName": "SelectedSpikeWindow",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimeRange",
                                    "parameterName": "SelectedWindowPatternTimeRange",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimestamp",
                                    "parameterName": "SelectedWindowPatternTimestamp",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "QueryTextPattern",
                                    "parameterName": "SelectedWindowQueryTextPattern",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "QueryTextPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Percent_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Percent_of_True\"]% of selected, [\"Percent_of_False\"]% of baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "Percent_of_True",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "Percent_of_False",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Count_of_True\"] selected, [\"Count_of_False\"] baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "Count_of_True",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "Count_of_False",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Percent_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimeRange",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedSpikeWindow",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "FailureReasonPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "QueryTextPattern",
                                      "label": "Pattern"
                                    },
                                    {
                                      "columnId": "Percent_of_True",
                                      "label": "Percentage"
                                    },
                                    {
                                      "columnId": "Count_of_True",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "Count_of_False"
                                    },
                                    {
                                      "columnId": "Percent_of_False"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "SelectedErrors",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "Query Text Patterns selected window table"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Query Text Patterns selected window group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Other dimensions patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view patterns which are more likely to appear in queries in the selcted time, compared to the queries which were used in the time which wasn't selected. Here patterns can include dimensions such as user, application, database or table. The patterns may also include metric dimensions such as \"memory peak\" which are tagged by level - low, medium or high. The level is decided based on your usage."
                              },
                              "name": "Other dimensions patterns selected window text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away FailureReason, Text, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend SplitColumn = iff(TimeGenerated {SelectedErrors}, \"B\", \"A\")\r\n| project DatabaseName, TableName, ApplicationName, User, WorkloadGroup, TableCount, MemoryPeak, TotalCPU, Duration, ScannedExtentsCount, ScannedRowsCount,  ExtentsMinDataScannedTime, ExtentsMaxDataScannedTime, TableMinCreatedOn, TableMaxCreatedOn, CacheMemoryHits, CacheMemoryMisses, CacheDiskHits, CacheDiskMisses, CacheShardsHotHits, CacheShardsHotMisses, CacheShardsColdHits, CacheShardsColdMisses, CacheShardsBypassBytes, SplitColumn\r\n| evaluate diffpatterns(SplitColumn, \"A\", \"B\")\r\n| where PercentB > PercentA\r\n| order by PercentDiffAB desc\r\n| project-away SegmentId\r\n| project-rename SelectedQueryCount=CountB, BaselineQueryCount=CountA, SelectedQueriesPercentWithPattern=PercentB, BaselineQueriesPercentWithPattern=PercentA\r\n| extend SelectedWindowPatternDictionary = pack_all()\r\n| extend DatabaseNameKey = iff(isnotempty(DatabaseName), \"\", \"DatabaseName\")\r\n| extend TableNameKey = iff(isnotempty(TableName),  \"\", \"TableName\")\r\n| extend ApplicationNameKey = iff(isnotempty(ApplicationName), \"\", \"ApplicationName\")\r\n| extend UserKey = iff(isnotempty(User), \"\", \"User\")\r\n| extend WorkloadGroupKey = iff(isnotempty(WorkloadGroup), \"\", \"WorkloadGroup\")\r\n| extend MemoryPeakKey = iff(isnotempty(MemoryPeak), \"\", \"MemoryPeak\")\r\n| extend TotalCPUKey = iff(isnotempty(TotalCPU), \"\", \"TotalCPU\")\r\n| extend DurationKey = iff(isnotempty(Duration), \"\", \"Duration\")\r\n| extend ScannedExtentsCountKey = iff(isnotempty(ScannedExtentsCount), \"\", \"ScannedExtentsCount\")\r\n| extend ScannedRowsCountKey = iff(isnotempty(ScannedRowsCount), \"\", \"ScannedRowsCount\")\r\n| extend CacheMemoryHitsKey = iff(isnotempty(CacheMemoryHits), \"\", \"CacheMemoryHits\")\r\n| extend CacheMemoryMissesKey = iff(isnotempty(CacheMemoryMisses), \"\", \"CacheMemoryMisses\")\r\n| extend CacheDiskHitsKey = iff(isnotempty(CacheDiskHits), \"\", \"CacheDiskHits\")\r\n| extend CacheDiskMissesKey = iff(isnotempty(CacheDiskMisses), \"\", \"CacheDiskMisses\")\r\n| extend CacheShardsHotHitsKey = iff(isnotempty(CacheShardsHotHits), \"\", \"CacheShardsHotHits\")\r\n| extend CacheShardsHotMissesKey = iff(isnotempty(CacheShardsHotMisses), \"\", \"CacheShardsHotMisses\")\r\n| extend CacheShardsColdHitsKey = iff(isnotempty(CacheShardsColdHits), \"\", \"CacheShardsColdHits\")\r\n| extend CacheShardsColdMissesKey = iff(isnotempty(CacheShardsColdMisses), \"\", \"CacheShardsColdMisses\")\r\n| extend CacheShardsBypassBytesKey = iff(isnotempty(CacheShardsBypassBytes), \"\", \"CacheShardsBypassBytes\")\r\n| extend TableCountKey = iff(isnotempty(TableCount), \"\", \"TableCount\")\r\n| extend ExtentsMinDataScannedTimeKey = iff(isnotempty(ExtentsMinDataScannedTime), \"\", \"ExtentsMinDataScannedTime\")\r\n| extend ExtentsMaxDataScannedTimeKey = iff(isnotempty(ExtentsMaxDataScannedTime), \"\", \"ExtentsMaxDataScannedTime\")\r\n| extend TableMinCreatedOnKey = iff(isnotempty(TableMinCreatedOn), \"\", \"TableMinCreatedOn\")\r\n| extend TableMaxCreatedOnKey = iff(isnotempty(TableMaxCreatedOn), \"\", \"TableMaxCreatedOn\")\r\n| extend KeysToRemove = pack_array(DatabaseNameKey, TableNameKey, ApplicationNameKey, UserKey, WorkloadGroupKey, MemoryPeakKey, TotalCPUKey, DurationKey,\r\nScannedExtentsCountKey, ScannedRowsCountKey, CacheMemoryHitsKey, CacheMemoryMissesKey, CacheDiskHitsKey, CacheDiskMissesKey, CacheShardsHotHitsKey, CacheShardsHotMissesKey,\r\nCacheShardsColdHitsKey, CacheShardsColdMissesKey, CacheShardsBypassBytesKey, TableCountKey, ExtentsMinDataScannedTimeKey, ExtentsMaxDataScannedTimeKey, TableMinCreatedOnKey, TableMaxCreatedOnKey, \"SelectedQueryCount\", \"BaselineQueryCount\", \"SelectedQueriesPercentWithPattern\", \"BaselineQueriesPercentWithPattern\", \"PercentDiffAB\")\r\n| extend SelectedWindowPatternDictionary = bag_remove_keys(SelectedWindowPatternDictionary, KeysToRemove)\r\n| extend Pattern = replace('{', '| ', tostring(SelectedWindowPatternDictionary))\r\n| extend Pattern = replace('}', ' |', Pattern)\r\n| extend Pattern = replace(',', '| ', Pattern)\r\n| extend Pattern = replace('\"', ' ', Pattern)\r\n| order by PercentDiffAB\r\n| top 20 by PercentDiffAB\r\n| project Pattern, SelectedQueriesPercentWithPattern, BaselineQueriesPercentWithPattern, SelectedQueryCount, BaselineQueryCount, SelectedWindowPatternDictionary",
                                "size": 3,
                                "showAnalytics": true,
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "SelectedWindowPatternDictionary",
                                    "parameterName": "SelectedWindowPatternDictionary",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedSpikeWindow",
                                    "parameterName": "SelectedSpikeWindow",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimeRange",
                                    "parameterName": "SelectedWindowPatternTimeRange",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedWindowPatternTimestamp",
                                    "parameterName": "SelectedWindowPatternTimestamp",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Pattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkColumn": "SelectedWindowPatternDictionary",
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "SelectedQueriesPercentWithPattern",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"SelectedQueriesPercentWithPattern\"]% of selected, [\"BaselineQueriesPercentWithPattern\"]% of baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "SelectedQueriesPercentWithPattern",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "BaselineQueriesPercentWithPattern",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "BaselineQueriesPercentWithPattern",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedQueryCount",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"SelectedQueryCount\"] of selected, [\"BaselineQueryCount\"] of baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "SelectedQueryCount",
                                              "color": "orange"
                                            },
                                            {
                                              "columnName": "BaselineQueryCount",
                                              "color": "blue"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "BaselineQueryCount",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "12%"
                                      }
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternDictionary",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedWindowPatternTimeRange",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedSpikeWindow",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedPatternTimeRange",
                                      "formatter": 5
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Pattern"
                                    },
                                    {
                                      "columnId": "SelectedQueriesPercentWithPattern",
                                      "label": "Percentage"
                                    },
                                    {
                                      "columnId": "BaselineQueriesPercentWithPattern"
                                    },
                                    {
                                      "columnId": "SelectedQueryCount",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "BaselineQueryCount"
                                    },
                                    {
                                      "columnId": "SelectedWindowPatternDictionary"
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "chartSettings": {
                                  "xAxis": "str",
                                  "yAxis": [
                                    "FailedQueriesPercentWithPattern",
                                    "SuccessfulQueriesPercentWithPattern"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "FailedQueriesPercentWithPattern",
                                      "color": "redBright"
                                    },
                                    {
                                      "seriesName": "SuccessfulQueriesPercentWithPattern",
                                      "color": "green"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "SelectedErrors",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "Other dimensions patterns selected window table"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SelectedErrors",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Other dimensions patterns selected window group"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "CompareCategory",
                    "comparison": "isEqualTo",
                    "value": "CompareBySelection"
                  },
                  "name": "Selected time window vs non selected queries"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "In the tables below we compare the patterns appear in completed queries with the patterns that appear in server error failed queries. You can view the patterns' count and percentage in each category: failed and suceeded queries. This may be helpful finding patterns that are the root cause for the failures. \r\n\r\n\r\n💡 Use the filters below to filter the chart and tables result (DatabaseName, TableName, ApplicationName, User and WorkloadGroup have values that only appear in falied queries)."
                        },
                        "name": "Failed queries versus completed - explanation"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "DatabaseName",
                              "type": 2,
                              "query": "ADXQuery\r\n| where State == \"Failed\"\r\n| distinct DatabaseName",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableName",
                              "type": 2,
                              "query": "ADXQuery\r\n| where State == \"Failed\"\r\n| where DatabaseName == \"{DatabaseName}\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| distinct TableName",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ApplicationName",
                              "type": 2,
                              "query": "ADXQuery\r\n| where State == \"Failed\"\r\n| distinct ApplicationName",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "User",
                              "type": 2,
                              "query": "ADXQuery\r\n| where State == \"Failed\"\r\n| distinct User",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 0
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "WorkloadGroup",
                              "type": 2,
                              "query": "ADXQuery\r\n| where State == \"Failed\"\r\n| distinct WorkloadGroup",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.kusto/clusters"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "MemoryPeak",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TotalCPU",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "Duration",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ScannedExtentsCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ScannedRowsCount",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ExtentsMinDataScannedTime",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "ExtentsMaxDataScannedTime",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableMinCreatedOn",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "TableMaxCreatedOn",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 126753956,
                                "endTime": "2021-05-07T20:23:26.768Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange"
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheMemoryHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheMemoryMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheDiskHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheDiskMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsHotHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsHotMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsColdHits",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsColdMisses",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            },
                            {
                              "version": "KqlParameterItem/1.0",
                              "name": "CacheShardsBypassBytes",
                              "type": 2,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t\\\"Low\\\",\\r\\n\\t\\\"Medium\\\",\\r\\n\\t\\\"High\\\"\\r\\n]\",\"transformers\":null}",
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 177289208,
                                "endTime": "2021-05-08T02:30:15.936Z"
                              },
                              "timeContextFromParameter": "ServerQueryErrorTimeRange",
                              "queryType": 8
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.kusto/clusters"
                        },
                        "name": "Failed queries versus completed - parameters"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Top users and apps in failed queries",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this chart you can view the top users and applications that had server query failures in the selected time range."
                              },
                              "name": "Top users and apps in failed queries text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away Text, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend UserOrApp = iff(Principal startswith \"aadapp=\", ApplicationName, User)\r\n| where State == \"Failed\"\r\n| summarize count() by UserOrApp",
                                "size": 1,
                                "showAnalytics": true,
                                "noDataMessage": "Nor users or applications were found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "visualization": "piechart"
                              },
                              "name": "Top users and apps in failed queries chart"
                            }
                          ]
                        },
                        "name": "Top users and apps in failed queries group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Failure reason patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view failure reason patterns which are more likely to appear in failed queries compared to the completed queries in the selected time window. The asterix ('*') character repesents wildcards."
                              },
                              "name": "Failure reason patterns failed queries text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away Text, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend IsTest = State == \"Failed\"\r\n| evaluate diffpatterns_text(FailureReason, IsTest, 5, 0.05, 100)\r\n| where Percent_of_True >= Percent_of_False\r\n| extend PercentDiff = Percent_of_True - Percent_of_False\r\n| where PercentDiff > 0\r\n| top 20 by PercentDiff\r\n| order by PercentDiff\r\n| project-away PercentDiff\r\n| project-reorder Pattern, Percent_of_True, Count_of_True\r\n| project-rename FailureReasonPattern=Pattern",
                                "size": 3,
                                "showAnalytics": true,
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "FailureReasonPattern",
                                    "parameterName": "SelectedFailureReasonPattern",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedTimestamp",
                                    "parameterName": "SelectedTimestamp",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedPatternTimeRange",
                                    "parameterName": "SelectedPatternTimeRange",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "FailureReasonPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Percent_of_True",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redBright",
                                        "compositeBarSettings": {
                                          "labelText": "[\"Percent_of_True\"]% of failed, [\"Percent_of_False\"]% of succeeded",
                                          "columnSettings": [
                                            {
                                              "columnName": "Percent_of_True",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "Percent_of_False",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_True",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redBright",
                                        "compositeBarSettings": {
                                          "labelText": "[\"Count_of_True\"] selected, [\"Count_of_False\"] baseline",
                                          "columnSettings": [
                                            {
                                              "columnName": "Count_of_True",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "Count_of_False",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Percent_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedPatternTimeRange",
                                      "formatter": 5
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "FailureReasonPattern",
                                      "label": "Pattern"
                                    },
                                    {
                                      "columnId": "Percent_of_True",
                                      "label": "Percent out of failures",
                                      "comment": ""
                                    },
                                    {
                                      "columnId": "Count_of_True",
                                      "label": "Count out of faliures",
                                      "comment": ""
                                    },
                                    {
                                      "columnId": "Count_of_False"
                                    },
                                    {
                                      "columnId": "Percent_of_False"
                                    }
                                  ]
                                }
                              },
                              "name": "Failure reason patterns failed queries table"
                            }
                          ]
                        },
                        "name": "Failure reason patterns failed queries group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Query text patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view query text patterns which are more likely to appear in failed queries compared to the completed queries in the selected time window. The asterix ('*') character repesents wildcards."
                              },
                              "name": "Query text patterns failed queries text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away FailureReason, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend IsTest = State == \"Failed\"\r\n| evaluate diffpatterns_text(Text, IsTest, 5, 0.05, 30)\r\n| where Percent_of_True >= Percent_of_False\r\n| extend PercentDiff = Percent_of_True - Percent_of_False\r\n| where PercentDiff > 0\r\n| top 20 by PercentDiff\r\n| order by PercentDiff\r\n| project-away PercentDiff\r\n| project-reorder Pattern, Percent_of_True, Count_of_True\r\n| project-rename QueryTextPattern=Pattern",
                                "size": 3,
                                "showAnalytics": true,
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "SelectedTimestamp",
                                    "parameterName": "SelectedTimestamp",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedPatternTimeRange",
                                    "parameterName": "SelectedPatternTimeRange",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "QueryTextPattern",
                                    "parameterName": "SelectedQueryTextPattern",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "QueryTextPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Percent_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Percent_of_True\"]% of failed, [\"Percent_of_False\"]% of succeeded",
                                          "columnSettings": [
                                            {
                                              "columnName": "Percent_of_True",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "Percent_of_False",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_True",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"Count_of_True\"] of failed, [\"Count_of_False\"] of succeeded",
                                          "columnSettings": [
                                            {
                                              "columnName": "Count_of_True",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "Count_of_False",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Percent_of_False",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedPatternTimeRange",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedQueryTextRegex",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "FailureReasonPattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "50%"
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "QueryTextPattern",
                                      "label": "Pattern"
                                    },
                                    {
                                      "columnId": "Percent_of_True",
                                      "label": "Percent"
                                    },
                                    {
                                      "columnId": "Count_of_True",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "Count_of_False"
                                    },
                                    {
                                      "columnId": "Percent_of_False"
                                    }
                                  ]
                                }
                              },
                              "name": "Query text patterns failed queries table"
                            }
                          ]
                        },
                        "name": "Query text patterns failed queries group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Other dimensions patterns",
                          "expandable": true,
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "In this table you can view patterns which are more likely to appear in failed queries compared to the completed queries in the selected time window. Here patterns can include dimensions such as user, application, database or table. The patterns may also include metric dimensions such as \"memory peak\" which are tagged by level - low, medium or high. The level is decided based on your usage."
                              },
                              "name": "Other dimensions patterns failed queries text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let stats = dynamic({Stats});\r\nADXQuery \r\n| where State == \"Failed\" or State == \"Completed\"\r\n| where FailureReason !has \"semantic\"\r\n| where FailureReason !has \"syntax\"\r\n| where FailureReason !has \"not authorized\"\r\n| where FailureReason !has \"of kind 'Database' was not found.\"\r\n| where FailureReason !has \"E_QUERY_RESULT_SET_TOO_LARGE\"\r\n| join ADXTableUsageStatistics on RootActivityId\r\n| project-away Text, FailureReason, OperationName, CorrelationId, RootActivityId, StartedOn, LastUpdatedOn, _ResourceId, _ResourceId1, ApplicationName1, Category, Type, TenantId, TenantId1, CorrelationId1, RootActivityId1, StartedOn1, User1, Principal1, SourceSystem, SourceSystem1, Type1, OperationName1, DatabaseName1, TimeGenerated1\r\n| project-rename TableMinCreatedOn = MinCreatedOn\r\n| project-rename TableMaxCreatedOn = MaxCreatedOn\r\n| extend TotalCPU = tolong(TotalCPU)\r\n| extend Duration = tolong(Duration)\r\n| where '{DatabaseName:label}' == '<unset>' or DatabaseName == '{DatabaseName:label}'\r\n| where '{TableName:label}' == '<unset>' or TableName == '{TableName:label}'\r\n| where '{ApplicationName:label}' == '<unset>' or ApplicationName == '{ApplicationName:label}'\r\n| where '{User:label}' == '<unset>' or User == '{User:label}'\r\n| where '{WorkloadGroup:label}'  == '<unset>' or WorkloadGroup == '{WorkloadGroup:label}'\r\n| where  isempty('{ExtentsMinDataScannedTime:startISO}') or ExtentsMinDataScannedTime between(todatetime('{ExtentsMinDataScannedTime:startISO}') .. todatetime('{ExtentsMinDataScannedTime:endISO}'))\r\n| where  isempty('{ExtentsMaxDataScannedTime:startISO}') or ExtentsMaxDataScannedTime between(todatetime('{ExtentsMaxDataScannedTime:startISO}') .. todatetime('{ExtentsMaxDataScannedTime:endISO}'))\r\n| where  isempty('{TableMinCreatedOn:startISO}') or TableMinCreatedOn between(todatetime('{TableMinCreatedOn:startISO}') .. todatetime('{TableMinCreatedOn:endISO}'))\r\n| where  isempty('{TableMaxCreatedOn:startISO}') or TableMaxCreatedOn between(todatetime('{TableMaxCreatedOn:startISO}') .. todatetime('{TableMaxCreatedOn:endISO}'))\r\n| extend TableCount = case(TableCount <= tolong(stats[\"percentile_TableCount_50\"]), \"Low\", TableCount <= tolong(stats[\"percentile_TableCount_90\"]), \"Medium\", \"High\") \r\n| extend MemoryPeak = case(MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_50\"]), \"Low\", MemoryPeak <= tolong(stats[\"percentile_MemoryPeak_90\"]), \"Medium\", \"High\") \r\n| extend TotalCPU = case(TotalCPU <= tolong(stats[\"percentile_TotalCPU_50\"]), \"Low\", tolong(TotalCPU) <= tolong(stats[\"percentile_TotalCPU_90\"]), \"Medium\", \"High\") \r\n| extend Duration = case(tolong(Duration) <= tolong(stats[\"percentile_Duration_50\"]), \"Low\", tolong(Duration) <= tolong(stats[\"percentile_Duration_90\"]), \"Medium\", \"High\") \r\n| extend ScannedExtentsCount = case(ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_50\"]), \"Low\", ScannedExtentsCount <= tolong(stats[\"percentile_ScannedExtentsCount_90\"]), \"Medium\", \"High\") \r\n| extend ScannedRowsCount = case(ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_50\"]), \"Low\", ScannedRowsCount <= tolong(stats[\"percentile_ScannedRowsCount_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryHits = case(CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheMemoryMisses = case(CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheMemoryMisses <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskHits = case(CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_50\"]), \"Low\", CacheDiskHits <= tolong(stats[\"percentile_CacheDiskHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheDiskMisses = case(CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_50\"]), \"Low\", CacheDiskMisses <= tolong(stats[\"percentile_CacheDiskMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotHits = case(CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_50\"]), \"Low\", CacheShardsHotHits <= tolong(stats[\"percentile_CacheShardsHotHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsHotMisses = case(CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_50\"]), \"Low\", CacheShardsHotMisses <= tolong(stats[\"percentile_CacheShardsHotMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdHits = case(CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_50\"]), \"Low\", CacheShardsColdHits <= tolong(stats[\"percentile_CacheShardsColdHits_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsColdMisses = case(CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_50\"]), \"Low\", CacheShardsColdMisses <= tolong(stats[\"percentile_CacheShardsColdMisses_90\"]), \"Medium\", \"High\")\r\n| extend CacheShardsBypassBytes = case(CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_50\"]), \"Low\", CacheShardsBypassBytes <= tolong(stats[\"percentile_CacheShardsBypassBytes_90\"]), \"Medium\", \"High\")\r\n| where '{MemoryPeak:label}' == '<unset>' or MemoryPeak == '{MemoryPeak:label}'\r\n| where '{TotalCPU:label}' == '<unset>' or TotalCPU == '{TotalCPU:label}'\r\n| where '{Duration:label}' == '<unset>' or Duration == '{Duration:label}'\r\n| where '{ScannedExtentsCount:label}' == '<unset>' or ScannedExtentsCount == '{ScannedExtentsCount:label}'\r\n| where '{ScannedRowsCount:label}' == '<unset>' or ScannedRowsCount == '{ScannedRowsCount:label}'\r\n| where '{CacheMemoryHits:label}' == '<unset>' or CacheMemoryHits == '{CacheMemoryHits:label}'\r\n| where '{CacheMemoryMisses:label}' == '<unset>' or CacheMemoryMisses == '{CacheMemoryMisses:label}'\r\n| where '{CacheDiskHits:label}' == '<unset>' or CacheDiskHits == '{CacheDiskHits:label}'\r\n| where '{CacheDiskMisses:label}' == '<unset>' or CacheDiskMisses == '{CacheDiskMisses:label}'\r\n| where '{CacheShardsHotHits:label}' == '<unset>' or CacheShardsHotHits == '{CacheShardsHotHits:label}'\r\n| where '{CacheShardsHotMisses:label}' == '<unset>' or CacheShardsHotMisses == '{CacheShardsHotMisses:label}'\r\n| where '{CacheShardsColdHits:label}' == '<unset>' or CacheShardsColdHits == '{CacheShardsColdHits:label}'\r\n| where '{CacheShardsColdMisses:label}' == '<unset>' or CacheShardsColdMisses == '{CacheShardsColdMisses:label}'\r\n| where '{CacheShardsBypassBytes:label}' == '<unset>' or CacheShardsBypassBytes == '{CacheShardsBypassBytes:label}'\r\n| where '{TableCount:label}' == '<unset>' or TableCount == '{TableCount:label}'\r\n| extend SplitColumn = iff(State == \"Failed\", \"B\", \"A\")\r\n| project DatabaseName, TableName, ApplicationName, User, WorkloadGroup, TableCount, MemoryPeak, TotalCPU, Duration, ScannedExtentsCount, ScannedRowsCount,  ExtentsMinDataScannedTime, ExtentsMaxDataScannedTime, TableMinCreatedOn, TableMaxCreatedOn, CacheMemoryHits, CacheMemoryMisses, CacheDiskHits, CacheDiskMisses, CacheShardsHotHits, CacheShardsHotMisses, CacheShardsColdHits, CacheShardsColdMisses, CacheShardsBypassBytes, SplitColumn\r\n| evaluate diffpatterns(SplitColumn, \"A\", \"B\")\r\n| where PercentB > PercentA\r\n| order by PercentDiffAB desc\r\n| project-away SegmentId\r\n| project-rename SuccessfulQueriesCount=CountA, FailedQueriesCount=CountB, SuccessfulQueriesPercentWithPattern=PercentA, FailedQueriesPercentWithPattern=PercentB\r\n| extend PatternDictionary = pack_all()\r\n| extend DatabaseNameKey = iff(isnotempty(DatabaseName), \"\", \"DatabaseName\")\r\n| extend TableNameKey = iff(isnotempty(TableName),  \"\", \"TableName\")\r\n| extend ApplicationNameKey = iff(isnotempty(ApplicationName), \"\", \"ApplicationName\")\r\n| extend UserKey = iff(isnotempty(User), \"\", \"User\")\r\n| extend WorkloadGroupKey = iff(isnotempty(WorkloadGroup), \"\", \"WorkloadGroup\")\r\n| extend MemoryPeakKey = iff(isnotempty(MemoryPeak), \"\", \"MemoryPeak\")\r\n| extend TotalCPUKey = iff(isnotempty(TotalCPU), \"\", \"TotalCPU\")\r\n| extend DurationKey = iff(isnotempty(Duration), \"\", \"Duration\")\r\n| extend ScannedExtentsCountKey = iff(isnotempty(ScannedExtentsCount), \"\", \"ScannedExtentsCount\")\r\n| extend ScannedRowsCountKey = iff(isnotempty(ScannedRowsCount), \"\", \"ScannedRowsCount\")\r\n| extend CacheMemoryHitsKey = iff(isnotempty(CacheMemoryHits), \"\", \"CacheMemoryHits\")\r\n| extend CacheMemoryMissesKey = iff(isnotempty(CacheMemoryMisses), \"\", \"CacheMemoryMisses\")\r\n| extend CacheDiskHitsKey = iff(isnotempty(CacheDiskHits), \"\", \"CacheDiskHits\")\r\n| extend CacheDiskMissesKey = iff(isnotempty(CacheDiskMisses), \"\", \"CacheDiskMisses\")\r\n| extend CacheShardsHotHitsKey = iff(isnotempty(CacheShardsHotHits), \"\", \"CacheShardsHotHits\")\r\n| extend CacheShardsHotMissesKey = iff(isnotempty(CacheShardsHotMisses), \"\", \"CacheShardsHotMisses\")\r\n| extend CacheShardsColdHitsKey = iff(isnotempty(CacheShardsColdHits), \"\", \"CacheShardsColdHits\")\r\n| extend CacheShardsColdMissesKey = iff(isnotempty(CacheShardsColdMisses), \"\", \"CacheShardsColdMisses\")\r\n| extend CacheShardsBypassBytesKey = iff(isnotempty(CacheShardsBypassBytes), \"\", \"CacheShardsBypassBytes\")\r\n| extend TableCountKey = iff(isnotempty(TableCount), \"\", \"TableCount\")\r\n| extend ExtentsMinDataScannedTimeKey = iff(isnotempty(ExtentsMinDataScannedTime), \"\", \"ExtentsMinDataScannedTime\")\r\n| extend ExtentsMaxDataScannedTimeKey = iff(isnotempty(ExtentsMaxDataScannedTime), \"\", \"ExtentsMaxDataScannedTime\")\r\n| extend TableMinCreatedOnKey = iff(isnotempty(TableMinCreatedOn), \"\", \"TableMinCreatedOn\")\r\n| extend TableMaxCreatedOnKey = iff(isnotempty(TableMaxCreatedOn), \"\", \"TableMaxCreatedOn\")\r\n| extend KeysToRemove = pack_array(DatabaseNameKey, TableNameKey, ApplicationNameKey, UserKey, WorkloadGroupKey, MemoryPeakKey, TotalCPUKey, DurationKey,\r\nScannedExtentsCountKey, ScannedRowsCountKey, CacheMemoryHitsKey, CacheMemoryMissesKey, CacheDiskHitsKey, CacheDiskMissesKey, CacheShardsHotHitsKey, CacheShardsHotMissesKey,\r\nCacheShardsColdHitsKey, CacheShardsColdMissesKey, CacheShardsBypassBytesKey, TableCountKey, ExtentsMinDataScannedTimeKey, ExtentsMaxDataScannedTimeKey, TableMinCreatedOnKey, TableMaxCreatedOnKey, \"SuccessfulQueriesCount\", \"FailedQueriesCount\", \"SuccessfulQueriesPercentWithPattern\", \"FailedQueriesPercentWithPattern\", \"PercentDiffAB\")\r\n| extend PatternDictionary = bag_remove_keys(PatternDictionary, KeysToRemove)\r\n| extend Pattern = replace('{', '| ', tostring(PatternDictionary))\r\n| extend Pattern = replace('}', ' |', Pattern)\r\n| extend Pattern = replace(',', '| ', Pattern)\r\n| extend Pattern = replace('\"', ' ', Pattern)\r\n| top 20 by PercentDiffAB\r\n| order by PercentDiffAB\r\n| project Pattern, SuccessfulQueriesPercentWithPattern, FailedQueriesPercentWithPattern, SuccessfulQueriesCount, FailedQueriesCount, PatternDictionary",
                                "size": 3,
                                "showAnalytics": true,
                                "noDataMessage": "No significant pattern difference was found",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "ServerQueryErrorTimeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "PatternDictionary",
                                    "parameterName": "PatternDictionary",
                                    "defaultValue": ""
                                  },
                                  {
                                    "fieldName": "SelectedTimestamp",
                                    "parameterName": "SelectedTimestamp",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "SelectedPatternTimeRange",
                                    "parameterName": "SelectedPatternTimeRange",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.kusto/clusters",
                                "crossComponentResources": [
                                  "{Resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Pattern",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkColumn": "PatternDictionary",
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "customColumnWidthSetting": "55%"
                                      }
                                    },
                                    {
                                      "columnMatch": "SuccessfulQueriesPercentWithPattern",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"FailedQueriesPercentWithPattern\"]% of failed, [\"SuccessfulQueriesPercentWithPattern\"]% of succeeded",
                                          "columnSettings": [
                                            {
                                              "columnName": "FailedQueriesPercentWithPattern",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "SuccessfulQueriesPercentWithPattern",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "15%"
                                      }
                                    },
                                    {
                                      "columnMatch": "FailedQueriesPercentWithPattern",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SuccessfulQueriesCount",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "[\"FailedQueriesCount\"] of failed, [\"SuccessfulQueriesCount\"] of succeeded",
                                          "columnSettings": [
                                            {
                                              "columnName": "FailedQueriesCount",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "SuccessfulQueriesCount",
                                              "color": "green"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "25%"
                                      }
                                    },
                                    {
                                      "columnMatch": "FailedQueriesCount",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "15%"
                                      }
                                    },
                                    {
                                      "columnMatch": "PatternDictionary",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedTimestamp",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "SelectedPatternTimeRange",
                                      "formatter": 5
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Pattern"
                                    },
                                    {
                                      "columnId": "SuccessfulQueriesPercentWithPattern",
                                      "label": "Percentage"
                                    },
                                    {
                                      "columnId": "FailedQueriesPercentWithPattern"
                                    },
                                    {
                                      "columnId": "SuccessfulQueriesCount",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "FailedQueriesCount",
                                      "label": ""
                                    },
                                    {
                                      "columnId": "PatternDictionary"
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "chartSettings": {
                                  "xAxis": "str",
                                  "yAxis": [
                                    "FailedQueriesPercentWithPattern",
                                    "SuccessfulQueriesPercentWithPattern"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "FailedQueriesPercentWithPattern",
                                      "color": "redBright"
                                    },
                                    {
                                      "seriesName": "SuccessfulQueriesPercentWithPattern",
                                      "color": "green"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "ServerQueryErrorTimeRange",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "Other dimensions patterns failed queries table"
                            }
                          ]
                        },
                        "name": "Other dimensions patterns failed queries group"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "CompareCategory",
                    "comparison": "isEqualTo",
                    "value": "CompareByStatus"
                  },
                  "name": "Failed Queries vs completed queries"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "ServerQueryErrorTimeRange",
              "comparison": "isNotEqualTo"
            },
            "name": "Root cause investigation for selected time window"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TableLogs",
        "comparison": "isNotEqualTo",
        "value": "not present"
      },
      "name": "Server query error rate group"
    }
  ]
}