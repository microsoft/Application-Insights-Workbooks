{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ee91c49b-f87c-42c8-9bc7-3cf9c61ee3cc",
            "version": "KqlParameterItem/1.0",
            "name": "AMSResource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true,
                "microsoft.hanaonazure/sapmonitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1"
          },
          {
            "id": "65a14aa9-d29b-4944-827b-46b36f626041",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{AMSResource:subscriptionid}/resourceGroups/{AMSResource:resourcegroup}/providers/Microsoft.Workloads/monitors/{AMSResource:name}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[{\"path\":\"$.logAnalyticsWorkspaceArmId\",\"columnid\":\"id\",\"columnType\":\"string\"}]}}]}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1",
            "queryType": 12
          },
          {
            "id": "10cf3ee4-e001-4fdc-8903-840e975cd990",
            "version": "KqlParameterItem/1.0",
            "name": "hidden",
            "type": 1,
            "isHiddenWhenLocked": true,
            "value": "yes"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "name": "defaultParams"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "6371e85e-f268-42b7-a0db-5bb51a15b665",
            "version": "KqlParameterItem/1.0",
            "name": "SID",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "0b81c9d3-446c-4223-b424-f8168f2b5050",
            "version": "KqlParameterItem/1.0",
            "name": "TimePeriod",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true
          },
          {
            "id": "cac1f668-ad31-4771-a21e-ae61d0ebd43f",
            "version": "KqlParameterItem/1.0",
            "name": "StartTime",
            "type": 1,
            "query": "print split(\"{TimePeriod}\", \" - \")[0]",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "b4489560-866b-411a-af25-5e6cb93a6e4a",
            "version": "KqlParameterItem/1.0",
            "name": "EndTime",
            "type": 1,
            "query": "print split(\"{TimePeriod}\", \" - \")[1]",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "318b9602-a602-46cf-a20b-1d5d7f514a3f",
            "version": "KqlParameterItem/1.0",
            "name": "VMID",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "f83f538a-1996-4519-83e5-a7fa99f93994",
            "version": "KqlParameterItem/1.0",
            "name": "MinutesBin",
            "type": 1,
            "query": "let dateDiff = tolong(datetime_diff('minute', todatetime(\"{EndTime}\"), todatetime(\"{StartTime}\")));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nprint iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000)",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "90b0f708-b8cb-4689-968f-1dbb89ef9a6e",
            "version": "KqlParameterItem/1.0",
            "name": "Provider",
            "type": 1,
            "isHiddenWhenLocked": true,
            "defaultValue": "value::all"
          },
          {
            "id": "3c1299c9-2fdb-4d25-98ff-f7c84381057f",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "74f08427-265d-4db2-a6d9-82318f892762",
            "version": "KqlParameterItem/1.0",
            "name": "AlertName",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "be840758-52be-4b02-81d5-37afcb8308e1",
            "version": "KqlParameterItem/1.0",
            "name": "AlertFired",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "09458cba-a30f-4618-ad19-e8abb597e11b",
            "version": "KqlParameterItem/1.0",
            "name": "AlertTitle",
            "type": 1,
            "query": "print iff(isempty(\"{AlertFired}\"), \"\", \"Alert analysis\")",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "88ea5616-9d4b-4917-8808-07a1af67d717",
            "version": "KqlParameterItem/1.0",
            "name": "VM",
            "type": 5,
            "query": "print \"{VMID}\"",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.compute/virtualmachines": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5f6ca5da-b7cd-4099-963e-54a663b27e05",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "query": "print \"{VM:subscriptionId}\"",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "18134d50-04d6-436e-8ab2-1a288a4dd8b7",
            "version": "KqlParameterItem/1.0",
            "name": "IsFixedGranularity",
            "type": 2,
            "query": "print (\"{TimeRange:label}\" == \"Last 30 days\") or (\"{TimeRange:label}\" == \"Last 28 days\") or (\"{TimeRange:label}\" == \"Last 14 days\")",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "8562276b-bf96-4693-b913-3327220339cf",
            "version": "KqlParameterItem/1.0",
            "name": "NwVmList",
            "type": 1
          },
          {
            "id": "a56b9464-e4f7-4360-b12d-f3abb55cf8b6",
            "version": "KqlParameterItem/1.0",
            "name": "HanaVmList",
            "type": 1
          },
          {
            "id": "48f6b2b8-bd12-48d1-96a5-99d641e6e71a",
            "version": "KqlParameterItem/1.0",
            "name": "VMID2",
            "type": 2,
            "query": "union isfuzzy = true(\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| distinct hostname_s\r\n| where \"{NwVmList}\" contains hostname_s\r\n| project HOST_s = hostname_s\r\n),\r\n(\r\nSapHana_SystemAvailability_CL\r\n| distinct HOST_s\r\n| where \"{HanaVmList}\" contains HOST_s\r\n)",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "hidden",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "passedParams"
    },
    {
      "type": 1,
      "content": {
        "json": "Availability insights for the selected alert. View the insights to investigate the root cause."
      },
      "name": "introText"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "2d8db5ac-db37-4777-87c5-1aef698362e2",
            "version": "KqlParameterItem/1.0",
            "name": "selProvider",
            "type": 1,
            "query": "print \"{Provider}\"",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "Provider"
          },
          {
            "id": "38856def-f524-46ed-a612-217dabaccaa1",
            "version": "KqlParameterItem/1.0",
            "name": "selVmName",
            "type": 2,
            "isRequired": true,
            "query": "union isfuzzy = true(\r\n    SapNetweaver_GetSystemInstanceList_CL\r\n    | where \"{selProvider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct hostname_s\r\n    | project HOST_s = hostname_s\r\n),\r\n(\r\n    SapHana_SystemAvailability_CL\r\n    | where \"{selProvider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct HOST_s\r\n)",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "VM"
          },
          {
            "id": "84afcc6c-4c47-4422-9bb1-99a94d242561",
            "version": "KqlParameterItem/1.0",
            "name": "SAPComponent",
            "type": 1,
            "query": "SapHana_SystemAvailability_CL\r\n| summarize Count = countif(HOST_s == \"{selVmName}\")\r\n| project Result = iif(Count>0,\"SAP Hana\", \"SAP NetWeaver\")",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "0",
      "name": "parameters - 12"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "datatable(Date:datetime, Range:string)[\r\n    datetime({StartTime}), \"From\",\r\n    datetime({EndTime}), \"To\"\r\n]",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Range",
                  "formatter": 1
                },
                "rightContent": {
                  "columnMatch": "Date",
                  "formatter": 6,
                  "dateFormat": {
                    "showUtcTime": null,
                    "formatName": "shortDateTimePattern"
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "dateRangeDisplay"
          },
          {
            "type": 1,
            "content": {
              "json": "## {AlertTitle}\r\n{AlertName} | {AlertFired}"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "AlertName",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "AlertFired",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "alertDetails"
          }
        ]
      },
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Properties"
            },
            "name": "propertiesTitle"
          },
          {
            "type": 1,
            "content": {
              "json": "SAP system"
            },
            "customWidth": "20",
            "name": "sidLabel"
          },
          {
            "type": 1,
            "content": {
              "json": ": {SID}"
            },
            "customWidth": "80",
            "name": "sidValue"
          },
          {
            "type": 1,
            "content": {
              "json": "Virtual machine"
            },
            "customWidth": "20",
            "name": "vmLabel"
          },
          {
            "type": 1,
            "content": {
              "json": ": {selVmName}"
            },
            "customWidth": "80",
            "name": "text - 4"
          }
        ]
      },
      "name": "propertiesView"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "51d02a75-0ee1-491f-bfb3-53995180aebf",
            "version": "KqlParameterItem/1.0",
            "name": "Tab",
            "type": 11,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\":\"Summary\",\r\n    \"label\":\"Process availability\"},\r\n    {\"value\":\"Process\",\r\n    \"label\":\"SAP platform\"},\r\n    {\"value\":\"VM\", \r\n    \"label\": \"Azure platform\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "name": "selectionParams"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet binSize=tolong(\"{MinutesBin}\")*1m;\r\nlet hundredBin=datetime_diff(\"minute\", endTime, startTime);\r\n\r\nlet ParentAvailTable=SapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s =~ \"{SID}\" and hostname_s =~ \"{selVmName}\"\r\n| project description_s, SID_s, hostname_s, dispstatus_s, serverTimestamp_t, ApplicationServer=strcat(hostname_s, \"_\", iff(toint(instanceNr_d)<10, strcat(\"0\", toint(instanceNr_d)), tostring(toint(instanceNr_d))));\r\n\r\nParentAvailTable\r\n| make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, 1), real(null)) default=real(null) on serverTimestamp_t step binSize  by SID_s, hostname_s, description_s, ApplicationServer\r\n| project Availability=toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), SID_s, hostname_s, description_s, ApplicationServer \r\n| join kind=inner (\r\n    ParentAvailTable\r\n        | make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, 1), real(null)) default=real(null) on serverTimestamp_t step iff(hundredBin<100, 1m, hundredBin/100*1m) by SID_s, hostname_s, description_s\r\n        | project AvailabilityTrend=series_fill_const(AvailabilityTrend, 0.0), SID_s, hostname_s, description_s\r\n) on hostname_s, description_s, SID_s\r\n| where hostname_s=~\"{selVmName}\"\r\n| project description_s, SID_s, ApplicationServer, hostname_s, Availability, AvailabilityTrend\r\n| extend Action=\"View\", Action2=\"View\", SAPComponent='SAP NetWeaver'",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "description_s",
              "formatter": 1
            },
            {
              "columnMatch": "SID_s",
              "formatter": 5
            },
            {
              "columnMatch": "ApplicationServer",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "parameter",
                  "resourceIds": "Workspace",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "ApplicationServer",
                      "source": "cell",
                      "value": ""
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "SID",
                      "source": "column",
                      "value": "SID_s"
                    }
                  ]
                }
              }
            },
            {
              "columnMatch": "hostname_s",
              "formatter": 5
            },
            {
              "columnMatch": "Availability",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "50",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "100",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "AvailabilityTrend",
              "formatter": 9,
              "formatOptions": {
                "palette": "green"
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "workbookName": "Availability insights for {SID}",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "SID",
                      "source": "parameter",
                      "value": "SID"
                    },
                    {
                      "name": "TimePeriod",
                      "source": "parameter",
                      "value": "TimePeriod"
                    },
                    {
                      "name": "Provider",
                      "source": "parameter",
                      "value": "Provider"
                    },
                    {
                      "name": "SAPComponent",
                      "source": "parameter",
                      "value": "SAPComponent"
                    },
                    {
                      "name": "AlertFired",
                      "source": "parameter",
                      "value": "AlertFired"
                    },
                    {
                      "name": "AlertName",
                      "source": "parameter",
                      "value": "AlertName"
                    },
                    {
                      "name": "Tab",
                      "source": "static",
                      "value": "Process"
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "Process",
                      "source": "column",
                      "value": "description_s"
                    },
                    {
                      "name": "NwVmList",
                      "source": "static",
                      "value": "{NwVmList}"
                    },
                    {
                      "name": "selVmName",
                      "source": "static",
                      "value": "{selVmName}"
                    },
                    {
                      "name": "selProvider",
                      "source": "parameter",
                      "value": "selProvider"
                    }
                  ],
                  "viewerMode": false
                }
              }
            },
            {
              "columnMatch": "Action2",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "workbookName": "Availability insights for {SID}",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "SID",
                      "source": "parameter",
                      "value": "SID"
                    },
                    {
                      "name": "TimePeriod",
                      "source": "parameter",
                      "value": "TimePeriod"
                    },
                    {
                      "name": "Provider",
                      "source": "parameter",
                      "value": "Provider"
                    },
                    {
                      "name": "SAPComponent",
                      "source": "parameter",
                      "value": "SAPComponent"
                    },
                    {
                      "name": "AlertFired",
                      "source": "parameter",
                      "value": "AlertFired"
                    },
                    {
                      "name": "AlertName",
                      "source": "parameter",
                      "value": "AlertName"
                    },
                    {
                      "name": "Tab",
                      "source": "static",
                      "value": "VM"
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "Process",
                      "source": "column",
                      "value": "description_s"
                    },
                    {
                      "name": "selVmName",
                      "source": "static",
                      "value": "{selVmName}"
                    },
                    {
                      "name": "selProvider",
                      "source": "parameter",
                      "value": "selProvider"
                    }
                  ],
                  "viewerMode": false
                }
              }
            },
            {
              "columnMatch": "SAPComponent",
              "formatter": 5
            }
          ],
          "labelSettings": [
            {
              "columnId": "description_s",
              "label": "Process"
            },
            {
              "columnId": "SID_s",
              "label": "SID"
            },
            {
              "columnId": "ApplicationServer",
              "label": "Application Server"
            },
            {
              "columnId": "hostname_s",
              "label": "VM Name"
            },
            {
              "columnId": "Availability",
              "label": "Process Availability"
            },
            {
              "columnId": "AvailabilityTrend",
              "label": "Availability Trend"
            },
            {
              "columnId": "Action",
              "label": "SAP Metrics"
            },
            {
              "columnId": "Action2",
              "label": "Platform Metrics"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SAPComponent",
          "comparison": "isEqualTo",
          "value": "SAP NetWeaver"
        },
        {
          "parameterName": "Tab",
          "comparison": "isEqualTo",
          "value": "Summary"
        }
      ],
      "customWidth": "0",
      "name": "netweaverAvailability"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "e050e49f-0732-4d78-9716-807f15a8a820",
            "version": "KqlParameterItem/1.0",
            "name": "param_database",
            "type": 1,
            "query": "SapHana_size01_CL\r\n| where TimeGenerated > ago(1d)\r\n| where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| order by Time_Generated_t desc\r\n| take 1\r\n| project DATABASE_NAME_s",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "hidden",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "name": "parameters - 14"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet binSize=iff(bin < 60, 60m, bin*1m);\r\nlet hundredBin=datetime_diff(\"hour\", endTime, startTime);\r\n\r\nlet availability_table = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (startTime .. endTime)\r\n| where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| where HOST_s =~ \"{selVmName}\"\r\n| where SERVICE_NAME_s != \"\"\r\n| where DATABASE_NAME_s == \"{param_database}\"\r\n| extend service_event = iff(SERVICE_NAME_s == '', EVENT_NAME_s, SERVICE_NAME_s)\r\n| extend Status = case(SERVICE_ACTIVE_s == 'YES', 0,\r\n                       SERVICE_ACTIVE_s == 'STARTING', 1,\r\n                       SERVICE_ACTIVE_s == 'STOPPING', 2,                        \r\n                       SERVICE_ACTIVE_s == 'UNKNOWN', 3,\r\n                       4) //NO\r\n| project service_event, SERVICE_NAME_s, SERVICE_ACTIVE_s, Status, HOST_s, HOST_STATUS_s, HOST_ACTIVE_s, PORT_d, TimeGenerated, PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n;\r\nlet services_table = SapHana_Services_CL\r\n| where TimeGenerated > ago(24h)\r\n| where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| where HOST_s =~ \"{selVmName}\"\r\n| extend Status = case(ACTIVE_STATUS_s == 'YES', 0,\r\n                       ACTIVE_STATUS_s == 'STARTING', 1,\r\n                       ACTIVE_STATUS_s == 'STOPPING', 2,                        \r\n                       ACTIVE_STATUS_s == 'UNKNOWN', 3,\r\n                       4) //NO\r\n| project SERVICE_NAME_s, HOST_s, PORT_d, Status, ACTIVE_STATUS_s, TimeGenerated, PROVIDER_INSTANCE_s\r\n;\r\nlet finalTable = availability_table\r\n| union services_table\r\n| summarize total=count(), failureCount=countif(Status != 0) by service_event, SERVICE_NAME_s, HOST_s, PORT_d, SERVICE_ACTIVE_s, PROVIDER_INSTANCE_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 2), AvailabilityTrend = make_list(Availability) by PORT_d, SERVICE_NAME_s, HOST_s, PROVIDER_INSTANCE_s\r\n| extend Database = \"{param_database}\", id=strcat(HOST_s, \"_\", SERVICE_NAME_s), Action = \"\", Action2 = \"\", parentid=HOST_s\r\n;\r\nunion(finalTable),\r\n(finalTable\r\n| distinct HOST_s\r\n| extend id=HOST_s, Action = \"View\", Action2 = \"View\", Display=HOST_s)",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "HOST_s",
              "formatter": 5
            },
            {
              "columnMatch": "Availability",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "50",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "100",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "AvailabilityTrend",
              "formatter": 9,
              "formatOptions": {
                "palette": "green"
              }
            },
            {
              "columnMatch": "Database",
              "formatter": 5
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "Action",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "workbookName": "Availability insights for {SID}",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "SID",
                      "source": "parameter",
                      "value": "SID"
                    },
                    {
                      "name": "TimePeriod",
                      "source": "parameter",
                      "value": "TimePeriod"
                    },
                    {
                      "name": "selProvider",
                      "source": "parameter",
                      "value": "selProvider"
                    },
                    {
                      "name": "SAPComponent",
                      "source": "parameter",
                      "value": "SAPComponent"
                    },
                    {
                      "name": "AlertFired",
                      "source": "parameter",
                      "value": "AlertFired"
                    },
                    {
                      "name": "AlertName",
                      "source": "parameter",
                      "value": "AlertName"
                    },
                    {
                      "name": "Database",
                      "source": "column",
                      "value": "Database"
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "Tab",
                      "source": "static",
                      "value": "Process"
                    },
                    {
                      "name": "Service",
                      "source": "column",
                      "value": "SERVICE_NAME_s"
                    },
                    {
                      "name": "selVmName",
                      "source": "parameter",
                      "value": "selVmName"
                    }
                  ],
                  "viewerMode": false
                }
              }
            },
            {
              "columnMatch": "Action2",
              "formatter": 1,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "workbookName": "Availability insights for {SID}",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "SID",
                      "source": "parameter",
                      "value": "SID"
                    },
                    {
                      "name": "TimePeriod",
                      "source": "parameter",
                      "value": "TimePeriod"
                    },
                    {
                      "name": "selProvider",
                      "source": "parameter",
                      "value": "selProvider"
                    },
                    {
                      "name": "SAPComponent",
                      "source": "parameter",
                      "value": "SAPComponent"
                    },
                    {
                      "name": "AlertFired",
                      "source": "parameter",
                      "value": "AlertFired"
                    },
                    {
                      "name": "AlertName",
                      "source": "parameter",
                      "value": "AlertName"
                    },
                    {
                      "name": "Database",
                      "source": "column",
                      "value": "Database"
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "Tab",
                      "source": "static",
                      "value": "VM"
                    },
                    {
                      "name": "Service",
                      "source": "column",
                      "value": "Service"
                    }
                  ],
                  "viewerMode": false
                }
              }
            },
            {
              "columnMatch": "parentid",
              "formatter": 5
            },
            {
              "columnMatch": "description_s",
              "formatter": 5
            },
            {
              "columnMatch": "Service",
              "formatter": 5
            },
            {
              "columnMatch": "VM_ARM_ID_s",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "SID_s",
              "formatter": 5
            },
            {
              "columnMatch": "display_s",
              "formatter": 1
            },
            {
              "columnMatch": "hostname_s",
              "formatter": 5
            },
            {
              "columnMatch": "VM Name",
              "formatter": 5
            },
            {
              "columnMatch": "ApplicationServer",
              "formatter": 5,
              "formatOptions": {
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "parameter",
                  "resourceIds": "Workspace",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                  "typeSource": "workbook",
                  "gallerySource": "workbook",
                  "locationSource": "default",
                  "passSpecificParams": true,
                  "templateParameters": [
                    {
                      "name": "ApplicationServer",
                      "source": "cell",
                      "value": ""
                    },
                    {
                      "name": "TimeRange",
                      "source": "parameter",
                      "value": "TimeRange"
                    },
                    {
                      "name": "SID",
                      "source": "column",
                      "value": "SID_s"
                    }
                  ]
                }
              }
            },
            {
              "columnMatch": "Insights",
              "formatter": 5
            },
            {
              "columnMatch": "SAPComponent",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "idColumn": "id",
            "parentColumn": "parentid",
            "treeType": 0,
            "expanderColumn": "Display",
            "expandTopLevel": true
          },
          "labelSettings": [
            {
              "columnId": "Availability",
              "label": "Process Availability"
            },
            {
              "columnId": "AvailabilityTrend",
              "label": "Availability Trend"
            },
            {
              "columnId": "Action",
              "label": "SAP Metric"
            },
            {
              "columnId": "Action2",
              "label": " VM Metric"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SAPComponent",
          "comparison": "isEqualTo",
          "value": "SAP Hana"
        },
        {
          "parameterName": "Tab",
          "comparison": "isEqualTo",
          "value": "Summary"
        }
      ],
      "name": "hanaAvailability"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "8889e468-daa0-476b-8394-91aca14b953d",
            "version": "KqlParameterItem/1.0",
            "name": "Process",
            "type": 2,
            "isRequired": true,
            "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{SID}\"\r\n| where hostname_s == \"{selVmName}\"\r\n| distinct description_s",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tab",
          "comparison": "isEqualTo",
          "value": "Process"
        },
        {
          "parameterName": "SAPComponent",
          "comparison": "isEqualTo",
          "value": "SAP NetWeaver"
        }
      ],
      "name": "commonParams"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "95b408be-0f13-4f3d-a39a-c90b83965eb7",
            "version": "KqlParameterItem/1.0",
            "name": "Database",
            "type": 2,
            "isRequired": true,
            "query": "SapHana_size01_CL \r\n| where SYSTEM_ID_s == \"{SID}\"\r\n| where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| distinct DATABASE_NAME_s",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5194bbf3-bf8a-419e-95af-b35a177d0034",
            "version": "KqlParameterItem/1.0",
            "name": "Service",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nSapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s=~\"{Database}\"\r\n| extend Service=strcat(SERVICE_NAME_s, \" (:\", toint(PORT_d), \")\")\r\n| distinct Service",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Tab",
          "comparison": "isEqualTo",
          "value": "Process"
        },
        {
          "parameterName": "SAPComponent",
          "comparison": "isEqualTo",
          "value": "SAP Hana"
        }
      ],
      "name": "commonHanaParams"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nunion isfuzzy=true \r\n(SapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{SID}\" and hostname_s==\"{selVmName}\" and description_s==\"{Process}\"\r\n| project description_s, SID_s, hostname_s, dispstatus_s, TimeGenerated=serverTimestamp_t\r\n| make-series AvailabilityTrend=round(iff(count() > 0, toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, real(null)), 1) default=real(null) on TimeGenerated step binSize*1m\r\n| project Value=strcat(round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), \"%\"), Type=\"Availability\", Selection=\"Availability\", Tab=\"\", Order = 1),\r\n(SapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{SID}\" and hostname_s==\"{selVmName}\" and E2E_SEVERITY_s==1\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, timestamp_t, E2E_USER_s\r\n| summarize Value=tostring(count())\r\n| extend Type=\"Error Messages SM21\", Selection=\"Application\", Tab=\"SysLogs\", Order = 2),\r\n(SapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{SID}\" and hostname_s==\"{selVmName}\"\r\n| summarize GTNAME = dcount(GNAME_s) by GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize Value=tostring(count())\r\n| extend Type=\"Lock Entries SM12\", Selection=\"Application\", Tab=\"LockEntries\", Order = 3),\r\n(SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{SID}\" and hostname_s==\"{selVmName}\"\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| summarize Value=tostring(countif(STATUS_s == 'A' or STATUS_s == 'X'))\r\n| extend Type=\"Cancelled Jobs SM37\", Selection=\"Application\", Tab=\"BatchJob\", Order = 4)\r\n\r\n",
              "size": 4,
              "title": "{Process} Availability Insights",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type",
                  "formatter": 1,
                  "formatOptions": {
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "workbook",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "SelectedTab",
                          "source": "column",
                          "value": "Selection"
                        },
                        {
                          "name": "SID",
                          "source": "parameter",
                          "value": "SID"
                        },
                        {
                          "name": "selectedApplicationTab",
                          "source": "column",
                          "value": "Tab"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Order",
                "sortOrderField": 1
              }
            },
            "conditionalVisibility": {
              "parameterName": "SAPComponent",
              "comparison": "isEqualTo",
              "value": "SAP NetWeaver"
            },
            "name": "statTiles"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet binSize=iff(bin < 60, 60, bin*1);\r\n\r\nlet insightsTable=SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_LoadHistory_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\";\r\n\r\nunion \r\n(insightsTable\r\n| make-series Trend=round(max(MEMORY_USED_d / MEMORY_SIZE_d * 100), 1) default=real(null) on Time_Generated_t step binSize*1m\r\n| project Value=todouble(series_stats_dynamic(Trend)['max']), Trend, Type=\"Highest Memory Usage\", Order = 1),\r\n(insightsTable\r\n| make-series Trend=round(max(CPU_d), 1) default=real(null) on Time_Generated_t step binSize*1m\r\n| project Value=todouble(series_stats_dynamic(Trend)['max']), Trend, Type=\"Highest CPU Usage\", Order = 2),\r\n(insightsTable\r\n| make-series Trend=round(avg(MEMORY_USED_d / MEMORY_SIZE_d * 100), 1) default=real(null) on Time_Generated_t step binSize*1m\r\n| project Value=todouble(series_stats_dynamic(Trend)['avg']), Trend, Type=\"Average Memory Usage\", Order = 3),\r\n(insightsTable\r\n| make-series Trend=round(avg(CPU_d), 1) default=real(null) on Time_Generated_t step binSize*1m\r\n| project Value=todouble(series_stats_dynamic(Trend)['avg']), Trend, Type=\"Average CPU Usage\", Order = 4)\r\n\r\n",
              "size": 3,
              "title": "{Database} Server Load",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type",
                  "formatter": 1,
                  "formatOptions": {
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "workbook",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "SelectedTab",
                          "source": "column",
                          "value": "Selection"
                        },
                        {
                          "name": "SID",
                          "source": "parameter",
                          "value": "SID"
                        },
                        {
                          "name": "selectedApplicationTab",
                          "source": "column",
                          "value": "Tab"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "greenRed"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "max": 100,
                    "palette": "blue"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Order",
                "sortOrderField": 1
              }
            },
            "conditionalVisibility": {
              "parameterName": "SAPComponent",
              "comparison": "isEqualTo",
              "value": "SAP Hana"
            },
            "name": "hanaStatTiles"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet binSize=iff(bin < 60, 60, bin*1);\r\n\r\nlet disksData = SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider == \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_Disks_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s == \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\" and USAGE_TYPE_s !has \"LOG\";\r\n\r\nunion\r\n(disksData\r\n| summarize Value=round(max(toreal(USED_SIZE_d)/toreal(TOTAL_SIZE_d)*100), 1)\r\n| extend Type=\"Used\"),\r\n(disksData\r\n| summarize Value=round(100 - max(toreal(USED_SIZE_d)/toreal(TOTAL_SIZE_d)*100), 1)\r\n| extend Type=\"Free\")\r\n\r\n",
              "size": 1,
              "title": "Disk Usage",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type",
                  "formatter": 1,
                  "formatOptions": {
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "workbook",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "SelectedTab",
                          "source": "column",
                          "value": "Selection"
                        },
                        {
                          "name": "SID",
                          "source": "parameter",
                          "value": "SID"
                        },
                        {
                          "name": "selectedApplicationTab",
                          "source": "column",
                          "value": "Tab"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Order",
                "sortOrderField": 1
              },
              "chartSettings": {
                "yAxis": [
                  "Value"
                ],
                "group": "Type",
                "createOtherGroup": null,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Free",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Used",
                    "color": "red"
                  }
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "SAPComponent",
              "comparison": "isEqualTo",
              "value": "SAP Hana"
            },
            "name": "hanaDiskUsage",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet binSize=iff(bin < 60, 60, bin*1);\r\n\r\nlet services=split(\"{Service}\", \",\");\r\n\r\nlet service_name=iff(isnotempty(\"{Service}\"), tostring(split(\"{Service}\", \" (:\")[0]), \"\");\r\nlet service_port=iff(isnotempty(\"{Service}\"), replace_string(tostring(split(\"{Service}\", \" (:\")[1]), \")\", \"\"), \"\");\r\n\r\nlet insightsTable=SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider == \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_LoadHistory_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s == \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\";\r\n\r\nunion \r\n(SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\"\r\n| project DATABASE_NAME_s, SID_s=\"{SID}\", HOST_s, HOST_ACTIVE_s, TimeGenerated=Time_Generated_t\r\n| make-series AvailabilityTrend=round(iff(count() > 0, toreal(countif(HOST_ACTIVE_s == 'YES')) / toreal(count()) * 100, real(null)), 1) default=real(null) on TimeGenerated step binSize*1m\r\n| project Value=strcat(round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), \"%\"), Type=\"{Database} Availability\", Order = 1),\r\n(SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| mv-expand bagexpansion=array Service=services to typeof(string)\r\n| extend service_name=iff(isnotempty(Service), tostring(split(Service, \" (:\")[0]), \"\"), service_port=toreal(iff(isnotempty(Service), replace_string(tostring(split(Service, \" (:\")[1]), \")\", \"\"), \"\"))\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s, $right.SERVICE_NAME_s==$left.service_name and $right.PORT_d==$left.service_port\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\"\r\n| project DATABASE_NAME_s, SID_s=\"{SID}\", HOST_s, SERVICE_ACTIVE_s, TimeGenerated=Time_Generated_t, Service\r\n| make-series AvailabilityTrend=round(iff(count() > 0, toreal(countif(SERVICE_ACTIVE_s == 'YES')) / toreal(count()) * 100, real(null)), 1) default=real(null) on TimeGenerated step binSize*1m by Service\r\n| project Value=strcat(round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), \"%\"), Type=strcat(Service, \" Availability\"), Order = 2),\r\n(SapHana_License_Status_CL\r\n| where Time_Generated_t between (startTime .. endTime) and SID_s==\"{SID}\" and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| top 1 by Time_Generated_t desc\r\n| project VALID_s\r\n| extend Value=iff(VALID_s=~\"True\", \"VALID\", \"INVALID\"), Type=\"License Status\", Order = 3\r\n| project-away VALID_s)\r\n\r\n",
              "size": 3,
              "title": "{Database} Server Details",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type",
                  "formatter": 1,
                  "formatOptions": {
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "workbook",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "SelectedTab",
                          "source": "column",
                          "value": "Selection"
                        },
                        {
                          "name": "SID",
                          "source": "parameter",
                          "value": "SID"
                        },
                        {
                          "name": "selectedApplicationTab",
                          "source": "column",
                          "value": "Tab"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Order",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "SAPComponent",
                "comparison": "isEqualTo",
                "value": "SAP Hana"
              },
              {
                "parameterName": "Service",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "hanaStatTilesForService",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet binSize=iff(bin < 60, 60, bin*1);\r\n\r\nlet insightsTable=SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where \"{Provider}\" contains provider\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_LoadHistory_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\";\r\n\r\nunion \r\n(SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime) and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s==\"{Database}\"\r\n| project DATABASE_NAME_s, SID_s=\"{SID}\", HOST_s, HOST_ACTIVE_s, TimeGenerated=Time_Generated_t\r\n| make-series AvailabilityTrend=round(iff(count() > 0, toreal(countif(HOST_ACTIVE_s == 'YES')) / toreal(count()) * 100, real(null)), 1) default=real(null) on TimeGenerated step binSize*1m\r\n| project Value=strcat(round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), \"%\"), Type=\"{Database} Availability\", Order = 2),\r\n(SapHana_License_Status_CL\r\n| where Time_Generated_t between (startTime .. endTime) and SID_s==\"{SID}\" and PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n| top 1 by Time_Generated_t desc\r\n| project VALID_s\r\n| extend Value=iff(VALID_s=~\"True\", \"VALID\", \"INVALID\"), Type=\"License Status\", Order = 3\r\n| project-away VALID_s)\r\n\r\n",
              "size": 3,
              "title": "{Database} Server Details",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type",
                  "formatter": 1,
                  "formatOptions": {
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "workbook",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "SelectedTab",
                          "source": "column",
                          "value": "Selection"
                        },
                        {
                          "name": "SID",
                          "source": "parameter",
                          "value": "SID"
                        },
                        {
                          "name": "selectedApplicationTab",
                          "source": "column",
                          "value": "Tab"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Order",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "SAPComponent",
                "comparison": "isEqualTo",
                "value": "SAP Hana"
              },
              {
                "parameterName": "Service",
                "comparison": "isEqualTo"
              }
            ],
            "name": "hanaStatTilesWoService",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s==\"{SID}\" and description_s==\"{Process}\" and hostname_s==\"{selVmName}\"\r\n| project description_s, SID_s, hostname_s, dispstatus_s, TimeGenerated=serverTimestamp_t\r\n| summarize Availability=round(iff(count() > 0, toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, toreal(0)), 1) by bin(TimeGenerated, binSize * 1m)",
              "size": 1,
              "aggregation": 3,
              "title": "{Process} Availability Status Trend",
              "color": "green",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "scatterchart",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Availability"
                ],
                "showMetrics": false,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "SAPComponent",
              "comparison": "isEqualTo",
              "value": "SAP NetWeaver"
            },
            "name": "netweaverProcessAvailability"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet hundredBin=datetime_diff(\"hour\", endTime, startTime);\r\n\r\nSapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s =~ \"{selProvider}\"\r\n) on PROVIDER_INSTANCE_s\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s == \"{Database}\"\r\n| project HOST_ACTIVE_s, TimeGenerated=Time_Generated_t\r\n| summarize Availability=round(iff(count() > 0, toreal(countif(HOST_ACTIVE_s == 'YES')) / toreal(count()) * 100, real(null)), 1) by bin(TimeGenerated, iff(hundredBin<100, 1h, hundredBin/100*1h))",
              "size": 1,
              "aggregation": 3,
              "title": "{Database} Availability Status Trend",
              "color": "green",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "scatterchart",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Availability"
                ],
                "showMetrics": false,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "SAPComponent",
              "comparison": "isEqualTo",
              "value": "SAP Hana"
            },
            "name": "hanaProcessAvailability"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startTime = todatetime(\"{StartTime}\");\r\nlet endTime = todatetime(\"{EndTime}\");\r\n\r\nlet bin = tolong(\"{MinutesBin}\");\r\nlet hundredBin=datetime_diff(\"hour\", endTime, startTime);\r\n\r\nlet services=split(\"{Service}\", \",\");\r\n\r\nSapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider =~ \"{selProvider}\"\r\n| where NAME_s == \"Instance ID\" and sid == \"{SID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| mv-expand bagexpansion=array Service=services to typeof(string)\r\n| extend service_name=iff(isnotempty(Service), tostring(split(Service, \" (:\")[0]), \"\"), service_port=toreal(iff(isnotempty(Service), replace_string(tostring(split(Service, \" (:\")[1]), \")\", \"\"), \"\"))\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s =~ \"{selProvider}\" and HOST_s==\"{selVmName}\"\r\n) on PROVIDER_INSTANCE_s, $right.SERVICE_NAME_s==$left.service_name and $right.PORT_d==$left.service_port\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{SID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| where DATABASE_NAME_s == \"{Database}\"\r\n| project SERVICE_ACTIVE_s, TimeGenerated=Time_Generated_t, Service\r\n| summarize Availability=round(iff(count() > 0, toreal(countif(SERVICE_ACTIVE_s == 'YES')) / toreal(count()) * 100, real(null)), 1) by bin(TimeGenerated, iff(hundredBin<100, 1h, hundredBin/100*1h)), Service",
              "size": 1,
              "aggregation": 3,
              "title": "Service Availability Status Trend for {Database}",
              "color": "green",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "scatterchart",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Availability"
                ],
                "group": "Service",
                "createOtherGroup": null,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SAPComponent",
                "comparison": "isEqualTo",
                "value": "SAP Hana"
              },
              {
                "parameterName": "Service",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "hanaServiceAvailability"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "Process"
      },
      "name": "processInsights"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "3ed864b2-36a1-4e81-94f5-8c486a4eb4ac",
                  "version": "KqlParameterItem/1.0",
                  "name": "tableExists",
                  "type": 1,
                  "query": "let checktable = (tb:string, columnName:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(columnName, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL', 'SID_s');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL', 'SID_s');\r\nlet vms = checktable('COMMON_VM_ArmId_Mapping_CL', 'VM_ARM_ID_s');\r\nlet hana = checktable('SapHana_SystemAvailability_CL', 'PROVIDER_INSTANCE_s');\r\n\r\nprint strcat(\r\n'{\"SapNetweaver_GetSystemInstanceList_CL\":',system, ',',\r\n'\"SapNetweaver_GetProcessList_CL\":',process, ',',\r\n'\"SapHana_SystemAvailability_CL\":',hana, ',',\r\n'\"COMMON_VM_ArmId_Mapping_CL\":',vms, '}')",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b3745d6c-85d2-48df-ac33-2dd2e8f0d8df",
                  "version": "KqlParameterItem/1.0",
                  "name": "vmIdsExist",
                  "type": 1,
                  "query": "print input = parse_json('{tableExists}')\r\n| mv-apply input to typeof(dynamic) on (\r\n    project error=tostring(input[\"COMMON_VM_ArmId_Mapping_CL\"])\r\n    | where isnotempty(error)\r\n    | project error = tolong(error)\r\n)\r\n| project value=iff(error==0, true, false)",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "hidden",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "vmInsightsCheckParams"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<h1 style=\"text-align:center;\">Configure access to infrastructure to view further Insights</h1>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "42",
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "0fd2adda-e7b2-4af8-bec2-1418f7cbb4b0",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Configure Insights",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "bladeOpenContext": {
                          "bladeName": "ManageInsights.ReactView",
                          "extensionName": "Microsoft_Azure_WorkloadMonitor",
                          "bladeParameters": [
                            {
                              "name": "resourceId",
                              "source": "parameter",
                              "value": "AMSResource"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "customWidth": "20",
                  "name": "links - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "38",
                  "name": "text - 2"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Tab",
                "comparison": "isEqualTo",
                "value": "VM"
              },
              {
                "parameterName": "vmIdsExist",
                "comparison": "isNotEqualTo",
                "value": "true"
              }
            ],
            "name": "vmInsightsConfigure"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "031b807f-c5d3-472a-814e-4aa30e2968ab",
                  "version": "KqlParameterItem/1.0",
                  "name": "VM2",
                  "type": 5,
                  "query": "COMMON_VM_ArmId_Mapping_CL\r\n| where vm_name_s == \"{selVmName}\"\r\n| distinct VM_ARM_ID_s",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "5322a519-9a45-4464-98b4-26d5bdfed4f2",
                  "version": "KqlParameterItem/1.0",
                  "name": "healthData",
                  "type": 1,
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{VM2}/providers/Microsoft.ResourceHealth/availabilityStatuses\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2018-07-01\"},{\"key\":\"$filter\",\"value\":\"properties/availabilityState ne 'Available'\"}],\"batchDisabled\":true,\"transformers\":null}",
                  "isHiddenWhenLocked": true,
                  "queryType": 12
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "hidden",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "vmInsightParams"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbook109e8457-0ebd-41b2-ab4a-be21f9b89323",
              "version": "MetricsItem/2.0",
              "size": 1,
              "chartType": 2,
              "resourceType": "microsoft.compute/virtualmachines",
              "metricScope": 0,
              "resourceParameter": "VM2",
              "resourceIds": [
                "{VM2}"
              ],
              "timeContextFromParameter": "TimeRange",
              "timeContext": {
                "durationMs": 3600000
              },
              "timeGrain": "PT5M",
              "metrics": [
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--VmAvailabilityMetric",
                  "aggregation": 4,
                  "splitBy": null,
                  "columnName": "VM availability"
                }
              ],
              "title": "VM availability ({TimeRange:label})",
              "gridSettings": {
                "rowLimit": 10000
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsFixedGranularity",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "vmIdsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "vmAvailabilityMetric"
          },
          {
            "type": 10,
            "content": {
              "chartId": "workbook109e8457-0ebd-41b2-ab4a-be21f9b89323",
              "version": "MetricsItem/2.0",
              "size": 1,
              "chartType": 2,
              "resourceType": "microsoft.compute/virtualmachines",
              "metricScope": 0,
              "resourceParameter": "VM2",
              "resourceIds": [
                "{VM2}"
              ],
              "timeContextFromParameter": "TimeRange",
              "timeContext": {
                "durationMs": 3600000
              },
              "metrics": [
                {
                  "namespace": "microsoft.compute/virtualmachines",
                  "metric": "microsoft.compute/virtualmachines--VmAvailabilityMetric",
                  "aggregation": 4,
                  "splitBy": null,
                  "columnName": "VM availability"
                }
              ],
              "title": "VM availability ({TimeRange:label})",
              "gridSettings": {
                "rowLimit": 10000
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsFixedGranularity",
                "comparison": "isEqualTo",
                "value": "false"
              },
              {
                "parameterName": "vmIdsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "vmAvailabilityMetric - Auto Granularity"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "VM Health Events ({TimeRange:label})",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "No health events have been logged in this time period.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "healthData",
                    "comparison": "isEqualTo",
                    "value": "{\"value\":[],\"defaultVisualization\":\"raw\"}"
                  },
                  "name": "noInsightsNotice"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "print input = parse_json(\"{healthData:escapejson}\").value\r\n| mv-apply input to typeof(dynamic) on (\r\n    project properties=input.properties\r\n)\r\n| extend VM=\"{VM2}\"\r\n| evaluate bag_unpack(properties) : (VM: string, occuredTime: datetime, title: string, reasonType: string, summary: string, availabilityState: string, healthEventType: string, resolutionETA: datetime)\r\n| where occuredTime {TimeRange}\r\n| order by occuredTime desc",
                    "size": 3,
                    "noDataMessage": "No health events have been logged in this time period.",
                    "exportedParameters": [
                      {
                        "fieldName": "availabilityState",
                        "parameterName": "rcaAvailabilityState",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "occuredTime",
                        "parameterName": "rcaDateTime",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "title",
                        "parameterName": "rcaTitle",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "summary",
                        "parameterName": "rcaDescription",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "healthEventType",
                        "parameterName": "rcaEventType",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "resolutionETA",
                        "parameterName": "rcaResolution",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VM",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true,
                            "customColumnWidthSetting": "3%"
                          }
                        },
                        {
                          "columnMatch": "occuredTime",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "5%"
                          },
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "title",
                          "formatter": 1,
                          "tooltipFormat": {
                            "tooltip": "Click on this row to view more details on root cause."
                          }
                        },
                        {
                          "columnMatch": "reasonType",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "5%"
                          }
                        },
                        {
                          "columnMatch": "summary",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "availabilityState",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "healthEventType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "resolutionETA",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "reasonChronicity",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "rootCauseAttributionTime",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "healthEventCause",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "occuredTime",
                          "label": "Occured Time"
                        },
                        {
                          "columnId": "title",
                          "label": "Root Cause"
                        },
                        {
                          "columnId": "reasonType",
                          "label": "Reason Type"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "healthData",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "healthData",
                      "comparison": "isNotEqualTo",
                      "value": "{\"value\":[],\"defaultVisualization\":\"raw\"}"
                    }
                  ],
                  "name": "vmHealthEvents"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "These insights are only provided for SAP downtimes caused by Azure VM health events. Root causes provided by Health events does not cover 100% of VM downtimes",
                    "style": "warning"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "healthData",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "healthData",
                      "comparison": "isNotEqualTo",
                      "value": "{\"value\":[],\"defaultVisualization\":\"raw\"}"
                    }
                  ],
                  "name": "disclaimer"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<span style=\"font-size:0.8rem;\">Root Cause Analysis (RCA) - {rcaTitle}</span>\r\n\r\n<span style=\"font-size:0.8rem;\">**Availability State:** {rcaAvailabilityState}</span><br/>\r\n<span style=\"font-size:0.8rem;\">**Event Type:** {rcaEventType}</span><br/>\r\n<span style=\"font-size:0.8rem;\">**Root Cause**</span><br/>\r\n<span style=\"font-size:0.8rem;\">{rcaDescription}</span><br><br/>\r\n<span style=\"font-size:0.8rem;\">**Occured Time (UTC):** {rcaDateTime}</span><br/>\r\n<span style=\"font-size:0.8rem;\">**Resolution ETA (UTC):** {rcaResolution}</span><br/>\r\n<span style=\"font-size:0.8rem;\">**Instance Name:** {VM2:name}</span><br/>\r\n<span style=\"font-size:0.8rem;\">**Azure Resource Id:** {VM2:id}</span><br/>"
                  },
                  "conditionalVisibility": {
                    "parameterName": "rcaDateTime",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "rcaDetails"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "healthData",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "vmIdsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "healthEventGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "VM"
      },
      "name": "vmInsights"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}