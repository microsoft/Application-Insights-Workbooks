{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7a987b04-690f-4e6c-a7b0-296d2e9aa403",
            "version": "KqlParameterItem/1.0",
            "name": "AMSResource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true,
                "microsoft.hanaonazure/sapmonitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1"
          },
          {
            "id": "0a308c6a-9b50-49d9-8fec-504d7f12633e",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{AMSResource:subscriptionid}/resourceGroups/{AMSResource:resourcegroup}/providers/Microsoft.Workloads/monitors/{AMSResource:name}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[{\"path\":\"$.logAnalyticsWorkspaceArmId\",\"columnid\":\"id\",\"columnType\":\"string\"}]}}]}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1",
            "queryType": 12
          },
          {
            "id": "6371e85e-f268-42b7-a0db-5bb51a15b665",
            "version": "KqlParameterItem/1.0",
            "name": "SID",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "AlertFired",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "id": "66894963-736c-4182-9eb1-7aa23ed31ba6"
          },
          {
            "id": "ec97c82a-ee1c-46d0-923a-6cbf081b02b1",
            "version": "KqlParameterItem/1.0",
            "name": "AlertTemplate",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a8016288-60e6-4906-9950-2360e7a4beb2",
            "version": "KqlParameterItem/1.0",
            "name": "scopes",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "3c1299c9-2fdb-4d25-98ff-f7c84381057f",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "cac1f668-ad31-4771-a21e-ae61d0ebd43f",
            "version": "KqlParameterItem/1.0",
            "name": "StartTime",
            "type": 1,
            "query": "print iff(isnotempty(\"{AlertFired}\"), datetime_add(\"minute\", -30, todatetime(\"{AlertFired}\")), {TimeRange:start})",
            "crossComponentResources": [
              "{AMSResource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          },
          {
            "id": "b4489560-866b-411a-af25-5e6cb93a6e4a",
            "version": "KqlParameterItem/1.0",
            "name": "EndTime",
            "type": 1,
            "query": "print iff(isnotempty(\"{AlertFired}\"), datetime_add(\"minute\", 30, todatetime(\"{AlertFired}\")), {TimeRange:end})",
            "crossComponentResources": [
              "{AMSResource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          },
          {
            "id": "f83f538a-1996-4519-83e5-a7fa99f93994",
            "version": "KqlParameterItem/1.0",
            "name": "MinutesBin",
            "type": 1,
            "query": "let dateDiff = tolong(datetime_diff('minute', todatetime(\"{EndTime}\"), todatetime(\"{StartTime}\")));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nprint iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000)",
            "crossComponentResources": [
              "{AMSResource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          },
          {
            "id": "b3f6a77d-8cf4-463d-9c94-41ff3fe518e0",
            "version": "KqlParameterItem/1.0",
            "name": "ShowPlot",
            "type": 1,
            "query": "print iff(isnotempty(\"{MinutesBin}\") and {MinutesBin} > 0, true, false)",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "90b0f708-b8cb-4689-968f-1dbb89ef9a6e",
            "version": "KqlParameterItem/1.0",
            "name": "Provider",
            "type": 1,
            "isHiddenWhenLocked": true,
            "defaultValue": "value::all"
          },
          {
            "id": "883a1426-83cb-4242-a9fd-ff14c8207b73",
            "version": "KqlParameterItem/1.0",
            "name": "AlertName",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "4ca0f8a4-8cc1-4250-9aec-99f9f0445cb5",
            "version": "KqlParameterItem/1.0",
            "name": "Scenario",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "7c5cd3ad-962a-4061-ac96-0fc620cf2101",
            "version": "KqlParameterItem/1.0",
            "name": "InsightsMessage",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "eeda92a2-6383-448f-ba09-9ba1466495dc",
            "version": "KqlParameterItem/1.0",
            "name": "ConstituentInsights",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "7b74d397-fc8e-471d-bfcc-1e0c99fc386e",
            "version": "KqlParameterItem/1.0",
            "name": "RecommendationJson",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "47adf0f0-441b-49d1-85a8-60207a51b806",
            "version": "KqlParameterItem/1.0",
            "name": "AnomalyLoggedTime",
            "type": 1,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "18e75970-d67f-401e-a398-fba791a99ea9",
            "version": "KqlParameterItem/1.0",
            "name": "isPerformanceHRTScenario",
            "type": 1,
            "query": "print iff((\"{AlertTemplate}\" startswith \"sapnetweaver\") or (\"{Scenario}\" == \"Performance/Netweaver/HighResponseTime\"), \"true\", \"false\")",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          },
          {
            "id": "7980ea31-9383-452a-9a26-972b3b980d91",
            "version": "KqlParameterItem/1.0",
            "name": "hasRecommendations",
            "type": 1,
            "query": "WorkloadInsights_anomalyData_CL\r\n| where \"{Scope}\" has Scope_s and SID_s == \"{SID}\" and TimeGenerated == \"{AnomalyLoggedTime}\" and scenario_s == \"{Scenario}\"\r\n| where isnotempty(Recommendation_s)\r\n| distinct Recommendation_s",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "d6aba86f-6d99-4de0-b5fd-b6c9ac807cdc",
            "version": "KqlParameterItem/1.0",
            "name": "ScopeType_s",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "b526ec25-0d0a-4714-a05e-9448fc9ab6ad",
            "version": "KqlParameterItem/1.0",
            "name": "scopeData",
            "type": 1,
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "passedParams"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "44176b0f-24da-4aa3-a36f-ead4ef7cd908",
                  "version": "KqlParameterItem/1.0",
                  "name": "Scope",
                  "type": 2,
                  "query": "let scopes = \"{scopes}\";\r\nlet array = split(scopes, ',');\r\nprint array\r\n| mv-expand array\r\n| project Column1",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "mainOverviewParameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print \"Alert analysis\", \"{AlertName}\", todatetime(\"{AlertFired}\")",
              "size": 4,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.workloads/monitors",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "print_1",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Alert",
                        "text": "{0} {1}"
                      }
                    ],
                    "compositeBarSettings": {
                      "labelText": "",
                      "columnSettings": []
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "print_2",
                  "formatter": 6
                },
                "showBorder": false,
                "sortOrderField": 2,
                "size": "auto"
              },
              "textSettings": {
                "style": "header"
              }
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "AlertName",
              "comparison": "isNotEqualTo"
            },
            "name": "AlertDetails",
            "styleSettings": {
              "margin": "-10px 0px -50px -11px",
              "padding": "0px"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<strong>Insights:</strong> {ConstituentInsights}\r\n",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "ConstituentInsights",
              "comparison": "isNotEqualTo",
              "value": ""
            },
            "name": "AdvInsightsMessage"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "AlertFired",
        "comparison": "isNotEqualTo"
      },
      "name": "mainOverview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "WorkloadInsights_anomalyData_CL\r\n| where \"{Scope}\" has Scope_s and SID_s == \"{SID}\" and TimeGenerated == \"{AnomalyLoggedTime}\" and scenario_s == \"{Scenario}\"\r\n| extend ParsedJson = parse_json(Recommendation_s)\r\n| extend VM = tostring(bag_keys(ParsedJson)[0])\r\n| extend Message = split(tostring(ParsedJson[VM]), @\" | \")\r\n| mv-expand Message\r\n| distinct VM, Message = tostring(Message)",
        "size": 4,
        "title": "Recommendations",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "VM",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              }
            },
            {
              "columnMatch": "Message",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "90%"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "VM",
              "label": "Resource"
            },
            {
              "columnId": "Message",
              "label": "Recommended Actions"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "RecommendationJson",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "hasRecommendations",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "AdvInsightsRecommendations"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| summarize ResponseTime = avg(ST03_Avg_Resp_Time_d) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "aggregation": 3,
        "title": "Response time (ms)",
        "timeBrushParameterName": "iso1BrushedTime",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "ResponseTime",
              "label": "Response Time"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 23,
              "options": {
                "style": "decimal",
                "useGrouping": true,
                "maximumSignificantDigits": 1
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "AlertTemplate",
          "comparison": "isEqualTo",
          "value": "sapnetweaver-response-time"
        },
        {
          "parameterName": "ShowPlot",
          "comparison": "isEqualTo",
          "value": "true"
        },
        {
          "parameterName": "Scenario",
          "comparison": "isEqualTo"
        }
      ],
      "name": "responseTimePlot"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n \r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend appServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d)))\r\n| extend appServerAndWorkType = strcat(appServer, '-', Typ_s)\r\n| where \"{Scope}\" has appServerAndWorkType\r\n| summarize totalWP = count(), freeWP = countif(Status_s == 'Wait') by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))\r\n| extend activeWP = round(toreal(totalWP - freeWP) / toreal(totalWP) * 100, 3)",
        "size": 1,
        "aggregation": 3,
        "title": "Worker Process Utilization (%) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "nwTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "freeWP",
              "label": "Free Work Process"
            },
            {
              "seriesName": "totalWP",
              "label": "Total Work Process"
            },
            {
              "seriesName": "activeWP",
              "label": "Active Work Process"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Netweaver/WorkerProcessUtilization"
      },
      "name": "AdvInsights-NW-WPU"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n \r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s and \"{Scope}\" has Task_Type_Name_s\r\n| summarize ResponseTime = avg(ST03_Avg_Resp_Time_d) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "aggregation": 3,
        "title": "Response Time (ms) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "nwTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "ResponseTime",
              "label": "Response Time"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 23,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Netweaver/HighResponseTime"
      },
      "name": "AdvInsights-NW-HRT"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n \r\nSapNetweaver_SMON_CL\r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where \"{Scope}\" has appServer\r\n| extend totalCPU = 100 - IDLE_TOTAL_d\r\n| summarize avg(totalCPU)  by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "aggregation": 3,
        "title": "CPU Utilization (%) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "nwTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "xAxis": "TimeGenerated",
          "group": null,
          "createOtherGroup": 0,
          "seriesLabelSettings": [
            {
              "seriesName": "avg_totalCPU",
              "label": "Total CPU Utilization"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Netweaver/CPUUtilization"
      },
      "name": "AdvInsights-NW-CPUU"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n \r\nSapNetweaver_SMON_CL\r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where \"{Scope}\" has appServer\r\n| extend usedMemory = (100 - FREE_MEM_PERC_d)\r\n| summarize avg(usedMemory)  by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "aggregation": 3,
        "title": "Memory Utilization (%) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "nwTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "xAxis": "TimeGenerated",
          "group": null,
          "createOtherGroup": 0,
          "seriesLabelSettings": [
            {
              "seriesName": "avg_usedMemory",
              "label": "Total Memory Utilization"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Netweaver/MemoryUtilization"
      },
      "name": "AdvInsights-NW-MEMU"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\nlet tableSystemOverview = (\r\n    SapHana_SystemOverview_CL \r\n    | where TimeGenerated >= startTime\r\n    | extend SID_s = tostring(VALUE_s)\r\n    | extend PROVIDER_INSTANCE_s = tostring(PROVIDER_INSTANCE_s)\r\n    | where NAME_s == \"Instance ID\"\r\n    | distinct SID_s, PROVIDER_INSTANCE_s\r\n);\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated between (startTime .. endTime)\r\n| join kind=leftouter (tableSystemOverview) on PROVIDER_INSTANCE_s\r\n| where SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where \"{Scope}\" has HOST_s\r\n| summarize avg(CPU_d)  by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))\r\n",
        "size": 1,
        "aggregation": 3,
        "title": "CPU Utilization (%) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "hanaTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "xAxis": "TimeGenerated",
          "seriesLabelSettings": [
            {
              "seriesName": "avg_CPU_d",
              "label": "CPU Utilization"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Hana/CPUUtilization"
      },
      "name": "AdvInsights-Hana-CPUU"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\nlet tableSystemOverview = (\r\n    SapHana_SystemOverview_CL \r\n    | where TimeGenerated >= startTime\r\n    | extend SID_s = tostring(VALUE_s)\r\n    | extend PROVIDER_INSTANCE_s = tostring(PROVIDER_INSTANCE_s)\r\n    | where NAME_s == \"Instance ID\"\r\n    | distinct SID_s, PROVIDER_INSTANCE_s\r\n);\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated between (startTime .. endTime)\r\n| join kind=leftouter (tableSystemOverview) on PROVIDER_INSTANCE_s\r\n| where SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where \"{Scope}\" has HOST_s\r\n| summarize avg(CPU_d)  by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "title": "Memory Utilization (%) {ScopeType_s}: {Scope}",
        "timeBrushParameterName": "hanaTimebrush",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart"
      },
      "conditionalVisibility": {
        "parameterName": "Scenario",
        "comparison": "isEqualTo",
        "value": "Performance/Hana/MemoryUtilization"
      },
      "name": "AdvInsights-Hana-MEMU"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where Task_Type_Name_s==\"BCKGRD\"\r\n| summarize ResponseTime = avg(ST03_Avg_Resp_Time_d) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))",
        "size": 1,
        "aggregation": 3,
        "title": "Response time (ms) for BCKGRD tasks",
        "timeBrushParameterName": "iso2BrushedTime",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "ResponseTime",
              "label": "Response Time"
            }
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 23,
              "options": {
                "style": "decimal",
                "useGrouping": true,
                "maximumSignificantDigits": 1
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "AlertTemplate",
          "comparison": "isEqualTo",
          "value": "sapnetweaver-batch-job-jobname"
        },
        {
          "parameterName": "ShowPlot",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "longBatchJobPlot"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "09ad9401-7f67-4ab5-95cb-f38639bbf6ee",
            "version": "KqlParameterItem/1.0",
            "name": "tableExists",
            "type": 1,
            "query": "let checktable = (tb:string, columnName:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(columnName, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL', 'SID_s');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL', 'SID_s');\r\nlet vms = checktable('COMMON_VM_ArmId_Mapping_CL', 'VM_ARM_ID_s');\r\nlet hana = checktable('SapHana_SystemAvailability_CL', 'PROVIDER_INSTANCE_s');\r\n\r\nprint strcat(\r\n'{\"SapNetweaver_GetSystemInstanceList_CL\":',system, ',',\r\n'\"SapNetweaver_GetProcessList_CL\":',process, ',',\r\n'\"SapHana_SystemAvailability_CL\":',hana, ',',\r\n'\"COMMON_VM_ArmId_Mapping_CL\":',vms, '}')",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "e738e9dd-ad72-4199-bf7a-4407a583addf",
            "version": "KqlParameterItem/1.0",
            "name": "vmsExist",
            "type": 1,
            "query": "print input = parse_json('{tableExists}')\r\n| mv-apply input to typeof(dynamic) on (\r\n    project error=tostring(input[\"COMMON_VM_ArmId_Mapping_CL\"])\r\n    | where isnotempty(error)\r\n    | project error = tolong(error)\r\n)\r\n| project value=iff(error==0, true, false)",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "hidden",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "name": "parameters - 7"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "5705e3b7-a621-4f9d-94fe-f4089de60838",
            "cellValue": "selectedMenu1",
            "linkTarget": "parameter",
            "linkLabel": "Details",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "id": "1309cbcf-6cbb-433f-81fd-3c4638f1d8bb",
            "cellValue": "selectedMenu1",
            "linkTarget": "parameter",
            "linkLabel": "SAP metric",
            "subTarget": "Process",
            "style": "link"
          },
          {
            "id": "d1d6521a-422c-4601-b3e3-084dba5be24b",
            "cellValue": "selectedMenu1",
            "linkTarget": "parameter",
            "linkLabel": "Azure platform metric",
            "subTarget": "VM",
            "style": "link"
          },
          {
            "id": "13da535f-f6d0-4f4d-8972-c5044a5459fa",
            "cellValue": "selectedMenu1",
            "linkTarget": "parameter",
            "linkLabel": "Configuration drifts",
            "subTarget": "Config",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "isPerformanceHRTScenario",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "name": "navigationLink1"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "0caf51bb-cf77-4958-9826-cceba9674c8c",
            "cellValue": "selectedMenu2",
            "linkTarget": "parameter",
            "linkLabel": "SAP metric",
            "subTarget": "Process",
            "style": "link"
          },
          {
            "id": "4cdd82f5-0d0d-44d8-8a0f-01f6cec440ad",
            "cellValue": "selectedMenu2",
            "linkTarget": "parameter",
            "linkLabel": "Azure platform metric",
            "subTarget": "VM",
            "style": "link"
          },
          {
            "id": "928580f8-96da-426c-8c44-c09a22bdd91c",
            "cellValue": "selectedMenu2",
            "linkTarget": "parameter",
            "linkLabel": "Configuration drifts",
            "subTarget": "Config",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "isPerformanceHRTScenario",
        "comparison": "isNotEqualTo",
        "value": "true"
      },
      "name": "navigationLink2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "8ac307ca-e9b4-4987-b0f3-318183bc5a99",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "query": "let menu1 = '{selectedMenu1}';\r\nlet menu2 = '{selectedMenu2}';\r\nlet selectValueFromMenu1 = case(menu1 == \"Summary\", \"Summary\", \r\n                        menu1 == \"Process\", \"Process\" ,\r\n                        menu1 == \"VM\", \"VM\" , \r\n                        menu1 == \"Config\", \"Config\" ,   \r\n                        \"\");\r\nlet selectValueFromMenu2 = case(menu2 == \"Process\", \"Process\", \r\n                          menu2 == \"VM\", \"VM\" ,\r\n                          menu2 == \"Config\", \"Config\" , \r\n                            \"\");    \r\n\r\nlet chooseTab = iff((\"{isPerformanceHRTScenario}\" == \"true\"),selectValueFromMenu1, selectValueFromMenu2);\r\nprint toscalar(chooseTab);\r\n",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "name": "selectedTabParameter"
    },
    {
      "type": 1,
      "content": {
        "json": "The selected time range is too narrow to provide valuable insights.",
        "style": "error"
      },
      "conditionalVisibility": {
        "parameterName": "ShowPlot",
        "comparison": "isEqualTo",
        "value": "false"
      },
      "name": "invalidTimeAlert"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Performance insight for the selected alert. View the insights to investigate the root cause."
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Summary"
            },
            "name": "summaryPrompt"
          },
          {
            "type": 1,
            "content": {
              "json": "Key performance metrics for SAP instances."
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Process"
            },
            "name": "processPrompt"
          },
          {
            "type": 1,
            "content": {
              "json": "Key performance metrics for Azure infrastructure."
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "VM"
            },
            "name": "vmPrompt"
          },
          {
            "type": 1,
            "content": {
              "json": "The below table shows all the recommendations for Central Service Instance, App instances and Databases in the VIS.\r\n\r\nAzure Center for SAP solutions (ACSS) runs quality checks for all Virtual Instances for SAP solutions (VIS). These Quality checks validate if the SAP systems in ACSS are configured as per best practices recommended by SAP and Azure. If a VIS is not configured as per the different best practices, you will see a corresponding recommendation in Azure Advisor."
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Config"
              },
              {
                "parameterName": "vmsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "configPrompt"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where Task_Type_Name_s==\"BCKGRD\"\r\n| summarize ResponseTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Response_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    ProcessingTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Processing_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    CPUTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_CPU_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    WaitTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Queue_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    DBTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_DB_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    RollWaitTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Roll_Wait_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    GUITime = iff(sum(Total_GUI_Steps_d) > 0, toreal(sumif(Total_GUI_Time_d, Total_GUI_Steps_d > 0))/sum(Total_GUI_Steps_d), 0.0) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m)), PROVIDER_INSTANCE_s\r\n| join kind=leftouter (\r\n    SapNetweaver_SysLogs_CL \r\n    | where SID_s==\"{SID}\"\r\n    | distinct ApplicationServer=strcat(hostname_s, \"_\", iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| project TimeGenerated, ApplicationServer, ResponseTime, ProcessingTime, CPUTime, WaitTime, DBTime, RollWaitTime, GUITime\r\n| sort by ResponseTime desc\r\n| extend ResponseThresholdBreach=iff(ResponseTime < 50, false, true),\r\n    ResponseTimeDisplay=iff(ResponseTime<0.0001, \"0 ms\", iff(ResponseTime<1, strcat(round(ResponseTime * 1000, 1),\" μs\"), iff(ResponseTime < 1000, strcat(round(ResponseTime, 1),\" ms\"), iff(ResponseTime < 60000, strcat(round(ResponseTime / 1000, 1),\" s\"), strcat(round(ResponseTime / 60000, 1),\" min\"))))),\r\n    ProcessingThresholdBreach=iff(ProcessingTime < 2*CPUTime, false, true), \r\n    ProcessingTimeDisplay=iff(ProcessingTime<0.0001, \"0 ms\", iff(ProcessingTime<1, strcat(round(ProcessingTime * 1000, 1),\" μs\"), iff(ProcessingTime < 1000, strcat(round(ProcessingTime, 1),\" ms\"), iff(ProcessingTime < 60000, strcat(round(ProcessingTime / 1000, 1),\" s\"), strcat(round(ProcessingTime / 60000, 1),\" min\"))))),\r\n    WaitThresholdBreach=iff(WaitTime >= 0.1*ResponseTime and ResponseTime>=50, true, false),\r\n    WaitTimeDisplay=iff(WaitTime<0.0001, \"0 ms\", iff(WaitTime<1, strcat(round(WaitTime * 1000, 1),\" μs\"), iff(WaitTime < 1000, strcat(round(WaitTime, 1),\" ms\"), iff(WaitTime < 60000, strcat(round(WaitTime / 1000, 1),\" s\"), strcat(round(WaitTime / 60000, 1),\" min\"))))),\r\n    DBThresholdBreach=iff(DBTime < 0.4 * (ResponseTime-WaitTime), false, true),\r\n    DBTimeDisplay=iff(DBTime<0.0001, \"0 ms\", iff(DBTime<1, strcat(round(DBTime * 1000, 1),\" μs\"), iff(DBTime < 1000, strcat(round(DBTime, 1),\" ms\"), iff(DBTime < 60000, strcat(round(DBTime / 1000, 1),\" s\"), strcat(round(DBTime / 60000, 1),\" min\"))))),\r\n    RollWaitThresholdBreach=iff(RollWaitTime < 200, false, true),\r\n    RollWaitTimeDisplay=iff(RollWaitTime<0.0001, \"0 ms\", iff(RollWaitTime<1, strcat(round(RollWaitTime * 1000, 1),\" μs\"), iff(RollWaitTime < 1000, strcat(round(RollWaitTime, 1),\" ms\"), iff(RollWaitTime < 60000, strcat(round(RollWaitTime / 1000, 1),\" s\"), strcat(round(RollWaitTime / 60000, 1),\" min\"))))),\r\n    GUIThresholdBreach=iff(GUITime < 200, false, true),\r\n    GUITimeDisplay=iff(GUITime<0.0001, \"0 ms\", iff(GUITime<1, strcat(round(GUITime * 1000, 1),\" μs\"), iff(GUITime < 1000, strcat(round(GUITime, 1),\" ms\"), iff(GUITime < 60000, strcat(round(GUITime / 1000, 1),\" s\"), strcat(round(GUITime / 60000, 1),\" min\")))))\r\n| project TimeGenerated, ApplicationServer, ResponseThresholdBreach, ResponseTimeDisplay, ProcessingThresholdBreach, ProcessingTimeDisplay, WaitThresholdBreach, WaitTimeDisplay, DBThresholdBreach, DBTimeDisplay, RollWaitThresholdBreach, RollWaitTimeDisplay, GUIThresholdBreach, GUITimeDisplay, CPUTime",
                          "size": 0,
                          "title": "Request wise Response time (ms) for BCKGRD tasks",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ApplicationServer",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": true,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "parameter",
                                    "resourceIds": "Workspace",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "ApplicationServer",
                                        "source": "cell",
                                        "value": ""
                                      },
                                      {
                                        "name": "SID",
                                        "source": "parameter",
                                        "value": "SID"
                                      },
                                      {
                                        "name": "TimeRange",
                                        "source": "parameter",
                                        "value": "iso2BrushedTime"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "columnMatch": "ResponseThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"ResponseTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"ResponseTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ResponseTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "ProcessingThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"ProcessingTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"ProcessingTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProcessingTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "WaitThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"WaitTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"WaitTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "WaitTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "DBThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"DBTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"DBTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "DBTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "RollWaitThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"RollWaitTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"RollWaitTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "GUIThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"GUITimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"GUITimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "GUITime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "CPUTime",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "RollWaitTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "TimeGenerated",
                                "label": "Time generated"
                              },
                              {
                                "columnId": "ApplicationServer",
                                "label": "App server"
                              },
                              {
                                "columnId": "ResponseThresholdBreach",
                                "label": "Response time"
                              },
                              {
                                "columnId": "ProcessingThresholdBreach",
                                "label": "Processing time"
                              },
                              {
                                "columnId": "WaitThresholdBreach",
                                "label": "Wait time"
                              },
                              {
                                "columnId": "DBThresholdBreach",
                                "label": "DB time"
                              },
                              {
                                "columnId": "RollWaitThresholdBreach",
                                "label": "Roll Wait time"
                              },
                              {
                                "columnId": "GUIThresholdBreach",
                                "label": "GUI time"
                              },
                              {
                                "columnId": "CPUTime",
                                "label": "CPU time"
                              }
                            ]
                          }
                        },
                        "customWidth": "0",
                        "name": "responseTimeBreakDown"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "AlertTemplate",
                    "comparison": "isEqualTo",
                    "value": "sapnetweaver-batch-job-jobname"
                  },
                  "name": "is02Metrics"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet binSize=tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| summarize ResponseTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Response_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    ProcessingTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Processing_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    CPUTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_CPU_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    WaitTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Queue_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    DBTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_DB_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    RollWaitTime = iff(sum(Total_Steps_d) > 0, toreal(sumif(Total_Roll_Wait_Time_d, Total_Steps_d > 0))/sum(Total_Steps_d), 0.0),\r\n    GUITime = iff(sum(Total_GUI_Steps_d) > 0, toreal(sumif(Total_GUI_Time_d, Total_GUI_Steps_d > 0))/sum(Total_GUI_Steps_d), 0.0) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m)), PROVIDER_INSTANCE_s\r\n| join kind=leftouter (\r\n    SapNetweaver_SysLogs_CL \r\n    | where SID_s==\"{SID}\"\r\n    | distinct ApplicationServer=strcat(hostname_s, \"_\", iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| project TimeGenerated, ApplicationServer, ResponseTime, ProcessingTime, CPUTime, WaitTime, DBTime, RollWaitTime, GUITime\r\n| sort by ResponseTime desc\r\n| extend ResponseThresholdBreach=iff(ResponseTime < 50, false, true),\r\n    ResponseTimeDisplay=iff(ResponseTime<0.0001, \"0 ms\", iff(ResponseTime<1, strcat(round(ResponseTime * 1000, 1),\" μs\"), iff(ResponseTime < 1000, strcat(round(ResponseTime, 1),\" ms\"), iff(ResponseTime < 60000, strcat(round(ResponseTime / 1000, 1),\" s\"), strcat(round(ResponseTime / 60000, 1),\" min\"))))),\r\n    ProcessingThresholdBreach=iff(ProcessingTime < 2*CPUTime, false, true), \r\n    ProcessingTimeDisplay=iff(ProcessingTime<0.0001, \"0 ms\", iff(ProcessingTime<1, strcat(round(ProcessingTime * 1000, 1),\" μs\"), iff(ProcessingTime < 1000, strcat(round(ProcessingTime, 1),\" ms\"), iff(ProcessingTime < 60000, strcat(round(ProcessingTime / 1000, 1),\" s\"), strcat(round(ProcessingTime / 60000, 1),\" min\"))))),\r\n    WaitThresholdBreach=iff(WaitTime >= 0.1*ResponseTime and ResponseTime>=50, true, false),\r\n    WaitTimeDisplay=iff(WaitTime<0.0001, \"0 ms\", iff(WaitTime<1, strcat(round(WaitTime * 1000, 1),\" μs\"), iff(WaitTime < 1000, strcat(round(WaitTime, 1),\" ms\"), iff(WaitTime < 60000, strcat(round(WaitTime / 1000, 1),\" s\"), strcat(round(WaitTime / 60000, 1),\" min\"))))),\r\n    DBThresholdBreach=iff(DBTime < 0.4 * (ResponseTime-WaitTime), false, true),\r\n    DBTimeDisplay=iff(DBTime<0.0001, \"0 ms\", iff(DBTime<1, strcat(round(DBTime * 1000, 1),\" μs\"), iff(DBTime < 1000, strcat(round(DBTime, 1),\" ms\"), iff(DBTime < 60000, strcat(round(DBTime / 1000, 1),\" s\"), strcat(round(DBTime / 60000, 1),\" min\"))))),\r\n    RollWaitThresholdBreach=iff(RollWaitTime < 200, false, true),\r\n    RollWaitTimeDisplay=iff(RollWaitTime<0.0001, \"0 ms\", iff(RollWaitTime<1, strcat(round(RollWaitTime * 1000, 1),\" μs\"), iff(RollWaitTime < 1000, strcat(round(RollWaitTime, 1),\" ms\"), iff(RollWaitTime < 60000, strcat(round(RollWaitTime / 1000, 1),\" s\"), strcat(round(RollWaitTime / 60000, 1),\" min\"))))),\r\n    GUIThresholdBreach=iff(GUITime < 200, false, true),\r\n    GUITimeDisplay=iff(GUITime<0.0001, \"0 ms\", iff(GUITime<1, strcat(round(GUITime * 1000, 1),\" μs\"), iff(GUITime < 1000, strcat(round(GUITime, 1),\" ms\"), iff(GUITime < 60000, strcat(round(GUITime / 1000, 1),\" s\"), strcat(round(GUITime / 60000, 1),\" min\")))))\r\n| project TimeGenerated, ApplicationServer, ResponseThresholdBreach, ResponseTimeDisplay, ProcessingThresholdBreach, ProcessingTimeDisplay, WaitThresholdBreach, WaitTimeDisplay, DBThresholdBreach, DBTimeDisplay, RollWaitThresholdBreach, RollWaitTimeDisplay, GUIThresholdBreach, GUITimeDisplay, CPUTime",
                          "size": 0,
                          "title": "Request wise Response time (ms)",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ApplicationServer",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": true,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "parameter",
                                    "resourceIds": "Workspace",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "ApplicationServer",
                                        "source": "cell",
                                        "value": "ApplicationServer"
                                      },
                                      {
                                        "name": "TimeRange",
                                        "source": "parameter",
                                        "value": "iso1BrushedTime"
                                      },
                                      {
                                        "name": "SID",
                                        "source": "parameter",
                                        "value": "SID"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "columnMatch": "ResponseThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"ResponseTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"ResponseTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ResponseTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "ProcessingThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"ProcessingTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"ProcessingTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProcessingTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "WaitThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"WaitTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"WaitTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "WaitTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "DBThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"DBTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"DBTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "DBTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "RollWaitThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"RollWaitTimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"RollWaitTimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "GUIThresholdBreach",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "[\"GUITimeDisplay\"]"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "[\"GUITimeDisplay\"]"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "GUITime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "CPUTime",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "RollWaitTime",
                                "formatter": 5,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumSignificantDigits": 1
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "TimeGenerated",
                                "label": "Time generated"
                              },
                              {
                                "columnId": "ApplicationServer",
                                "label": "App server"
                              },
                              {
                                "columnId": "ResponseThresholdBreach",
                                "label": "Response time"
                              },
                              {
                                "columnId": "ProcessingThresholdBreach",
                                "label": "Processing time"
                              },
                              {
                                "columnId": "WaitThresholdBreach",
                                "label": "Wait time"
                              },
                              {
                                "columnId": "DBThresholdBreach",
                                "label": "DB time"
                              },
                              {
                                "columnId": "RollWaitThresholdBreach",
                                "label": "Roll Wait time"
                              },
                              {
                                "columnId": "GUIThresholdBreach",
                                "label": "GUI time"
                              },
                              {
                                "columnId": "CPUTime",
                                "label": "CPU time"
                              }
                            ]
                          }
                        },
                        "customWidth": "0",
                        "name": "responseTimeBreakDown"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isPerformanceHRTScenario",
                      "comparison": "isEqualTo",
                      "value": "true"
                    },
                    {
                      "parameterName": "AlertTemplate",
                      "comparison": "isNotEqualTo",
                      "value": "sapnetweaver-batch-job-jobname"
                    }
                  ],
                  "name": "is01Metrics"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "ef94f23a-7416-4593-ad8a-d5fd765e7eeb",
                        "cellValue": "https://aka.ms/saphrtguide",
                        "linkTarget": "Url",
                        "linkLabel": "Learn more",
                        "preText": "Red cell indicates a threshold breach. The threshold has been configured as per the standard SAP practices. ",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "responseLegend"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Summary"
            },
            "name": "summaryMetrics"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Batch jobs",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "💡Click on the tile to view more details"
                              },
                              "customWidth": "0",
                              "name": "batchJobsPrompt"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print dummy_miss = 1, dummy_columnV1 = dummy, dummy_records = -1 };\r\nlet tableExists = toscalar(SapNetweaver_BatchJobs_CL | count );\r\nlet tableNotExist = toscalar(SapNetweaver_BatchJobs_CL | count ) - tableExists;\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet batches = \r\nunion isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s);\r\n\r\nunion isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(\r\nunion isfuzzy=true \r\n(\r\n    batches\r\n    | where Status==\"Active\"\r\n    | summarize Value=count() by hostname_s, vmid_s\r\n    | extend Category=\"Active Jobs\"\r\n), \r\n(\r\n    batches\r\n    | summarize Value=countif(datetime_diff(\"minute\", enddatetime, startdatetime) > 30) by hostname_s, vmid_s\r\n    | extend Category=\"Runtime > 30 Minutes\"\r\n), \r\n(\r\n    batches\r\n    | where Status != 'Scheduled' and Status != 'Released' and Status != 'Ready'\r\n    | summarize Value=countif(startdatetime > planneddatetime) by hostname_s, vmid_s\r\n    | extend Category=\"Jobs With Delayed Start\"\r\n), \r\n(\r\n    batches\r\n    | where Status == 'Cancelled'\r\n    | summarize Value=count() by hostname_s, vmid_s\r\n    | extend Category=\"Cancelled Jobs\"\r\n)\r\n| order by Category, hostname_s)",
                                "size": 3,
                                "exportFieldName": "Category",
                                "exportParameterName": "batchCategory",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Category",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Value",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "vmid_s",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "name": "batchJobTiles"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| where (\"{batchCategory}\" =~ \"Jobs with Delayed Start\" and Status != 'Scheduled' and Status != 'Released' and Status != 'Ready' and startdatetime > planneddatetime) or (\"{batchCategory}\" =~ \"Active Jobs\" and Status == \"Active\") or (\"{batchCategory}\" =~ \"Runtime > 30 minutes\" and datetime_diff(\"minute\", enddatetime, startdatetime) > 30) or (\"{batchCategory}\" =~ \"Cancelled Jobs\" and Status == \"Cancelled\")\r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s, LASTCHNAME_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s)\r\n) on hostname_s\r\n| project-away hostname_s1, hostname_s\r\n| order by planneddatetime desc",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Cancelled",
                                            "representation": "cancelled",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "vmid_s",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "JOBNAME_s",
                                      "label": "Job Name"
                                    },
                                    {
                                      "columnId": "JOBCLASS_s",
                                      "label": "Job Class"
                                    },
                                    {
                                      "columnId": "PERIODIC_s",
                                      "label": "Periodic"
                                    },
                                    {
                                      "columnId": "planneddatetime",
                                      "label": "Planned Date & Time"
                                    },
                                    {
                                      "columnId": "startdatetime",
                                      "label": "Start Date & Time"
                                    },
                                    {
                                      "columnId": "enddatetime",
                                      "label": "End Date & Time"
                                    },
                                    {
                                      "columnId": "LASTCHNAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "vmid_s",
                                      "label": "VM"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "batchCategory",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "batchJobGrid"
                            }
                          ]
                        },
                        "name": "batchJobs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Short Dumps",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "💡Click on the tile to view more details"
                              },
                              "customWidth": "0",
                              "name": "batchJobsPrompt"
                            },
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "2e9fb6c4-194b-460b-afff-3b1cafaae6bb",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "sdPrograms",
                                    "label": "Program",
                                    "type": 2,
                                    "multiSelect": true,
                                    "quote": "",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapNetweaver_ShortDumps_CL \r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| distinct Program_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "shortDumpParams"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply program=split(\"{sdPrograms}\",\",\") to typeof(string) on \r\n(\r\n   project program\r\n)\r\n| where program==Program_s\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, hostname_s\r\n| summarize Value=count() by Application_Componen_s, Component_s, hostname_s",
                                "size": 3,
                                "exportedParameters": [
                                  {
                                    "fieldName": "Application_Componen_s",
                                    "parameterName": "sd_app_component",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "Component_s",
                                    "parameterName": "sd_component",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "hostname_s",
                                    "parameterName": "sd_vm",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "Program_s",
                                    "parameterName": "sd_program",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Application_Componen_s",
                                    "formatter": 1
                                  },
                                  "subtitleContent": {
                                    "columnMatch": "Component_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Value",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "vmid_s",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "name": "shortDumpTiles"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply program=split(\"{sdPrograms}\",\",\") to typeof(string) on \r\n(\r\n   project program\r\n)\r\n| where program==Program_s\r\n| where Application_Componen_s == \"{sd_app_component}\" and hostname_s == \"{sd_vm}\" and Component_s == \"{sd_component}\"\r\n| join kind=inner (\r\nCOMMON_VM_ArmId_Mapping_CL\r\n| where \"{Provider}\" contains PROVIDER_INSTANCE_s and (isempty(sid_s) or sid_s==\"{SID}\")\r\n| distinct VM_ARM_ID_s=tolower(VM_ARM_ID_s), vm_name_s) on $left.hostname_s == $right.vm_name_s\r\n| project serverTimestamp_t, Development_Class_s, Runtime_Error_s, Error_Short_Text_s, hostname_s=VM_ARM_ID_s, Application_Componen_s, Component_s, Program_s\r\n| order by serverTimestamp_t desc",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "serverTimestamp_t",
                                      "formatter": 6,
                                      "dateFormat": {
                                        "showUtcTime": null,
                                        "formatName": "shortDateTimePattern"
                                      }
                                    },
                                    {
                                      "columnMatch": "hostname_s",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "linkIsContextBlade": false,
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Cancelled",
                                            "representation": "cancelled",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "vmid_s",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "serverTimestamp_t",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "Development_Class_s",
                                      "label": "Development Class"
                                    },
                                    {
                                      "columnId": "Runtime_Error_s",
                                      "label": "Runtime Error"
                                    },
                                    {
                                      "columnId": "Error_Short_Text_s",
                                      "label": "Error Message"
                                    },
                                    {
                                      "columnId": "hostname_s",
                                      "label": "VM"
                                    },
                                    {
                                      "columnId": "Application_Componen_s",
                                      "label": "Application Component"
                                    },
                                    {
                                      "columnId": "Component_s",
                                      "label": "Component"
                                    },
                                    {
                                      "columnId": "Program_s",
                                      "label": "Program"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "sd_app_component",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "shortDumpGrid"
                            }
                          ]
                        },
                        "name": "shortDumps"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Active Work Processes",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "7a865c3e-391a-43fa-9e23-c48108fd9c2b",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "wpType",
                                    "label": "Work Process Type",
                                    "type": 2,
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| distinct Typ_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "wpParams"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply task=split(\"{wpType}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Typ_s\r\n| where Status_s == 'Run' or Status_s == 'On-Hold'\r\n| summarize arg_max(serverTimestamp_t, *) by task\r\n| extend ProcessNumber = No_d, ProcessType = Typ_s, ProcessId = Pid_d, Status = Status_s, Reason = Reason_s, Error = Err_s, CPU = Cpu_s, Time = Time_s, Program = Program_s, User = User_s, Client = Client_s\r\n| extend ApplicationServerInstance = hostname_s\r\n| project serverTimestamp_t, ApplicationServerInstance, ProcessNumber, ProcessType, ProcessId, Status, Reason, Error , CPU,Time, Program, User, Client\r\n| order by serverTimestamp_t desc",
                                "size": 1,
                                "aggregation": 3,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "serverTimestamp_t",
                                      "formatter": 6,
                                      "dateFormat": {
                                        "showUtcTime": null,
                                        "formatName": "shortDateTimePattern"
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "serverTimestamp_t",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "ApplicationServerInstance",
                                      "label": "VM"
                                    },
                                    {
                                      "columnId": "ProcessNumber",
                                      "label": "Process Number"
                                    },
                                    {
                                      "columnId": "ProcessType",
                                      "label": "Process Type"
                                    },
                                    {
                                      "columnId": "ProcessId",
                                      "label": "Process ID"
                                    }
                                  ]
                                },
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "activeWP",
                                    "freeWP"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "freeWP",
                                      "label": "Free Work Processes"
                                    },
                                    {
                                      "seriesName": "activeWP",
                                      "label": "Active Work Processes"
                                    }
                                  ]
                                }
                              },
                              "name": "wpUtilPlot"
                            }
                          ]
                        },
                        "name": "activeWPUtil"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and  SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| summarize GNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize locks = count() by GOBJ_s, GNAME_s, GUNAME_s, hostname_s",
                          "size": 0,
                          "title": "Lock entries",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "GOBJ_s",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "locks",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "GUNAME_s",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "vmid_s",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "name": "lockEntries"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endTime=todatetime(\"{EndTime}\");\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet finalBinSize=tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where Task_Type_Name_s==\"BCKGRD\"\r\n| summarize CPUTime = avg(ST03_CPU_Time_d) by bin(TimeGenerated, iff(finalBinSize<60, 1m, finalBinSize*1m))",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Average CPU time",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "CPUTime",
                                "label": "CPU Time"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumSignificantDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "avgCPUTime"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\" and Task_Type_Name_s==\"BCKGRD\"\r\n| extend DatabaseCalls =  ST03_Avg_DB_Dir_Time_d + ST03_Avg_DB_Seq_Time_d + ST03_Avg_DB_Change_Time_d  \r\n| summarize DatabaseCalls=avg(DatabaseCalls) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s ",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Database calls",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "dbCalls"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\" and Task_Type_Name_s==\"BCKGRD\"\r\n| summarize Total_DB_Time_d=avg(ST03_DB_Time_d) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Average time per DB call",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumSignificantDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "avgDBCallTime"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "AlertTemplate",
                    "comparison": "isEqualTo",
                    "value": "sapnetweaver-batch-job-jobname"
                  },
                  "name": "is02Metrics"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "34bbf036-7c35-4e8b-8035-3e00d0f589da",
                              "version": "KqlParameterItem/1.0",
                              "name": "taskTypes",
                              "label": "Task Types",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| distinct Task_Type_Name_s ",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "isPerformanceHRTScenario",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "dbFilters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\nlet taskTypes = split(\"{taskTypes}\",\",\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| where set_has_element(taskTypes, Task_Type_Name_s)\r\n| extend DatabaseCalls =  ST03_Avg_DB_Dir_Time_d + ST03_Avg_DB_Seq_Time_d + ST03_Avg_DB_Change_Time_d  \r\n| summarize DatabaseCalls=avg(DatabaseCalls) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s ",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Database calls",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "isPerformanceHRTScenario",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "dbCalls"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\nlet taskTypes=split(\"{taskTypes}\",\",\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| where set_has_element(taskTypes, Task_Type_Name_s)\r\n| summarize Total_DB_Time_d=avg(ST03_DB_Time_d) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Average time per DB call",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumSignificantDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "isPerformanceHRTScenario",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "avgDBCallTime"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Process utilization",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "7a865c3e-391a-43fa-9e23-c48108fd9c2b",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "wpType",
                                    "label": "Work Process Type",
                                    "type": 2,
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| distinct Typ_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "doNotRunWhenHidden": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "conditionalVisibility": {
                                "parameterName": "isPerformanceHRTScenario",
                                "comparison": "isEqualTo",
                                "value": "true"
                              },
                              "name": "wpParams"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply task=split(\"{wpType}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Typ_s\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, binSize * 1m)\r\n| extend activeWP = totalWP - freeWP",
                                "size": 1,
                                "aggregation": 3,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "areachart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "activeWP",
                                    "freeWP"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "freeWP",
                                      "label": "Free Work Processes"
                                    },
                                    {
                                      "seriesName": "activeWP",
                                      "label": "Active Work Processes"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "isPerformanceHRTScenario",
                                "comparison": "isEqualTo",
                                "value": "true"
                              },
                              "name": "wpUtilPlot"
                            }
                          ]
                        },
                        "name": "workProcessUtil"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and  SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| summarize GNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize locks = count() by GUNAME_s, GNAME_s, GOBJ_s, hostname_s",
                          "size": 0,
                          "title": "Lock entries",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "locks",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "purpleBlue"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "GUNAME_s",
                                "label": "Username"
                              },
                              {
                                "columnId": "GNAME_s",
                                "label": "Table Name"
                              },
                              {
                                "columnId": "GOBJ_s",
                                "label": "Object Name"
                              },
                              {
                                "columnId": "hostname_s",
                                "label": "Instance Name"
                              },
                              {
                                "columnId": "locks",
                                "label": "Lock Count"
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "GOBJ_s",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "locks",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "GUNAME_s",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "vmid_s",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "isPerformanceHRTScenario",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "lockEntries"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Batch jobs",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "💡Click on the tile to view more details"
                              },
                              "customWidth": "0",
                              "name": "batchJobsPrompt"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print dummy_miss = 1, dummy_columnV1 = dummy, dummy_records = -1 };\r\n\r\nlet startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nlet batches = \r\nunion isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s\r\n);\r\n\r\nunion isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(\r\nunion isfuzzy=true \r\n(\r\n    batches\r\n    | where Status==\"Active\"\r\n    | summarize Value=count() by hostname_s, vmid_s\r\n    | extend Category=\"Active Jobs\"\r\n), \r\n(\r\n    batches\r\n    | summarize Value=countif(datetime_diff(\"minute\", enddatetime, startdatetime) > 30) by hostname_s, vmid_s\r\n    | extend Category=\"Runtime > 30 Minutes\"\r\n), \r\n(\r\n    batches\r\n    | where Status != 'Scheduled' and Status != 'Released' and Status != 'Ready'\r\n    | summarize Value=countif(startdatetime > planneddatetime) by hostname_s, vmid_s\r\n    | extend Category=\"Jobs With Delayed Start\"\r\n)\r\n| order by Category, hostname_s)",
                                "size": 3,
                                "exportFieldName": "Category",
                                "exportParameterName": "batchCategory",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Category",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Value",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "vmid_s",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "name": "batchJobTiles"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| where (\"{batchCategory}\" =~ \"Jobs with Delayed Start\" and Status != 'Scheduled' and Status != 'Released' and Status != 'Ready' and startdatetime > planneddatetime) or (\"{batchCategory}\" =~ \"Active Jobs\" and Status == \"Active\") or (\"{batchCategory}\" =~ \"Runtime > 30 minutes\" and datetime_diff(\"minute\", enddatetime, startdatetime) > 30)\r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s, LASTCHNAME_s\r\n| order by planneddatetime desc",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Cancelled",
                                            "representation": "cancelled",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "vmid_s",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "JOBNAME_s",
                                      "label": "Job Name"
                                    },
                                    {
                                      "columnId": "JOBCLASS_s",
                                      "label": "Job Class"
                                    },
                                    {
                                      "columnId": "PERIODIC_s",
                                      "label": "Periodic"
                                    },
                                    {
                                      "columnId": "planneddatetime",
                                      "label": "Planned Date & Time"
                                    },
                                    {
                                      "columnId": "startdatetime",
                                      "label": "Start Date & Time"
                                    },
                                    {
                                      "columnId": "enddatetime",
                                      "label": "End Date & Time"
                                    },
                                    {
                                      "columnId": "LASTCHNAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "vmid_s",
                                      "label": "VM"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "batchCategory",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "batchJobGrid"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "isPerformanceHRTScenario",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "batchJobs"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isPerformanceHRTScenario",
                      "comparison": "isEqualTo",
                      "value": "true"
                    },
                    {
                      "parameterName": "AlertTemplate",
                      "comparison": "isNotEqualTo",
                      "value": "sapnetweaver-batch-job-jobname"
                    }
                  ],
                  "name": "Performance/Netweaver/HighResponseTime"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "f24c01f3-119f-4a2b-a50f-310463bceedd",
                              "version": "KqlParameterItem/1.0",
                              "name": "investigateTimeRange",
                              "label": "Time Range",
                              "type": 4,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "a63d6a68-a607-4f41-9773-c708d275274f",
                              "version": "KqlParameterItem/1.0",
                              "name": "appServer",
                              "label": "Application Server",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where SID_s == '{SID}'\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/WorkerProcessUtilization"
                        },
                        "name": "appServerFilters"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "System Logs",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "bd4da79f-78ff-4e2e-bb89-a73d227a4c51",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "severityType",
                                    "label": "Severity Type",
                                    "type": 10,
                                    "description": "Select the Serverity of the Error Message",
                                    "isRequired": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": []
                                    },
                                    "jsonData": "[\r\n    { \"value\":\"Error\", \"label\":\"Error\", \"selected\":true },\r\n    { \"value\":\"Warning\", \"label\":\"Warning\" },\r\n    { \"value\":\"Info \", \"label\":\"Info\" }\r\n]",
                                    "timeContext": {
                                      "durationMs": 86400000
                                    }
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.workloads/monitors"
                              },
                              "name": "systemLogsParameters"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = dynamic([{appServer}]);\r\nlet baseQuery = SapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (startTime..endTime)\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, serverTimestamp_t, E2E_USER_s\r\n| extend Severity = case( '{severityType}' == 'Error','1',\r\n                          '{severityType}' == 'Warning','2',\r\n                          '{severityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n\r\n",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "linechart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "error_count"
                                  ],
                                  "group": null,
                                  "createOtherGroup": 0,
                                  "showLegend": true,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "error_count",
                                      "label": "Total Error Messages",
                                      "color": "orange"
                                    }
                                  ],
                                  "showDataPoints": true,
                                  "ySettings": {
                                    "min": 0
                                  }
                                }
                              },
                              "name": "sysLogsChart"
                            }
                          ]
                        },
                        "name": "systemLogs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Short Dumps",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "08364915-1230-481a-8514-c43f354004f7",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "shortDumpUser",
                                    "label": "User",
                                    "type": 2,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = dynamic([{appServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct E2E_USER_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 86400000
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "shortDumpParameters"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = dynamic([{appServer}]);\r\nlet shortDumpUserList = dynamic([{shortDumpUser}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where array_length(shortDumpUserList) == 0 or E2E_USER_s in (shortDumpUserList)\r\n| distinct Component_s, Development_Class_s, Application_Componen_s, serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n",
                                "size": 1,
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "barchart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "error_count"
                                  ],
                                  "showLegend": true,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "error_count",
                                      "label": "Total Short Dumps",
                                      "color": "amethyst"
                                    }
                                  ]
                                }
                              },
                              "name": "shortDumpsChart"
                            }
                          ]
                        },
                        "name": "shortDumps"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Batch jobs",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "💡Click on the tile to view more details"
                              },
                              "customWidth": "0",
                              "name": "batchJobsPrompt"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print dummy_miss = 1, dummy_columnV1 = dummy, dummy_records = -1 };\r\nlet tableExists = toscalar(SapNetweaver_BatchJobs_CL | count );\r\nlet tableNotExist = toscalar(SapNetweaver_BatchJobs_CL | count ) - tableExists;\r\nlet batches = union isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({investigateTimeRange:start}) .. todatetime({investigateTimeRange:end})) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s);\r\nunion isfuzzy=true \r\n(MissingTable\r\n| where false),\r\n(union isfuzzy=true \r\n(\r\n    batches\r\n    | where Status==\"Active\"\r\n    | summarize Value=count() by hostname_s, vmid_s\r\n    | extend Category=\"Active Jobs\"\r\n), \r\n(\r\n    batches\r\n    | summarize Value=countif(datetime_diff(\"minute\", enddatetime, startdatetime) > 30) by hostname_s, vmid_s\r\n    | extend Category=\"Runtime > 30 Minutes\"\r\n), \r\n(\r\n    batches\r\n    | where Status != 'Scheduled' and Status != 'Released' and Status != 'Ready'\r\n    | summarize Value=countif(startdatetime > planneddatetime) by hostname_s, vmid_s\r\n    | extend Category=\"Jobs With Delayed Start\"\r\n), \r\n(\r\n    batches\r\n    | where Status == 'Cancelled'\r\n    | summarize Value=count() by hostname_s, vmid_s\r\n    | extend Category=\"Cancelled Jobs\"\r\n)\r\n| order by Category, hostname_s)",
                                "size": 3,
                                "exportFieldName": "Category",
                                "exportParameterName": "batchCategory",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Category",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Value",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "vmid_s",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "name": "batchJobTiles"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({investigateTimeRange:start}) .. todatetime({investigateTimeRange:end})) and SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| where (\"{batchCategory}\" =~ \"Jobs with Delayed Start\" and Status != 'Scheduled' and Status != 'Released' and Status != 'Ready' and startdatetime > planneddatetime) or (\"{batchCategory}\" =~ \"Active Jobs\" and Status == \"Active\") or (\"{batchCategory}\" =~ \"Runtime > 30 minutes\" and datetime_diff(\"minute\", enddatetime, startdatetime) > 30) or (\"{batchCategory}\" =~ \"Cancelled Jobs\" and Status == \"Cancelled\")\r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s, LASTCHNAME_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s)\r\n) on hostname_s\r\n| project-away hostname_s1, hostname_s\r\n| order by planneddatetime desc",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "tiles",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Cancelled",
                                            "representation": "cancelled",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "vmid_s",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "JOBNAME_s",
                                      "label": "Job Name"
                                    },
                                    {
                                      "columnId": "JOBCLASS_s",
                                      "label": "Job Class"
                                    },
                                    {
                                      "columnId": "PERIODIC_s",
                                      "label": "Periodic"
                                    },
                                    {
                                      "columnId": "planneddatetime",
                                      "label": "Planned Date & Time"
                                    },
                                    {
                                      "columnId": "startdatetime",
                                      "label": "Start Date & Time"
                                    },
                                    {
                                      "columnId": "enddatetime",
                                      "label": "End Date & Time"
                                    },
                                    {
                                      "columnId": "LASTCHNAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "vmid_s",
                                      "label": "VM"
                                    }
                                  ]
                                }
                              },
                              "name": "batchJobGrid"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/WorkerProcessUtilization"
                        },
                        "name": "batchJobs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Failed Updates",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = dynamic([{appServer}]);\r\nlet baseQuery = SapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize total_failed_update  = count() by bin(serverTimestamp_t, timespanInterval)",
                                "size": 1,
                                "color": "green",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "linechart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "group": null,
                                  "createOtherGroup": 0,
                                  "showLegend": true,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "total_failed_update",
                                      "label": "Update Request"
                                    }
                                  ]
                                }
                              },
                              "name": "failedUpdateChart"
                            }
                          ]
                        },
                        "name": "failedUpdates"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Scenario",
                    "comparison": "isEqualTo",
                    "value": "Performance/Netweaver/WorkerProcessUtilization"
                  },
                  "name": "Performance/Netweaver/WorkerProcessUtilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "34bbf036-7c35-4e8b-8035-3e00d0f589da",
                              "version": "KqlParameterItem/1.0",
                              "name": "appServers",
                              "label": "App Servers",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| extend instanceNr = iff(strlen(instanceNr_s) == 1, strcat('0', instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, '_', instanceNr)\r\n| distinct appServer\r\n| where appServer != \"_\"",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": [
                                "value::all"
                              ]
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/CPUUtilization"
                        },
                        "name": "appServerFilters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = split(\"{appServers}\",\",\");\r\nlet baseQuery = SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| project USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, SID_s, hostname_s, instanceNr_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend TOTAL_CPU = (100 - IDLE_TOTAL_d)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval),USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, TOTAL_CPU, serverTimestamp_t\r\n",
                          "size": 1,
                          "aggregation": 3,
                          "title": "CPU utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "yAxis": [
                              "SYS_TOTAL_d",
                              "USR_TOTAL_d"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "SYS_TOTAL_d",
                                "label": "System Utilization"
                              },
                              {
                                "seriesName": "USR_TOTAL_d",
                                "label": "User Utilization"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "cpuUtilizations"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = split(\"{appServers}\",\",\");\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| project PRIVWPNO_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PRIVWPNO_d, serverTimestamp_t",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Number Of Work Processes in Priv Modes",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "yAxis": [
                              "PRIVWPNO_d"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "PRIVWPNO_d",
                                "label": "Number Of Process In Private Mode"
                              }
                            ]
                          }
                        },
                        "name": "Number Of Work Processes in Priv Modes"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Process utilization",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "7a865c3e-391a-43fa-9e23-c48108fd9c2b",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "wpType",
                                    "label": "Work Process Type",
                                    "type": 2,
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| extend appServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d)))\r\n| distinct Typ_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "doNotRunWhenHidden": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "conditionalVisibility": {
                                "parameterName": "Scenario",
                                "comparison": "isEqualTo",
                                "value": "Performance/Netweaver/CPUUtilization"
                              },
                              "name": "wpParams"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\nlet appServerList = split(\"{appServers}\",\",\");\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply task=split(\"{wpType}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Typ_s\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, binSize * 1m)\r\n| extend activeWP = totalWP - freeWP",
                                "size": 1,
                                "aggregation": 3,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "areachart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "activeWP",
                                    "freeWP"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "freeWP",
                                      "label": "Free Work Processes"
                                    },
                                    {
                                      "seriesName": "activeWP",
                                      "label": "Active Work Processes"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Scenario",
                                "comparison": "isEqualTo",
                                "value": "Performance/Netweaver/CPUUtilization"
                              },
                              "name": "wpUtilPlot"
                            }
                          ]
                        },
                        "name": "workProcessUtil"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = split(\"{appServers}\",\",\");\r\n\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and  SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize GNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize locks = count() by GUNAME_s, GNAME_s, GOBJ_s, hostname_s",
                          "size": 0,
                          "title": "Lock entries",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "locks",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "purpleBlue"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "GUNAME_s",
                                "label": "Username"
                              },
                              {
                                "columnId": "GNAME_s",
                                "label": "Table Name"
                              },
                              {
                                "columnId": "GOBJ_s",
                                "label": "Object Name"
                              },
                              {
                                "columnId": "hostname_s",
                                "label": "Instance Name"
                              },
                              {
                                "columnId": "locks",
                                "label": "Lock Count"
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "GOBJ_s",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "locks",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "GUNAME_s",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "vmid_s",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/CPUUtilization"
                        },
                        "name": "lockEntries"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Scenario",
                    "comparison": "isEqualTo",
                    "value": "Performance/Netweaver/CPUUtilization"
                  },
                  "name": "Performance/Netweaver/CPUUtilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "34bbf036-7c35-4e8b-8035-3e00d0f589da",
                              "version": "KqlParameterItem/1.0",
                              "name": "appServers",
                              "label": "App Servers",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| extend instanceNr = iff(strlen(instanceNr_s) == 1, strcat('0', instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, '_', instanceNr)\r\n| distinct appServer\r\n| where appServer != \"_\"",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/MemoryUtilization"
                        },
                        "name": "appServerFilters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = split(\"{appServers}\",\",\");SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s, FREE_MEM_PERC_d\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend threshold_memory = ( FREE_MEM_MB_d * 100 ) / FREE_MEM_PERC_d \r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t, threshold_memory",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Memory utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "FREE_MEM_MB_d",
                              "threshold_memory"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "FREE_MEM_MB_d",
                                "label": "Free Memory (MB)"
                              },
                              {
                                "seriesName": "threshold_memory",
                                "label": "Total Memory"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "memoryUtilizations"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet appServerList = split(\"{appServers}\",\",\");\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (startTime .. endTime)\r\n| where SID_s == '{SID}'\r\n| project PRIVWPNO_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PRIVWPNO_d, serverTimestamp_t",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Number Of Work Processes in Priv Modes",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "PRIVWPNO_d"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "PRIVWPNO_d",
                                "label": "Number Of Process In Private Mode"
                              }
                            ]
                          }
                        },
                        "name": "Number Of Work Processes in Priv Modes"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Process utilization",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "7a865c3e-391a-43fa-9e23-c48108fd9c2b",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "wpType",
                                    "label": "Work Process Type",
                                    "type": 2,
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "",
                                    "delimiter": ",",
                                    "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| extend appServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d)))\r\n| distinct Typ_s",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "doNotRunWhenHidden": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "conditionalVisibility": {
                                "parameterName": "Scenario",
                                "comparison": "isEqualTo",
                                "value": "Performance/Netweaver/MemoryUtilization"
                              },
                              "name": "wpParams"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet binSize = tolong(\"{MinutesBin}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{SID}\"\r\n| mv-apply task=split(\"{wpType}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Typ_s\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, binSize * 1m)\r\n| extend activeWP = totalWP - freeWP",
                                "size": 1,
                                "aggregation": 3,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "visualization": "areachart",
                                "chartSettings": {
                                  "xAxis": "serverTimestamp_t",
                                  "yAxis": [
                                    "activeWP",
                                    "freeWP"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "freeWP",
                                      "label": "Free Work Processes"
                                    },
                                    {
                                      "seriesName": "activeWP",
                                      "label": "Active Work Processes"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Scenario",
                                "comparison": "isEqualTo",
                                "value": "Performance/Netweaver/MemoryUtilization"
                              },
                              "name": "wpUtilPlot"
                            }
                          ]
                        },
                        "name": "workProcessUtil"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\n\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and  SID_s == \"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| summarize GNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize locks = count() by GUNAME_s, GNAME_s, GOBJ_s, hostname_s",
                          "size": 0,
                          "title": "Lock entries",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "locks",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "purpleBlue"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "GUNAME_s",
                                "label": "Username"
                              },
                              {
                                "columnId": "GNAME_s",
                                "label": "Table Name"
                              },
                              {
                                "columnId": "GOBJ_s",
                                "label": "Object Name"
                              },
                              {
                                "columnId": "hostname_s",
                                "label": "Instance Name"
                              },
                              {
                                "columnId": "locks",
                                "label": "Lock Count"
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "GOBJ_s",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "locks",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "GUNAME_s",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "vmid_s",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Netweaver/MemoryUtilization"
                        },
                        "name": "lockEntries"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Scenario",
                    "comparison": "isEqualTo",
                    "value": "Performance/Netweaver/MemoryUtilization"
                  },
                  "name": "Performance/Netweaver/MemoryUtilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "980aece1-a0bf-42ec-959e-f325afa8f9fc",
                              "version": "KqlParameterItem/1.0",
                              "name": "investigateTimeRange",
                              "label": "Time Range",
                              "type": 4,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "66ba62aa-8ee4-4600-b44d-e55c4f7e9e1e",
                              "version": "KqlParameterItem/1.0",
                              "name": "hana_Provider",
                              "label": "Provider",
                              "type": 2,
                              "isRequired": true,
                              "query": "SapHana_SystemOverview_CL\r\n| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc;",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": "CS5-HANA-AIOPSTest"
                            },
                            {
                              "id": "ef736987-fff8-48c8-94bf-d6dfee51d54f",
                              "version": "KqlParameterItem/1.0",
                              "name": "License_status",
                              "type": 1,
                              "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\") \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| distinct Status",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "hanaCPUUtilizationParameters"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "License Status: **{License_status}**",
                          "style": "info"
                        },
                        "name": "System Information"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (startTime .. endTime)\r\n| where PROVIDER_INSTANCE_s == \"{hana_Provider}\"\r\n| extend Status = iff(HOST_ACTIVE_s == 'YES', 0, 1);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(TimeGenerated, timespanInterval), HOST_s\r\n| extend availability = round((availability / total) * 100, 2)\r\n| project-away total",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Availability trend",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/CPUUtilization"
                        },
                        "name": "availabilityTrend"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet table_systemoverview = SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == \"{hana_Provider}\"\r\n| project sid, provider;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated between (startTime .. endTime)\r\n| extend memory_used = MEMORY_USED_d\r\n| extend memory_size = MEMORY_SIZE_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == \"{hana_Provider}\"\r\n| project TimeGenerated, host, memory_used, memory_size\r\n| summarize max(memory_used / memory_size * 100) by host, bin(TimeGenerated, 1m)\r\n\r\n",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Memory utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/CPUUtilization"
                        },
                        "name": "memoryUtilization"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n    | where USAGE_TYPE_s !has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;\r\n",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Disk usage",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/CPUUtilization"
                        },
                        "name": "diskUsage"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n    | where USAGE_TYPE_s has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Log usage",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/CPUUtilization"
                        },
                        "name": "logUsage"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| extend host = HOST_s\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| where timestamp_load between (startTime .. endTime)\r\n| where provider == '{hana_Provider}'\r\n| project timestamp_load, nw_in, nw_out, host",
                          "size": 1,
                          "aggregation": 3,
                          "title": "NW In/Out Utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "nw_in",
                                "label": "Network in"
                              },
                              {
                                "seriesName": "nw_out",
                                "label": "Network out"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 12,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/CPUUtilization"
                        },
                        "name": "nwInOutUtilization"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Long Running Statements",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "2a869a0e-816e-4118-8570-18ab853f256a",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "check_if_longrunningtransactions_CL_exists",
                                    "type": 1,
                                    "isRequired": true,
                                    "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"Type\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet longrunningtransactions = checktable('SapHana_LongRunningTransactions_CL');\r\nprint longrunningtransactions;",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "isHiddenWhenLocked": true,
                                    "timeContext": {
                                      "durationMs": 86400000
                                    },
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "longRunningStatementsCheck"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapHana_LongRunningTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n| where TimeGenerated between (startTime .. endTime)\r\n| project TimeGenerated, APPLICATION_USER_NAME_s, DURATION_d, THREAD_ID_s, USER_NAME_s, AUTO_COMMIT_s, TRANSACTION_ID_s, UPDATE_TRANSACTION_ID_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "APPLICATION_USER_NAME_s",
                                      "label": "Application User Name"
                                    },
                                    {
                                      "columnId": "DURATION_d",
                                      "label": "Duration"
                                    },
                                    {
                                      "columnId": "THREAD_ID_s",
                                      "label": "Thread ID"
                                    },
                                    {
                                      "columnId": "USER_NAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "AUTO_COMMIT_s",
                                      "label": "Commit Mode"
                                    },
                                    {
                                      "columnId": "TRANSACTION_ID_s",
                                      "label": "Transaction ID"
                                    },
                                    {
                                      "columnId": "UPDATE_TRANSACTION_ID_s",
                                      "label": "Write Transaction ID"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "check_if_longrunningtransactions_CL_exists",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": false,
                              "name": "longRunningStatementsTable"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data available for Long Running Statement.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "check_if_longrunningtransactions_CL_exists",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": " Long Running Statement - no data text "
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "name": "Long Running Statements"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Scenario",
                    "comparison": "isEqualTo",
                    "value": "Performance/Hana/CPUUtilization"
                  },
                  "name": "Performance/Hana/CPUUtilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "980aece1-a0bf-42ec-959e-f325afa8f9fc",
                              "version": "KqlParameterItem/1.0",
                              "name": "investigateTimeRange",
                              "label": "Time Range",
                              "type": 4,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "66ba62aa-8ee4-4600-b44d-e55c4f7e9e1e",
                              "version": "KqlParameterItem/1.0",
                              "name": "hana_Provider",
                              "label": "Provider",
                              "type": 2,
                              "isRequired": true,
                              "query": "SapHana_SystemOverview_CL\r\n| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc;",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": "CS5-HANA-AIOPSTest"
                            },
                            {
                              "id": "ef736987-fff8-48c8-94bf-d6dfee51d54f",
                              "version": "KqlParameterItem/1.0",
                              "name": "License_status",
                              "type": 1,
                              "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\") \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| distinct Status",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "hanaMemoryUtilizationParameters"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "License Status: **{License_status}**",
                          "style": "info"
                        },
                        "name": "System Information"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (startTime .. endTime)\r\n| where PROVIDER_INSTANCE_s == \"{hana_Provider}\"\r\n| extend Status = iff(HOST_ACTIVE_s == 'YES', 0, 1);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(TimeGenerated, timespanInterval), HOST_s\r\n| extend availability = round((availability / total) * 100, 2)\r\n| project-away total",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Availability trend",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "availabilityTrend"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet table_systemoverview = SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == \"{hana_Provider}\"\r\n| distinct sid, provider;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated between (startTime .. endTime)\r\n| extend cpu = CPU_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == \"{hana_Provider}\"\r\n| project TimeGenerated, host, cpu\r\n| summarize max(cpu) by host, bin(TimeGenerated, 1m)\r\n",
                          "size": 1,
                          "aggregation": 3,
                          "title": "CPU utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "cpuUtilization"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n    | where USAGE_TYPE_s !has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;\r\n",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Disk usage",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "diskUsage"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nlet baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    | where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n    | where USAGE_TYPE_s has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Log usage",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 23,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "logUsage"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| extend host = HOST_s\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| where timestamp_load between (startTime .. endTime)\r\n| where provider == '{hana_Provider}'\r\n| project timestamp_load, nw_in, nw_out, host",
                          "size": 1,
                          "aggregation": 3,
                          "title": "NW In/Out Utilization",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "timechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "nw_in",
                                "label": "Network in "
                              },
                              {
                                "seriesName": "nw_out",
                                "label": "Network out"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 46,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "nwInOutUtilization"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Long Running Statements",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "parameters": [
                                  {
                                    "id": "2a869a0e-816e-4118-8570-18ab853f256a",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "check_if_longrunningtransactions_CL_exists",
                                    "type": 1,
                                    "isRequired": true,
                                    "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"Type\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet longrunningtransactions = checktable('SapHana_LongRunningTransactions_CL');\r\nprint longrunningtransactions;",
                                    "crossComponentResources": [
                                      "{Workspace}"
                                    ],
                                    "isHiddenWhenLocked": true,
                                    "timeContext": {
                                      "durationMs": 86400000
                                    },
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "doNotRunWhenHidden": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "longRunningStatementsCheck"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapHana_LongRunningTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{hana_Provider}'\r\n| where TimeGenerated between (startTime .. endTime)\r\n| project TimeGenerated, APPLICATION_USER_NAME_s, DURATION_d, THREAD_ID_s, USER_NAME_s, AUTO_COMMIT_s, TRANSACTION_ID_s, UPDATE_TRANSACTION_ID_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspace}"
                                ],
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "APPLICATION_USER_NAME_s",
                                      "label": "Application User Name"
                                    },
                                    {
                                      "columnId": "DURATION_d",
                                      "label": "Duration"
                                    },
                                    {
                                      "columnId": "THREAD_ID_s",
                                      "label": "Thread ID"
                                    },
                                    {
                                      "columnId": "USER_NAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "AUTO_COMMIT_s",
                                      "label": "Commit Mode"
                                    },
                                    {
                                      "columnId": "TRANSACTION_ID_s",
                                      "label": "Transaction ID"
                                    },
                                    {
                                      "columnId": "UPDATE_TRANSACTION_ID_s",
                                      "label": "Write Transaction ID"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "check_if_longrunningtransactions_CL_exists",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                },
                                {
                                  "parameterName": "Scenario",
                                  "comparison": "isEqualTo",
                                  "value": "Performance/Hana/MemoryUtilization"
                                }
                              ],
                              "showPin": false,
                              "name": "longRunningStatementsTable"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data available for Long Running Statement.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "check_if_longrunningtransactions_CL_exists",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": " Long Running Statement - no data text "
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "Scenario",
                          "comparison": "isEqualTo",
                          "value": "Performance/Hana/MemoryUtilization"
                        },
                        "name": "Long Running Statements"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Scenario",
                    "comparison": "isEqualTo",
                    "value": "Performance/Hana/MemoryUtilization"
                  },
                  "name": "Performance/Hana/MemoryUtilization"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Process"
            },
            "name": "sapMetrics"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<h1 style=\"text-align:center;\">Configure access to infrastructure to view further Insights</h1>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "42",
                  "name": "text - 2"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "f7ead4d9-b990-4ade-a58d-74e8b6800936",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Configure Insights",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "bladeOpenContext": {
                          "bladeName": "ManageInsights.ReactView",
                          "extensionName": "Microsoft_Azure_WorkloadMonitor",
                          "bladeParameters": [
                            {
                              "name": "resourceId",
                              "source": "parameter",
                              "value": "AMSResource"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "customWidth": "20",
                  "name": "links - 1"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "38",
                  "name": "text - 3"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "VM"
              },
              {
                "parameterName": "vmsExist",
                "comparison": "isNotEqualTo",
                "value": "true"
              }
            ],
            "name": "vmMetricsCheck"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "c955a4d7-7a6b-43de-965f-65b22f495023",
                        "version": "KqlParameterItem/1.0",
                        "name": "vmsList",
                        "type": 5,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| distinct vmid_s",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ]
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "d59e50c7-39f2-4b76-8417-351958b606ab",
                        "version": "KqlParameterItem/1.0",
                        "name": "vmsListHana",
                        "type": 5,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapHana_SystemOverview_CL \r\n| distinct VALUE_s, PROVIDER_INSTANCE_s\r\n| where VALUE_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| distinct vmid_s",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "vmParams"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "ac31d089-8ead-48a0-858a-d6ba90f0b6c8",
                        "version": "KqlParameterItem/1.0",
                        "name": "isAdvInsightsNetWeaver",
                        "type": 1,
                        "query": "print iff(\"{AlertTemplate}\" == \"advanced-insights\" and \"{Scenario}\" startswith \"Performance/NetWeaver/\", \"true\", \"false\")",
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.workloads/monitors"
                      },
                      {
                        "id": "483c7921-65fb-415c-8d52-24f54530663d",
                        "version": "KqlParameterItem/1.0",
                        "name": "isAdvInsightsHana",
                        "type": 1,
                        "query": "print iff(\"{AlertTemplate}\" == \"advanced-insights\" and \"{Scenario}\" startswith \"Performance/Hana/\", \"true\", \"false\")",
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.workloads/monitors"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.workloads/monitors"
                  },
                  "name": "parameters - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook0a76b683-d423-4ddb-8f3d-9def82b4bc5f",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso1BrushedTime",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4,
                              "columnName": "CPU utilization (%)"
                            }
                          ],
                          "title": "CPU utilization (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "cpuPercent"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook67e58e11-00a7-4413-a898-001a32cbbf0c",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso1BrushedTime",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk IOPS Consumed Percentage",
                              "aggregation": 4,
                              "columnName": "Data Disk IOPS consumed (%)"
                            }
                          ],
                          "title": "Data Disk IOPS consumed (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "dataDiskIOPS"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookc534ab03-093b-4cdb-be6c-9225fb625677",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso1BrushedTime",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network In Total",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network Out Total",
                              "aggregation": 4
                            }
                          ],
                          "title": "Network In/Out Total",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "networkIO"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "AlertTemplate",
                    "comparison": "isEqualTo",
                    "value": "sapnetweaver-response-time"
                  },
                  "name": "iso1Metrics"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook0a76b683-d423-4ddb-8f3d-9def82b4bc5f",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso2BrushedTime",
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4,
                              "columnName": "CPU utilization (%)"
                            }
                          ],
                          "title": "CPU utilization (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "cpuPercent"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook67e58e11-00a7-4413-a898-001a32cbbf0c",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso2BrushedTime",
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk IOPS Consumed Percentage",
                              "aggregation": 4,
                              "columnName": "Data Disk IOPS consumed (%)"
                            }
                          ],
                          "title": "Data Disk IOPS consumed (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "dataDiskIOPS"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookc534ab03-093b-4cdb-be6c-9225fb625677",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "iso2BrushedTime",
                          "timeContext": {
                            "durationMs": 3600000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Available Memory Bytes",
                              "aggregation": 4
                            }
                          ],
                          "title": "Available Memory",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "availableMem"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "AlertTemplate",
                    "comparison": "isEqualTo",
                    "value": "sapnetweaver-batch-job-jobname"
                  },
                  "name": "iso2Metrics"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook0a76b683-d423-4ddb-8f3d-9def82b4bc5f",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsListHana",
                          "resourceIds": [
                            "{vmsListHana}"
                          ],
                          "timeContextFromParameter": "hanaTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--CPU Credits Consumed",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "CPU Utilization (avg)"
                            }
                          ],
                          "title": "CPU utilization (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "cpuPercent"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook67e58e11-00a7-4413-a898-001a32cbbf0c",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsListHana",
                          "resourceIds": [
                            "{vmsListHana}"
                          ],
                          "timeContextFromParameter": "hanaTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk IOPS Consumed Percentage",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "Data Disk IOPS consumed (%)"
                            }
                          ],
                          "title": "Data Disk IOPS consumed (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "dataDiskIOPS"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookc534ab03-093b-4cdb-be6c-9225fb625677",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsListHana",
                          "resourceIds": [
                            "{vmsListHana}"
                          ],
                          "timeContextFromParameter": "hanaTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Available Memory Bytes",
                              "aggregation": 4,
                              "splitBy": null
                            }
                          ],
                          "title": "Available Memory",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "availableMem"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "isAdvInsightsHana",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "name": "advinsights-hana"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "c955a4d7-7a6b-43de-965f-65b22f495023",
                              "version": "KqlParameterItem/1.0",
                              "name": "vmsList",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| distinct vmid_s",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ]
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "vmParams"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook0a76b683-d423-4ddb-8f3d-9def82b4bc5f",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "nwTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "CPU utilization (%)"
                            }
                          ],
                          "title": "CPU utilization (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "cpuPercent"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook67e58e11-00a7-4413-a898-001a32cbbf0c",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "nwTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk IOPS Consumed Percentage",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "Data Disk IOPS consumed (%)"
                            }
                          ],
                          "title": "Data Disk IOPS consumed (%)",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "dataDiskIOPS"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookc534ab03-093b-4cdb-be6c-9225fb625677",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "vmsList",
                          "resourceIds": [
                            "{vmsList}"
                          ],
                          "timeContextFromParameter": "nwTimebrush",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network In Total",
                              "aggregation": 4,
                              "splitBy": null
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Network Out Total",
                              "aggregation": 4
                            }
                          ],
                          "title": "Network In/Out Total",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "name": "networkIO"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "isAdvInsightsNetWeaver",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "name": "advinsights-netweaver"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "VM"
              },
              {
                "parameterName": "vmsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "vmMetrics"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<h1 style=\"text-align:center;\">Configure access to infrastructure to view further Insights</h1>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "42",
                  "name": "PreConfigureBuffer"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "04f58472-2dda-4c18-89a8-ea336cc5f36c",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Configure Insights",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "bladeOpenContext": {
                          "bladeName": "ManageInsights.ReactView",
                          "extensionName": "Microsoft_Azure_WorkloadMonitor",
                          "bladeParameters": [
                            {
                              "name": "resourceId",
                              "source": "parameter",
                              "value": "AMSResource"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "customWidth": "20",
                  "name": "links - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "38",
                  "name": "text - 3"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Config"
              },
              {
                "parameterName": "vmsExist",
                "comparison": "isNotEqualTo",
                "value": "true"
              }
            ],
            "name": "configDriftsCheck"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "57b20221-2452-4bb1-8043-9c9bc2760b89",
                        "version": "KqlParameterItem/1.0",
                        "name": "perfVMs",
                        "type": 5,
                        "multiSelect": true,
                        "quote": "\"",
                        "delimiter": ",",
                        "query": "let startTime=todatetime(\"{StartTime}\");\r\nlet endTime=todatetime(\"{EndTime}\");\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{SID}\" and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{SID}\") and \"{Provider}\" contains PROVIDER_INSTANCE_s\r\n    | distinct vmid_s=tolower(VM_ARM_ID_s), hostname_s=tolower(vm_name_s), PROVIDER_INSTANCE_s\r\n) on PROVIDER_INSTANCE_s\r\n| distinct vmid_s",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "68019b36-75d7-4cef-8fef-39fe31e31d29",
                        "version": "KqlParameterItem/1.0",
                        "name": "subscriptions",
                        "type": 6,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "print subscriptionId = split(replace_string(\"{perfVMs:subscriptionId}\", \" \", \"\"), \",\")\r\n| mv-apply subscriptionId to typeof(string) on \r\n(\r\n   project subscriptionId\r\n)\r\n| distinct subscriptionId",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "hidden",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "name": "vmDetails"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type == 'microsoft.advisor/recommendations'and properties['recommendationTypeId'] in (\"fad6ef33-8ee0-4b11-b6b9-27c927a6d06d\", \"a742dd2f-a022-45a2-8948-6741b460c461\", \"7f921999-e9e3-4193-8b77-10382beb4dc9\", \"b081afb7-0106-4b69-8bc6-9f9ea1e57728\")\r\n| project SID=tostring(split(properties['resourceMetadata']['resourceId'],'/',8)[0]), VM=split(tostring(properties['extendedProperties']['VMsAffected']),\",\"), recommendationTypeId=tostring(properties['recommendationTypeId']), solution=tostring(properties['shortDescription']['solution'])\r\n| where SID==\"{SID}\"\r\n| mv-expand VM to typeof(string)\r\n| where isnotempty(VM)\r\n| distinct VM, solution",
                    "size": 0,
                    "noDataMessage": "No configuration drifts logged in the given time period.",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VM",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20%"
                          }
                        },
                        {
                          "columnMatch": "solution",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "80%"
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "subscriptions",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "configDriftsGrid"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Config"
              },
              {
                "parameterName": "vmsExist",
                "comparison": "isEqualTo",
                "value": "true"
              }
            ],
            "name": "configDrifts"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "ShowPlot",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "name": "visibilityCheck"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}