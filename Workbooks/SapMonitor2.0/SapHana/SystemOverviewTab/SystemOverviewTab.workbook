{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e941749d-b9a6-4746-95b4-8ab2a7087c03",
                  "version": "KqlParameterItem/1.0",
                  "name": "SID",
                  "type": 1,
                  "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Instance ID\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s\r\n\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "67e9649e-b357-489c-9894-1b5424010830",
                  "version": "KqlParameterItem/1.0",
                  "name": "Distributed",
                  "type": 1,
                  "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Distributed\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "6502c4ea-9230-4800-b158-7b35906df7f7",
                  "version": "KqlParameterItem/1.0",
                  "name": "Version",
                  "type": 1,
                  "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Version\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s;",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b836f182-c63b-4aa0-bbf1-b696935f7b7d",
                  "version": "KqlParameterItem/1.0",
                  "name": "Database",
                  "type": 1,
                  "query": "SapHana_size01_CL\r\n//| where TimeGenerated > ago(1d)\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| project DATABASE_NAME_s\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "3c5e1bb0-e2fb-4a1d-b56d-2c870fc63040",
                  "version": "KqlParameterItem/1.0",
                  "name": "Licence_status",
                  "type": 1,
                  "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\") \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| distinct Status",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "00b897e3-42d1-4c10-97bf-c1b6f7575f33",
                  "version": "KqlParameterItem/1.0",
                  "name": "Parent_DB",
                  "type": 1,
                  "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project parent_database\r\n| take 1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "61320a01-01e4-498c-9ed0-991dc5622376",
                  "version": "KqlParameterItem/1.0",
                  "name": "Backup_ID",
                  "type": 1,
                  "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project last_successful_backup_id\r\n| take 1\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "1257be9c-f5a6-48f0-be83-40dadc7bed22",
                  "version": "KqlParameterItem/1.0",
                  "name": "Backup_Time",
                  "type": 1,
                  "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project last_successful_backup_time\r\n| take 1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "param_neverset",
              "comparison": "isEqualTo",
              "value": "999"
            },
            "name": "parameters - 10"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let table_hostconfig = SapHana_HostConfig_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| extend timestamp_hostconfig = TimeGenerated\r\n| extend host = tostring(HOST_s)\r\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\r\n| extend active = tolower(HOST_ACTIVE_s)\r\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\r\n| sort by host asc\r\n| project timestamp_hostconfig, host, role, active\r\n;\r\nlet table_load_host = SapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| extend host = HOST_s\r\n| extend cpu = CPU_d\r\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_load {param_timeframe}\r\n;\r\nlet table_highest_cpu = table_load_host\r\n| make-series max(cpu) default=0 on timestamp_load step {param_timeframe:grain}  by host\r\n| extend value = todouble(series_stats_dynamic(max_cpu)['max'])\r\n| extend timeseries = max_cpu\r\n| sort by value desc\r\n| extend type = \"Highest CPU\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_highest_memory = table_load_host\r\n| make-series max(memory) default=0 on timestamp_load step {param_timeframe:grain} by host\r\n| extend value = todouble(series_stats_dynamic(max_memory)['max'])\r\n| extend timeseries = max_memory\r\n| sort by value desc\r\n| extend type = \"Highest Memory\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_average_cpu = table_load_host\r\n| make-series avg(cpu) default=0 on timestamp_load step {param_timeframe:grain}  by host\r\n| extend value = todouble(series_stats_dynamic(avg_cpu)['avg'])\r\n| extend timeseries = avg_cpu\r\n| sort by value desc\r\n| extend type = \"Average CPU\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_average_memory = table_load_host\r\n| make-series avg(memory) default=0 on timestamp_load step {param_timeframe:grain} by host\r\n| extend value = todouble(series_stats_dynamic(avg_memory)['avg'])\r\n| extend timeseries = avg_memory\r\n| sort by value desc\r\n| extend type = \"Average Memory\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\ntable_highest_cpu\r\n| union table_highest_memory, table_average_cpu, table_average_memory\r\n| sort by type desc",
                    "size": 1,
                    "title": "Servers with most load",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "host",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "value",
                        "formatter": 12,
                        "formatOptions": {
                          "max": 100,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "timeseries",
                        "formatter": 21,
                        "formatOptions": {
                          "max": 100,
                          "palette": "blue"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "100",
                  "showPin": true,
                  "name": "query - max load",
                  "styleSettings": {
                    "maxWidth": "90%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == '{param_provider}'\r\n| project sid, provider\r\n;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend cpu = CPU_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == '{param_provider}'\r\n| project TimeGenerated, host, cpu\r\n| summarize max(cpu) by host, bin(TimeGenerated, {param_timeframe:grain})\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "CPU Utilization",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "showMetrics": false,
                      "showLegend": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        },
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "100",
                  "showPin": true,
                  "name": "CPU Utilization",
                  "styleSettings": {
                    "padding": "2%",
                    "maxWidth": "100%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == '{param_provider}'\r\n| project sid, provider\r\n;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend memory_used = MEMORY_USED_d\r\n| extend memory_size = MEMORY_SIZE_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == '{param_provider}'\r\n| project TimeGenerated, host, memory_used, memory_size\r\n| summarize max(memory_used / memory_size * 100) by host, bin(TimeGenerated, {param_timeframe:grain})\r\n",
                    "size": 0,
                    "title": "Memory Utilization",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "showMetrics": false,
                      "showLegend": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        },
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "100",
                  "showPin": true,
                  "name": "Memory Utilzation Query",
                  "styleSettings": {
                    "padding": "2%",
                    "maxWidth": "100%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_Disks_CL \r\n    | where Time_Generated_t {param_timeframe}\r\n    | where PROVIDER_INSTANCE_s == '{param_provider}'\r\n    | where USAGE_TYPE_s !has \"LOG\"\r\n    | summarize UsedPct = max(USED_SIZE_d / TOTAL_SIZE_d * 100), FreePct = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100) by PATH_s;",
                    "size": 1,
                    "aggregation": 2,
                    "title": "Disk Usage",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "barchart",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "USAGE_TYPE_s",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Used_Size",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "xAxis": "PATH_s",
                      "yAxis": [
                        "UsedPct",
                        "FreePct"
                      ],
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "UsedPct",
                          "label": "Used%",
                          "color": "orange"
                        },
                        {
                          "seriesName": "FreePct",
                          "label": "Free%",
                          "color": "green"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        },
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Disk Usage",
                  "styleSettings": {
                    "padding": "2%",
                    "maxWidth": "50%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_Disks_CL \r\n    | where Time_Generated_t {param_timeframe}\r\n    | where PROVIDER_INSTANCE_s == '{param_provider}'\r\n    | where USAGE_TYPE_s has \"LOG\"\r\n    | summarize UsedPct = max(USED_SIZE_d / TOTAL_SIZE_d * 100), FreePct = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100) by PATH_s;",
                    "size": 1,
                    "aggregation": 2,
                    "title": "Log Usage",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "barchart",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "USAGE_TYPE_s",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Used_Size",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "xAxis": "PATH_s",
                      "yAxis": [
                        "UsedPct",
                        "FreePct"
                      ],
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "UsedPct",
                          "label": "Used%",
                          "color": "orange"
                        },
                        {
                          "seriesName": "FreePct",
                          "label": "Free%",
                          "color": "green"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        },
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "Log Usage",
                  "styleSettings": {
                    "padding": "2%",
                    "maxWidth": "50%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| extend host = HOST_s\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| where timestamp_load {param_timeframe}\r\n| where provider == '{param_provider}'\r\n| project timestamp_load, nw_in, nw_out, host\r\n;",
                    "size": 1,
                    "aggregation": 3,
                    "title": "NW In/Out Utilization",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "host",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "nw_in",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "yAxis": [
                        "nw_in",
                        "nw_out"
                      ],
                      "xSettings": {
                        "numberFormatSettings": {
                          "unit": 46,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      },
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 46,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "showPin": true,
                  "name": "Nw In/ Nw Out",
                  "styleSettings": {
                    "padding": "2%"
                  }
                }
              ]
            },
            "customWidth": "75",
            "name": "System Overview - left panel",
            "styleSettings": {
              "maxWidth": "100%"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "System Information",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "SID: **{SID}**<br>\r\nDistributed: **{Distributed}**<br>\r\nVersion: **{Version}**<br>\r\nDatabase: **{Database}**<br>\r\nLicence Status: **{Licence_status}**"
                        },
                        "showPin": false,
                        "name": "System Information"
                      }
                    ]
                  },
                  "customWidth": "100",
                  "name": "System Information"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Last Successful Backup",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "No backup data available for this instance",
                          "style": "info"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "Backup_Time",
                            "comparison": "isEqualTo"
                          },
                          {
                            "parameterName": "Parent_DB",
                            "comparison": "isEqualTo"
                          },
                          {
                            "parameterName": "Backup_ID",
                            "comparison": "isEqualTo"
                          }
                        ],
                        "name": "Backup Warning"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Database : **{Parent_DB}** <br>\r\nBackup ID : **{Backup_ID}** <br>\r\nBackup Time: **{Backup_Time}** <br>"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "param_check_backup",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          {
                            "parameterName": "Parent_DB",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "Backup_ID",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "Backup_Time",
                            "comparison": "isNotEqualTo"
                          }
                        ],
                        "name": "Last Successful Backup"
                      }
                    ]
                  },
                  "customWidth": "100",
                  "name": "group - 2"
                }
              ]
            },
            "customWidth": "25",
            "name": "System Overview - right panel"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\n\tUpdated every minute.\r\n</div>"
            },
            "name": "text - 3"
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}