{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "4b3d76d9-8ca2-4ae1-8aa4-f3c8f894fe87",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "Backup",
                  "subTarget": "Backup",
                  "style": "link"
                },
                {
                  "id": "82d423c6-dfa9-415c-9fb1-107ce4c0c023",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "Health",
                  "subTarget": "Health",
                  "style": "link"
                },
                {
                  "id": "ed5c5bfc-58f4-4dac-82ae-05f44034ecf9",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "Replication",
                  "subTarget": "Replication",
                  "style": "link"
                },
                {
                  "id": "cf4d8e59-9228-4883-987f-d8b5355ea523",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "License",
                  "subTarget": "License",
                  "style": "link"
                },
                {
                  "id": "8616a6a5-7721-4cd7-a1ac-d93f65f826c2",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "DataSize",
                  "subTarget": "DataSize",
                  "style": "link"
                },
                {
                  "id": "a7469ffa-236a-41b2-96a1-5c1ef7775776",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "Network Throughput",
                  "subTarget": "NetworkThroughput",
                  "style": "link"
                },
                {
                  "id": "7cc346b7-7820-45d2-827d-cef2e5fe3e99",
                  "cellValue": "SystemCheckMenu",
                  "linkTarget": "parameter",
                  "linkLabel": "Configuration Parameters",
                  "subTarget": "ParameterValuesCheck",
                  "style": "link"
                }
              ]
            },
            "name": "links - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "cd5a4c7c-cbc7-46f0-b97d-bb3464efb1a7",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_backuptype",
                              "label": "Backup Type",
                              "type": 10,
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\": \\\"'log backup','data'\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\": \\\"'log backup'\\\", \\\"label\\\":\\\"Log\\\" },\\r\\n    { \\\"value\\\": \\\"'data','complete data backup'\\\", \\\"label\\\":\\\"Data\\\" }\\r\\n]\",\"transformers\":null}",
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "queryType": 8
                            },
                            {
                              "id": "a84be630-8935-440e-880a-966fc2ddbf50",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_backupstate",
                              "label": "Backup State",
                              "type": 10,
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\": \\\"'success','fail','successful','failed'\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\": \\\"'success','successful'\\\", \\\"label\\\":\\\"Successful\\\" },\\r\\n    { \\\"value\\\": \\\"'fail','failed'\\\", \\\"label\\\":\\\"Failed\\\" }\\r\\n]\",\"transformers\":null}",
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "queryType": 8
                            }
                          ],
                          "style": "pills",
                          "queryType": 8
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_check_backup",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nlet table_lastsuccessfulbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          last_successful_backup_id,\r\n          last_successful_backup_time\r\n;\r\nlet table_lastsuccessfullogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize last_successful_log_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_log_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          last_successful_log_backup_id,\r\n          last_successful_log_backup_time\r\n;\r\nlet table_lastsuccessfulbackuptypestatus = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by state_name = STATE_NAME_s, backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t,\r\n         parent_database = DATABASE_NAME_s\r\n| project parent_database,\r\n          last_successful_backup_id,\r\n          last_successful_backup_time,\r\n          backup_item\r\n;\r\nlet table_lastbackupbytypestatus = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| summarize backup_time = max(UTC_START_TIME_t), backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, state_name = STATE_NAME_s, parent_database = DATABASE_NAME_s\r\n;\r\nlet table_lastbackupbytype = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| summarize backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n;\r\nlet table_lastbackupbystatus = table_lastbackupbytype\r\n| join (table_lastbackupbytypestatus)\r\n    on $left.backup_id == $right.backup_id\r\n    and $left.parent_database == $right.parent_database\r\n;\r\nlet table_numberfailedbackupssummary = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s\r\n| union (SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"fail\"\r\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s)\r\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by parent_database\r\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\r\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\r\n;\r\nlet table_numberfailedbackupsbytype = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n| union (SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"fail\"\r\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s)\r\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by backup_type, parent_database\r\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\r\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\r\n;\r\nlet table_databasesummary = table_databases\r\n| join kind=leftouter (table_lastbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastlogbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastsuccessfulbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastsuccessfullogbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join (table_numberfailedbackupssummary)\r\n    on $left.backup_item == $right.parent_database\r\n| extend Id = backup_item,\r\n         last_status = coalesce(state_name, last_log_backup_state_name),\r\n         parent_database = '',\r\n         item_type = strcat(\"'*'\"),\r\n         database = backup_item,\r\n         no_filter = ''\r\n| project backup_item,\r\n          Id,\r\n          last_status,\r\n          number_failed_backups_text,\r\n          parent_database,\r\n          item_type,\r\n          database,\r\n          no_filter\r\n| order by parent_database desc\r\n;\r\nlet table_backupsummary = table_lastbackupbytypestatus\r\n| join (table_lastbackupbytype)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_item\r\n    and $left.backup_id == $right.backup_id\r\n| join kind=leftouter (table_lastsuccessfulbackuptypestatus)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_item\r\n| join (table_numberfailedbackupsbytype)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_type\r\n| extend backup_item,\r\n         Id = strcat(parent_database, \"-\", tostring(backup_id)),\r\n         last_status = state_name,\r\n         last_status_time_minutes = toint((now() - backup_time) / 1m),\r\n         last_successful_backup_time_minutes = toint((now() - last_successful_backup_time) / 1m),\r\n         item_type = strcat(\"'\", backup_item, \"'\"),\r\n         database = parent_database,\r\n         no_filter = 'where BACKUP_ID_d > 0 //'\r\n| project backup_item,\r\n          Id,\r\n          last_status,\r\n          last_status_time_minutes,\r\n          last_successful_backup_time_minutes,\r\n          parent_database,\r\n          number_failed_backups_text,\r\n          item_type,\r\n          database,\r\n          no_filter\r\n| order by parent_database desc\r\n;\r\ntable_backupsummary\r\n| union table_databasesummary\r\n| order by backup_item asc\r\n",
                          "size": 3,
                          "title": "Backup Summary",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "last_status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "fail",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "last_status_time_minutes",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 25,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "last_successful_backup_time_minutes",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 25,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "parent_database",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "number_failed_backups_text",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "0",
                                      "representation": "Blank",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "1",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "item_type",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "database",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "no_filter",
                                "formatter": 5
                              }
                            ],
                            "hierarchySettings": {
                              "idColumn": "Id",
                              "parentColumn": "parent_database",
                              "treeType": 0,
                              "expanderColumn": "backup_item"
                            },
                            "labelSettings": [
                              {
                                "columnId": "backup_item",
                                "label": "Backup Item"
                              },
                              {
                                "columnId": "last_status",
                                "label": "Backup Status"
                              },
                              {
                                "columnId": "last_status_time_minutes",
                                "label": "Backup Age"
                              },
                              {
                                "columnId": "last_successful_backup_time_minutes",
                                "label": "Age of Previous successful Backup"
                              },
                              {
                                "columnId": "number_failed_backups_text",
                                "label": "Number of failed backups"
                              }
                            ]
                          }
                        },
                        "name": "backup summary"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\r\n[\r\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\r\n];\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| extend end_time_utc = UTC_END_TIME_t,\r\n         backup_type = ENTRY_TYPE_NAME_s,\r\n         database = DATABASE_NAME_s,\r\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\r\n         backup_id = BACKUP_ID_d\r\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\r\n| distinct *\r\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                          "size": 0,
                          "aggregation": 4,
                          "title": "Backup Size",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "categoricalbar",
                          "chartSettings": {
                            "xAxis": "end_time_utc",
                            "yAxis": [
                              "backup_size_bytes"
                            ],
                            "group": "backup_type",
                            "createOtherGroup": null,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "log backup",
                                "color": "blue"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "Backup Size"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\r\n[\r\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\r\n];\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| extend end_time_utc = UTC_END_TIME_t,\r\n         backup_type = ENTRY_TYPE_NAME_s,\r\n         database = DATABASE_NAME_s,\r\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\r\n         backup_id = BACKUP_ID_d\r\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\r\n| distinct *\r\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                          "size": 0,
                          "title": "Backup Duration",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "categoricalbar",
                          "chartSettings": {
                            "xAxis": "end_time_utc",
                            "yAxis": [
                              "backup_duration_seconds"
                            ],
                            "group": "backup_type",
                            "createOtherGroup": null,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 24,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "Backup Duration"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| extend\r\n  status = case(STATE_NAME_s == \"successful\", \"success\", STATE_NAME_s == \"failed\", \"fail\", STATE_NAME_s),\r\n  backup_type=ENTRY_TYPE_NAME_s,\r\n  database=DATABASE_NAME_s,\r\n  start_time_utc=UTC_START_TIME_t,\r\n  end_time_utc=UTC_END_TIME_t,\r\n  duration_hms = format_timespan(TIME_ELAPSED_SECONDS_d * 1s,'hh:mm:ss'),\r\n  backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n  backup_rate_kbps = BACKUP_RATE_KBYTES_PER_SECOND_d,\r\n  message = Message,\r\n  backup_id = BACKUP_ID_d,\r\n  number_of_files = NUMBER_OF_FILES_d\r\n| project status, backup_type, database, start_time_utc, end_time_utc, duration_hms, backup_size_bytes, backup_rate_kbps, message, backup_id, number_of_files\r\n| distinct *\r\n| order by end_time_utc desc",
                          "size": 0,
                          "title": "Backup Catalog",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "fail",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "backup_type",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "database",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "start_time_utc",
                                "formatter": 6,
                                "dateFormat": {
                                  "showUtcTime": null,
                                  "formatName": "shortDateTimePattern"
                                }
                              },
                              {
                                "columnMatch": "end_time_utc",
                                "formatter": 6,
                                "dateFormat": {
                                  "showUtcTime": null,
                                  "formatName": "shortDateTimePattern"
                                }
                              },
                              {
                                "columnMatch": "duration_hms",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "backup_size_bytes",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "backup_rate_kbps",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                },
                                "numberFormat": {
                                  "unit": 46,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "message",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "backup_id",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "number_of_files",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "status",
                                "label": "Status"
                              },
                              {
                                "columnId": "backup_type",
                                "label": "Backup type"
                              },
                              {
                                "columnId": "database",
                                "label": "Database"
                              },
                              {
                                "columnId": "start_time_utc",
                                "label": "Start time"
                              },
                              {
                                "columnId": "end_time_utc",
                                "label": "End time"
                              },
                              {
                                "columnId": "duration_hms",
                                "label": "Duration"
                              },
                              {
                                "columnId": "backup_size_bytes",
                                "label": "Backup size"
                              },
                              {
                                "columnId": "backup_rate_kbps",
                                "label": "Rate"
                              },
                              {
                                "columnId": "message",
                                "label": "Message"
                              },
                              {
                                "columnId": "backup_id",
                                "label": "Backup ID"
                              },
                              {
                                "columnId": "number_of_files",
                                "label": "Number of files"
                              }
                            ]
                          }
                        },
                        "name": "Backup Catalog"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_backup",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Group Backup - has data"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "There is no data for backup catalog to display. ",
                          "style": "info"
                        },
                        "name": "text - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_backup",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Backup Warning Group"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n\tUpdated every hour.\r\n</div>"
                  },
                  "name": "text - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "Backup"
            },
            "name": "Backup Tab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "9ebf9eab-5334-4610-9b97-2bdd789cb9fb",
                              "cellValue": "param_tab_sys_check",
                              "linkTarget": "parameter",
                              "linkLabel": "Save Point",
                              "subTarget": "1",
                              "style": "link"
                            },
                            {
                              "id": "fa7b9a27-5a6b-4936-ae2b-2a937038e20f",
                              "cellValue": "param_tab_sys_check",
                              "linkTarget": "parameter",
                              "linkLabel": "MVCC",
                              "subTarget": "2",
                              "style": "link"
                            },
                            {
                              "id": "849edb25-705a-47b7-a030-ae358e7a032a",
                              "cellValue": "param_tab_sys_check",
                              "linkTarget": "parameter",
                              "linkLabel": "Delta Merge",
                              "subTarget": "3",
                              "style": "link"
                            },
                            {
                              "id": "e3a3624c-ad12-4b5b-9f80-9b3901f02e9e",
                              "cellValue": "param_tab_sys_check",
                              "linkTarget": "parameter",
                              "linkLabel": "Statistics Alerts",
                              "subTarget": "4",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "tabs_system_check"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_Mvcc_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where Time_Generated_t between (todatetime({param_timeframe:start}) .. todatetime({param_timeframe:end}))\r\n| summarize TimeGenerated=max(TimeGenerated) by  HOST_s, PORT_d, NAME_s, VALUE_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "HOST_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "PORT_d",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "NAME_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "VALUE_s",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">=",
                                            "thresholdValue": "8000000 ",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "HOST_s",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "PORT_d",
                                      "label": "Port"
                                    },
                                    {
                                      "columnId": "NAME_s",
                                      "label": "Name"
                                    },
                                    {
                                      "columnId": "VALUE_s",
                                      "label": "Value"
                                    },
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    }
                                  ]
                                },
                                "sortBy": []
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "2"
                                },
                                {
                                  "parameterName": "param_check_mvcc",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "showPin": true,
                              "name": "mvcc"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 24 hours.\r\n</div>"
                              },
                              "name": "text - 1"
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "param_tab_sys_check",
                            "comparison": "isEqualTo",
                            "value": "2"
                          },
                          {
                            "parameterName": "param_check_mvcc",
                            "comparison": "isEqualTo",
                            "value": "0"
                          }
                        ],
                        "name": "SystemCheckGroup - MVCC"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_IO_Savepoint_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend SavepointPurpose = case( P_s == 'DS', 'DROP_SNAPSHOT',\r\n                        P_s == 'N', 'NORMAL',\r\n                        P_s == 'SFR', 'SNAPSHOT_FOR_REPLICATION',\r\n                        P_s == 'SFB', 'SNAPSHOT_FOR_BACKUP',\r\n                        P_s == 'SRR', 'SNAPSHOT_FOR_RESUMERE',\r\n                        P_s == 'SFS', 'SNAPSHOT_FOR_SECONDARY', '')\r\n| extend Initiation = case( I_s == 'E', 'EXECUTED_EXPLICITLY',\r\n                            I_s == 'T', 'TRIGGERED_TIMEBASED', '')\r\n| extend Aggregation = case( AGG_s == 'MAX', 'Maximum',\r\n                             AGG_s == 'AVG', 'Average', \r\n                             AGG_s == 'SUM', 'Total','')\r\n| distinct START_TIME_s, BLK_PHASE_START_TIME_s, CRIT_PHASE_START_TIME_s, END_TIME_s, COUNT_s, SavepointPurpose,Initiation,Aggregation, RETRIES_s,TOTAL_S_s, BLK_S_s, LOCK_S_s, CRIT_S_s, SIZE_MB_s, MB_PER_S_s, RS_SIZE_PCT_s, HOST_s, PORT_s, VERSION_s\r\n| order by START_TIME_s desc\r\n",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "START_TIME_s",
                                      "label": "Start Time"
                                    },
                                    {
                                      "columnId": "BLK_PHASE_START_TIME_s",
                                      "label": "Blocking Phase"
                                    },
                                    {
                                      "columnId": "CRIT_PHASE_START_TIME_s",
                                      "label": "Critical Phase "
                                    },
                                    {
                                      "columnId": "END_TIME_s",
                                      "label": "End Time"
                                    },
                                    {
                                      "columnId": "COUNT_s",
                                      "label": "Number Of Savepoint"
                                    },
                                    {
                                      "columnId": "SavepointPurpose",
                                      "label": "Savepoint Purpose"
                                    },
                                    {
                                      "columnId": "RETRIES_s",
                                      "label": "Retries"
                                    },
                                    {
                                      "columnId": "TOTAL_S_s",
                                      "label": "Durations"
                                    },
                                    {
                                      "columnId": "BLK_S_s",
                                      "label": "Blocking Phase"
                                    },
                                    {
                                      "columnId": "LOCK_S_s",
                                      "label": "Lock"
                                    },
                                    {
                                      "columnId": "CRIT_S_s",
                                      "label": "Critical"
                                    },
                                    {
                                      "columnId": "SIZE_MB_s",
                                      "label": "Write Size"
                                    },
                                    {
                                      "columnId": "MB_PER_S_s",
                                      "label": "Write Throughput"
                                    },
                                    {
                                      "columnId": "RS_SIZE_PCT_s",
                                      "label": "RS_SIZE_PCT (%)"
                                    },
                                    {
                                      "columnId": "HOST_s",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "PORT_s",
                                      "label": "Port"
                                    },
                                    {
                                      "columnId": "VERSION_s",
                                      "label": "Version"
                                    }
                                  ]
                                },
                                "sortBy": []
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "1"
                                },
                                {
                                  "parameterName": "param_check_iosavepoint",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "showPin": true,
                              "name": "Savepoint"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 60 minutes.\r\n</div>"
                              },
                              "name": "text - 1"
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "param_tab_sys_check",
                            "comparison": "isEqualTo",
                            "value": "1"
                          },
                          {
                            "parameterName": "param_check_iosavepoint",
                            "comparison": "isEqualTo",
                            "value": "0"
                          }
                        ],
                        "name": "  Health Tab - Save Point"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_DeltaMerge_Count_CL\r\n| extend timestamp_load = TimeGenerated\r\n| where timestamp_load {param_timeframe} \r\n| distinct START_TIME_s, END_TIME_s, DURATION_S_s,HOST_s, PORT_s, COUNT_s, TYPE_s, MOTIVATION_s, SCHEMA_NAME_s, TABLE_NAME_s, ROWS_MERGED_s, LAST_ERROR_s",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "DURATION_S_s",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "START_TIME_s",
                                      "label": "Start Time"
                                    },
                                    {
                                      "columnId": "END_TIME_s",
                                      "label": "End Time"
                                    },
                                    {
                                      "columnId": "DURATION_S_s",
                                      "label": "Duration (sec)"
                                    },
                                    {
                                      "columnId": "HOST_s",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "PORT_s",
                                      "label": "Port"
                                    },
                                    {
                                      "columnId": "COUNT_s",
                                      "label": "Count"
                                    },
                                    {
                                      "columnId": "TYPE_s",
                                      "label": "Type"
                                    },
                                    {
                                      "columnId": "MOTIVATION_s",
                                      "label": "Motivation"
                                    },
                                    {
                                      "columnId": "SCHEMA_NAME_s",
                                      "label": "Schema Name"
                                    },
                                    {
                                      "columnId": "TABLE_NAME_s",
                                      "label": "Table Name"
                                    },
                                    {
                                      "columnId": "ROWS_MERGED_s",
                                      "label": "Rows Merged"
                                    },
                                    {
                                      "columnId": "LAST_ERROR_s",
                                      "label": "Last Error"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "DURATION_S_s",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "3"
                                },
                                {
                                  "parameterName": "param_check_deltamerge",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "showPin": true,
                              "name": "deltamerge"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data available for delta merge.",
                                "style": "warning"
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_check_deltamerge",
                                  "comparison": "isEqualTo",
                                  "value": "2"
                                },
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "3"
                                }
                              ],
                              "name": "no-backupdata"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 60 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_tab_sys_check",
                          "comparison": "isEqualTo",
                          "value": "3"
                        },
                        "name": "  Health Tab - Delta Merge"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "ebeb7d85-8c21-4534-8135-b05732fab7b5",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "Rating",
                                    "type": 2,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "SapHana_Alerts_CL\r\n| where isnotempty(RATING_s)\r\n| distinct RATING_s",
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "4"
                                },
                                {
                                  "parameterName": "param_check_alerts",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "name": "alert_params"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let ratingList = dynamic([{Rating}]);\r\nSapHana_Alerts_CL\r\n| extend timestamp_load = TimeGenerated\r\n| where timestamp_load {param_timeframe} \r\n| extend Date = format_datetime(TimeGenerated, 'dd-MM-yyyy')\r\n| extend Time = format_datetime(TimeGenerated, 'hh:mm:ss') \r\n| where array_length(ratingList) == 0 or RATING_s in (ratingList)\r\n| distinct Date, Time, ALERT_ID_s, RATING_s, ALERT_DETAILS_s, RECOMMENDATION_s\r\n// Filter\r\n| where RATING_s == \"HIGH\" or RATING_s == \"MEDIUM\" or RATING_s == \"LOW\" or RATING_s == \"ERROR\"\r\n| order by RATING_s == \"ERROR\" desc , RATING_s == \"HIGH\", RATING_s == \"MEDIUM\", RATING_s == \"LOW\"\r\n\r\n",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "RATING_s",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "ERROR",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "HIGH",
                                            "representation": "red",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "MEDIUM",
                                            "representation": "orange",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "LOW",
                                            "representation": "yellow",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "blue",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      },
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "ALERT_ID_s",
                                      "label": "Alert Id"
                                    },
                                    {
                                      "columnId": "RATING_s",
                                      "label": "Rating",
                                      "comment": ""
                                    },
                                    {
                                      "columnId": "ALERT_DETAILS_s",
                                      "label": "Alert Details"
                                    },
                                    {
                                      "columnId": "RECOMMENDATION_s",
                                      "label": "Recommendation",
                                      "comment": ""
                                    }
                                  ]
                                },
                                "sortBy": []
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "param_tab_sys_check",
                                  "comparison": "isEqualTo",
                                  "value": "4"
                                },
                                {
                                  "parameterName": "param_check_alerts",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "showPin": true,
                              "name": "StatisticsAlerts"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 60 seconds.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "param_tab_sys_check",
                            "comparison": "isEqualTo",
                            "value": "4"
                          },
                          {
                            "parameterName": "param_check_alerts",
                            "comparison": "isEqualTo",
                            "value": "0"
                          }
                        ],
                        "name": "  Health Tab - Statistics Alerts"
                      }
                    ]
                  },
                  "name": "SystemCheckGroup"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "Health"
            },
            "name": "Health Tab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "System replication does not appear to be configured on this instance.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_systemreplication",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Group replication - no data text"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Filter the base data set to only work with the selected Provider\r\nlet table_systemreplication = SapHana_SystemReplication_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe} \r\n;\r\n// Find the latest post for this instance\r\nlet table_lastpost = table_systemreplication\r\n| summarize lastpost = max(TimeGenerated)\r\n| project lastpost\r\n;\r\n// Create table of the last posts for this instance\r\nlet table_hsrlastpost = table_systemreplication\r\n| join kind=inner (table_lastpost) on  $left.TimeGenerated == $right.lastpost\r\n;\r\n//create a table with the primary site\r\nlet table_primarysite = table_hsrlastpost \r\n| distinct SITE_NAME_s\r\n| project  \r\n    NodeID = SITE_NAME_s,\r\n    SourceID = '',\r\n    TargetID = '',\r\n    CentreContent = SITE_NAME_s, \r\n    EdgeLabel = '', \r\n    TopContent = 'Primary'\r\n;\r\n// create a table with the secondary sites\r\nlet table_secondarysite = table_hsrlastpost \r\n| summarize\r\n   TIME_DIFF_SECONDS_d = avg(TIME_DIFF_SECONDS_d),\r\n   OPERATION_MODE_s = max(OPERATION_MODE_s),\r\n   REPLICATION_MODE_s = max(REPLICATION_MODE_s),\r\n   SYSTEM_REPLICATION_STATUS_s = max(SYSTEM_REPLICATION_STATUS_s)\r\n  by SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n| project  \r\n   NodeID = SECONDARY_SITE_NAME_s,\r\n   SourceID = SITE_NAME_s,\r\n   TargetID = SECONDARY_SITE_NAME_s,\r\n   CentreContent = SECONDARY_SITE_NAME_s,\r\n   EdgeLabel = strcat( iif(SYSTEM_REPLICATION_STATUS_s == 'ACTIVE', '🟢', '🟥'), ' ', SYSTEM_REPLICATION_STATUS_s, ' - ', REPLICATION_MODE_s, ' with ',OPERATION_MODE_s), \r\n   TopContent = 'Secondary'\r\n;\r\n// join the two together\r\ntable_primarysite\r\n| union table_secondarysite\r\n| order by NodeID asc",
                          "size": 3,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "graph",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "TopContent"
                            },
                            "leftContent": {
                              "columnMatch": "LeftContent_real",
                              "formatter": 5,
                              "numberFormat": {
                                "unit": 24,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false
                                }
                              },
                              "tooltipFormat": {
                                "tooltip": "This replication target is currently {0} behind the replication source"
                              }
                            },
                            "centerContent": {
                              "columnMatch": "CentreContent"
                            },
                            "rightContent": {
                              "columnMatch": "RightContent",
                              "formatter": 5
                            },
                            "bottomContent": {
                              "columnMatch": "BottomContent",
                              "formatter": 5
                            },
                            "nodeIdField": "NodeID",
                            "sourceIdField": "SourceID",
                            "targetIdField": "TargetID",
                            "graphOrientation": 1,
                            "showOrientationToggles": false,
                            "edgeSize": "EdgeSize",
                            "edgeLabel": "EdgeLabel",
                            "nodeSize": {
                              "sizeField": "NodeSize",
                              "minSize": 100,
                              "maxSize": 200
                            },
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "TopContent",
                              "type": 1,
                              "colorPalette": "default"
                            },
                            "hivesMargin": 5
                          }
                        },
                        "customWidth": "80",
                        "showPin": true,
                        "name": "Cluster-node-graph-topology"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let table_systemreplication = SapHana_SystemReplication_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n;\r\nlet table_lastpost = table_systemreplication\r\n| summarize last_post = max(TimeGenerated)\r\n| project last_post\r\n;\r\nlet table_hsrlastpost = table_systemreplication\r\n| join kind=inner (table_lastpost)\r\n    on $left.TimeGenerated == $right.last_post\r\n;\r\nlet table_tsreplicationtimediffbyservice = table_systemreplication\r\n| make-series ts_max_time_diff_seconds = max(TIME_DIFF_SECONDS_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s \r\n;\r\nlet table_tsreplicationasyncbuffbyservice = table_systemreplication\r\n| make-series ts_max_async_buff_mb = max(ASYNC_BUFF_USED_MB_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s \r\n;\r\nlet table_tsreplicationtimediffbyhost = table_systemreplication\r\n| make-series ts_max_time_diff_seconds = max(TIME_DIFF_SECONDS_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s \r\n;\r\nlet table_tsreplicationasyncbuffbyhost = table_systemreplication\r\n| make-series ts_max_async_buff_mb = max(ASYNC_BUFF_USED_MB_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationpostbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_maxreplicationpostbyservice = table_systemreplication\r\n| summarize last_post = max(TimeGenerated), max_time_diff_seconds = max(TIME_DIFF_SECONDS_d), max_async_buff_used_mb = max(ASYNC_BUFF_USED_MB_d) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_replicationmetricsbyservice = table_hsrlastpost\r\n| extend async_buff_used_mb = ASYNC_BUFF_USED_MB_d,\r\n         time_diff_seconds = TIME_DIFF_SECONDS_d\r\n| project last_post,\r\n          DATABASE_NAME_s,\r\n          HOST_s,\r\n          SECONDARY_HOST_s,\r\n          SITE_NAME_s,\r\n          SECONDARY_SITE_NAME_s,\r\n          SERVICE_NAME_s,\r\n          SHIPPED_LOG_POSITION_TIME_t,\r\n          REPLAYED_LOG_POSITION_TIME_t,\r\n          async_buff_used_mb,\r\n          time_diff_seconds\r\n;\r\nlet table_replicationmetricsbydb = table_replicationmetricsbyservice\r\n| summarize last_post = max(last_post), async_buff_used_mb = sum(async_buff_used_mb), time_diff_seconds = max(time_diff_seconds) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationbystatusbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, SYSTEM_REPLICATION_STATUS_s, SERVICE_REPLICATION_STATUS_s, SERVICE_REPLICATION_STATUS_DETAILS_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_replicationmodesbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s, REPLICATION_MODE_s, OPERATION_MODE_s\r\n;\r\nlet table_lastreplicationpostbyhost = table_lastreplicationpostbyservice\r\n| join (table_maxreplicationpostbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SITE_NAME_s == $right.SITE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n| summarize last_post = max(last_post), max_time_diff_seconds = max(max_time_diff_seconds), max_async_buff_used_mb = sum(max_async_buff_used_mb) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationbystatusbyhost = table_lastreplicationbystatusbyservice\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s, SYSTEM_REPLICATION_STATUS_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_replicationmodesbyhost = table_replicationmodesbyservice\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, REPLICATION_MODE_s, OPERATION_MODE_s\r\n;\r\nlet table_lastreplicationbystatusbydb = table_lastreplicationbystatusbyhost\r\n| top-nested of DATABASE_NAME_s by min(1), top-nested 1 of SYSTEM_REPLICATION_STATUS_s by last_post = max(last_post) desc\r\n;\r\nlet table_lastreplicationpostbydb = table_lastreplicationpostbyhost\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s\r\n;\r\nlet table_databasesummary = table_lastreplicationpostbydb\r\n| join (table_lastreplicationbystatusbydb)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n| extend id = DATABASE_NAME_s,\r\n         parent_id = '',\r\n         replication_item = DATABASE_NAME_s,\r\n         site = '',\r\n         system_replication_status = SYSTEM_REPLICATION_STATUS_s,\r\n         system_replication_status_details = '',\r\n         replication_mode = '',\r\n         source_host = '',\r\n         target_host = '',\r\n         source_site = '',\r\n         target_site = '',\r\n         service_name = '',\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          system_replication_status_details,\r\n          replication_mode,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\nlet table_hostsummary = table_lastreplicationpostbyhost\r\n| join (table_lastreplicationbystatusbyhost)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmodesbyhost)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmetricsbydb)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationtimediffbyhost)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationasyncbuffbyhost)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| extend id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s),\r\n         parent_id = DATABASE_NAME_s,\r\n         replication_item = strcat(HOST_s, \" -> \", SECONDARY_HOST_s),\r\n         site = strcat(SITE_NAME_s, \" -> \", SECONDARY_SITE_NAME_s),\r\n         system_replication_status = SYSTEM_REPLICATION_STATUS_s,\r\n         system_replication_status_details = '',\r\n         replication_mode = strcat(REPLICATION_MODE_s, \" (\", OPERATION_MODE_s, \")\"),\r\n         ts_time_diff_seconds = ts_max_time_diff_seconds,\r\n         // async_buff_string = strcat(format_bytes((async_buff_used_mb * 1024 * 1024), 2), \" (\", format_bytes((max_async_buff_used_mb * 1024 * 1024), 2), \")\"),\r\n         async_buff_used_mb,\r\n         max_async_buff_used_mb,\r\n         ts_async_buff_mb = ts_max_async_buff_mb,\r\n         source_host = HOST_s,\r\n         target_host = SECONDARY_HOST_s,\r\n         source_site = SITE_NAME_s,\r\n         target_site = SECONDARY_SITE_NAME_s,\r\n         service_name = '',\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          replication_mode,\r\n          time_diff_seconds,\r\n          max_time_diff_seconds,\r\n          ts_time_diff_seconds,\r\n          // async_buff_string,\r\n          async_buff_used_mb,\r\n          max_async_buff_used_mb,\r\n          ts_async_buff_mb,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\nlet table_servicesummary = table_lastreplicationpostbyservice\r\n| join (table_maxreplicationpostbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SITE_NAME_s == $right.SITE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n| join (table_lastreplicationbystatusbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmodesbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmetricsbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationtimediffbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationasyncbuffbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| extend id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s, \".\", SERVICE_NAME_s),\r\n         parent_id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s),\r\n         replication_item = SERVICE_NAME_s,\r\n         site = strcat(SITE_NAME_s, \" -> \", SECONDARY_SITE_NAME_s),\r\n         system_replication_status = SERVICE_REPLICATION_STATUS_s,\r\n         system_replication_status_details = SERVICE_REPLICATION_STATUS_DETAILS_s,\r\n         shipped_log_position_time = SHIPPED_LOG_POSITION_TIME_t,\r\n         replayed_log_position_time = REPLAYED_LOG_POSITION_TIME_t,\r\n         replication_mode = strcat(REPLICATION_MODE_s, \" (\", OPERATION_MODE_s, \")\"),\r\n         ts_time_diff_seconds = ts_max_time_diff_seconds,\r\n         // async_buff_string = strcat(format_bytes((async_buff_used_mb * 1024 * 1024), 2), \" (\", format_bytes((max_async_buff_used_mb * 1024 * 1024), 2), \")\"),\r\n         async_buff_used_mb,\r\n         max_async_buff_used_mb,\r\n         ts_async_buff_mb = ts_max_async_buff_mb,\r\n         source_host = HOST_s,\r\n         target_host = SECONDARY_HOST_s,\r\n         source_site = SITE_NAME_s,\r\n         target_site = SECONDARY_SITE_NAME_s,\r\n         service_name = SERVICE_NAME_s,\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          system_replication_status_details,\r\n          shipped_log_position_time,\r\n          replayed_log_position_time,\r\n          replication_mode,\r\n          time_diff_seconds,\r\n          max_time_diff_seconds,\r\n          ts_time_diff_seconds,\r\n          // async_buff_string,\r\n          async_buff_used_mb,\r\n          max_async_buff_used_mb,\r\n          ts_async_buff_mb,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\ntable_servicesummary\r\n| union (table_hostsummary)\r\n| union (table_databasesummary)",
                          "size": 0,
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "parent_id",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "system_replication_status",
                                "formatter": 18,
                                "formatOptions": {
                                  "linkColumn": "system_replication_status_details",
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true,
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "ACTIVE",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "system_replication_status_details",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "shipped_log_position_time",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "replayed_log_position_time",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "time_diff_seconds",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "ts_time_diff_seconds",
                                "formatter": 21,
                                "formatOptions": {
                                  "palette": "blue"
                                },
                                "numberFormat": {
                                  "unit": 24,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "async_buff_used_mb",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 4,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1,
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "max_async_buff_used_mb",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 4,
                                  "options": {
                                    "style": "decimal",
                                    "minimumIntegerDigits": 1,
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "ts_async_buff_mb",
                                "formatter": 21,
                                "formatOptions": {
                                  "palette": "blue"
                                },
                                "numberFormat": {
                                  "unit": 4,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "source_host",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "target_host",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "source_site",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "target_site",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "service_name",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "tenant",
                                "formatter": 5
                              }
                            ],
                            "filter": true,
                            "hierarchySettings": {
                              "idColumn": "id",
                              "parentColumn": "parent_id",
                              "treeType": 0,
                              "expanderColumn": "replication_item",
                              "expandTopLevel": true
                            },
                            "labelSettings": [
                              {
                                "columnId": "replication_item",
                                "label": "Item"
                              },
                              {
                                "columnId": "site",
                                "label": "Site"
                              },
                              {
                                "columnId": "system_replication_status",
                                "label": "Status"
                              },
                              {
                                "columnId": "system_replication_status_details",
                                "label": "Status details"
                              },
                              {
                                "columnId": "replication_mode",
                                "label": "Mode"
                              },
                              {
                                "columnId": "time_diff_seconds",
                                "label": "Time diff"
                              },
                              {
                                "columnId": "max_time_diff_seconds",
                                "label": "(Max)"
                              },
                              {
                                "columnId": "ts_time_diff_seconds",
                                "label": "Time diff over timeframe"
                              },
                              {
                                "columnId": "async_buff_used_mb",
                                "label": "Async buffer"
                              },
                              {
                                "columnId": "max_async_buff_used_mb",
                                "label": "(Max)"
                              },
                              {
                                "columnId": "ts_async_buff_mb",
                                "label": " Async buffer over timeframe"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_check_systemreplication",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "Replication Summary"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\n\tUpdated every minute.\r\n</div>"
                        },
                        "name": "text - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_systemreplication",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Group replication - has data"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "Replication"
            },
            "name": "Group replication"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| summarize arg_max(PRODUCT_USAGE_d, *) by SID_s, VALID_s, HARDWARE_KEY_s, PERMANENT_s, INSTALL_NO_s, HOSTNAME_s, PRODUCT_LIMIT_d, SYSTEM_NO_s, START_DATE_t\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\")\r\n| distinct SID_s, Status, HARDWARE_KEY_s, PERMANENT_s, INSTALL_NO_s, HOSTNAME_s, PRODUCT_LIMIT_d, PRODUCT_USAGE_d, SYSTEM_NO_s, START_DATE_t\r\n| order by START_DATE_t desc\r\n",
                    "size": 0,
                    "title": "License Status History",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "VALID",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "VALID",
                                "representation": "red",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "gray",
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "PERMANENT_s",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "TRUE",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "FALSE",
                                "representation": "red",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "gray",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SID"
                        },
                        {
                          "columnId": "Status",
                          "label": "Status"
                        },
                        {
                          "columnId": "HARDWARE_KEY_s",
                          "label": "Hardware Key"
                        },
                        {
                          "columnId": "PERMANENT_s",
                          "label": "Permanent"
                        },
                        {
                          "columnId": "INSTALL_NO_s",
                          "label": "Installation Number"
                        },
                        {
                          "columnId": "HOSTNAME_s",
                          "label": "Hostname"
                        },
                        {
                          "columnId": "PRODUCT_LIMIT_d",
                          "label": "Product Limit"
                        },
                        {
                          "columnId": "PRODUCT_USAGE_d",
                          "label": "Product Usage"
                        },
                        {
                          "columnId": "SYSTEM_NO_s",
                          "label": "System Number"
                        },
                        {
                          "columnId": "START_DATE_t",
                          "label": "Start Date"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "License Status History"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n\tUpdated every 24 hours.\r\n</div>"
                  },
                  "name": "text - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "License"
            },
            "name": "License Page"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let Rows_Per_Partition_Max = 2000000000;\r\nlet warningthreshold = 365;\r\nlet table_HANA_Size=SapHana_size01_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend Rows_Per_Partition=RECORDS_d/PARTITION_COUNT_d\r\n| extend Rows_Until_Max=Rows_Per_Partition_Max-Rows_Per_Partition\r\n| where TimeGenerated {param_timeframe}\r\n;\r\n// Retrieve the time of the last posted data per tenant and table\r\nlet table_HANA_Size_LastPost=table_HANA_Size\r\n| summarize arg_max(TimeGenerated, *) by DATABASE_NAME_s, TABLE_NAME_s\r\n;\r\n\r\n// Get the first date we have data for\r\nlet timerange_from=toscalar(table_HANA_Size\r\n| summarize min(TimeGenerated)\r\n);\r\n\r\nlet validate_timerange = iff(timerange_from != \"\", timerange_from, {param_timeframe:start});\r\n\r\n// Calculate the totals for tables across all tenants (sum of the ALL_TABLES values)\r\nlet total_tables_size = toscalar(table_HANA_Size_LastPost\r\n| where TABLE_NAME_s == \"ALL_TABLES\"\r\n|summarize \r\n    total_cs_size=sum(ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d), \r\n    total_loaded_size=sum(MEMORY_SIZE_IN_TOTAL_GIB_d)\r\n| project pack_all()\r\n);\r\n\r\n// Calculate growth rate (slope of series)\r\ntable_HANA_Size\r\n| where TABLE_NAME_s <> \"ALL_TABLES\"\r\n| make-series Rows_Series=max(Rows_Per_Partition)\r\n    default=long(null)\r\n    on TimeGenerated\r\n    from validate_timerange to {param_timeframe:end} step 1d\r\n    by DATABASE_NAME_s, TABLE_NAME_s\r\n| extend Rows_Series = series_fill_linear(Rows_Series)\r\n| extend (RSquare,Rows_Per_Day,Variance,RVariance,Interception,BestFit)=series_fit_line(Rows_Series)\r\n| join table_HANA_Size_LastPost on $left.DATABASE_NAME_s==$right.DATABASE_NAME_s, $left.TABLE_NAME_s==$right.TABLE_NAME_s\r\n| order by ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d\r\n| extend Rank=row_number()\r\n| extend Days_Until_Max=round((Rows_Until_Max/Rows_Per_Day),0)\r\n| extend MaxDate=format_datetime(datetime_add('Day',toint(Days_Until_Max),now()), 'yyyy-MM-dd')\r\n| extend Rows_Status=iif(Rows_Per_Day<=0,\"\",\r\n                        iif(Days_Until_Max>warningthreshold, \"\", strcat(\"WARNING:2 Billion partition row limit reached by \",MaxDate))\r\n                        )\r\n| extend TablePart=strcat(TABLE_NAME_s, \":[\", toint(PARTITION_COUNT_d),\"]\")\r\n| limit 10\r\n| project \r\n    Rank, \r\n    TenantDB=DATABASE_NAME_s, \r\n    TableName=TABLE_NAME_s,\r\n    TablePart,\r\n    TableRows=RECORDS_d, \r\n    DataSize=ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d,\r\n    LoadedSize=MEMORY_SIZE_IN_TOTAL_GIB_d, \r\n    PercTotalCSSize=100*ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d/total_tables_size.total_cs_size, \r\n    PercTotalLoaded=100*MEMORY_SIZE_IN_TOTAL_GIB_d/total_tables_size.total_loaded_size, \r\n    Rows_Per_Day,\r\n    Rows_Series,\r\n    Rows_Status",
                    "size": 0,
                    "title": "Biggest Tables",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TableName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TableRows",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true
                            }
                          }
                        },
                        {
                          "columnMatch": "DataSize",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "LoadedSize",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "PercTotalCSSize",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "PercTotalLoaded",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "Rows_Per_Day",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "Rows_Series",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Rows_Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "WARNING",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "TablePart",
                          "label": "Table:[Partition Count]"
                        },
                        {
                          "columnId": "TableRows",
                          "label": "Row Count"
                        },
                        {
                          "columnId": "DataSize",
                          "label": "Data Size"
                        },
                        {
                          "columnId": "LoadedSize",
                          "label": "Loaded Data"
                        },
                        {
                          "columnId": "PercTotalCSSize",
                          "label": "% of total size"
                        },
                        {
                          "columnId": "PercTotalLoaded",
                          "label": "% of all loaded"
                        },
                        {
                          "columnId": "Rows_Per_Day",
                          "label": "Daily row growth"
                        },
                        {
                          "columnId": "Rows_Series",
                          "label": "Row Count "
                        },
                        {
                          "columnId": "Rows_Status",
                          "label": "Row Size Limit Status"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Biggest Tables"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let table_HANA_Disks=SapHana_Disks_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n;\r\nlet table_HANA_Disks_Utilisation=table_HANA_Disks\r\n| summarize UsedSize = avg(USED_SIZE_d)/1024/1024/1024, UsedSizeMax = max(USED_SIZE_d)/1024/1024/1024, TotalSize = max(TOTAL_SIZE_d)/1024/1024/1024 by HOST_s,PATH_s, USAGE_TYPE_s\r\n| extend PercUsed = UsedSize*100/TotalSize\r\n| project HOST_s, USAGE_TYPE_s, PATH_s, UsedSize = round(UsedSize,2), UsedSizeMax = round(UsedSizeMax,2), TotalSize = round(TotalSize,2), PercUsed\r\n;\r\nlet table_HANA_Disks_Series=table_HANA_Disks\r\n| make-series HANA_Disks_Series = max(USED_SIZE_d) default=double(null) on TimeGenerated from {param_timeframe:start} to {param_timeframe:end} step {param_timeframe:grain} by HOST_s, PATH_s\r\n| extend Trend = series_fill_linear(HANA_Disks_Series)\r\n;\r\ntable_HANA_Disks_Utilisation\r\n| join table_HANA_Disks_Series on $left.HOST_s==$right.HOST_s, $left.PATH_s==$right.PATH_s\r\n| extend HostName=HOST_s, FullPath=PATH_s\r\n| project HostName, USAGE_TYPE_s, FullPath, PercUsed, UsedSize, UsedSizeMax, TotalSize, Trend\r\n| order by PercUsed\r\n;",
                    "size": 0,
                    "title": "Hana File Systems",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "PercUsed",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "UsedSize",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "UsedSizeMax",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TotalSize",
                          "formatter": 22,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "",
                              "columnSettings": [
                                {
                                  "columnName": "UsedSize",
                                  "color": "redBright"
                                },
                                {
                                  "columnName": "TotalSize",
                                  "color": "green"
                                },
                                {
                                  "columnName": "UsedSizeMax",
                                  "color": "yellow"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "HostName",
                          "label": "Host"
                        },
                        {
                          "columnId": "USAGE_TYPE_s",
                          "label": "Usage"
                        },
                        {
                          "columnId": "FullPath",
                          "label": "Path"
                        },
                        {
                          "columnId": "PercUsed",
                          "label": "Average Utilization"
                        },
                        {
                          "columnId": "UsedSize",
                          "label": "Used Size"
                        },
                        {
                          "columnId": "UsedSizeMax",
                          "label": "Maximum Used"
                        },
                        {
                          "columnId": "TotalSize",
                          "label": "Statistics"
                        },
                        {
                          "columnId": "Trend",
                          "label": "Used Size Trendline"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "query - 6"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n\tUpdated every 6 hours.\r\n</div>"
                  },
                  "name": "text - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "DataSize"
            },
            "name": "Datasize"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_InternodeSendThroughput_CL \r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, SENDER_s, RECEIVER_s, SIZE_MB_d, DURATION_SECONDS_d, THROUGHPUT_MBPS_d \r\n| order by TimeGenerated desc",
                    "size": 0,
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SIZE_MB_d",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "DURATION_SECONDS_d",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "THROUGHPUT_MBPS_d",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 13,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "TimeGenerated",
                          "label": "Time Generated"
                        },
                        {
                          "columnId": "SENDER_s",
                          "label": "Sender"
                        },
                        {
                          "columnId": "RECEIVER_s",
                          "label": "Receiver"
                        },
                        {
                          "columnId": "SIZE_MB_d",
                          "label": "Size"
                        },
                        {
                          "columnId": "DURATION_SECONDS_d",
                          "label": "Duration"
                        },
                        {
                          "columnId": "THROUGHPUT_MBPS_d",
                          "label": "Throughput"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_networkthroughput",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "showPin": true,
                  "name": "Network Throughput Query"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "There is no data to display for network throughput. This may most likely be due to the SAP HANA database not being setup as scale out system.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_networkthroughput",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Network Throughput Text Element"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n\tUpdated every 2 hours.\r\n</div>"
                  },
                  "name": "text - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "NetworkThroughput"
            },
            "name": "Network Throughput tab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapHana_ConfigurationParameters_CL \r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| extend Priority_Name = case(P_s == 1, \"VERY HIGH\", \r\n                        P_s == 2, \"HIGH\", \r\n                        P_s == 3, \"MEDIUM\",\r\n                        \"LOW\")\r\n| summarize  arg_max(TimeGenerated, *) by PARAMETER_NAME_s, Priority_Name, P_s, CONFIGURED_VALUE_s, RECOMMENDED_VALUE_s, SAP_NOTE_s, FILE_NAME_s\r\n| project PARAMETER_NAME_s, TimeGenerated, Priority_Name, P_s, CONFIGURED_VALUE_s, RECOMMENDED_VALUE_s, SAP_NOTE_s, FILE_NAME_s\r\n| order by TimeGenerated desc",
                    "size": 0,
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Priority_Name",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "LOW",
                                "representation": "gray"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "MEDIUM",
                                "representation": "yellow"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "HIGH",
                                "representation": "orange"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "VERY HIGH",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "CONFIGURED_VALUE_s",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "TimeGenerated",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "PARAMETER_NAME_s",
                          "label": "Parameter Name"
                        },
                        {
                          "columnId": "TimeGenerated",
                          "label": "Time Generated"
                        },
                        {
                          "columnId": "Priority_Name",
                          "label": "Priority Name"
                        },
                        {
                          "columnId": "P_s",
                          "label": "Priority"
                        },
                        {
                          "columnId": "CONFIGURED_VALUE_s",
                          "label": "Configured Value"
                        },
                        {
                          "columnId": "RECOMMENDED_VALUE_s",
                          "label": "Recommended Value"
                        },
                        {
                          "columnId": "SAP_NOTE_s",
                          "label": "SAP Note"
                        },
                        {
                          "columnId": "FILE_NAME_s",
                          "label": "File Name"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "TimeGenerated",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_configurationparameters",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "showPin": true,
                  "name": "query - 1"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "No data available for configuration parameters.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_configurationparameters",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Param Config Info"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n\tUpdated every hour.\r\n</div>"
                  },
                  "name": "text - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemCheckMenu",
              "comparison": "isEqualTo",
              "value": "ParameterValuesCheck"
            },
            "name": "ParameterValuesCheck "
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}