{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bd0df3d6-232e-4a09-a5ca-262bd07f045a",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_table_exists",
                  "type": 1,
                  "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"Type\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n        | take 1\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n        | take 1\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet systemavailability = checktable('SapHana_SystemAvailability_CL');\r\nlet alerts = checktable('SapHana_Alerts_CL');\r\nlet backup = checktable('SapHana_BackupCatalog_CL');\r\nlet disks = checktable('SapHana_Disks_CL');\r\nlet deltamerge = checktable('SapHana_DeltaMerge_Count_CL');\r\nlet hostconfig = checktable('SapHana_HostConfig_CL');\r\nlet hostinformation = checktable('SapHana_HostInformation_CL');\r\nlet iosavepoint = checktable('SapHana_IO_Savepoint_CL');\r\nlet licensestatus = checktable('SapHana_License_Status_CL');\r\nlet loadhistory = checktable('SapHana_LoadHistory_CL');\r\nlet mvcc = checktable('SapHana_Mvcc_CL');\r\nlet datasize = checktable('SapHana_size01_CL');\r\nlet systemoverview = checktable('SapHana_SystemOverview_CL');\r\nlet systemreplication = checktable('SapHana_SystemReplication_CL');\r\nlet longidlingcursors = checktable('SapHana_LongIdlingCursors_CL');\r\nlet longrunningtransactions = checktable('SapHana_LongRunningTransactions_CL');\r\nlet uncommittedwritetransactions = checktable('SapHana_UncommittedWriteTransactions_CL');\r\nlet blockedtransactions = checktable('SapHana_BlockedTransactions_CL');\r\nlet configurationparameters = checktable('SapHana_ConfigurationParameters_CL');\r\nlet networkthroughput = checktable('SapHana_InternodeSendThroughput_CL');\r\nlet diskfragmentation = checktable('SapHana_DiskFragmentation_CL');\r\nlet memoryserviceusage = checktable('SapHana_HighMemoryUsageService_CL');\r\nlet services = checktable('SapHana_Services_CL');\r\nlet T = datatable(tablename:string, id:string)\r\n[\r\n'SapHana_SystemAvailability_CL', '',\r\n];\r\nT\r\n|project tablename\r\n| extend new_col = strcat('SapHana_SystemAvailability_CL:',systemavailability,',SapHana_Alerts_CL:',alerts,\r\n',SapHana_BackupCatalog_CL:',backup,\r\n',SapHana_Disks_CL:',disks,\r\n',SapHana_HostConfig_CL:',hostconfig,\r\n',SapHana_HostInformation_CL:',hostinformation,\r\n',SapHana_IO_Savepoint_CL:',iosavepoint,\r\n',SapHana_License_Status_CL:',licensestatus,\r\n',SapHana_LoadHistory_CL:',loadhistory,\r\n',SapHana_Mvcc_CL:',mvcc,\r\n',SapHana_size01_CL:',datasize,\r\n',SapHana_SystemOverview_CL:',systemoverview,\r\n',SapHana_SystemReplication_CL:',systemreplication,\r\n',SapHana_LongIdlingCursors_CL:', longidlingcursors,\r\n',SapHana_LongRunningTransactions_CL:',longrunningtransactions,\r\n',SapHana_UncommittedWriteTransactions_CL:',uncommittedwritetransactions,\r\n',SapHana_BlockedTransactions_CL:', blockedtransactions,\r\n',SapHana_ConfigurationParameters_CL:',configurationparameters,\r\n',SapHana_InternodeSendThroughput_CL:',networkthroughput,\r\n',SapHana_DiskFragmentation_CL:',diskfragmentation,\r\n',SapHana_HighMemoryUsageService_CL:',memoryserviceusage,\r\n',SapHana_Services_CL:',services)\r\n|project-away tablename",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "cc5c28b3-a8e6-4ecc-93aa-2f0b2e622355",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_ams_resource",
                  "type": 5,
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.workloads/monitors": true
                    },
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1"
                },
                {
                  "id": "b008ea83-66fe-43c5-803a-5ed6e7014a5e",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_provider_type",
                  "type": 1,
                  "value": "SapHana"
                },
                {
                  "id": "d40aead0-a56c-4f56-95b0-6f7a2de262e3",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_providers_list",
                  "type": 1,
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{param_ams_resource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
                  "queryType": 12
                },
                {
                  "id": "8a8d8fdc-157c-4367-9410-c96e9180746e",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_error",
                  "type": 1,
                  "query": "// 0 = no error\r\n// 1 = table does not exist (need to add provider)\r\n// 2 = table exists, but column v1 does not (need to wait)\r\n// 3 = table exists, column v1 too, but not column v2 (need to upgrade)\r\n// 4 = table exists, column v1 and column v2 as well, but no records (need to wait)\r\nlet t = \"SapHana_SystemOverview_CL\";\r\nlet c1 = \"NAME_s\";\r\nlet c2 = \"VALUE_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, columnV2 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | take 1\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | take 1\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n      | extend columnV2 = column_ifexists(c2, dummy)\r\n    )\r\n  | project miss, columnV1, columnV2\r\n  | limit 2\r\n | top 1 by miss asc\r\n;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != \"1\");\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet columnV2Exists = toscalar(checkColumnExists | summarize max(columnV2) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(columnV2Exists, iif(tableRecords > 0, \"0\", \"2\"), \"3\"), \"2\"), \"1\");\r\nprint toscalar(x)\r\n//print tableExists, columnV1Exists, columnV2Exists, tableRecords\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "64ea0b11-f757-4116-b7af-45188c04de9f",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_alert_templates",
                  "type": 1,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "text"
                  },
                  "value": "[\r\n\t{\r\n\t\t\"name\": \"SAP HANA High CPU Usage Percent\",\r\n\t\t\"description\": \"Fired when a SAP HANA database CPU utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-cpu-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = percentile(CPU_d,95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"90\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA High Memory Usage Percent\",\r\n\t\t\"description\": \"Fired when a SAP HANA database memory utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-memory-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend memoryPercent=MEMORY_USED_d/MEMORY_SIZE_d*100 | summarize AggregatedValue = percentile(memoryPercent,95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"90\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Health Base on CPU and Memory\",\r\n\t\t\"description\": \"Fired when a SAP HANA database is unhealth based on CPU and memory. Looks at the 95th percentile value over 5 minutes, and if both CPU and memory exceeds 80 percent, the SAP HANA database is considered unhealthy.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-cpu-memory-health\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where HOST_s == '{Aggregate}' | extend memoryPercent=MEMORY_USED_d/MEMORY_SIZE_d*100 | summarize AggregatedCPU = percentile(CPU_d,95), AggregatedMemory = percentile(memoryPercent,95) by bin(TimeGenerated, 5m), HOST_s| extend AggregatedValue = iff(AggregatedCPU > 80 and AggregatedMemory > 80, 0, 1)\",\r\n\t\t\t\"aggregateName\": \"host\",\r\n\t\t\t\"aggregateDropDownQuery\": \"SapHana_LoadHistory_CL | distinct HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"LessThan\",\r\n\t\t\t\"defaultThreshold\": \"1\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Data Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database data volume disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-datavolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'DATA' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Log Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database log volume disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-logvolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'LOG' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Trace Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA trace volume (hana-shared) disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-tracevolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'TRACE' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Log Backup Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database log backup volume disk utilization percentage exceeds the specified threshold. This alert is only applicable when log backup is performed to disk. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-logbackupvolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s contains 'LOG_BACKUP' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Failed Data Backups\",\r\n\t\t\"description\": \"Fired when a SAP HANA database reported a failed data backup. This includes tenant DBs and SYSTEMDB failed backup.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-failed-databackup\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_BackupCatalog_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and ENTRY_TYPE_NAME_s contains 'data' | extend AggregateValue = iff(STATE_NAME_s == 'failed', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThanOrEqual\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"60\"\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n\t{\r\n\t\t\"name\": \"SAP HANA Failed Log Backups\",\r\n\t\t\"description\": \"Fired when a SAP HANA database reported a failed log backup. This includes tenant DBs and SYSTEMDB failed backup.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-failed-logbackup\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_BackupCatalog_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and ENTRY_TYPE_NAME_s == 'log backup' | extend AggregateValue = iff(STATE_NAME_s == 'failed', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA System Replication Error\",\r\n\t\t\"description\": \"Fired when a SAP HANA database service reported an error on system replication. This includes tenant DBs and SYSTEMDB services.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-errornous-systemreplication\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_SystemReplication_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(SERVICE_REPLICATION_STATUS_s == 'ERROR', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"Equal\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"5\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA System Availability - Services\",\r\n\t\t\"description\": \"Fired when a SAP HANA system hasn't reported a service availability in the last 5 minutes.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-availability-reponse-services\",\r\n\t\t\"severity\": \"1\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); let ts = toscalar(SapHana_SqlProbe_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | top 1 by Time_Generated_t | project Time_Generated_t); SapHana_SqlProbe_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Time_Generated_t == ts | extend TimeGenerated = Time_Generated_t | extend AggregateValue = iff((StartTime - TimeGenerated > 5min or SUCCESS_b == false ), 1, 0) | summarize AggregatedValue = min(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"5\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Configuration Parameter With High Priority\",\r\n\t\t\"description\": \"Fired when any SAP HANA database configuration parameter has 'Very High Priority' for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-configuration-parameter-high-priority-item\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_ConfigurationParameters_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where P_s == 1 | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Long Running Statements\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any long running statements for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-long-running-statement\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_LongRunningTransactions_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Long Idling Cursors\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any long idling cursors for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-long-idle-cursor\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_LongIdlingCursors_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Blocked Transactions\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any blocked transactions for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-blocked-transactions\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_BlockedTransactions_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n]"
                },
                {
                  "id": "551763a7-816a-437a-b59b-4ab6cdb5359e",
                  "version": "KqlParameterItem/1.0",
                  "name": "provider_table_exists",
                  "type": 1,
                  "query": "let hasNonEmptyTable = (T:string) \r\n{ \r\ntoscalar( union isfuzzy=true ( table(T) | take 1 | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\r\n};\r\nlet TableName = 'SapHana_SystemOverview_CL';\r\nprint present=iif(hasNonEmptyTable(TableName), \"1\", \"0\")",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "54f785fa-34dd-4563-bc7a-3e21dde3d49a",
                  "version": "KqlParameterItem/1.0",
                  "name": "hana_provider_exists",
                  "type": 1,
                  "query": "print allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n| mv-expand allProviders\r\n| extend type=((parse_json(allProviders).properties).providerSettings).providerType\r\n| extend state=((allProviders.properties)).provisioningState\r\n| extend error=(allProviders.properties).errors\r\n| where type == 'SapHana' and state != 'Failed'\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "45e53dae-8a94-4d74-ad48-9a58b658afd0",
                  "version": "KqlParameterItem/1.0",
                  "name": "hanaProviderExist",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_providers_list",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "false"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "hana_provider_exists",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "false"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "true"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "dummyneverset",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "### No active SAP HANA provider found.\r\nCreate one or more SAP HANA providers to get started. [Learn More](https://learn.microsoft.com/en-us/azure/sap/monitor/provider-hana)",
                    "style": "warning"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "17108865-b53f-48c3-830e-58f5a6510e4a",
                        "cellValue": "{param_ams_resource}",
                        "linkTarget": "Resource",
                        "linkLabel": "Create Provider",
                        "subTarget": "monitor_provider",
                        "preText": "",
                        "style": "primary",
                        "bladeOpenContext": {
                          "bladeName": "ManageProviderv2.ReactView",
                          "extensionName": "Microsoft_Azure_WorkloadMonitor",
                          "bladeParameters": [
                            {
                              "name": "resourceId",
                              "source": "parameter",
                              "value": "param_ams_resource"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "name": "links - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "hanaProviderExist",
              "comparison": "isEqualTo",
              "value": "false"
            },
            "name": "NO active provider exist"
          },
          {
            "type": 1,
            "content": {
              "json": "The workbook is loading. This can take up to 2 minutes.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "hanaProviderExist",
              "comparison": "isEqualTo",
              "value": ""
            },
            "name": "WorkbookLoadingMsg"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "9bce626d-1fc6-42ce-9542-92e10b9151e6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_alerts",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Alerts_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Alerts_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "805cb13b-a58e-4ef1-a48d-44f4eaaaa404",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_backup",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_BackupCatalog_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_BackupCatalog_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "6aa7c315-84b9-47d1-9bcf-7aac066fefa4",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_iosavepoint",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_IO_Savepoint_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_IO_Savepoint_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "e8acc884-addc-4522-a391-be4a9dad7973",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_mvcc",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Mvcc_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Mvcc_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "8769a5a4-5e2c-40a4-a98e-5b6954f6937d",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_systemreplication",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_SystemReplication_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_SystemReplication_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "075c7836-374f-4fe3-90ee-1f42277b3fa9",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_networkthroughput",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_InternodeSendThroughput_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_InternodeSendThroughput_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "52a9f2a6-899c-41f7-96b3-fc17cc617cc6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_longidlingcursor",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_LongIdlingCursors_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_LongIdlingCursors_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f2ccb8ce-ecaf-487f-bc9d-e5b43f152cea",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_longrunningtransactions",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_LongRunningTransactions_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_LongRunningTransactions_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "3b2ad151-a993-4c1a-a3ea-2981bdcd6180",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_configurationparameters",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_ConfigurationParameters_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_ConfigurationParameters_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "c2b111bf-d5d5-4db4-9c87-6dd876c8e139",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_uncommittedwritetransactions",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_UncommittedWriteTransactions_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_UncommittedWriteTransactions_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "7d43b8cb-6273-48c1-8cc4-d13bee2c8b2d",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_diskfragmentation",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_DiskFragmentation_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_DiskFragmentation_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ]
                },
                {
                  "id": "c2b111bf-d5d5-4db4-9c87-6dd876c8e140",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_blockedtransactions",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_BlockedTransactions_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_BlockedTransactions_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "06cb9fab-2b86-447d-aa97-f8a3f2aeb7d6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_deltamerge",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_DeltaMerge_Count_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_DeltaMerge_Count_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ]
                },
                {
                  "id": "6ef522e6-3db2-4b21-874e-44b087ed7f91",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_memoryserviceusage",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_HighMemoryUsageService_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_HighMemoryUsageService_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ]
                },
                {
                  "id": "b75289e0-5b7f-434e-a1a1-5c01c44b3db4",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_services",
                  "type": 1,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Services_CL:0",
                        "resultValType": "static",
                        "resultVal": "0"
                      }
                    },
                    {
                      "criteriaContext": {
                        "leftOperand": "param_check_table_exists",
                        "operator": "contains",
                        "rightValType": "static",
                        "rightVal": "SapHana_Services_CL:1",
                        "resultValType": "static",
                        "resultVal": "1"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "2"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "dummyneverset",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "If the provider is recently added, it may take up to 15 minutes for the initial telemetry information to be available for review. Else, check if system is down, or health of AMS system is degraded.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "hanaProviderExist",
                "comparison": "isEqualTo",
                "value": "true"
              },
              {
                "parameterName": "provider_table_exists",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "Warning for no data exist in table"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "93540ccb-6db0-48b7-b13d-1a4aa496ec82",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Landscape Overview",
                        "subTarget": "LandscapeOverview",
                        "preText": "Landscape Overview",
                        "style": "link"
                      },
                      {
                        "id": "80de2883-eddf-4e02-b8a4-b3c2b83e7532",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Overview",
                        "subTarget": "SystemOverview",
                        "style": "link"
                      },
                      {
                        "id": "8a566664-32ec-40d3-95c2-8ad62f97310c",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Availability",
                        "subTarget": "Availability",
                        "style": "link"
                      },
                      {
                        "id": "f5193cf8-d3f1-4c33-a4fc-6c7053117d6d",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Utilization",
                        "subTarget": "SystemUtilization",
                        "style": "link"
                      },
                      {
                        "id": "b424a65c-119d-48d7-8b78-80bc46454e7d",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Check",
                        "subTarget": "SystemCheck",
                        "style": "link"
                      },
                      {
                        "id": "827d1568-a147-4232-b54c-94aeef0168fa",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Transactions",
                        "subTarget": "Transactions",
                        "style": "link"
                      },
                      {
                        "id": "fc4863a3-e91c-44a7-b722-8b89ffc8f5b4",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Capacity Prediction",
                        "subTarget": "CapacityPrediction",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "90",
                  "name": "links - 2"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "f8862629-7d8a-4aa2-bb77-13e000bf66f9",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alerts",
                        "style": "primary",
                        "workbookContext": {
                          "componentIdSource": "workbook",
                          "resourceIdsSource": "workbook",
                          "templateIdSource": "static",
                          "templateId": "Community-Workbooks/SapMonitor2.0/Alerts/Alerts",
                          "typeSource": "workbook",
                          "gallerySource": "workbook",
                          "locationSource": "default",
                          "passSpecificParams": true,
                          "templateParameters": [
                            {
                              "name": "AlertTemplates",
                              "source": "parameter",
                              "value": "param_alert_templates"
                            },
                            {
                              "name": "ProviderType",
                              "source": "parameter",
                              "value": "param_provider_type"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "customWidth": "10",
                  "conditionalVisibility": {
                    "parameterName": "param_check_error",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Alert Button",
                  "styleSettings": {
                    "margin": "10px 0px 0px 0px",
                    "padding": "10px 0px 0px 0px"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "223c257a-6dec-4706-89fb-239a2b0eba9f",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_timeframe",
                        "label": "Time Range",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 3600000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": true
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "00a134d0-8216-40ff-8d83-5727cec35384",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_provider",
                        "label": "Provider",
                        "type": 2,
                        "isRequired": true,
                        "query": "SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc\r\n;",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": null
                      },
                      {
                        "id": "1a3cf1c4-9997-4a7c-922a-c91434ac1563",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_database",
                        "type": 1,
                        "query": "SapHana_size01_CL\r\n| where TimeGenerated > ago(1d)\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| project DATABASE_NAME_s\r\n",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isNotEqualTo",
                    "value": "LandscapeOverview"
                  },
                  "name": "System Overview Parameters"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "54ba4570-a2f3-497d-96d7-d0915beb2b85",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_provider",
                              "label": "Provider",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SapHana_SystemOverview_CL \r\n| where TimeGenerated > ago(24h)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc\r\n",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": [
                                "value::all"
                              ]
                            },
                            {
                              "id": "e8775962-16e1-4c8f-87ec-8817574306c1",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_availability",
                              "label": "Available",
                              "type": 10,
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "jsonData": "[\r\n    { \"value\":\"2\", \"label\":\"All\", \"selected\":true  },\r\n    { \"value\":\"1\", \"label\":\"Yes\" },\r\n    { \"value\":\"0\", \"label\":\"No\"}\r\n]"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 3"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "//Query to get SID + Provider from Sys Overview\r\nlet table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider in ({param_provider})\r\n| where NAME_s == \"Instance ID\"\r\n| sort by TimeGenerated\r\n| distinct sid, provider\r\n;\r\nlet probe = SapHana_SqlProbe_CL \r\n| where PROVIDER_INSTANCE_s  in  ({param_provider})\r\n| where Time_Generated_t >= ago(5m)\r\n| extend ProbeSuccess = SUCCESS_b\r\n| extend TimeMinute = format_datetime(Time_Generated_t, 'dd/mm/yyyy, HH:mm')\r\n| project TimeMinute, PROVIDER_INSTANCE_s, ProbeSuccess\r\n| order by PROVIDER_INSTANCE_s, TimeMinute;\r\nlet load = SapHana_LoadHistory_CL  \r\n| where PROVIDER_INSTANCE_s  in  ({param_provider})\r\n| where Time_Generated_t >= ago(5m)\r\n| extend TimeMinute = format_datetime(Time_Generated_t, 'dd/mm/yyyy, HH:mm')\r\n| project TimeMinute, PROVIDER_INSTANCE_s, CPU_d;\r\nlet systemAvailability = probe \r\n| join kind = leftouter(load) on TimeMinute, PROVIDER_INSTANCE_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| extend cpu = iff(isempty(CPU_d), toreal(-99), CPU_d)\r\n| extend Status = iff(cpu>=0 and ProbeSuccess, \"Available\", iff(cpu==-99 and ProbeSuccess, \"Non Functional\", \"Offline\"))\r\n| order by PROVIDER_INSTANCE_s, TimeMinute\r\n| join kind=leftouter (table_systemoverview) on provider\r\n;\r\n//Get most import details from query by most recent timestamp\r\nlet latestAvail = systemAvailability\r\n| project Status, provider ,sid, TimeMinute\r\n| summarize arg_max(TimeMinute, *) by provider\r\n;\r\nlet allHanaProvidersfromSrc =\r\nprint allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n    | mv-expand allProviders\r\n    | extend type=((parse_json(allProviders).properties).providerSettings).providerType\r\n    | extend state=((allProviders.properties)).provisioningState\r\n    | extend error=(allProviders.properties).errors\r\n//    | where error == \"{}\" or error == \"\"\r\n    | where type == \"SapHana\"\r\n//    | where state != \"Failed\"\r\n    | extend hostname=parse_json(allProviders.properties).providerSettings.hostname\r\n    | extend db=parse_json(allProviders.properties).providerSettings.dbName\r\n    | project allProviders.name, hostname, type, state, db, sysdbprovider=iff(db == \"SYSTEMDB\", 1, 0)\r\n;\r\nlet allHanaProviders = \r\nallHanaProvidersfromSrc\r\n| extend provider=tostring(allProviders_name)\r\n| project provider, allProviders_name, hostname, type, db, state\r\n;\r\n// allHanaProviders;\r\nlet latestAvailTenant =  allHanaProviders\r\n    | join kind=leftouter(latestAvail) on provider\r\n    | extend sid = iff(isempty(sid), \"Unknown\", sid)\r\n    | extend Status = iff(isempty(Status), \"Error\", Status)\r\n    | extend sidten=iff(db == \"\", \"Deleted\", strcat(db, \"@\", sid))\r\n    | project Status = iff(db == \"\", \"Deleted\", Status), provider, sidten, TimeMinute, state;\r\nlatestAvailTenant\r\n| project Status, provider, sidten, TimeMinute, state\r\n| where state != \"Failed\";",
                                "size": 0,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "graph",
                                "graphSettings": {
                                  "type": 2,
                                  "topContent": {},
                                  "centerContent": {
                                    "columnMatch": "sidten"
                                  },
                                  "bottomContent": {
                                    "columnMatch": "provider"
                                  },
                                  "nodeIdField": "provider",
                                  "graphOrientation": 3,
                                  "showOrientationToggles": false,
                                  "nodeSize": null,
                                  "staticNodeSize": 85,
                                  "colorSettings": {
                                    "nodeColorField": "Status",
                                    "type": 3,
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Available",
                                        "representation": "green"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Error",
                                        "representation": "red"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Offline",
                                        "representation": "gray"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Non Functional",
                                        "representation": "yellow"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Deleted",
                                        "representation": "grayBlue"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null
                                      }
                                    ]
                                  },
                                  "hivesMargin": 5
                                }
                              },
                              "showPin": true,
                              "name": "System Availability Query"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n  <table width=\"345px\">\r\n    <tr>\r\n      <td width=\"35px\" style=\"font-size:smaller; color:black; background-color:rgb(127, 186, 0)\">\r\n        <div style=\"font-weight:bold\">Available</div>\r\n        <span>DB is reachable</span>\r\n      </td>\r\n      <td width=\"105px\" style=\"font-size:smaller; color:black; background-color:rgb(252, 209, 22)\">\r\n        <div style=\"font-weight:bold\">Not Functional</div>\r\n        <span>DB connection works, queries are failing</span>\r\n      </td>\r\n      <td width=\"80px\" style=\"font-size:smaller; color:white; background-color:rgb(174, 13, 26)\">\r\n        <div style=\"font-weight:bold\">Error</div>\r\n        <span>Unable to determine DB state</span>\r\n      </td>\r\n      <td width=\"35px\" style=\"font-size:smaller; color:black; background-color:rgb(163, 166, 186)\">\r\n        <div style=\"font-weight:bold\">Offline</div>\r\n\t\t<span>DB is not reachable</span>\r\n      </td>\r\n      <td width=\"90px\" style=\"font-size:smaller; color:black; background-color:rgb(112, 128, 144)\">\r\n        <div style=\"font-weight:bold\">Deleted</div>\r\n\t\t<span>Provider was deleted in last 24 hours</span>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>"
                              },
                              "name": "Legend"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "//Query to get SID + Provider from Sys Overview\r\nlet table_systemoverview = SapHana_SystemOverview_CL \r\n    //| where TimeGenerated > ago(30d)\r\n    | extend sid = tostring(VALUE_s)\r\n    | extend provider = tostring(PROVIDER_INSTANCE_s)\r\n    | where provider in ({param_provider})\r\n    | where NAME_s == \"Instance ID\"\r\n    | sort by TimeGenerated\r\n    | distinct sid, provider\r\n;\r\nlet probe = SapHana_SqlProbe_CL \r\n| where PROVIDER_INSTANCE_s in ({param_provider})\r\n    | where Time_Generated_t >= ago(5m)\r\n    | extend ProbeSuccess = SUCCESS_b\r\n    | extend TimeMinute = format_datetime(Time_Generated_t, 'dd/mm/yyyy, HH:mm')\r\n    | project TimeMinute, PROVIDER_INSTANCE_s, ProbeSuccess\r\n    | order by PROVIDER_INSTANCE_s, TimeMinute;\r\nlet load = SapHana_LoadHistory_CL  \r\n| where PROVIDER_INSTANCE_s in ({param_provider})\r\n    | where Time_Generated_t >= ago(5m)\r\n    | extend TimeMinute = format_datetime(Time_Generated_t, 'dd/mm/yyyy, HH:mm')\r\n    | project TimeMinute, PROVIDER_INSTANCE_s, CPU_d;\r\nlet systemAvailability = probe \r\n    | join kind = leftouter(load) on TimeMinute, PROVIDER_INSTANCE_s\r\n    | extend provider = PROVIDER_INSTANCE_s\r\n    | extend cpu = iff(isempty(CPU_d), toreal(-99), CPU_d)\r\n    | extend Status = iff(cpu >= 0 and ProbeSuccess, \"Available\", iff(cpu == -99 and ProbeSuccess, \"Non Functional\", \"Offline\"))\r\n    | order by PROVIDER_INSTANCE_s, TimeMinute\r\n    | join kind=leftouter (table_systemoverview) on provider\r\n;\r\n//Get most import details from query by most recent timestamp\r\nlet latestAvail = systemAvailability\r\n    | project Status, provider, sid, TimeMinute\r\n    | summarize arg_max(TimeMinute, *) by provider\r\n;\r\nlet allHanaProvidersfromSrc =\r\n    print allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n    | mv-expand allProviders\r\n    | extend type=((parse_json(allProviders).properties).providerSettings).providerType\r\n    | extend state=((allProviders.properties)).provisioningState\r\n    | extend error=(allProviders.properties).errors\r\n    //    | where error == \"{}\" or error == \"\"\r\n    | where type == \"SapHana\"\r\n    //    | where state != \"Failed\"\r\n    | extend hostname=parse_json(allProviders.properties).providerSettings.hostname\r\n    | extend db=parse_json(allProviders.properties).providerSettings.dbName\r\n    | project\r\n        allProviders.name,\r\n        hostname,\r\n        type,\r\n        state,\r\n        db,\r\n        sysdbprovider=iff(db == \"SYSTEMDB\", 1, 0)\r\n;\r\nlet allHanaProviders = \r\n    allHanaProvidersfromSrc\r\n    | extend provider=tostring(allProviders_name)\r\n    | project provider, allProviders_name, hostname, type, db, state\r\n;\r\nlet maxTimestamp = SapHana_HostConfig_CL\r\n    | summarize Time_Generated_t = max(Time_Generated_t) by PROVIDER_INSTANCE_s;\r\nlet table_hostconfig = SapHana_HostConfig_CL\r\n    | join kind=inner (maxTimestamp) on  Time_Generated_t, PROVIDER_INSTANCE_s\r\n    | extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n    | extend timestamp_hostconfig = TimeGenerated\r\n    | extend host = tostring(HOST_s)\r\n    | extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\r\n    | extend active = tolower(HOST_ACTIVE_s)\r\n    | summarize arg_max(timestamp_hostconfig, *) by provider, host\r\n    | sort by host asc\r\n    | project timestamp_hostconfig, host, role, active, provider\r\n;\r\nlet maxTimestampStats = SapHana_StatisticsServerHealth_CL\r\n    | summarize Time_Generated_t = max(Time_Generated_t) by PROVIDER_INSTANCE_s;\r\nlet table_stats_server_health = SapHana_StatisticsServerHealth_CL \r\n    | join kind=inner (maxTimestampStats) on  Time_Generated_t, PROVIDER_INSTANCE_s\r\n    | extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n    | extend currentStatus = iff(CURRENTSTATUS_s == 'active' and INSTALLATIONSTATUS_s contains \"Done (okay)\", \"Available\", \"Unavailable\");\r\nlet hostconfig = table_hostconfig\r\n| extend name = host\r\n| extend id = strcat(host, \"_\", provider)\r\n| extend type = \"Host\", parentid = \"\"\r\n| join kind=leftouter table_stats_server_health on provider\r\n| extend provider = provider\r\n| extend currentStatus = iff((isnull(currentStatus) or currentStatus == \"\"), \"Not applicable\", currentStatus)\r\n| distinct provider, host, name,\r\n    type,\r\n    role,\r\n    active,\r\n    currentStatus,\r\n    id,\r\n    parentid\r\n| order by provider asc;\r\nlet latestAvailTenant =  allHanaProviders\r\n    | join kind=inner(hostconfig) on provider\r\n    | join kind=inner(latestAvail) on provider\r\n    | extend provider_name = provider\r\n    | extend Status = iff(isempty(Status), \"Error\", Status)\r\n    | extend currentStatus = iff(Status != \"Available\", Status, currentStatus)\r\n    | extend active = iff(Status != \"Available\", \"Unavailable\", \"Available\")\r\n    | project Status = iff(db == \"\", \"Deleted\", Status), state, provider_name, host, name,  type, role, active, currentStatus, id, parentid\r\n;\r\nlatestAvailTenant\r\n| project provider_name, host, name,  type, role, active, currentStatus, id, parentid;",
                                "size": 3,
                                "title": "Instance overview (last 24 hours)",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "name",
                                      "formatter": 7,
                                      "formatOptions": {
                                        "linkTarget": "GenericDetails",
                                        "linkIsContextBlade": true
                                      }
                                    },
                                    {
                                      "columnMatch": "host",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "active",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Available",
                                            "representation": "success"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Unavailable",
                                            "representation": "stopped"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "pending",
                                            "text": ""
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "currentStatus",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Available",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Unavailable",
                                            "representation": "critical",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "Unknown",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "id",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "parentid",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "event",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "cpu",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "memory",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_data",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_log",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_in",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 1000,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_out",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 1000,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "VALID",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "INVALID",
                                            "representation": "4",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "hierarchySettings": {
                                    "idColumn": "id",
                                    "parentColumn": "parentid",
                                    "treeType": 0,
                                    "expanderColumn": "provider_name"
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_link_name_2",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "provider_name",
                                      "label": "Provider"
                                    },
                                    {
                                      "columnId": "host",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "name",
                                      "label": "Name"
                                    },
                                    {
                                      "columnId": "type",
                                      "label": "Kind"
                                    },
                                    {
                                      "columnId": "role",
                                      "label": "Role"
                                    },
                                    {
                                      "columnId": "active",
                                      "label": "Status"
                                    },
                                    {
                                      "columnId": "currentStatus",
                                      "label": "Statistics Server Health"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_link_name_2",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "showPin": true,
                              "name": "System_Overview_Dropdown"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 60 seconds.\r\n</div>"
                              },
                              "name": "text - 4"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_hostconfig = SapHana_HostConfig_CL\r\n| where TimeGenerated > ago(1d)\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend timestamp_hostconfig = TimeGenerated\r\n| extend host = tostring(HOST_s)\r\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\r\n| extend active = tolower(HOST_ACTIVE_s)\r\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\r\n| sort by host asc\r\n| project timestamp_hostconfig, host, role, active, provider\r\n;\r\nlet table_load_host = SapHana_LoadHistory_CL\r\n| where TimeGenerated > ago(1d)\r\n    | extend prov_host = strcat(PROVIDER_INSTANCE_s, HOST_s)\r\n    | partition hint.strategy=native by prov_host\r\n(\r\ntop 1 by _SERVER_UTC_t desc\r\n) \r\n| extend timestamp_load = TimeGenerated\r\n| extend timestamp = _SERVER_UTC_t\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider in ({param_provider})\r\n| extend host = HOST_s\r\n| extend cpu = CPU_d\r\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_load  > ago(1d)\r\n| project cpu, memory, nw_in, nw_out, provider, host, timestamp\r\n//| summarize cpu=avg(cpu), memory=avg(memory), nw_in=avg(nw_in), nw_out=avg(nw_out) by provider, host\r\n;\r\nlet table_systemavailability = SapHana_SystemAvailability_CL\r\n| where TimeGenerated  > ago(1d)\r\n| extend timestamp_systemavailability = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| extend host = HOST_s\r\n| extend database = DATABASE_NAME_s\r\n| extend service = SERVICE_NAME_s\r\n| extend port = PORT_d\r\n| extend event = tostring(EVENT_NAME_s)\r\n| extend active = tolower(SERVICE_ACTIVE_s)\r\n| join kind=rightouter (table_hostconfig | where active == \"yes\") on provider\r\n| where port != 0\r\n| where service != \"\"\r\n| where provider in ({param_provider})\r\n| summarize arg_max(timestamp_systemavailability, *) by  provider, host, database, service\r\n| project host, provider, database, service, event, port, active\r\n;\r\nlet table_disks = SapHana_Disks_CL\r\n| extend timestamp_disks = TimeGenerated\r\n| where TimeGenerated  > ago(1d)\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend host = HOST_s\r\n| extend type = USAGE_TYPE_s\r\n| extend disk_usage = USED_SIZE_d / TOTAL_SIZE_d * 100\r\n| where type in (\"DATA\", \"LOG\")\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_disks > ago(1d)\r\n| summarize disk_usage=avg(disk_usage) by provider, host, type\r\n;\r\nlet table_license = SapHana_License_Status_CL\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where TimeGenerated  > ago(1d)\r\n| where provider in ({param_provider})\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\")\r\n| extend host = HOSTNAME_s\r\n| distinct provider, Status, host;\r\nlet table_stats_server_health = SapHana_StatisticsServerHealth_CL \r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend currentStatus = iff(CURRENTSTATUS_s == 'active' and INSTALLATIONSTATUS_s contains \"Done (okay)\", \"Available\", \"Unavailable\")\r\n| distinct provider, currentStatus ;\r\ntable_hostconfig\r\n| extend name = host\r\n| extend id = strcat(host,\"_\",provider)\r\n| extend type = \"Host\", parentid = \"\"\r\n| join kind=leftouter (table_load_host | project provider, host, cpu, memory, nw_in, nw_out, timestamp) on provider, host \r\n| join kind=leftouter (table_disks | project provider,host, disk_usage, type | where type == \"DATA\" | extend disk_data = disk_usage) on provider, host\r\n| join kind=leftouter (table_disks | project provider, host, disk_usage, type | where type == \"LOG\" | extend disk_log = disk_usage) on provider, host\r\n| join kind=leftouter table_license on provider, host\r\n| join kind=leftouter table_stats_server_health on provider\r\n| extend provider_name = provider\r\n| extend currentStatus = iff(isnull(currentStatus) or currentStatus ==\"\",\"Not applicable\",currentStatus)\r\n| distinct provider_name, host, timestamp, type, cpu, memory, disk_data, disk_log, nw_in, nw_out,Status, id, parentid\r\n| order by provider_name asc",
                                "size": 0,
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "provider_name",
                                      "formatter": 7,
                                      "formatOptions": {
                                        "linkTarget": "GenericDetails",
                                        "linkIsContextBlade": false
                                      }
                                    },
                                    {
                                      "columnMatch": "cpu",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "memory",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_data",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_log",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_in",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_out",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "VALID",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "id",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "parentid",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "event",
                                      "formatter": 5
                                    }
                                  ],
                                  "hierarchySettings": {
                                    "idColumn": "id",
                                    "parentColumn": "parentid",
                                    "treeType": 0,
                                    "expanderColumn": "provider_name"
                                  },
                                  "labelSettings": [
                                    {
                                      "columnId": "provider_name",
                                      "label": "Provider Name"
                                    },
                                    {
                                      "columnId": "host",
                                      "label": "Host Name"
                                    },
                                    {
                                      "columnId": "timestamp",
                                      "label": "Last Read At"
                                    },
                                    {
                                      "columnId": "type",
                                      "label": "Type"
                                    },
                                    {
                                      "columnId": "cpu",
                                      "label": "CPU"
                                    },
                                    {
                                      "columnId": "memory",
                                      "label": "Memory"
                                    },
                                    {
                                      "columnId": "disk_data",
                                      "label": "Disk Usage - Data"
                                    },
                                    {
                                      "columnId": "disk_log",
                                      "label": "Disk Usage- Log"
                                    },
                                    {
                                      "columnId": "nw_in",
                                      "label": "Network In"
                                    },
                                    {
                                      "columnId": "nw_out",
                                      "label": "Network Out"
                                    },
                                    {
                                      "columnId": "Status",
                                      "label": "License Status"
                                    }
                                  ]
                                }
                              },
                              "name": "query - 4"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_provider",
                          "comparison": "isNotEqualTo",
                          "value": ""
                        },
                        "name": " Landscape Overview - graphs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "Please select the Providers for which you wish to display information.",
                                "style": "info"
                              },
                              "name": "Group capacity prediction - no input message"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_provider",
                          "comparison": "isEqualTo"
                        },
                        "name": "Landscape Overview - no inputs"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "LandscapeOverview"
                  },
                  "name": "Landscape Overview"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/SystemOverviewTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemOverview"
                  },
                  "name": "System Overview"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/AvailabilityTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "Availability"
                  },
                  "name": "group_availability"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/SystemUtilizationTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemUtilization"
                  },
                  "name": "System Utilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/SystemCheckTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemCheck"
                  },
                  "name": "System Check"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/TransactionsTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "Transactions"
                  },
                  "name": "Group Transactions"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "template",
                    "loadFromTemplateId": "Community-Workbooks/SapMonitor2.0/SapHana/CapacityPredictionTab",
                    "items": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "CapacityPrediction"
                  },
                  "name": "Group capacity prediction"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "provider_table_exists",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Metrics Group"
          }
        ]
      },
      "name": "main group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}