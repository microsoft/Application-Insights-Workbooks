{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "bd0df3d6-232e-4a09-a5ca-262bd07f045a",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_table_exists",
                  "type": 1,
                  "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"Type\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet systemavailability = checktable('SapHana_SystemAvailability_CL');\r\nlet alerts = checktable('SapHana_Alerts_CL');\r\nlet backup = checktable('SapHana_BackupCatalog_CL');\r\nlet disks = checktable('SapHana_Disks_CL');\r\nlet deltamerge = checktable('SapHana_DeltaMerge_Count_CL');\r\nlet hostconfig = checktable('SapHana_HostConfig_CL');\r\nlet hostinformation = checktable('SapHana_HostInformation_CL');\r\nlet iosavepoint = checktable('SapHana_IO_Savepoint_CL');\r\nlet licensestatus = checktable('SapHana_License_Status_CL');\r\nlet loadhistory = checktable('SapHana_LoadHistory_CL');\r\nlet mvcc = checktable('SapHana_Mvcc_CL');\r\nlet datasize = checktable('SapHana_size01_CL');\r\nlet systemoverview = checktable('SapHana_SystemOverview_CL');\r\nlet systemreplication = checktable('SapHana_SystemReplication_CL');\r\nlet longidlingcursors = checktable('SapHana_LongIdlingCursors_CL');\r\nlet longrunningtransactions = checktable('SapHana_LongRunningTransactions_CL');\r\nlet uncommittedwritetransactions = checktable('SapHana_UncommittedWriteTransactions_CL');\r\nlet blockedtransactions = checktable('SapHana_BlockedTransactions_CL');\r\nlet configurationparameters = checktable('SapHana_ConfigurationParameters_CL');\r\nlet networkthroughput = checktable('SapHana_InternodeSendThroughput_CL');\r\nlet diskfragmentation = checktable('SapHana_DiskFragmentation_CL');\r\nlet memoryserviceusage = checktable('SapHana_HighMemoryUsageService_CL');\r\nlet services = checktable('SapHana_Services_CL');\r\nlet T = datatable(tablename:string, id:string)\r\n[\r\n'SapHana_SystemAvailability_CL', '',\r\n];\r\nT\r\n|project tablename\r\n| extend new_col = strcat('SapHana_SystemAvailability_CL:',systemavailability,',SapHana_Alerts_CL:',alerts,\r\n',SapHana_BackupCatalog_CL:',backup,\r\n',SapHana_Disks_CL:',disks,\r\n',SapHana_HostConfig_CL:',hostconfig,\r\n',SapHana_HostInformation_CL:',hostinformation,\r\n',SapHana_IO_Savepoint_CL:',iosavepoint,\r\n',SapHana_License_Status_CL:',licensestatus,\r\n',SapHana_LoadHistory_CL:',loadhistory,\r\n',SapHana_Mvcc_CL:',mvcc,\r\n',SapHana_size01_CL:',datasize,\r\n',SapHana_SystemOverview_CL:',systemoverview,\r\n',SapHana_SystemReplication_CL:',systemreplication,\r\n',SapHana_LongIdlingCursors_CL:', longidlingcursors,\r\n',SapHana_LongRunningTransactions_CL:',longrunningtransactions,\r\n',SapHana_UncommittedWriteTransactions_CL:',uncommittedwritetransactions,\r\n',SapHana_BlockedTransactions_CL:', blockedtransactions,\r\n',SapHana_ConfigurationParameters_CL:',configurationparameters,\r\n',SapHana_InternodeSendThroughput_CL:',networkthroughput,\r\n',SapHana_DiskFragmentation_CL:',diskfragmentation,\r\n',SapHana_HighMemoryUsageService_CL:',memoryserviceusage,\r\n',SapHana_Services_CL:',services)\r\n|project-away tablename",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "cc5c28b3-a8e6-4ecc-93aa-2f0b2e622355",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_ams_resource",
                  "type": 5,
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.workloads/monitors": true
                    },
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1"
                },
                {
                  "id": "b008ea83-66fe-43c5-803a-5ed6e7014a5e",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_provider_type",
                  "type": 1,
                  "value": "SapHana"
                },
                {
                  "id": "d40aead0-a56c-4f56-95b0-6f7a2de262e3",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_providers_list",
                  "type": 1,
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{param_ams_resource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
                  "queryType": 12
                },
                {
                  "id": "8a8d8fdc-157c-4367-9410-c96e9180746e",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_error",
                  "type": 1,
                  "query": "// 0 = no error\r\n// 1 = table does not exist (need to add provider)\r\n// 2 = table exists, but column v1 does not (need to wait)\r\n// 3 = table exists, column v1 too, but not column v2 (need to upgrade)\r\n// 4 = table exists, column v1 and column v2 as well, but no records (need to wait)\r\nlet t = \"SapHana_SystemOverview_CL\";\r\nlet c1 = \"NAME_s\";\r\nlet c2 = \"VALUE_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, columnV2 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(t)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n      | extend columnV2 = column_ifexists(c2, dummy)\r\n    )\r\n  | project miss, columnV1, columnV2\r\n  | limit 2\r\n | top 1 by miss asc\r\n;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != \"1\");\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet columnV2Exists = toscalar(checkColumnExists | summarize max(columnV2) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(columnV2Exists, iif(tableRecords > 0, \"0\", \"2\"), \"3\"), \"2\"), \"1\");\r\nprint toscalar(x)\r\n//print tableExists, columnV1Exists, columnV2Exists, tableRecords\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "64ea0b11-f757-4116-b7af-45188c04de9f",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_alert_templates",
                  "type": 1,
                  "typeSettings": {
                    "multiLineText": true,
                    "editorLanguage": "text"
                  },
                  "value": "[\r\n\t{\r\n\t\t\"name\": \"SAP HANA High CPU Usage Percent\",\r\n\t\t\"description\": \"Fired when a SAP HANA database CPU utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-cpu-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = percentile(CPU_d,95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"90\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA High Memory Usage Percent\",\r\n\t\t\"description\": \"Fired when a SAP HANA database memory utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-memory-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend memoryPercent=MEMORY_USED_d/MEMORY_SIZE_d*100 | summarize AggregatedValue = percentile(memoryPercent,95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"90\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Health Base on CPU and Memory\",\r\n\t\t\"description\": \"Fired when a SAP HANA database is unhealth based on CPU and memory. Looks at the 95th percentile value over 5 minutes, and if both CPU and memory exceeds 80 percent, the SAP HANA database is considered unhealthy.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-cpu-memory-health\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where HOST_s == '{Aggregate}' | extend memoryPercent=MEMORY_USED_d/MEMORY_SIZE_d*100 | summarize AggregatedCPU = percentile(CPU_d,95), AggregatedMemory = percentile(memoryPercent,95) by bin(TimeGenerated, 5m), HOST_s| extend AggregatedValue = iff(AggregatedCPU > 80 and AggregatedMemory > 80, 0, 1)\",\r\n\t\t\t\"aggregateName\": \"host\",\r\n\t\t\t\"aggregateDropDownQuery\": \"SapHana_LoadHistory_CL | distinct HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"LessThan\",\r\n\t\t\t\"defaultThreshold\": \"1\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Data Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database data volume disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-datavolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'DATA' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"3\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Log Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database log volume disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-logvolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'LOG' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Trace Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA trace volume (hana-shared) disk utilization percentage exceeds the specified threshold. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-tracevolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s == 'TRACE' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n    {\r\n\t\t\"name\": \"SAP HANA Log Backup Volume Disk Usage\",\r\n\t\t\"description\": \"Fired when a SAP HANA database log backup volume disk utilization percentage exceeds the specified threshold. This alert is only applicable when log backup is performed to disk. Looks at the 95th percentile value over 5 minutes, and if it exceeds the threshold over 3 consecutive time periods the alert is triggered.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-logbackupvolume-utilization-percent\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\"query\": \"SapHana_Disks_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and USAGE_TYPE_s contains 'LOG_BACKUP' | summarize AggregatedValue = percentile((USED_SIZE_d/TOTAL_SIZE_d*100),95) by bin(TimeGenerated, 5m), HOST_s\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"70\",\r\n\t\t\t\"alertUnit\": \"percent\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"metricColumn\": \"HOST_s\",\r\n\t\t\t\t\"frequencyInMinutes\": \"30\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"300\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Failed Data Backups\",\r\n\t\t\"description\": \"Fired when a SAP HANA database reported a failed data backup. This includes tenant DBs and SYSTEMDB failed backup.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-failed-databackup\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_BackupCatalog_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and ENTRY_TYPE_NAME_s contains 'data' | extend AggregateValue = iff(STATE_NAME_s == 'failed', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThanOrEqual\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"60\"\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n\t{\r\n\t\t\"name\": \"SAP HANA Failed Log Backups\",\r\n\t\t\"description\": \"Fired when a SAP HANA database reported a failed log backup. This includes tenant DBs and SYSTEMDB failed backup.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-failed-logbackup\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_BackupCatalog_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and ENTRY_TYPE_NAME_s == 'log backup' | extend AggregateValue = iff(STATE_NAME_s == 'failed', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"10\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA System Replication Error\",\r\n\t\t\"description\": \"Fired when a SAP HANA database service reported an error on system replication. This includes tenant DBs and SYSTEMDB services.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-errornous-systemreplication\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"SapHana_SystemReplication_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(SERVICE_REPLICATION_STATUS_s == 'ERROR', 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"Equal\",\r\n\t\t\t\t\"threshold\": \"1\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"5\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA System Availability\",\r\n\t\t\"description\": \"Fired when a SAP HANA system hasn't reported a PING alive for the last 20 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-availability-reponse\",\r\n\t\t\"severity\": \"1\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_SystemAvailability_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where EVENT_NAME_s == 'PING' | top 1 by TimeGenerated desc | extend AggregateValue = iff(StartTime - TimeGenerated > 20min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"5\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA System Availability - Services\",\r\n\t\t\"description\": \"Fired when a SAP HANA system hasn't reported a service availability in the last 2 minutes.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-availability-reponse-services\",\r\n\t\t\"severity\": \"1\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_LoadHistory_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | top 1 by _TIMESERIES_UTC_t desc | extend TimeGenerated = _TIMESERIES_UTC_t | extend AggregateValue = iff(StartTime - TimeGenerated > 2min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"5\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"45\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Configuration Parameter With High Priority\",\r\n\t\t\"description\": \"Fired when any SAP HANA database configuration parameter has 'Very High Priority' for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-configuration-parameter-high-priority-item\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_ConfigurationParameters_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where P_s == 1 | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Long Running Statements\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any long running statements for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-long-running-statement\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_LongRunningTransactions_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Long Idling Cursors\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any long idling cursors for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-long-idle-cursor\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_LongIdlingCursors_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SAP HANA Blocked Transactions\",\r\n\t\t\"description\": \"Fired when a SAP HANA database has any blocked transactions for the last 15 mins.\",\r\n\t\t\"author\": \"Microsoft\",\r\n\t\t\"templateId\": \"saphana-blocked-transactions\",\r\n\t\t\"severity\": \"2\",\r\n\t\t\"alertTemplate\": {\r\n\t\t\t\"query\": \"let StartTime=now(); SapHana_BlockedTransactions_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend AggregateValue = iff(StartTime - TimeGenerated > 15min, 1, 0) | summarize AggregatedValue = max(AggregateValue) by bin(TimeGenerated, 5m)\",\r\n\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\"defaultThreshold\": \"0\",\r\n\t\t\t\"metricMeasurement\": {\r\n\t\t\t\t\"thresholdOperator\": \"GreaterThan\",\r\n\t\t\t\t\"threshold\": \"0\",\r\n\t\t\t\t\"metricTriggerType\": \"Consecutive\",\r\n\t\t\t\t\"frequencyInMinutes\": \"15\",\r\n\t\t\t\t\"timeWindowInMinutes\": \"30\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n]"
                },
                {
                  "id": "551763a7-816a-437a-b59b-4ab6cdb5359e",
                  "version": "KqlParameterItem/1.0",
                  "name": "provider_table_exists",
                  "type": 1,
                  "query": "let hasNonEmptyTable = (T:string) \r\n{ \r\ntoscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\r\n};\r\nlet TableName = 'SapHana_SystemOverview_CL';\r\nprint present=iif(hasNonEmptyTable(TableName), \"1\", \"0\")",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "54f785fa-34dd-4563-bc7a-3e21dde3d49a",
                  "version": "KqlParameterItem/1.0",
                  "name": "hana_provider_exists",
                  "type": 1,
                  "query": "print allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n| mv-expand allProviders\r\n| extend type=((parse_json(allProviders).properties).providerSettings).providerType\r\n| extend state=((allProviders.properties)).provisioningState\r\n| extend error=(allProviders.properties).errors\r\n| where type == 'SapHana' and state != 'Failed'\r\n",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "dummyneverset",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "### No active SAP HANA provider found.\r\nCreate one or more SAP HANA providers to get started. [Learn More](https://learn.microsoft.com/en-us/azure/sap/monitor/provider-hana)",
                    "style": "warning"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "17108865-b53f-48c3-830e-58f5a6510e4a",
                        "cellValue": "{param_ams_resource}",
                        "linkTarget": "Resource",
                        "linkLabel": "Create Provider",
                        "subTarget": "monitor_provider",
                        "preText": "",
                        "style": "primary",
                        "bladeOpenContext": {
                          "bladeName": "ManageProviderv2.ReactView",
                          "extensionName": "Microsoft_Azure_WorkloadMonitor",
                          "bladeParameters": [
                            {
                              "name": "resourceId",
                              "source": "parameter",
                              "value": "param_ams_resource"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "name": "links - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "hana_provider_exists",
              "comparison": "isEqualTo"
            },
            "name": "NO active provider exist"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0935b0da-81fb-4255-8a65-29b5f14ec8ef",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_systemavailability",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_SystemAvailability_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_SystemAvailability_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_SystemAvailability_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "9bce626d-1fc6-42ce-9542-92e10b9151e6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_alerts",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_Alerts_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_Alerts_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_Alerts_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_backup",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_BackupCatalog_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_BackupCatalog_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_BackupCatalog_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "805cb13b-a58e-4ef1-a48d-44f4eaaaa404"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_disks",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_Disks_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_Disks_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_Disks_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "94b12c2b-ab10-431a-9488-c99f45621e36"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_hostconfig",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_HostConfig_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_HostConfig_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_HostConfig_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "84c405de-0ea0-4047-8b2d-c21d4bae896b"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_hostinfomration",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_HostInformation_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_HostInformation_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_HostInformation_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "bf22068b-7f73-4515-81d0-649c652cac04"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_iosavepoint",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_IO_Savepoint_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_IO_Savepoint_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_IO_Savepoint_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "6aa7c315-84b9-47d1-9bcf-7aac066fefa4"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_licensestatus",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_License_Status_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_License_Status_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_License_Status_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "b43eed9e-0d04-4e3c-928f-c4c1c3a36ab0"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_loadhistory",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_LoadHistory_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_LoadHistory_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_LoadHistory_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "234659ef-c72b-4cd6-885b-2d370853f3a5"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_mvcc",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_Mvcc_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_Mvcc_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_Mvcc_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "e8acc884-addc-4522-a391-be4a9dad7973"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_datasize",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_size01_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_size01_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_size01_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "b8a36f1b-1a66-40c1-b2b3-f251e03a8a99"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_systemoverview",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_SystemOverview_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_SystemOverview_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_SystemOverview_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "fd28f9ea-9ac8-4acc-988b-6503524d7644"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_systemreplication",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_SystemReplication_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_SystemReplication_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_SystemReplication_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "8769a5a4-5e2c-40a4-a98e-5b6954f6937d"
                },
                {
                  "id": "075c7836-374f-4fe3-90ee-1f42277b3fa9",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_networkthroughput",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_InternodeSendThroughput_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_InternodeSendThroughput_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_InternodeSendThroughput_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "52a9f2a6-899c-41f7-96b3-fc17cc617cc6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_longidlingcursor",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_LongIdlingCursors_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_LongIdlingCursors_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_LongIdlingCursors_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f2ccb8ce-ecaf-487f-bc9d-e5b43f152cea",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_longrunningtransactions",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_LongRunningTransactions_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_LongRunningTransactions_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_LongRunningTransactions_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "3b2ad151-a993-4c1a-a3ea-2981bdcd6180",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_configurationparameters",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_ConfigurationParameters_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_ConfigurationParameters_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_ConfigurationParameters_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "c2b111bf-d5d5-4db4-9c87-6dd876c8e139",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_uncommittedwritetransactions",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_UncommittedWriteTransactions_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_UncommittedWriteTransactions_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_UncommittedWriteTransactions_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "7d43b8cb-6273-48c1-8cc4-d13bee2c8b2d",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_diskfragmentation",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_DiskFragmentation_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_DiskFragmentation_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_DiskFragmentation_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "c2b111bf-d5d5-4db4-9c87-6dd876c8e140",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_blockedtransactions",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_BlockedTransactions_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_BlockedTransactions_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_BlockedTransactions_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "06cb9fab-2b86-447d-aa97-f8a3f2aeb7d6",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_deltamerge",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_DeltaMerge_Count_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_DeltaMerge_Count_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_DeltaMerge_Count_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "6ef522e6-3db2-4b21-874e-44b087ed7f91",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_memoryserviceusage",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_HighMemoryUsageService_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_HighMemoryUsageService_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_HighMemoryUsageService_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b75289e0-5b7f-434e-a1a1-5c01c44b3db4",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_services",
                  "type": 1,
                  "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapHana_Services_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapHana_Services_CL:1'), \"1\",\r\n                             ((tableList) contains 'SapHana_Services_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "dummyneverset",
              "comparison": "isNotEqualTo"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "If the provider is recently added, it may take up to 15 minutes for the initial telemetry information to be available for review. Else, check if system is down, or health of AMS system is degraded.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "hana_provider_exists",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "provider_table_exists",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "Warning for no data exist in table"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "93540ccb-6db0-48b7-b13d-1a4aa496ec82",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Landscape Overview",
                        "subTarget": "LandscapeOverview",
                        "preText": "Landscape Overview",
                        "style": "link"
                      },
                      {
                        "id": "80de2883-eddf-4e02-b8a4-b3c2b83e7532",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Overview",
                        "subTarget": "SystemOverview",
                        "style": "link"
                      },
                      {
                        "id": "8a566664-32ec-40d3-95c2-8ad62f97310c",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Availability",
                        "subTarget": "Availability",
                        "style": "link"
                      },
                      {
                        "id": "f5193cf8-d3f1-4c33-a4fc-6c7053117d6d",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Utilization",
                        "subTarget": "SystemUtilization",
                        "style": "link"
                      },
                      {
                        "id": "b424a65c-119d-48d7-8b78-80bc46454e7d",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "System Check",
                        "subTarget": "SystemCheck",
                        "style": "link"
                      },
                      {
                        "id": "827d1568-a147-4232-b54c-94aeef0168fa",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Transactions",
                        "subTarget": "Transactions",
                        "style": "link"
                      },
                      {
                        "id": "fc4863a3-e91c-44a7-b722-8b89ffc8f5b4",
                        "cellValue": "selectedMenu",
                        "linkTarget": "parameter",
                        "linkLabel": "Capacity Prediction",
                        "subTarget": "CapacityPrediction",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "90",
                  "name": "links - 2"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "nav",
                    "links": [
                      {
                        "id": "f8862629-7d8a-4aa2-bb77-13e000bf66f9",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alerts",
                        "style": "primary",
                        "workbookContext": {
                          "componentIdSource": "workbook",
                          "resourceIdsSource": "workbook",
                          "templateIdSource": "static",
                          "templateId": "Community-Workbooks/SapMonitor2.0/Alerts/Alerts",
                          "typeSource": "workbook",
                          "gallerySource": "workbook",
                          "locationSource": "default",
                          "passSpecificParams": true,
                          "templateParameters": [
                            {
                              "name": "AlertTemplates",
                              "source": "parameter",
                              "value": "param_alert_templates"
                            },
                            {
                              "name": "ProviderType",
                              "source": "parameter",
                              "value": "param_provider_type"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "customWidth": "10",
                  "conditionalVisibility": {
                    "parameterName": "param_check_error",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Alert Button",
                  "styleSettings": {
                    "margin": "10px 0px 0px 0px",
                    "padding": "10px 0px 0px 0px"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "223c257a-6dec-4706-89fb-239a2b0eba9f",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_timeframe",
                        "label": "Time Range",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 3600000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": true
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "00a134d0-8216-40ff-8d83-5727cec35384",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_provider",
                        "label": "Provider",
                        "type": 2,
                        "isRequired": true,
                        "query": "SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc\r\n;",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": null
                      },
                      {
                        "id": "1a3cf1c4-9997-4a7c-922a-c91434ac1563",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_database",
                        "type": 1,
                        "query": "SapHana_size01_CL\r\n| where TimeGenerated > ago(1d)\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| project DATABASE_NAME_s\r\n",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isNotEqualTo",
                    "value": "LandscapeOverview"
                  },
                  "name": "System Overview Parameters"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "54ba4570-a2f3-497d-96d7-d0915beb2b85",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_provider",
                              "label": "Provider",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct provider\r\n| sort by provider asc\r\n",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": [
                                "value::all"
                              ]
                            },
                            {
                              "id": "e8775962-16e1-4c8f-87ec-8817574306c1",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_availability",
                              "label": "Available",
                              "type": 10,
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "jsonData": "[\r\n    { \"value\":\"2\", \"label\":\"All\", \"selected\":true  },\r\n    { \"value\":\"1\", \"label\":\"Yes\" },\r\n    { \"value\":\"0\", \"label\":\"No\"}\r\n]"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 3"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "//Query to get SID + Provider from Sys Overview\r\nlet table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider in ({param_provider})\r\n| where NAME_s == \"Instance ID\"\r\n| sort by TimeGenerated\r\n| distinct sid, provider\r\n;\r\n//Query to get status and join with System Overview Table\r\nlet systemAvailability = SapHana_SystemAvailability_CL\r\n| sort by EVENT_TIME_t desc \r\n| extend Status = case(EVENT_TIME_t < ago(15m), \"Offline\",\r\n    HOST_ACTIVE_s == 'YES' and HOST_STATUS_s != 'ERROR', 'Available',  \r\n    HOST_ACTIVE_s == 'YES' and HOST_STATUS_s == 'ERROR', 'Non Functional',\r\n    HOST_ACTIVE_s == \"NO\", \"Error\",\r\n    HOST_ACTIVE_s == \"UNKNOWN\", \"Offline\",\r\n    HOST_ACTIVE_s == \"Starting\" and HOST_STATUS_s == 'ERROR', \"Error\",\r\n    HOST_ACTIVE_s == \"Starting\" and HOST_STATUS_s != 'ERROR', \"Non Functional\",\r\n    HOST_ACTIVE_s == \"Stopping\" and HOST_STATUS_s == 'ERROR', \"Error\",\r\n    HOST_ACTIVE_s == \"Stopping\" and HOST_STATUS_s != 'ERROR', \"Non Functional\",\r\n    \"\" )\r\n    //if no updates for more than 3 min say is offline\r\n| extend provider = PROVIDER_INSTANCE_s \r\n| where provider in ({param_provider}) \r\n| extend display =  case({param_availability} == 0 and Status != \"Offline\", \"0\", {param_availability} == \"1\" and Status == \"Offline\", \"0\", \"1\") \r\n| where display == \"1\"\r\n| join kind=leftouter (table_systemoverview) on provider\r\n;\r\n//Get most import details from query by most recent timestamp\r\nlet latestAvail = systemAvailability\r\n| project Status, provider ,sid, EVENT_TIME_t\r\n| summarize arg_max(EVENT_TIME_t, *) by provider\r\n;\r\nlet allHanaProvidersfromSrc =\r\nprint allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n    | mv-expand allProviders\r\n    | extend type=((parse_json(allProviders).properties).providerSettings).providerType\r\n    | extend state=((allProviders.properties)).provisioningState\r\n    | extend error=(allProviders.properties).errors\r\n//    | where error == \"{}\" or error == \"\"\r\n    | where type == \"SapHana\"\r\n//    | where state != \"Failed\"\r\n    | extend hostname=parse_json(allProviders.properties).providerSettings.hostname\r\n    | extend db=parse_json(allProviders.properties).providerSettings.dbName\r\n    | project allProviders.name, hostname, type, state, db, sysdbprovider=iff(db == \"SYSTEMDB\", 1, 0)\r\n;\r\nlet allHanaProviders = \r\nallHanaProvidersfromSrc\r\n| extend provider=tostring(allProviders_name)\r\n| project provider, allProviders_name, hostname, type, db, state\r\n;\r\n// allHanaProviders;\r\nlet latestAvailTenant = latestAvail \r\n    | join kind=leftouter(allHanaProviders) on provider\r\n    | extend sidten=iff(db == \"\", \"Deleted\", strcat(db, \"@\", sid))\r\n    | project Status = iff(db == \"\", \"Deleted\",  Status), provider, sidten, EVENT_TIME_t, state;\r\nlatestAvailTenant\r\n| project Status, provider, sidten, EVENT_TIME_t, state\r\n| where state != \"Failed\";",
                                "size": 0,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "graph",
                                "graphSettings": {
                                  "type": 2,
                                  "topContent": {},
                                  "centerContent": {
                                    "columnMatch": "sidten"
                                  },
                                  "bottomContent": {
                                    "columnMatch": "provider"
                                  },
                                  "nodeIdField": "provider",
                                  "graphOrientation": 3,
                                  "showOrientationToggles": false,
                                  "nodeSize": null,
                                  "staticNodeSize": 85,
                                  "colorSettings": {
                                    "nodeColorField": "Status",
                                    "type": 3,
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Available",
                                        "representation": "green"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Error",
                                        "representation": "red"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Offline",
                                        "representation": "gray"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Non Functional",
                                        "representation": "yellow"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Deleted",
                                        "representation": "grayBlue"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null
                                      }
                                    ]
                                  },
                                  "hivesMargin": 5
                                }
                              },
                              "showPin": true,
                              "name": "System Availability Query"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n<table>\r\n  <tr>\r\n    <td style=\"background-color:rgb(127, 186, 0)\"> <div style= \"color:black\">Available</div></td>\r\n    <td style=\"background-color:rgb(252, 209, 22)\"><div style= \"color:black\">Not Functional</div></td>\r\n    <td style=\"background-color:rgb(174, 13, 26)\"><div style= \"color:white\"> Error</div></td>\r\n    <td style=\"background-color:rgb(163, 166, 186)\"><div style= \"color:black\">Offline</div></td>\r\n\t<td style=\"background-color:rgb(112, 128, 144)\"> <div style= \"color:black\">Deleted</div></td>\r\n</tr>\r\n</table>\r\n</div>"
                              },
                              "name": "Legend"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_hostconfig = SapHana_HostConfig_CL\r\n| where TimeGenerated > ago(1d)\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend timestamp_hostconfig = TimeGenerated\r\n| extend host = tostring(HOST_s)\r\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\r\n| extend active = tolower(HOST_ACTIVE_s)\r\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\r\n| sort by host asc\r\n| project timestamp_hostconfig, host, role, active, provider\r\n;\r\nlet table_load_host = SapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where provider in ({param_provider})\r\n| extend host = HOST_s\r\n| extend cpu = CPU_d\r\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_load  > ago(1d)\r\n| project cpu, memory, nw_in, nw_out, provider, host\r\n| summarize cpu=avg(cpu), memory=avg(memory), nw_in=avg(nw_in), nw_out=avg(nw_out) by provider, host\r\n;\r\nlet table_systemavailability = SapHana_SystemAvailability_CL\r\n| where TimeGenerated  > ago(1d)\r\n| extend timestamp_systemavailability = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| extend host = HOST_s\r\n| extend database = DATABASE_NAME_s\r\n| extend service = SERVICE_NAME_s\r\n| extend port = PORT_d\r\n| extend event = tostring(EVENT_NAME_s)\r\n| extend active = tolower(SERVICE_ACTIVE_s)\r\n| join kind=rightouter (table_hostconfig | where active == \"yes\") on provider\r\n| where port != 0\r\n| where service != \"\"\r\n| where provider in ({param_provider})\r\n| summarize arg_max(timestamp_systemavailability, *) by  provider, host, database, service\r\n| project host, provider, database, service, event, port, active\r\n;\r\nlet table_disks = SapHana_Disks_CL\r\n| extend timestamp_disks = TimeGenerated\r\n| where TimeGenerated  > ago(1d)\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend host = HOST_s\r\n| extend type = USAGE_TYPE_s\r\n| extend disk_usage = USED_SIZE_d / TOTAL_SIZE_d * 100\r\n| where type in (\"DATA\", \"LOG\")\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_disks > ago(1d)\r\n| summarize disk_usage=avg(disk_usage) by provider, host, type\r\n;\r\nlet table_license = SapHana_License_Status_CL\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where TimeGenerated  > ago(1d)\r\n| where provider in ({param_provider})\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\")\r\n| extend host = HOSTNAME_s\r\n| distinct provider, Status, host;\r\nlet table_stats_server_health = SapHana_StatisticsServerHealth_CL \r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider in ({param_provider})\r\n| extend currentStatus = iff(CURRENTSTATUS_s == 'active' and INSTALLATIONSTATUS_s contains \"Done (okay)\", \"Available\", \"Unavailable\")\r\n| distinct provider, currentStatus ;\r\ntable_hostconfig\r\n| extend name = host\r\n| extend id = strcat(host,\"_\",provider)\r\n| extend type = \"Host\", parentid = \"\"\r\n| join kind=leftouter (table_load_host | project provider, host, cpu, memory, nw_in, nw_out) on provider, host \r\n| join kind=leftouter (table_disks | project provider,host, disk_usage, type | where type == \"DATA\" | extend disk_data = disk_usage) on provider, host\r\n| join kind=leftouter (table_disks | project provider, host, disk_usage, type | where type == \"LOG\" | extend disk_log = disk_usage) on provider, host\r\n| join kind=leftouter table_license on provider, host\r\n| join kind=leftouter table_stats_server_health on provider\r\n| union (table_systemavailability\r\n    | distinct host, provider, service, database, port, active, event\r\n    | extend type = \"Service\"\r\n    | extend database = iff(database == '', \"SYSTEMDB\", database)\r\n    | extend name = strcat(service, \" (:\", tostring(toint(port)), \")\")\r\n    | extend parentid = strcat(host,\"_\",provider), id = strcat(host,\"_\",provider, \"_\", service)\r\n)\r\n| extend provider_name = provider\r\n| distinct provider_name, host, name, type, database, role, active, currentStatus, event, cpu, memory, disk_data, disk_log, nw_in, nw_out,Status, id, parentid\r\n| order by provider_name asc",
                                "size": 3,
                                "title": "Instance overview (last 24 hours)",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "name",
                                      "formatter": 7,
                                      "formatOptions": {
                                        "linkTarget": "GenericDetails",
                                        "linkIsContextBlade": true
                                      }
                                    },
                                    {
                                      "columnMatch": "host",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "active",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "yes",
                                            "representation": "success"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "no",
                                            "representation": "4"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "pending",
                                            "text": ""
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "currentStatus",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Available",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Unavailable",
                                            "representation": "critical",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "Unknown",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "event",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "cpu",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "memory",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_data",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "disk_log",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 100,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_in",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 1000,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "nw_out",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 1,
                                        "max": 1000,
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 47,
                                        "options": {
                                          "style": "decimal",
                                          "minimumFractionDigits": 1,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "VALID",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "INVALID",
                                            "representation": "4",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "id",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "parentid",
                                      "formatter": 5
                                    }
                                  ],
                                  "filter": true,
                                  "hierarchySettings": {
                                    "idColumn": "id",
                                    "parentColumn": "parentid",
                                    "treeType": 0,
                                    "expanderColumn": "provider_name"
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_link_name_2",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "provider_name",
                                      "label": "Provider"
                                    },
                                    {
                                      "columnId": "host",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "name",
                                      "label": "Name"
                                    },
                                    {
                                      "columnId": "type",
                                      "label": "Kind"
                                    },
                                    {
                                      "columnId": "database",
                                      "label": "Database"
                                    },
                                    {
                                      "columnId": "role",
                                      "label": "Role"
                                    },
                                    {
                                      "columnId": "active",
                                      "label": "Status"
                                    },
                                    {
                                      "columnId": "currentStatus",
                                      "label": "Statistics Server Health"
                                    },
                                    {
                                      "columnId": "event",
                                      "label": "Event"
                                    },
                                    {
                                      "columnId": "cpu",
                                      "label": "CPU"
                                    },
                                    {
                                      "columnId": "memory",
                                      "label": "Memory"
                                    },
                                    {
                                      "columnId": "disk_data",
                                      "label": "Disk (Data)"
                                    },
                                    {
                                      "columnId": "disk_log",
                                      "label": "Disk (Log)"
                                    },
                                    {
                                      "columnId": "nw_in",
                                      "label": "NW (In)"
                                    },
                                    {
                                      "columnId": "nw_out",
                                      "label": "NW (Out)"
                                    },
                                    {
                                      "columnId": "Status",
                                      "label": "License Status"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_link_name_2",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "showPin": true,
                              "name": "System_Overview_Dropdown"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 60 seconds.\r\n</div>"
                              },
                              "name": "text - 4"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_provider",
                          "comparison": "isNotEqualTo",
                          "value": ""
                        },
                        "name": " Landscape Overview - graphs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "Please select the Providers for which you wish to display information.",
                                "style": "info"
                              },
                              "name": "Group capacity prediction - no input message"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_provider",
                          "comparison": "isEqualTo"
                        },
                        "name": "Landscape Overview - no inputs"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "LandscapeOverview"
                  },
                  "name": "Landscape Overview"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "e941749d-b9a6-4746-95b4-8ab2a7087c03",
                              "version": "KqlParameterItem/1.0",
                              "name": "SID",
                              "type": 1,
                              "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Instance ID\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s\r\n\r\n",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "67e9649e-b357-489c-9894-1b5424010830",
                              "version": "KqlParameterItem/1.0",
                              "name": "Distributed",
                              "type": 1,
                              "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Distributed\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "6502c4ea-9230-4800-b158-7b35906df7f7",
                              "version": "KqlParameterItem/1.0",
                              "name": "Version",
                              "type": 1,
                              "query": "SapHana_SystemOverview_CL \r\n //| where Time_Generated_t > ago(1d)\r\n | extend provider = PROVIDER_INSTANCE_s\r\n | where provider == '{param_provider}'\r\n | where NAME_s == \"Version\" \r\n | order by Time_Generated_t desc\r\n | take 1\r\n | project VALUE_s;",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "b836f182-c63b-4aa0-bbf1-b696935f7b7d",
                              "version": "KqlParameterItem/1.0",
                              "name": "Database",
                              "type": 1,
                              "query": "SapHana_size01_CL\r\n//| where TimeGenerated > ago(1d)\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| project DATABASE_NAME_s\r\n",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "3c5e1bb0-e2fb-4a1d-b56d-2c870fc63040",
                              "version": "KqlParameterItem/1.0",
                              "name": "Licence_status",
                              "type": 1,
                              "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\") \r\n| order by Time_Generated_t desc\r\n| take 1\r\n| distinct Status",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "00b897e3-42d1-4c10-97bf-c1b6f7575f33",
                              "version": "KqlParameterItem/1.0",
                              "name": "Parent_DB",
                              "type": 1,
                              "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project parent_database\r\n| take 1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "61320a01-01e4-498c-9ed0-991dc5622376",
                              "version": "KqlParameterItem/1.0",
                              "name": "Backup_ID",
                              "type": 1,
                              "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project last_successful_backup_id\r\n| take 1\r\n",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "1257be9c-f5a6-48f0-be83-40dadc7bed22",
                              "version": "KqlParameterItem/1.0",
                              "name": "Backup_Time",
                              "type": 1,
                              "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| order by TimeGenerated desc\r\n| project last_successful_backup_time\r\n| take 1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_neverset",
                          "comparison": "isEqualTo",
                          "value": "999"
                        },
                        "name": "parameters - 10"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_hostconfig = SapHana_HostConfig_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| extend timestamp_hostconfig = TimeGenerated\r\n| extend host = tostring(HOST_s)\r\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\r\n| extend active = tolower(HOST_ACTIVE_s)\r\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\r\n| sort by host asc\r\n| project timestamp_hostconfig, host, role, active\r\n;\r\nlet table_load_host = SapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| extend host = HOST_s\r\n| extend cpu = CPU_d\r\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\r\n| where timestamp_load {param_timeframe}\r\n;\r\nlet table_highest_cpu = table_load_host\r\n| make-series max(cpu) default=0 on timestamp_load step {param_timeframe:grain}  by host\r\n| extend value = todouble(series_stats_dynamic(max_cpu)['max'])\r\n| extend timeseries = max_cpu\r\n| sort by value desc\r\n| extend type = \"Highest CPU\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_highest_memory = table_load_host\r\n| make-series max(memory) default=0 on timestamp_load step {param_timeframe:grain} by host\r\n| extend value = todouble(series_stats_dynamic(max_memory)['max'])\r\n| extend timeseries = max_memory\r\n| sort by value desc\r\n| extend type = \"Highest Memory\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_average_cpu = table_load_host\r\n| make-series avg(cpu) default=0 on timestamp_load step {param_timeframe:grain}  by host\r\n| extend value = todouble(series_stats_dynamic(avg_cpu)['avg'])\r\n| extend timeseries = avg_cpu\r\n| sort by value desc\r\n| extend type = \"Average CPU\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\nlet table_average_memory = table_load_host\r\n| make-series avg(memory) default=0 on timestamp_load step {param_timeframe:grain} by host\r\n| extend value = todouble(series_stats_dynamic(avg_memory)['avg'])\r\n| extend timeseries = avg_memory\r\n| sort by value desc\r\n| extend type = \"Average Memory\"\r\n| project host, value, timeseries, type\r\n| take 1\r\n;\r\ntable_highest_cpu\r\n| union table_highest_memory, table_average_cpu, table_average_memory\r\n| sort by type desc",
                                "size": 1,
                                "title": "Servers with most load",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "type",
                                    "formatter": 1
                                  },
                                  "subtitleContent": {
                                    "columnMatch": "host",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "value",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "max": 100,
                                      "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "maximumFractionDigits": 2,
                                        "maximumSignificantDigits": 3
                                      }
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "timeseries",
                                    "formatter": 21,
                                    "formatOptions": {
                                      "max": 100,
                                      "palette": "blue"
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "customWidth": "100",
                              "showPin": true,
                              "name": "query - max load",
                              "styleSettings": {
                                "maxWidth": "90%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == '{param_provider}'\r\n| project sid, provider\r\n;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend cpu = CPU_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == '{param_provider}'\r\n| project TimeGenerated, host, cpu\r\n| summarize max(cpu) by host, bin(TimeGenerated, {param_timeframe:grain})\r\n",
                                "size": 4,
                                "aggregation": 3,
                                "title": "CPU Utilization",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "timechart",
                                "chartSettings": {
                                  "xAxis": "TimeGenerated",
                                  "showMetrics": false,
                                  "showLegend": true,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 2
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "CPU Utilization",
                              "styleSettings": {
                                "padding": "2%",
                                "maxWidth": "50%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_systemoverview = SapHana_SystemOverview_CL \r\n//| where TimeGenerated > ago(30d)\r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| where provider == '{param_provider}'\r\n| project sid, provider\r\n;\r\nSapHana_LoadHistory_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend memory_used = MEMORY_USED_d\r\n| extend memory_size = MEMORY_SIZE_d\r\n| extend host = HOST_s\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| join kind=leftouter (table_systemoverview) on provider\r\n| where provider == '{param_provider}'\r\n| project TimeGenerated, host, memory_used, memory_size\r\n| summarize max(memory_used / memory_size * 100) by host, bin(TimeGenerated, {param_timeframe:grain})\r\n",
                                "size": 4,
                                "title": "Memory Utilization",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "timechart",
                                "chartSettings": {
                                  "xAxis": "TimeGenerated",
                                  "showMetrics": false,
                                  "showLegend": true,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 2
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "Memory Utilzation Query",
                              "styleSettings": {
                                "padding": "2%",
                                "maxWidth": "50%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t {param_timeframe}\r\n    | where PROVIDER_INSTANCE_s == '{param_provider}'\r\n    | where USAGE_TYPE_s !has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;",
                                "size": 4,
                                "aggregation": 4,
                                "title": "Disk Usage",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "piechart",
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "USAGE_TYPE_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "Used_Size",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "xAxis": "Title",
                                  "yAxis": [
                                    "Utilization"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "Used",
                                      "color": "red"
                                    },
                                    {
                                      "seriesName": "Free",
                                      "color": "blue"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 2
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "Disk Usage",
                              "styleSettings": {
                                "padding": "2%",
                                "maxWidth": "50%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let baseQuery = SapHana_Disks_CL \r\n    | where Time_Generated_t {param_timeframe}\r\n    | where PROVIDER_INSTANCE_s == '{param_provider}'\r\n    | where USAGE_TYPE_s has \"LOG\";\r\nlet used = baseQuery\r\n    | summarize Utilization = max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Used\";\r\nlet free = baseQuery\r\n    | summarize Utilization = 100 - max(USED_SIZE_d / TOTAL_SIZE_d * 100), Title = \"Free\";\r\nused\r\n| union free;",
                                "size": 4,
                                "title": "Log Usage",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "piechart",
                                "chartSettings": {
                                  "xAxis": "HOST_s",
                                  "yAxis": [
                                    "Utilization"
                                  ],
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "",
                                      "color": "blue"
                                    },
                                    {
                                      "seriesName": "Used",
                                      "color": "red"
                                    },
                                    {
                                      "seriesName": "Free",
                                      "color": "blue"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 1,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 2
                                      }
                                    },
                                    "min": 0,
                                    "max": 100
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "Log Usage",
                              "styleSettings": {
                                "padding": "2%",
                                "maxWidth": "50%"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_LoadHistory_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| extend host = HOST_s\r\n| extend nw_in = NETWORK_IN_d\r\n| extend nw_out = NETWORK_OUT_d\r\n| where timestamp_load {param_timeframe}  //>= timestamp_hostconfig - 5m\r\n| where provider == '{param_provider}'\r\n| project timestamp_load, nw_in, nw_out, host\r\n;",
                                "size": 1,
                                "aggregation": 3,
                                "title": "NW In/Out Utilization",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "linechart",
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "host",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "nw_in",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "yAxis": [
                                    "nw_in",
                                    "nw_out"
                                  ],
                                  "xSettings": {
                                    "numberFormatSettings": {
                                      "unit": 46,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    }
                                  },
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 46,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "100",
                              "showPin": true,
                              "name": "Nw In/ Nw Out",
                              "styleSettings": {
                                "padding": "2%"
                              }
                            }
                          ]
                        },
                        "customWidth": "75",
                        "name": "System Overview - left panel",
                        "styleSettings": {
                          "maxWidth": "100%"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "title": "System Information",
                                "items": [
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "SID: **{SID}**<br>\r\nDistributed: **{Distributed}**<br>\r\nVersion: **{Version}**<br>\r\nDatabase: **{Database}**<br>\r\nLicence Status: **{Licence_status}**"
                                    },
                                    "showPin": false,
                                    "name": "System Information"
                                  }
                                ]
                              },
                              "customWidth": "100",
                              "name": "System Information"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "title": "Last Successful Backup",
                                "items": [
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "No backup data available for this instance",
                                      "style": "info"
                                    },
                                    "conditionalVisibilities": [
                                      {
                                        "parameterName": "Backup_Time",
                                        "comparison": "isEqualTo"
                                      },
                                      {
                                        "parameterName": "Parent_DB",
                                        "comparison": "isEqualTo"
                                      },
                                      {
                                        "parameterName": "Backup_ID",
                                        "comparison": "isEqualTo"
                                      }
                                    ],
                                    "name": "Backup Warning"
                                  },
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "Database : **{Parent_DB}** <br>\r\nBackup ID : **{Backup_ID}** <br>\r\nBackup Time: **{Backup_Time}** <br>"
                                    },
                                    "conditionalVisibilities": [
                                      {
                                        "parameterName": "param_check_backup",
                                        "comparison": "isEqualTo",
                                        "value": "0"
                                      },
                                      {
                                        "parameterName": "Parent_DB",
                                        "comparison": "isNotEqualTo"
                                      },
                                      {
                                        "parameterName": "Backup_ID",
                                        "comparison": "isNotEqualTo"
                                      },
                                      {
                                        "parameterName": "Backup_Time",
                                        "comparison": "isNotEqualTo"
                                      }
                                    ],
                                    "name": "Last Successful Backup"
                                  }
                                ]
                              },
                              "customWidth": "100",
                              "name": "group - 2"
                            }
                          ]
                        },
                        "customWidth": "25",
                        "name": "System Overview - right panel"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\n\tUpdated every minute.\r\n</div>"
                        },
                        "name": "text - 3"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemOverview"
                  },
                  "name": "System Overview"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\n\tUpdated every 2 minutes.\r\n</div>"
                        },
                        "name": "availability - text"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let baseQuery = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (todatetime({param_timeframe:start}) .. todatetime({param_timeframe:end}))\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend Status = iff(HOST_ACTIVE_s == 'YES', 0, 1);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(TimeGenerated, timespanInterval), HOST_s\r\n| extend availability = round((availability / total) * 100, 2)\r\n| project-away total",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Availability Status Trend",
                          "timeBrushParameterName": "param_timeframe",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "availability"
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_database",
                          "comparison": "isEqualTo",
                          "value": "SYSTEMDB"
                        },
                        "showPin": true,
                        "name": "availability - System graph"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let baseQuery = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (todatetime({param_timeframe:start}) .. todatetime({param_timeframe:end}))\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where SERVICE_NAME_s == 'indexserver'\r\n| extend Status = iff(HOST_ACTIVE_s == 'STARTING', 0, 1);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(Time_Generated_t, timespanInterval), HOST_s\r\n| extend availability = (availability / total) * 100\r\n| project-away total",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Availability Status Trend",
                          "timeBrushParameterName": "param_timeframe",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "yAxis": [
                              "availability"
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_database",
                          "comparison": "isNotEqualTo",
                          "value": "SYSTEMDB"
                        },
                        "showPin": true,
                        "name": "availability - Tenant graph"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "No availability data avaialble for services",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_services",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "text - 3"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let availability_table = SapHana_SystemAvailability_CL\r\n| where Time_Generated_t between (todatetime({param_timeframe:start}) .. todatetime({param_timeframe:end}))\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where SERVICE_NAME_s != \"\"\r\n| where DATABASE_NAME_s == '{param_database}'\r\n| extend service_event = iff(SERVICE_NAME_s == '', EVENT_NAME_s, SERVICE_NAME_s)\r\n| extend Status = case(SERVICE_ACTIVE_s == 'YES', 0,\r\n                       SERVICE_ACTIVE_s == 'STARTING', 1,\r\n                       SERVICE_ACTIVE_s == 'STOPPING', 2,                        \r\n                       SERVICE_ACTIVE_s == 'UNKNOWN', 3,\r\n                       4) //NO\r\n| project service_event, SERVICE_NAME_s, SERVICE_ACTIVE_s, Status, HOST_s, HOST_STATUS_s, HOST_ACTIVE_s, PORT_d, TimeGenerated\r\n;\r\nlet services_table = SapHana_Services_CL\r\n| where TimeGenerated > ago(24h)\r\n| extend Status = case(ACTIVE_STATUS_s == 'YES', 0,\r\n                       ACTIVE_STATUS_s == 'STARTING', 1,\r\n                       ACTIVE_STATUS_s == 'STOPPING', 2,                        \r\n                       ACTIVE_STATUS_s == 'UNKNOWN', 3,\r\n                       4) //NO\r\n| project SERVICE_NAME_s, HOST_s, PORT_d, Status, ACTIVE_STATUS_s, TimeGenerated\r\n;\r\navailability_table\r\n| union services_table\r\n| summarize total=count(), failureCount=countif(Status != 0) by service_event, SERVICE_NAME_s, HOST_s, PORT_d, SERVICE_ACTIVE_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 2), AvailabilityTrend = make_list(Availability) by PORT_d, SERVICE_NAME_s, HOST_s",
                                "size": 0,
                                "title": "Services Availability Status",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "$gen_group",
                                      "formatter": 7,
                                      "formatOptions": {
                                        "linkTarget": "WorkbookTemplate",
                                        "linkIsContextBlade": true,
                                        "workbookContext": {
                                          "componentIdSource": "workbook",
                                          "resourceIdsSource": "workbook",
                                          "templateIdSource": "static",
                                          "templateId": "Community-Workbooks/SapMonitor2.0/SapHana/ApplicationServerInsights",
                                          "typeSource": "workbook",
                                          "gallerySource": "workbook",
                                          "locationSource": "default",
                                          "passSpecificParams": true,
                                          "templateParameters": [
                                            {
                                              "name": "param_timeframe",
                                              "source": "static",
                                              "value": "param_timeframe"
                                            },
                                            {
                                              "name": "param_provider",
                                              "source": "static",
                                              "value": "param_provider"
                                            },
                                            {
                                              "name": "param_host",
                                              "source": "cell",
                                              "value": "HOST_s"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "HOST_s",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "linkTarget": "WorkbookTemplate",
                                        "workbookContext": {
                                          "componentIdSource": "workbook",
                                          "resourceIdsSource": "workbook",
                                          "templateIdSource": "static",
                                          "templateId": "Community-Workbooks/SapMonitor2.0/SapHana/ApplicationServerInsights",
                                          "typeSource": "workbook",
                                          "gallerySource": "workbook",
                                          "locationSource": "default",
                                          "passSpecificParams": true,
                                          "templateParameters": [
                                            {
                                              "name": "HOST_s",
                                              "source": "cell",
                                              "value": ""
                                            },
                                            {
                                              "name": "param_timeframe",
                                              "source": "static",
                                              "value": "param_timeframe"
                                            },
                                            {
                                              "name": "param_provider",
                                              "source": "static",
                                              "value": "param_provider"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Availability",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen",
                                        "customColumnWidthSetting": "15%"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 3
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "AvailabilityTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen",
                                        "customColumnWidthSetting": "100%"
                                      },
                                      "tooltipFormat": {
                                        "tooltip": "[\"Availability\"]"
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "hierarchySettings": {
                                    "treeType": 1,
                                    "groupBy": [
                                      "HOST_s"
                                    ],
                                    "expandTopLevel": true
                                  },
                                  "labelSettings": [
                                    {
                                      "columnId": "PORT_d",
                                      "label": "Port"
                                    },
                                    {
                                      "columnId": "SERVICE_NAME_s",
                                      "label": "Service Name"
                                    },
                                    {
                                      "columnId": "HOST_s",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "Availability",
                                      "label": "Availability"
                                    },
                                    {
                                      "columnId": "AvailabilityTrend",
                                      "label": "Availability Trend"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_services",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": true,
                              "name": "availability - table"
                            }
                          ]
                        },
                        "name": "System Availability Services"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\n\tUpdated every 2 minutes.\r\n</div>"
                        },
                        "name": "Availability - text "
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "Availability"
                  },
                  "name": "group_availability"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "5ea0e962-b50d-4d1b-a45a-6361ce90c16a",
                              "cellValue": "SysUtilMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Memory Service Usage",
                              "subTarget": "MemoryService",
                              "preText": "Memory Service Usage",
                              "style": "link"
                            },
                            {
                              "id": "15d508e4-b300-4abe-9a1c-0be04a4fa664",
                              "cellValue": "SysUtilMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Disk Fragmentation",
                              "subTarget": "DiskFragmentation",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "links - 9"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_DiskFragmentation_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, HOST_s, TOTAL_SIZE_MB_d, USED_SIZE_MB_d, UNUSED_FRAGMENTATION_PCT_d, ENCRYPTION_ACTIVE_s, FILE_NAME_s, FILE_TYPE_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "TOTAL_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "USED_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "FRAGMENTATION_PCT_d",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "TimeGenerated",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "HOST_s",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "TOTAL_SIZE_MB_d",
                                      "label": "Total Size"
                                    },
                                    {
                                      "columnId": "USED_SIZE_MB_d",
                                      "label": "Used Size"
                                    },
                                    {
                                      "columnId": "UNUSED_FRAGMENTATION_PCT_d",
                                      "label": "% Unused Fragmentation"
                                    },
                                    {
                                      "columnId": "ENCRYPTION_ACTIVE_s",
                                      "label": "Encryption"
                                    },
                                    {
                                      "columnId": "FILE_NAME_s",
                                      "label": "File Name"
                                    },
                                    {
                                      "columnId": "FILE_TYPE_s",
                                      "label": "File Type"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "TimeGenerated",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_diskfragmentation",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": true,
                              "name": "Disk Fragmentation Query Item"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data for disk fragmentation to display.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_diskfragmentation",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Disk Fragmentation"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SysUtilMenu",
                          "comparison": "isEqualTo",
                          "value": "DiskFragmentation"
                        },
                        "name": "Disk Fragmentation Group Item"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_HighMemoryUsageService_CL \r\n| where Time_Generated_t {param_timeframe}\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend DATABASE_NAME = iff(DATABASE_NAME_s == '', \"SYSTEMDB\", DATABASE_NAME_s)\r\n| project SNAPSHOT_TIME_t, DATABASE_NAME, SERVICE_NAME_s, PERCENTAGE_USED_MEMORY_d, PERCENTAGE_HEAP_USED_MEMORY_d, PHYSICAL_MEMORY_SIZE_MB_d, LOGICAL_MEMORY_SIZE_MB_d, HEAP_MEMORY_ALLOCATED_SIZE_MB_d, HEAP_MEMORY_USED_SIZE_MB_d, ALLOCATION_LIMIT_MB_d, FREE_MEMORY_SIZE_MB_d, TOTAL_MEMORY_USED_SIZE_MB_d\r\n| order by DATABASE_NAME desc, SNAPSHOT_TIME_t desc\r\n",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "SNAPSHOT_TIME_t",
                                      "formatter": 6
                                    },
                                    {
                                      "columnMatch": "PERCENTAGE_USED_MEMORY_d",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      }
                                    },
                                    {
                                      "columnMatch": "PERCENTAGE_HEAP_USED_MEMORY_d",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                      }
                                    },
                                    {
                                      "columnMatch": "PHYSICAL_MEMORY_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "LOGICAL_MEMORY_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "HEAP_MEMORY_ALLOCATED_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "HEAP_MEMORY_USED_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "ALLOCATION_LIMIT_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "FREE_MEMORY_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "TOTAL_MEMORY_USED_SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Snapshot Time",
                                      "formatter": 6
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "DATABASE_NAME",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "SNAPSHOT_TIME_t",
                                      "label": "Time"
                                    },
                                    {
                                      "columnId": "DATABASE_NAME",
                                      "label": "Tenant Name"
                                    },
                                    {
                                      "columnId": "SERVICE_NAME_s",
                                      "label": "Service"
                                    },
                                    {
                                      "columnId": "PERCENTAGE_USED_MEMORY_d",
                                      "label": "% Used Memory"
                                    },
                                    {
                                      "columnId": "PERCENTAGE_HEAP_USED_MEMORY_d",
                                      "label": "% Heap Memory"
                                    },
                                    {
                                      "columnId": "PHYSICAL_MEMORY_SIZE_MB_d",
                                      "label": "Physical Memory"
                                    },
                                    {
                                      "columnId": "LOGICAL_MEMORY_SIZE_MB_d",
                                      "label": "Virtual Memory"
                                    },
                                    {
                                      "columnId": "HEAP_MEMORY_ALLOCATED_SIZE_MB_d",
                                      "label": "Heap Memory Allocated"
                                    },
                                    {
                                      "columnId": "HEAP_MEMORY_USED_SIZE_MB_d",
                                      "label": "Heap Memory Used"
                                    },
                                    {
                                      "columnId": "ALLOCATION_LIMIT_MB_d",
                                      "label": "Allocation Limit"
                                    },
                                    {
                                      "columnId": "FREE_MEMORY_SIZE_MB_d",
                                      "label": "Free Memory Size"
                                    },
                                    {
                                      "columnId": "TOTAL_MEMORY_USED_SIZE_MB_d",
                                      "label": "Total Memory Size"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "DATABASE_NAME",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "SysUtilMenu",
                                  "comparison": "isEqualTo",
                                  "value": "MemoryService"
                                },
                                {
                                  "parameterName": "param_check_memoryserviceusage",
                                  "comparison": "isEqualTo",
                                  "value": "0"
                                }
                              ],
                              "showPin": true,
                              "name": "System Memory Usage Overview"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "Memory Service Usage query has no data",
                                "style": "info"
                              },
                              "conditionalVisibilities": [
                                {
                                  "parameterName": "SysUtilMenu",
                                  "comparison": "isEqualTo",
                                  "value": "MemoryService"
                                },
                                {
                                  "parameterName": "param_check_memoryserviceusage",
                                  "comparison": "isNotEqualTo",
                                  "value": "0"
                                }
                              ],
                              "name": "text - 3"
                            }
                          ]
                        },
                        "name": "Memory Service Usage"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\nUpdated every hour.\r\n</div>"
                        },
                        "name": "text - 3"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemUtilization"
                  },
                  "name": "System Utilization"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "4b3d76d9-8ca2-4ae1-8aa4-f3c8f894fe87",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Backup",
                              "subTarget": "Backup",
                              "style": "link"
                            },
                            {
                              "id": "82d423c6-dfa9-415c-9fb1-107ce4c0c023",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Health",
                              "subTarget": "Health",
                              "style": "link"
                            },
                            {
                              "id": "ed5c5bfc-58f4-4dac-82ae-05f44034ecf9",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Replication",
                              "subTarget": "Replication",
                              "style": "link"
                            },
                            {
                              "id": "cf4d8e59-9228-4883-987f-d8b5355ea523",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "License",
                              "subTarget": "License",
                              "style": "link"
                            },
                            {
                              "id": "8616a6a5-7721-4cd7-a1ac-d93f65f826c2",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "DataSize",
                              "subTarget": "DataSize",
                              "style": "link"
                            },
                            {
                              "id": "a7469ffa-236a-41b2-96a1-5c1ef7775776",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Network Throughput",
                              "subTarget": "NetworkThroughput",
                              "style": "link"
                            },
                            {
                              "id": "7cc346b7-7820-45d2-827d-cef2e5fe3e99",
                              "cellValue": "SystemCheckMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Configuration Parameters",
                              "subTarget": "ParameterValuesCheck",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "links - 0"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 9,
                                    "content": {
                                      "version": "KqlParameterItem/1.0",
                                      "parameters": [
                                        {
                                          "id": "cd5a4c7c-cbc7-46f0-b97d-bb3464efb1a7",
                                          "version": "KqlParameterItem/1.0",
                                          "name": "param_backuptype",
                                          "label": "Backup Type",
                                          "type": 10,
                                          "isRequired": true,
                                          "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\": \\\"'log backup','data'\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\": \\\"'log backup'\\\", \\\"label\\\":\\\"Log\\\" },\\r\\n    { \\\"value\\\": \\\"'data','complete data backup'\\\", \\\"label\\\":\\\"Data\\\" }\\r\\n]\",\"transformers\":null}",
                                          "typeSettings": {
                                            "additionalResourceOptions": [],
                                            "showDefault": false
                                          },
                                          "queryType": 8
                                        },
                                        {
                                          "id": "a84be630-8935-440e-880a-966fc2ddbf50",
                                          "version": "KqlParameterItem/1.0",
                                          "name": "param_backupstate",
                                          "label": "Backup State",
                                          "type": 10,
                                          "isRequired": true,
                                          "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\": \\\"'success','fail','successful','failed'\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\": \\\"'success','successful'\\\", \\\"label\\\":\\\"Successful\\\" },\\r\\n    { \\\"value\\\": \\\"'fail','failed'\\\", \\\"label\\\":\\\"Failed\\\" }\\r\\n]\",\"transformers\":null}",
                                          "typeSettings": {
                                            "additionalResourceOptions": [],
                                            "showDefault": false
                                          },
                                          "queryType": 8
                                        }
                                      ],
                                      "style": "pills",
                                      "queryType": 8
                                    },
                                    "conditionalVisibility": {
                                      "parameterName": "param_check_backup",
                                      "comparison": "isEqualTo",
                                      "value": "0"
                                    },
                                    "name": "parameters - 1"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let table_databases = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend backup_item = DATABASE_NAME_s\r\n| project backup_item\r\n| distinct backup_item\r\n| order by backup_item asc\r\n;\r\nlet table_lastbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend state_name = STATE_NAME_s,\r\n         backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          state_name,\r\n          backup_time\r\n;\r\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.backup_id == $right.BACKUP_ID_d\r\n| extend last_log_backup_state_name = STATE_NAME_s,\r\n         last_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          backup_id,\r\n          last_log_backup_state_name,\r\n          last_log_backup_time\r\n;\r\nlet table_lastsuccessfulbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          last_successful_backup_id,\r\n          last_successful_backup_time\r\n;\r\nlet table_lastsuccessfullogbackup = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| where ENTRY_TYPE_NAME_s == \"log backup\"\r\n| summarize last_successful_log_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_log_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_log_backup_time = UTC_START_TIME_t\r\n| project parent_database,\r\n          last_successful_log_backup_id,\r\n          last_successful_log_backup_time\r\n;\r\nlet table_lastsuccessfulbackuptypestatus = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by state_name = STATE_NAME_s, backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n| join (SapHana_BackupCatalog_CL)\r\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\r\n| extend last_successful_backup_time = UTC_START_TIME_t,\r\n         parent_database = DATABASE_NAME_s\r\n| project parent_database,\r\n          last_successful_backup_id,\r\n          last_successful_backup_time,\r\n          backup_item\r\n;\r\nlet table_lastbackupbytypestatus = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| summarize backup_time = max(UTC_START_TIME_t), backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, state_name = STATE_NAME_s, parent_database = DATABASE_NAME_s\r\n;\r\nlet table_lastbackupbytype = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| summarize backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n;\r\nlet table_lastbackupbystatus = table_lastbackupbytype\r\n| join (table_lastbackupbytypestatus)\r\n    on $left.backup_id == $right.backup_id\r\n    and $left.parent_database == $right.parent_database\r\n;\r\nlet table_numberfailedbackupssummary = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s\r\n| union (SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"fail\"\r\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s)\r\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by parent_database\r\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\r\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\r\n;\r\nlet table_numberfailedbackupsbytype = SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"success\"\r\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\r\n| union (SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where STATE_NAME_s contains \"fail\"\r\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s)\r\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by backup_type, parent_database\r\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\r\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\r\n;\r\nlet table_databasesummary = table_databases\r\n| join kind=leftouter (table_lastbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastlogbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastsuccessfulbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join kind=leftouter (table_lastsuccessfullogbackup)\r\n    on $left.backup_item == $right.parent_database\r\n| join (table_numberfailedbackupssummary)\r\n    on $left.backup_item == $right.parent_database\r\n| extend Id = backup_item,\r\n         last_status = coalesce(state_name, last_log_backup_state_name),\r\n         parent_database = '',\r\n         item_type = strcat(\"'*'\"),\r\n         database = backup_item,\r\n         no_filter = ''\r\n| project backup_item,\r\n          Id,\r\n          last_status,\r\n          number_failed_backups_text,\r\n          parent_database,\r\n          item_type,\r\n          database,\r\n          no_filter\r\n| order by parent_database desc\r\n;\r\nlet table_backupsummary = table_lastbackupbytypestatus\r\n| join (table_lastbackupbytype)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_item\r\n    and $left.backup_id == $right.backup_id\r\n| join kind=leftouter (table_lastsuccessfulbackuptypestatus)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_item\r\n| join (table_numberfailedbackupsbytype)\r\n    on $left.parent_database == $right.parent_database\r\n    and $left.backup_item == $right.backup_type\r\n| extend backup_item,\r\n         Id = strcat(parent_database, \"-\", tostring(backup_id)),\r\n         last_status = state_name,\r\n         last_status_time_minutes = toint((now() - backup_time) / 1m),\r\n         last_successful_backup_time_minutes = toint((now() - last_successful_backup_time) / 1m),\r\n         item_type = strcat(\"'\", backup_item, \"'\"),\r\n         database = parent_database,\r\n         no_filter = 'where BACKUP_ID_d > 0 //'\r\n| project backup_item,\r\n          Id,\r\n          last_status,\r\n          last_status_time_minutes,\r\n          last_successful_backup_time_minutes,\r\n          parent_database,\r\n          number_failed_backups_text,\r\n          item_type,\r\n          database,\r\n          no_filter\r\n| order by parent_database desc\r\n;\r\ntable_backupsummary\r\n| union table_databasesummary\r\n| order by backup_item asc\r\n",
                                      "size": 3,
                                      "title": "Backup Summary",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "gridSettings": {
                                        "formatters": [
                                          {
                                            "columnMatch": "Id",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "last_status",
                                            "formatter": 18,
                                            "formatOptions": {
                                              "thresholdsOptions": "icons",
                                              "thresholdsGrid": [
                                                {
                                                  "operator": "contains",
                                                  "thresholdValue": "fail",
                                                  "representation": "failed",
                                                  "text": "{0}{1}"
                                                },
                                                {
                                                  "operator": "Default",
                                                  "thresholdValue": null,
                                                  "representation": "success",
                                                  "text": "{0}{1}"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "columnMatch": "last_status_time_minutes",
                                            "formatter": 1,
                                            "numberFormat": {
                                              "unit": 25,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "last_successful_backup_time_minutes",
                                            "formatter": 1,
                                            "numberFormat": {
                                              "unit": 25,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "parent_database",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "number_failed_backups_text",
                                            "formatter": 18,
                                            "formatOptions": {
                                              "thresholdsOptions": "icons",
                                              "thresholdsGrid": [
                                                {
                                                  "operator": "startsWith",
                                                  "thresholdValue": "0",
                                                  "representation": "Blank",
                                                  "text": "{0}{1}"
                                                },
                                                {
                                                  "operator": "Default",
                                                  "thresholdValue": null,
                                                  "representation": "1",
                                                  "text": "{0}{1}"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "columnMatch": "item_type",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "database",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "no_filter",
                                            "formatter": 5
                                          }
                                        ],
                                        "hierarchySettings": {
                                          "idColumn": "Id",
                                          "parentColumn": "parent_database",
                                          "treeType": 0,
                                          "expanderColumn": "backup_item"
                                        },
                                        "labelSettings": [
                                          {
                                            "columnId": "backup_item",
                                            "label": "Backup Item"
                                          },
                                          {
                                            "columnId": "last_status",
                                            "label": "Backup Status"
                                          },
                                          {
                                            "columnId": "last_status_time_minutes",
                                            "label": "Backup Age"
                                          },
                                          {
                                            "columnId": "last_successful_backup_time_minutes",
                                            "label": "Age of Previous successful Backup"
                                          },
                                          {
                                            "columnId": "number_failed_backups_text",
                                            "label": "Number of failed backups"
                                          }
                                        ]
                                      }
                                    },
                                    "name": "backup summary"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\r\n[\r\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\r\n];\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| extend end_time_utc = UTC_END_TIME_t,\r\n         backup_type = ENTRY_TYPE_NAME_s,\r\n         database = DATABASE_NAME_s,\r\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\r\n         backup_id = BACKUP_ID_d\r\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\r\n| distinct *\r\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                                      "size": 0,
                                      "aggregation": 4,
                                      "title": "Backup Size",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "categoricalbar",
                                      "chartSettings": {
                                        "xAxis": "end_time_utc",
                                        "yAxis": [
                                          "backup_size_bytes"
                                        ],
                                        "group": "backup_type",
                                        "createOtherGroup": null,
                                        "seriesLabelSettings": [
                                          {
                                            "seriesName": "log backup",
                                            "color": "blue"
                                          }
                                        ],
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 2,
                                            "options": {
                                              "style": "decimal",
                                              "useGrouping": true,
                                              "maximumFractionDigits": 2
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "name": "Backup Size"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\r\n[\r\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\r\n];\r\nSapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| extend end_time_utc = UTC_END_TIME_t,\r\n         backup_type = ENTRY_TYPE_NAME_s,\r\n         database = DATABASE_NAME_s,\r\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\r\n         backup_id = BACKUP_ID_d\r\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\r\n| distinct *\r\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                                      "size": 0,
                                      "title": "Backup Duration",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "categoricalbar",
                                      "chartSettings": {
                                        "xAxis": "end_time_utc",
                                        "yAxis": [
                                          "backup_duration_seconds"
                                        ],
                                        "group": "backup_type",
                                        "createOtherGroup": null,
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 24,
                                            "options": {
                                              "style": "decimal",
                                              "useGrouping": true,
                                              "maximumFractionDigits": 2
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "name": "Backup Duration"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "SapHana_BackupCatalog_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}' \r\n| where UTC_END_TIME_t {param_timeframe}\r\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\r\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\r\n| extend\r\n  status = case(STATE_NAME_s == \"successful\", \"success\", STATE_NAME_s == \"failed\", \"fail\", STATE_NAME_s),\r\n  backup_type=ENTRY_TYPE_NAME_s,\r\n  database=DATABASE_NAME_s,\r\n  start_time_utc=UTC_START_TIME_t,\r\n  end_time_utc=UTC_END_TIME_t,\r\n  duration_hms = format_timespan(TIME_ELAPSED_SECONDS_d * 1s,'hh:mm:ss'),\r\n  backup_size_bytes = BACKUP_SIZE_BYTES_d,\r\n  backup_rate_kbps = BACKUP_RATE_KBYTES_PER_SECOND_d,\r\n  message = Message,\r\n  backup_id = BACKUP_ID_d,\r\n  number_of_files = NUMBER_OF_FILES_d\r\n| project status, backup_type, database, start_time_utc, end_time_utc, duration_hms, backup_size_bytes, backup_rate_kbps, message, backup_id, number_of_files\r\n| distinct *\r\n| order by end_time_utc desc",
                                      "size": 0,
                                      "title": "Backup Catalog",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "table",
                                      "gridSettings": {
                                        "formatters": [
                                          {
                                            "columnMatch": "status",
                                            "formatter": 18,
                                            "formatOptions": {
                                              "thresholdsOptions": "icons",
                                              "thresholdsGrid": [
                                                {
                                                  "operator": "contains",
                                                  "thresholdValue": "fail",
                                                  "representation": "failed",
                                                  "text": "{0}{1}"
                                                },
                                                {
                                                  "operator": "Default",
                                                  "thresholdValue": null,
                                                  "representation": "success",
                                                  "text": "{0}{1}"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "columnMatch": "backup_type",
                                            "formatter": 1,
                                            "formatOptions": {
                                              "linkTarget": "GenericDetails",
                                              "linkIsContextBlade": true
                                            }
                                          },
                                          {
                                            "columnMatch": "database",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "start_time_utc",
                                            "formatter": 6,
                                            "dateFormat": {
                                              "showUtcTime": null,
                                              "formatName": "shortDateTimePattern"
                                            }
                                          },
                                          {
                                            "columnMatch": "end_time_utc",
                                            "formatter": 6,
                                            "dateFormat": {
                                              "showUtcTime": null,
                                              "formatName": "shortDateTimePattern"
                                            }
                                          },
                                          {
                                            "columnMatch": "duration_hms",
                                            "formatter": 4,
                                            "formatOptions": {
                                              "palette": "blue"
                                            }
                                          },
                                          {
                                            "columnMatch": "backup_size_bytes",
                                            "formatter": 4,
                                            "formatOptions": {
                                              "palette": "blue"
                                            },
                                            "numberFormat": {
                                              "unit": 2,
                                              "options": {
                                                "style": "decimal",
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "backup_rate_kbps",
                                            "formatter": 4,
                                            "formatOptions": {
                                              "palette": "blue"
                                            },
                                            "numberFormat": {
                                              "unit": 46,
                                              "options": {
                                                "style": "decimal",
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "message",
                                            "formatter": 1
                                          },
                                          {
                                            "columnMatch": "backup_id",
                                            "formatter": 1,
                                            "formatOptions": {
                                              "linkTarget": "GenericDetails",
                                              "linkIsContextBlade": true
                                            }
                                          },
                                          {
                                            "columnMatch": "number_of_files",
                                            "formatter": 1,
                                            "numberFormat": {
                                              "unit": 0,
                                              "options": {
                                                "style": "decimal"
                                              }
                                            }
                                          }
                                        ],
                                        "labelSettings": [
                                          {
                                            "columnId": "status",
                                            "label": "Status"
                                          },
                                          {
                                            "columnId": "backup_type",
                                            "label": "Backup type"
                                          },
                                          {
                                            "columnId": "database",
                                            "label": "Database"
                                          },
                                          {
                                            "columnId": "start_time_utc",
                                            "label": "Start time"
                                          },
                                          {
                                            "columnId": "end_time_utc",
                                            "label": "End time"
                                          },
                                          {
                                            "columnId": "duration_hms",
                                            "label": "Duration"
                                          },
                                          {
                                            "columnId": "backup_size_bytes",
                                            "label": "Backup size"
                                          },
                                          {
                                            "columnId": "backup_rate_kbps",
                                            "label": "Rate"
                                          },
                                          {
                                            "columnId": "message",
                                            "label": "Message"
                                          },
                                          {
                                            "columnId": "backup_id",
                                            "label": "Backup ID"
                                          },
                                          {
                                            "columnId": "number_of_files",
                                            "label": "Number of files"
                                          }
                                        ]
                                      }
                                    },
                                    "name": "Backup Catalog"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_backup",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "name": "Group Backup - has data"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "There is no data for backup catalog to display. ",
                                      "style": "info"
                                    },
                                    "name": "text - 0"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_backup",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Backup Warning Group"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every hour.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "Backup"
                        },
                        "name": "Backup Tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 11,
                                    "content": {
                                      "version": "LinkItem/1.0",
                                      "style": "tabs",
                                      "links": [
                                        {
                                          "id": "9ebf9eab-5334-4610-9b97-2bdd789cb9fb",
                                          "cellValue": "param_tab_sys_check",
                                          "linkTarget": "parameter",
                                          "linkLabel": "Save Point",
                                          "subTarget": "1",
                                          "style": "link"
                                        },
                                        {
                                          "id": "fa7b9a27-5a6b-4936-ae2b-2a937038e20f",
                                          "cellValue": "param_tab_sys_check",
                                          "linkTarget": "parameter",
                                          "linkLabel": "MVCC",
                                          "subTarget": "2",
                                          "style": "link"
                                        },
                                        {
                                          "id": "849edb25-705a-47b7-a030-ae358e7a032a",
                                          "cellValue": "param_tab_sys_check",
                                          "linkTarget": "parameter",
                                          "linkLabel": "Delta Merge",
                                          "subTarget": "3",
                                          "style": "link"
                                        },
                                        {
                                          "id": "e3a3624c-ad12-4b5b-9f80-9b3901f02e9e",
                                          "cellValue": "param_tab_sys_check",
                                          "linkTarget": "parameter",
                                          "linkLabel": "Statistics Alerts",
                                          "subTarget": "4",
                                          "style": "link"
                                        }
                                      ]
                                    },
                                    "name": "tabs_system_check"
                                  },
                                  {
                                    "type": 12,
                                    "content": {
                                      "version": "NotebookGroup/1.0",
                                      "groupType": "editable",
                                      "items": [
                                        {
                                          "type": 3,
                                          "content": {
                                            "version": "KqlItem/1.0",
                                            "query": "SapHana_Mvcc_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where Time_Generated_t between (todatetime({param_timeframe:start}) .. todatetime({param_timeframe:end}))\r\n| summarize TimeGenerated=max(TimeGenerated) by  HOST_s, PORT_d, NAME_s, VALUE_s\r\n| order by TimeGenerated desc",
                                            "size": 0,
                                            "showRefreshButton": true,
                                            "showExportToExcel": true,
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces",
                                            "gridSettings": {
                                              "formatters": [
                                                {
                                                  "columnMatch": "HOST_s",
                                                  "formatter": 1
                                                },
                                                {
                                                  "columnMatch": "PORT_d",
                                                  "formatter": 1
                                                },
                                                {
                                                  "columnMatch": "NAME_s",
                                                  "formatter": 1
                                                },
                                                {
                                                  "columnMatch": "VALUE_s",
                                                  "formatter": 18,
                                                  "formatOptions": {
                                                    "thresholdsOptions": "colors",
                                                    "thresholdsGrid": [
                                                      {
                                                        "operator": ">=",
                                                        "thresholdValue": "8000000 ",
                                                        "representation": "redBright",
                                                        "text": "{0}{1}"
                                                      },
                                                      {
                                                        "operator": "Default",
                                                        "thresholdValue": null,
                                                        "text": "{0}{1}"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "filter": true,
                                              "labelSettings": [
                                                {
                                                  "columnId": "HOST_s",
                                                  "label": "Host"
                                                },
                                                {
                                                  "columnId": "PORT_d",
                                                  "label": "Port"
                                                },
                                                {
                                                  "columnId": "NAME_s",
                                                  "label": "Name"
                                                },
                                                {
                                                  "columnId": "VALUE_s",
                                                  "label": "Value"
                                                },
                                                {
                                                  "columnId": "TimeGenerated",
                                                  "label": "Time Generated"
                                                }
                                              ]
                                            },
                                            "sortBy": []
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "2"
                                            },
                                            {
                                              "parameterName": "param_check_mvcc",
                                              "comparison": "isEqualTo",
                                              "value": "0"
                                            }
                                          ],
                                          "showPin": true,
                                          "name": "mvcc"
                                        },
                                        {
                                          "type": 1,
                                          "content": {
                                            "json": "<div style=\"float: right\">\r\n\tUpdated every 24 hours.\r\n</div>"
                                          },
                                          "name": "text - 1"
                                        }
                                      ]
                                    },
                                    "conditionalVisibilities": [
                                      {
                                        "parameterName": "param_tab_sys_check",
                                        "comparison": "isEqualTo",
                                        "value": "2"
                                      },
                                      {
                                        "parameterName": "param_check_mvcc",
                                        "comparison": "isEqualTo",
                                        "value": "0"
                                      }
                                    ],
                                    "name": "SystemCheckGroup - MVCC"
                                  },
                                  {
                                    "type": 12,
                                    "content": {
                                      "version": "NotebookGroup/1.0",
                                      "groupType": "editable",
                                      "items": [
                                        {
                                          "type": 3,
                                          "content": {
                                            "version": "KqlItem/1.0",
                                            "query": "SapHana_IO_Savepoint_CL\r\n| where TimeGenerated {param_timeframe}\r\n| extend SavepointPurpose = case( P_s == 'DS', 'DROP_SNAPSHOT',\r\n                        P_s == 'N', 'NORMAL',\r\n                        P_s == 'SFR', 'SNAPSHOT_FOR_REPLICATION',\r\n                        P_s == 'SFB', 'SNAPSHOT_FOR_BACKUP',\r\n                        P_s == 'SRR', 'SNAPSHOT_FOR_RESUMERE',\r\n                        P_s == 'SFS', 'SNAPSHOT_FOR_SECONDARY', '')\r\n| extend Initiation = case( I_s == 'E', 'EXECUTED_EXPLICITLY',\r\n                            I_s == 'T', 'TRIGGERED_TIMEBASED', '')\r\n| extend Aggregation = case( AGG_s == 'MAX', 'Maximum',\r\n                             AGG_s == 'AVG', 'Average', \r\n                             AGG_s == 'SUM', 'Total','')\r\n| distinct START_TIME_s, BLK_PHASE_START_TIME_s, CRIT_PHASE_START_TIME_s, END_TIME_s, COUNT_s, SavepointPurpose,Initiation,Aggregation, RETRIES_s,TOTAL_S_s, BLK_S_s, LOCK_S_s, CRIT_S_s, SIZE_MB_s, MB_PER_S_s, RS_SIZE_PCT_s, HOST_s, PORT_s, VERSION_s\r\n| order by START_TIME_s desc\r\n",
                                            "size": 0,
                                            "showRefreshButton": true,
                                            "showExportToExcel": true,
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces",
                                            "gridSettings": {
                                              "filter": true,
                                              "labelSettings": [
                                                {
                                                  "columnId": "START_TIME_s",
                                                  "label": "Start Time"
                                                },
                                                {
                                                  "columnId": "BLK_PHASE_START_TIME_s",
                                                  "label": "Blocking Phase"
                                                },
                                                {
                                                  "columnId": "CRIT_PHASE_START_TIME_s",
                                                  "label": "Critical Phase "
                                                },
                                                {
                                                  "columnId": "END_TIME_s",
                                                  "label": "End Time"
                                                },
                                                {
                                                  "columnId": "COUNT_s",
                                                  "label": "Number Of Savepoint"
                                                },
                                                {
                                                  "columnId": "SavepointPurpose",
                                                  "label": "Savepoint Purpose"
                                                },
                                                {
                                                  "columnId": "RETRIES_s",
                                                  "label": "Retries"
                                                },
                                                {
                                                  "columnId": "TOTAL_S_s",
                                                  "label": "Durations"
                                                },
                                                {
                                                  "columnId": "BLK_S_s",
                                                  "label": "Blocking Phase"
                                                },
                                                {
                                                  "columnId": "LOCK_S_s",
                                                  "label": "Lock"
                                                },
                                                {
                                                  "columnId": "CRIT_S_s",
                                                  "label": "Critical"
                                                },
                                                {
                                                  "columnId": "SIZE_MB_s",
                                                  "label": "Write Size"
                                                },
                                                {
                                                  "columnId": "MB_PER_S_s",
                                                  "label": "Write Throughput"
                                                },
                                                {
                                                  "columnId": "RS_SIZE_PCT_s",
                                                  "label": "RS_SIZE_PCT (%)"
                                                },
                                                {
                                                  "columnId": "HOST_s",
                                                  "label": "Host"
                                                },
                                                {
                                                  "columnId": "PORT_s",
                                                  "label": "Port"
                                                },
                                                {
                                                  "columnId": "VERSION_s",
                                                  "label": "Version"
                                                }
                                              ]
                                            },
                                            "sortBy": []
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "1"
                                            },
                                            {
                                              "parameterName": "param_check_iosavepoint",
                                              "comparison": "isEqualTo",
                                              "value": "0"
                                            }
                                          ],
                                          "showPin": true,
                                          "name": "Savepoint"
                                        },
                                        {
                                          "type": 1,
                                          "content": {
                                            "json": "<div style=\"float: right\">\r\n\tUpdated every 60 minutes.\r\n</div>"
                                          },
                                          "name": "text - 1"
                                        }
                                      ]
                                    },
                                    "conditionalVisibilities": [
                                      {
                                        "parameterName": "param_tab_sys_check",
                                        "comparison": "isEqualTo",
                                        "value": "1"
                                      },
                                      {
                                        "parameterName": "param_check_iosavepoint",
                                        "comparison": "isEqualTo",
                                        "value": "0"
                                      }
                                    ],
                                    "name": "  Health Tab - Save Point"
                                  },
                                  {
                                    "type": 12,
                                    "content": {
                                      "version": "NotebookGroup/1.0",
                                      "groupType": "editable",
                                      "items": [
                                        {
                                          "type": 3,
                                          "content": {
                                            "version": "KqlItem/1.0",
                                            "query": "SapHana_DeltaMerge_Count_CL\r\n| extend timestamp_load = TimeGenerated\r\n| where timestamp_load {param_timeframe} \r\n| distinct START_TIME_s, END_TIME_s, DURATION_S_s,HOST_s, PORT_s, COUNT_s, TYPE_s, MOTIVATION_s, SCHEMA_NAME_s, TABLE_NAME_s, ROWS_MERGED_s, LAST_ERROR_s",
                                            "size": 0,
                                            "showRefreshButton": true,
                                            "showExportToExcel": true,
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces",
                                            "gridSettings": {
                                              "filter": true,
                                              "sortBy": [
                                                {
                                                  "itemKey": "DURATION_S_s",
                                                  "sortOrder": 1
                                                }
                                              ],
                                              "labelSettings": [
                                                {
                                                  "columnId": "START_TIME_s",
                                                  "label": "Start Time"
                                                },
                                                {
                                                  "columnId": "END_TIME_s",
                                                  "label": "End Time"
                                                },
                                                {
                                                  "columnId": "DURATION_S_s",
                                                  "label": "Duration (sec)"
                                                },
                                                {
                                                  "columnId": "HOST_s",
                                                  "label": "Host"
                                                },
                                                {
                                                  "columnId": "PORT_s",
                                                  "label": "Port"
                                                },
                                                {
                                                  "columnId": "COUNT_s",
                                                  "label": "Count"
                                                },
                                                {
                                                  "columnId": "TYPE_s",
                                                  "label": "Type"
                                                },
                                                {
                                                  "columnId": "MOTIVATION_s",
                                                  "label": "Motivation"
                                                },
                                                {
                                                  "columnId": "SCHEMA_NAME_s",
                                                  "label": "Schema Name"
                                                },
                                                {
                                                  "columnId": "TABLE_NAME_s",
                                                  "label": "Table Name"
                                                },
                                                {
                                                  "columnId": "ROWS_MERGED_s",
                                                  "label": "Rows Merged"
                                                },
                                                {
                                                  "columnId": "LAST_ERROR_s",
                                                  "label": "Last Error"
                                                }
                                              ]
                                            },
                                            "sortBy": [
                                              {
                                                "itemKey": "DURATION_S_s",
                                                "sortOrder": 1
                                              }
                                            ]
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "3"
                                            },
                                            {
                                              "parameterName": "param_check_deltamerge",
                                              "comparison": "isEqualTo",
                                              "value": "0"
                                            }
                                          ],
                                          "showPin": true,
                                          "name": "deltamerge"
                                        },
                                        {
                                          "type": 1,
                                          "content": {
                                            "json": "There is no data available for delta merge.",
                                            "style": "warning"
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_check_deltamerge",
                                              "comparison": "isEqualTo",
                                              "value": "2"
                                            },
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "3"
                                            }
                                          ],
                                          "name": "no-backupdata"
                                        },
                                        {
                                          "type": 1,
                                          "content": {
                                            "json": "<div style=\"float: right\">\r\n\tUpdated every 60 minutes.\r\n</div>"
                                          },
                                          "name": "text - 2"
                                        }
                                      ]
                                    },
                                    "conditionalVisibility": {
                                      "parameterName": "param_tab_sys_check",
                                      "comparison": "isEqualTo",
                                      "value": "3"
                                    },
                                    "name": "  Health Tab - Delta Merge"
                                  },
                                  {
                                    "type": 12,
                                    "content": {
                                      "version": "NotebookGroup/1.0",
                                      "groupType": "editable",
                                      "items": [
                                        {
                                          "type": 9,
                                          "content": {
                                            "version": "KqlParameterItem/1.0",
                                            "parameters": [
                                              {
                                                "id": "ebeb7d85-8c21-4534-8135-b05732fab7b5",
                                                "version": "KqlParameterItem/1.0",
                                                "name": "Rating",
                                                "type": 2,
                                                "multiSelect": true,
                                                "quote": "'",
                                                "delimiter": ",",
                                                "query": "SapHana_Alerts_CL\r\n| where isnotempty(RATING_s)\r\n| distinct RATING_s",
                                                "typeSettings": {
                                                  "additionalResourceOptions": [
                                                    "value::all"
                                                  ],
                                                  "showDefault": false
                                                },
                                                "defaultValue": "value::all",
                                                "queryType": 0,
                                                "resourceType": "microsoft.operationalinsights/workspaces"
                                              }
                                            ],
                                            "style": "pills",
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces"
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "4"
                                            },
                                            {
                                              "parameterName": "param_check_alerts",
                                              "comparison": "isEqualTo",
                                              "value": "0"
                                            }
                                          ],
                                          "name": "alert_params"
                                        },
                                        {
                                          "type": 3,
                                          "content": {
                                            "version": "KqlItem/1.0",
                                            "query": "let ratingList = dynamic([{Rating}]);\r\nSapHana_Alerts_CL\r\n| extend timestamp_load = TimeGenerated\r\n| where timestamp_load {param_timeframe} \r\n| extend Date = format_datetime(TimeGenerated, 'dd-MM-yyyy')\r\n| extend Time = format_datetime(TimeGenerated, 'hh:mm:ss') \r\n| where array_length(ratingList) == 0 or RATING_s in (ratingList)\r\n| distinct Date, Time, ALERT_ID_s, RATING_s, ALERT_DETAILS_s, RECOMMENDATION_s\r\n// Filter\r\n| where RATING_s == \"HIGH\" or RATING_s == \"MEDIUM\" or RATING_s == \"LOW\" or RATING_s == \"ERROR\"\r\n| order by RATING_s == \"ERROR\" desc , RATING_s == \"HIGH\", RATING_s == \"MEDIUM\", RATING_s == \"LOW\"\r\n\r\n",
                                            "size": 0,
                                            "showRefreshButton": true,
                                            "showExportToExcel": true,
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces",
                                            "gridSettings": {
                                              "formatters": [
                                                {
                                                  "columnMatch": "RATING_s",
                                                  "formatter": 18,
                                                  "formatOptions": {
                                                    "thresholdsOptions": "colors",
                                                    "thresholdsGrid": [
                                                      {
                                                        "operator": "==",
                                                        "thresholdValue": "ERROR",
                                                        "representation": "redBright",
                                                        "text": "{0}{1}"
                                                      },
                                                      {
                                                        "operator": "==",
                                                        "thresholdValue": "HIGH",
                                                        "representation": "red",
                                                        "text": "{0}{1}"
                                                      },
                                                      {
                                                        "operator": "==",
                                                        "thresholdValue": "MEDIUM",
                                                        "representation": "orange",
                                                        "text": "{0}{1}"
                                                      },
                                                      {
                                                        "operator": "==",
                                                        "thresholdValue": "LOW",
                                                        "representation": "yellow",
                                                        "text": "{0}{1}"
                                                      },
                                                      {
                                                        "operator": "Default",
                                                        "thresholdValue": null,
                                                        "representation": "blue",
                                                        "text": "{0}{1}"
                                                      }
                                                    ]
                                                  },
                                                  "numberFormat": {
                                                    "unit": 0,
                                                    "options": {
                                                      "style": "decimal"
                                                    }
                                                  }
                                                }
                                              ],
                                              "filter": true,
                                              "labelSettings": [
                                                {
                                                  "columnId": "ALERT_ID_s",
                                                  "label": "Alert Id"
                                                },
                                                {
                                                  "columnId": "RATING_s",
                                                  "label": "Rating",
                                                  "comment": ""
                                                },
                                                {
                                                  "columnId": "ALERT_DETAILS_s",
                                                  "label": "Alert Details"
                                                },
                                                {
                                                  "columnId": "RECOMMENDATION_s",
                                                  "label": "Recommendation",
                                                  "comment": ""
                                                }
                                              ]
                                            },
                                            "sortBy": []
                                          },
                                          "conditionalVisibilities": [
                                            {
                                              "parameterName": "param_tab_sys_check",
                                              "comparison": "isEqualTo",
                                              "value": "4"
                                            },
                                            {
                                              "parameterName": "param_check_alerts",
                                              "comparison": "isEqualTo",
                                              "value": "0"
                                            }
                                          ],
                                          "showPin": true,
                                          "name": "StatisticsAlerts"
                                        },
                                        {
                                          "type": 1,
                                          "content": {
                                            "json": "<div style=\"float: right\">\r\n\tUpdated every 60 seconds.\r\n</div>"
                                          },
                                          "name": "text - 2"
                                        }
                                      ]
                                    },
                                    "conditionalVisibilities": [
                                      {
                                        "parameterName": "param_tab_sys_check",
                                        "comparison": "isEqualTo",
                                        "value": "4"
                                      },
                                      {
                                        "parameterName": "param_check_alerts",
                                        "comparison": "isEqualTo",
                                        "value": "0"
                                      }
                                    ],
                                    "name": "  Health Tab - Statistics Alerts"
                                  }
                                ]
                              },
                              "name": "SystemCheckGroup"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "Health"
                        },
                        "name": "Health Tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "System replication does not appear to be configured on this instance.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_systemreplication",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Group replication - no data text"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "// Filter the base data set to only work with the selected Provider\r\nlet table_systemreplication = SapHana_SystemReplication_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe} \r\n;\r\n// Find the latest post for this instance\r\nlet table_lastpost = table_systemreplication\r\n| summarize lastpost = max(TimeGenerated)\r\n| project lastpost\r\n;\r\n// Create table of the last posts for this instance\r\nlet table_hsrlastpost = table_systemreplication\r\n| join kind=inner (table_lastpost) on  $left.TimeGenerated == $right.lastpost\r\n;\r\n//create a table with the primary site\r\nlet table_primarysite = table_hsrlastpost \r\n| distinct SITE_NAME_s\r\n| project  \r\n    NodeID = SITE_NAME_s,\r\n    SourceID = '',\r\n    TargetID = '',\r\n    CentreContent = SITE_NAME_s, \r\n    EdgeLabel = '', \r\n    TopContent = 'Primary'\r\n;\r\n// create a table with the secondary sites\r\nlet table_secondarysite = table_hsrlastpost \r\n| summarize\r\n   TIME_DIFF_SECONDS_d = avg(TIME_DIFF_SECONDS_d),\r\n   OPERATION_MODE_s = max(OPERATION_MODE_s),\r\n   REPLICATION_MODE_s = max(REPLICATION_MODE_s),\r\n   SYSTEM_REPLICATION_STATUS_s = max(SYSTEM_REPLICATION_STATUS_s)\r\n  by SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n| project  \r\n   NodeID = SECONDARY_SITE_NAME_s,\r\n   SourceID = SITE_NAME_s,\r\n   TargetID = SECONDARY_SITE_NAME_s,\r\n   CentreContent = SECONDARY_SITE_NAME_s,\r\n   EdgeLabel = strcat( iif(SYSTEM_REPLICATION_STATUS_s == 'ACTIVE', '🟢', '🟥'), ' ', SYSTEM_REPLICATION_STATUS_s, ' - ', REPLICATION_MODE_s, ' with ',OPERATION_MODE_s), \r\n   TopContent = 'Secondary'\r\n;\r\n// join the two together\r\ntable_primarysite\r\n| union table_secondarysite\r\n| order by NodeID asc",
                                      "size": 3,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "graph",
                                      "graphSettings": {
                                        "type": 0,
                                        "topContent": {
                                          "columnMatch": "TopContent"
                                        },
                                        "leftContent": {
                                          "columnMatch": "LeftContent_real",
                                          "formatter": 5,
                                          "numberFormat": {
                                            "unit": 24,
                                            "options": {
                                              "style": "decimal",
                                              "useGrouping": false
                                            }
                                          },
                                          "tooltipFormat": {
                                            "tooltip": "This replication target is currently {0} behind the replication source"
                                          }
                                        },
                                        "centerContent": {
                                          "columnMatch": "CentreContent"
                                        },
                                        "rightContent": {
                                          "columnMatch": "RightContent",
                                          "formatter": 5
                                        },
                                        "bottomContent": {
                                          "columnMatch": "BottomContent",
                                          "formatter": 5
                                        },
                                        "nodeIdField": "NodeID",
                                        "sourceIdField": "SourceID",
                                        "targetIdField": "TargetID",
                                        "graphOrientation": 1,
                                        "showOrientationToggles": false,
                                        "edgeSize": "EdgeSize",
                                        "edgeLabel": "EdgeLabel",
                                        "nodeSize": {
                                          "sizeField": "NodeSize",
                                          "minSize": 100,
                                          "maxSize": 200
                                        },
                                        "staticNodeSize": 100,
                                        "colorSettings": {
                                          "nodeColorField": "TopContent",
                                          "type": 1,
                                          "colorPalette": "default"
                                        },
                                        "hivesMargin": 5
                                      }
                                    },
                                    "customWidth": "80",
                                    "showPin": true,
                                    "name": "Cluster-node-graph-topology"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let table_systemreplication = SapHana_SystemReplication_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n;\r\nlet table_lastpost = table_systemreplication\r\n| summarize last_post = max(TimeGenerated)\r\n| project last_post\r\n;\r\nlet table_hsrlastpost = table_systemreplication\r\n| join kind=inner (table_lastpost)\r\n    on $left.TimeGenerated == $right.last_post\r\n;\r\nlet table_tsreplicationtimediffbyservice = table_systemreplication\r\n| make-series ts_max_time_diff_seconds = max(TIME_DIFF_SECONDS_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s \r\n;\r\nlet table_tsreplicationasyncbuffbyservice = table_systemreplication\r\n| make-series ts_max_async_buff_mb = max(ASYNC_BUFF_USED_MB_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s \r\n;\r\nlet table_tsreplicationtimediffbyhost = table_systemreplication\r\n| make-series ts_max_time_diff_seconds = max(TIME_DIFF_SECONDS_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s \r\n;\r\nlet table_tsreplicationasyncbuffbyhost = table_systemreplication\r\n| make-series ts_max_async_buff_mb = max(ASYNC_BUFF_USED_MB_d) default=0 on TimeGenerated step {param_timeframe:grain} by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationpostbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_maxreplicationpostbyservice = table_systemreplication\r\n| summarize last_post = max(TimeGenerated), max_time_diff_seconds = max(TIME_DIFF_SECONDS_d), max_async_buff_used_mb = max(ASYNC_BUFF_USED_MB_d) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_replicationmetricsbyservice = table_hsrlastpost\r\n| extend async_buff_used_mb = ASYNC_BUFF_USED_MB_d,\r\n         time_diff_seconds = TIME_DIFF_SECONDS_d\r\n| project last_post,\r\n          DATABASE_NAME_s,\r\n          HOST_s,\r\n          SECONDARY_HOST_s,\r\n          SITE_NAME_s,\r\n          SECONDARY_SITE_NAME_s,\r\n          SERVICE_NAME_s,\r\n          SHIPPED_LOG_POSITION_TIME_t,\r\n          REPLAYED_LOG_POSITION_TIME_t,\r\n          async_buff_used_mb,\r\n          time_diff_seconds\r\n;\r\nlet table_replicationmetricsbydb = table_replicationmetricsbyservice\r\n| summarize last_post = max(last_post), async_buff_used_mb = sum(async_buff_used_mb), time_diff_seconds = max(time_diff_seconds) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationbystatusbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, SYSTEM_REPLICATION_STATUS_s, SERVICE_REPLICATION_STATUS_s, SERVICE_REPLICATION_STATUS_DETAILS_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s\r\n;\r\nlet table_replicationmodesbyservice = table_hsrlastpost\r\n| summarize last_post = max(TimeGenerated) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, SERVICE_NAME_s, REPLICATION_MODE_s, OPERATION_MODE_s\r\n;\r\nlet table_lastreplicationpostbyhost = table_lastreplicationpostbyservice\r\n| join (table_maxreplicationpostbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SITE_NAME_s == $right.SITE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n| summarize last_post = max(last_post), max_time_diff_seconds = max(max_time_diff_seconds), max_async_buff_used_mb = sum(max_async_buff_used_mb) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_lastreplicationbystatusbyhost = table_lastreplicationbystatusbyservice\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s, SYSTEM_REPLICATION_STATUS_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s\r\n;\r\nlet table_replicationmodesbyhost = table_replicationmodesbyservice\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s, HOST_s, SECONDARY_HOST_s, SITE_NAME_s, SECONDARY_SITE_NAME_s, REPLICATION_MODE_s, OPERATION_MODE_s\r\n;\r\nlet table_lastreplicationbystatusbydb = table_lastreplicationbystatusbyhost\r\n| top-nested of DATABASE_NAME_s by min(1), top-nested 1 of SYSTEM_REPLICATION_STATUS_s by last_post = max(last_post) desc\r\n;\r\nlet table_lastreplicationpostbydb = table_lastreplicationpostbyhost\r\n| summarize last_post = max(last_post) by DATABASE_NAME_s\r\n;\r\nlet table_databasesummary = table_lastreplicationpostbydb\r\n| join (table_lastreplicationbystatusbydb)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n| extend id = DATABASE_NAME_s,\r\n         parent_id = '',\r\n         replication_item = DATABASE_NAME_s,\r\n         site = '',\r\n         system_replication_status = SYSTEM_REPLICATION_STATUS_s,\r\n         system_replication_status_details = '',\r\n         replication_mode = '',\r\n         source_host = '',\r\n         target_host = '',\r\n         source_site = '',\r\n         target_site = '',\r\n         service_name = '',\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          system_replication_status_details,\r\n          replication_mode,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\nlet table_hostsummary = table_lastreplicationpostbyhost\r\n| join (table_lastreplicationbystatusbyhost)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmodesbyhost)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmetricsbydb)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationtimediffbyhost)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationasyncbuffbyhost)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| extend id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s),\r\n         parent_id = DATABASE_NAME_s,\r\n         replication_item = strcat(HOST_s, \" -> \", SECONDARY_HOST_s),\r\n         site = strcat(SITE_NAME_s, \" -> \", SECONDARY_SITE_NAME_s),\r\n         system_replication_status = SYSTEM_REPLICATION_STATUS_s,\r\n         system_replication_status_details = '',\r\n         replication_mode = strcat(REPLICATION_MODE_s, \" (\", OPERATION_MODE_s, \")\"),\r\n         ts_time_diff_seconds = ts_max_time_diff_seconds,\r\n         // async_buff_string = strcat(format_bytes((async_buff_used_mb * 1024 * 1024), 2), \" (\", format_bytes((max_async_buff_used_mb * 1024 * 1024), 2), \")\"),\r\n         async_buff_used_mb,\r\n         max_async_buff_used_mb,\r\n         ts_async_buff_mb = ts_max_async_buff_mb,\r\n         source_host = HOST_s,\r\n         target_host = SECONDARY_HOST_s,\r\n         source_site = SITE_NAME_s,\r\n         target_site = SECONDARY_SITE_NAME_s,\r\n         service_name = '',\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          replication_mode,\r\n          time_diff_seconds,\r\n          max_time_diff_seconds,\r\n          ts_time_diff_seconds,\r\n          // async_buff_string,\r\n          async_buff_used_mb,\r\n          max_async_buff_used_mb,\r\n          ts_async_buff_mb,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\nlet table_servicesummary = table_lastreplicationpostbyservice\r\n| join (table_maxreplicationpostbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SITE_NAME_s == $right.SITE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n| join (table_lastreplicationbystatusbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmodesbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_replicationmetricsbyservice)\r\n    on $left.last_post == $right.last_post\r\n    and $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationtimediffbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| join (table_tsreplicationasyncbuffbyservice)\r\n    on $left.DATABASE_NAME_s == $right.DATABASE_NAME_s\r\n    and $left.HOST_s == $right.HOST_s\r\n    and $left.SECONDARY_HOST_s == $right.SECONDARY_HOST_s\r\n    and $left.SERVICE_NAME_s == $right.SERVICE_NAME_s\r\n    and $left.SECONDARY_SITE_NAME_s == $right.SECONDARY_SITE_NAME_s\r\n| extend id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s, \".\", SERVICE_NAME_s),\r\n         parent_id = strcat(DATABASE_NAME_s, \".\", HOST_s, \".\", SECONDARY_HOST_s),\r\n         replication_item = SERVICE_NAME_s,\r\n         site = strcat(SITE_NAME_s, \" -> \", SECONDARY_SITE_NAME_s),\r\n         system_replication_status = SERVICE_REPLICATION_STATUS_s,\r\n         system_replication_status_details = SERVICE_REPLICATION_STATUS_DETAILS_s,\r\n         shipped_log_position_time = SHIPPED_LOG_POSITION_TIME_t,\r\n         replayed_log_position_time = REPLAYED_LOG_POSITION_TIME_t,\r\n         replication_mode = strcat(REPLICATION_MODE_s, \" (\", OPERATION_MODE_s, \")\"),\r\n         ts_time_diff_seconds = ts_max_time_diff_seconds,\r\n         // async_buff_string = strcat(format_bytes((async_buff_used_mb * 1024 * 1024), 2), \" (\", format_bytes((max_async_buff_used_mb * 1024 * 1024), 2), \")\"),\r\n         async_buff_used_mb,\r\n         max_async_buff_used_mb,\r\n         ts_async_buff_mb = ts_max_async_buff_mb,\r\n         source_host = HOST_s,\r\n         target_host = SECONDARY_HOST_s,\r\n         source_site = SITE_NAME_s,\r\n         target_site = SECONDARY_SITE_NAME_s,\r\n         service_name = SERVICE_NAME_s,\r\n         tenant = DATABASE_NAME_s\r\n| project id,\r\n          parent_id,\r\n          replication_item,\r\n          site,\r\n          system_replication_status,\r\n          system_replication_status_details,\r\n          shipped_log_position_time,\r\n          replayed_log_position_time,\r\n          replication_mode,\r\n          time_diff_seconds,\r\n          max_time_diff_seconds,\r\n          ts_time_diff_seconds,\r\n          // async_buff_string,\r\n          async_buff_used_mb,\r\n          max_async_buff_used_mb,\r\n          ts_async_buff_mb,\r\n          source_host,\r\n          target_host,\r\n          source_site,\r\n          target_site,\r\n          service_name,\r\n          tenant\r\n;\r\ntable_servicesummary\r\n| union (table_hostsummary)\r\n| union (table_databasesummary)",
                                      "size": 0,
                                      "showRefreshButton": true,
                                      "showExportToExcel": true,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "gridSettings": {
                                        "formatters": [
                                          {
                                            "columnMatch": "id",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "parent_id",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "system_replication_status",
                                            "formatter": 18,
                                            "formatOptions": {
                                              "linkColumn": "system_replication_status_details",
                                              "linkTarget": "GenericDetails",
                                              "linkIsContextBlade": true,
                                              "thresholdsOptions": "icons",
                                              "thresholdsGrid": [
                                                {
                                                  "operator": "==",
                                                  "thresholdValue": "ACTIVE",
                                                  "representation": "success",
                                                  "text": "{0}{1}"
                                                },
                                                {
                                                  "operator": "Default",
                                                  "thresholdValue": null,
                                                  "representation": "3",
                                                  "text": "{0}{1}"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "columnMatch": "system_replication_status_details",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "shipped_log_position_time",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "replayed_log_position_time",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "time_diff_seconds",
                                            "formatter": 0,
                                            "numberFormat": {
                                              "unit": 24,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1,
                                                "maximumFractionDigits": 0
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "ts_time_diff_seconds",
                                            "formatter": 21,
                                            "formatOptions": {
                                              "palette": "blue"
                                            },
                                            "numberFormat": {
                                              "unit": 24,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1,
                                                "maximumFractionDigits": 0
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "async_buff_used_mb",
                                            "formatter": 0,
                                            "numberFormat": {
                                              "unit": 4,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1,
                                                "maximumFractionDigits": 1
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "max_async_buff_used_mb",
                                            "formatter": 0,
                                            "numberFormat": {
                                              "unit": 4,
                                              "options": {
                                                "style": "decimal",
                                                "minimumIntegerDigits": 1,
                                                "maximumFractionDigits": 1
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "ts_async_buff_mb",
                                            "formatter": 21,
                                            "formatOptions": {
                                              "palette": "blue"
                                            },
                                            "numberFormat": {
                                              "unit": 4,
                                              "options": {
                                                "style": "decimal"
                                              }
                                            }
                                          },
                                          {
                                            "columnMatch": "source_host",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "target_host",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "source_site",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "target_site",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "service_name",
                                            "formatter": 5
                                          },
                                          {
                                            "columnMatch": "tenant",
                                            "formatter": 5
                                          }
                                        ],
                                        "filter": true,
                                        "hierarchySettings": {
                                          "idColumn": "id",
                                          "parentColumn": "parent_id",
                                          "treeType": 0,
                                          "expanderColumn": "replication_item",
                                          "expandTopLevel": true
                                        },
                                        "labelSettings": [
                                          {
                                            "columnId": "replication_item",
                                            "label": "Item"
                                          },
                                          {
                                            "columnId": "site",
                                            "label": "Site"
                                          },
                                          {
                                            "columnId": "system_replication_status",
                                            "label": "Status"
                                          },
                                          {
                                            "columnId": "system_replication_status_details",
                                            "label": "Status details"
                                          },
                                          {
                                            "columnId": "replication_mode",
                                            "label": "Mode"
                                          },
                                          {
                                            "columnId": "time_diff_seconds",
                                            "label": "Time diff"
                                          },
                                          {
                                            "columnId": "max_time_diff_seconds",
                                            "label": "(Max)"
                                          },
                                          {
                                            "columnId": "ts_time_diff_seconds",
                                            "label": "Time diff over timeframe"
                                          },
                                          {
                                            "columnId": "async_buff_used_mb",
                                            "label": "Async buffer"
                                          },
                                          {
                                            "columnId": "max_async_buff_used_mb",
                                            "label": "(Max)"
                                          },
                                          {
                                            "columnId": "ts_async_buff_mb",
                                            "label": " Async buffer over timeframe"
                                          }
                                        ]
                                      }
                                    },
                                    "conditionalVisibility": {
                                      "parameterName": "param_check_systemreplication",
                                      "comparison": "isEqualTo",
                                      "value": "0"
                                    },
                                    "name": "Replication Summary"
                                  },
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "<div style=\"float: right\">\r\n\tUpdated every minute.\r\n</div>"
                                    },
                                    "name": "text - 1"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_systemreplication",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "name": "Group replication - has data"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "Replication"
                        },
                        "name": "Group replication"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_License_Status_CL\r\n| extend timestamp_load = TimeGenerated\r\n| extend provider = PROVIDER_INSTANCE_s\r\n| where provider == '{param_provider}'\r\n| summarize arg_max(PRODUCT_USAGE_d, *) by SID_s, VALID_s, HARDWARE_KEY_s, PERMANENT_s, INSTALL_NO_s, HOSTNAME_s, PRODUCT_LIMIT_d, SYSTEM_NO_s, START_DATE_t\r\n| extend Status = iff(VALID_s == 'TRUE', \"VALID\", \"INVALID\")\r\n| distinct SID_s, Status, HARDWARE_KEY_s, PERMANENT_s, INSTALL_NO_s, HOSTNAME_s, PRODUCT_LIMIT_d, PRODUCT_USAGE_d, SYSTEM_NO_s, START_DATE_t\r\n| order by START_DATE_t desc\r\n",
                                "size": 0,
                                "title": "License Status History",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "VALID",
                                            "representation": "green",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "!=",
                                            "thresholdValue": "VALID",
                                            "representation": "red",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "gray",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      },
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "PERMANENT_s",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "TRUE",
                                            "representation": "green",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "FALSE",
                                            "representation": "red",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "gray",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "SID_s",
                                      "label": "SID"
                                    },
                                    {
                                      "columnId": "Status",
                                      "label": "Status"
                                    },
                                    {
                                      "columnId": "HARDWARE_KEY_s",
                                      "label": "Hardware Key"
                                    },
                                    {
                                      "columnId": "PERMANENT_s",
                                      "label": "Permanent"
                                    },
                                    {
                                      "columnId": "INSTALL_NO_s",
                                      "label": "Installation Number"
                                    },
                                    {
                                      "columnId": "HOSTNAME_s",
                                      "label": "Hostname"
                                    },
                                    {
                                      "columnId": "PRODUCT_LIMIT_d",
                                      "label": "Product Limit"
                                    },
                                    {
                                      "columnId": "PRODUCT_USAGE_d",
                                      "label": "Product Usage"
                                    },
                                    {
                                      "columnId": "SYSTEM_NO_s",
                                      "label": "System Number"
                                    },
                                    {
                                      "columnId": "START_DATE_t",
                                      "label": "Start Date"
                                    }
                                  ]
                                }
                              },
                              "showPin": true,
                              "name": "License Status History"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 24 hours.\r\n</div>"
                              },
                              "name": "text - 1"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "License"
                        },
                        "name": "License Page"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let Rows_Per_Partition_Max = 2000000000;\r\nlet warningthreshold = 365;\r\nlet table_HANA_Size=SapHana_size01_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| extend Rows_Per_Partition=RECORDS_d/PARTITION_COUNT_d\r\n| extend Rows_Until_Max=Rows_Per_Partition_Max-Rows_Per_Partition\r\n| where TimeGenerated {param_timeframe}\r\n;\r\n// Retrieve the time of the last posted data per tenant and table\r\nlet table_HANA_Size_LastPost=table_HANA_Size\r\n| summarize arg_max(TimeGenerated, *) by DATABASE_NAME_s, TABLE_NAME_s\r\n;\r\n\r\n// Get the first date we have data for\r\nlet timerange_from=toscalar(table_HANA_Size\r\n| summarize min(TimeGenerated)\r\n);\r\n\r\nlet validate_timerange = iff(timerange_from != \"\", timerange_from, {param_timeframe:start});\r\n\r\n// Calculate the totals for tables across all tenants (sum of the ALL_TABLES values)\r\nlet total_tables_size = toscalar(table_HANA_Size_LastPost\r\n| where TABLE_NAME_s == \"ALL_TABLES\"\r\n|summarize \r\n    total_cs_size=sum(ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d), \r\n    total_loaded_size=sum(MEMORY_SIZE_IN_TOTAL_GIB_d)\r\n| project pack_all()\r\n);\r\n\r\n// Calculate growth rate (slope of series)\r\ntable_HANA_Size\r\n| where TABLE_NAME_s <> \"ALL_TABLES\"\r\n| make-series Rows_Series=max(Rows_Per_Partition)\r\n    default=long(null)\r\n    on TimeGenerated\r\n    from validate_timerange to {param_timeframe:end} step 1d\r\n    by DATABASE_NAME_s, TABLE_NAME_s\r\n| extend Rows_Series = series_fill_linear(Rows_Series)\r\n| extend (RSquare,Rows_Per_Day,Variance,RVariance,Interception,BestFit)=series_fit_line(Rows_Series)\r\n| join table_HANA_Size_LastPost on $left.DATABASE_NAME_s==$right.DATABASE_NAME_s, $left.TABLE_NAME_s==$right.TABLE_NAME_s\r\n| order by ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d\r\n| extend Rank=row_number()\r\n| extend Days_Until_Max=round((Rows_Until_Max/Rows_Per_Day),0)\r\n| extend MaxDate=format_datetime(datetime_add('Day',toint(Days_Until_Max),now()), 'yyyy-MM-dd')\r\n| extend Rows_Status=iif(Rows_Per_Day<=0,\"\",\r\n                        iif(Days_Until_Max>warningthreshold, \"\", strcat(\"WARNING:2 Billion partition row limit reached by \",MaxDate))\r\n                        )\r\n| extend TablePart=strcat(TABLE_NAME_s, \":[\", toint(PARTITION_COUNT_d),\"]\")\r\n| limit 10\r\n| project \r\n    Rank, \r\n    TenantDB=DATABASE_NAME_s, \r\n    TableName=TABLE_NAME_s,\r\n    TablePart,\r\n    TableRows=RECORDS_d, \r\n    DataSize=ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d,\r\n    LoadedSize=MEMORY_SIZE_IN_TOTAL_GIB_d, \r\n    PercTotalCSSize=100*ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d/total_tables_size.total_cs_size, \r\n    PercTotalLoaded=100*MEMORY_SIZE_IN_TOTAL_GIB_d/total_tables_size.total_loaded_size, \r\n    Rows_Per_Day,\r\n    Rows_Series,\r\n    Rows_Status",
                                "size": 0,
                                "title": "Biggest Tables",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "TableName",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "TableRows",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": true
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "DataSize",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 5,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "LoadedSize",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 5,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "PercTotalCSSize",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "palette": "blue"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "PercTotalLoaded",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "palette": "blue"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Rows_Per_Day",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": true,
                                          "maximumFractionDigits": 0
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Rows_Series",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    {
                                      "columnMatch": "Rows_Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "startsWith",
                                            "thresholdValue": "WARNING",
                                            "representation": "2",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "Blank",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TablePart",
                                      "label": "Table:[Partition Count]"
                                    },
                                    {
                                      "columnId": "TableRows",
                                      "label": "Row Count"
                                    },
                                    {
                                      "columnId": "DataSize",
                                      "label": "Data Size"
                                    },
                                    {
                                      "columnId": "LoadedSize",
                                      "label": "Loaded Data"
                                    },
                                    {
                                      "columnId": "PercTotalCSSize",
                                      "label": "% of total size"
                                    },
                                    {
                                      "columnId": "PercTotalLoaded",
                                      "label": "% of all loaded"
                                    },
                                    {
                                      "columnId": "Rows_Per_Day",
                                      "label": "Daily row growth"
                                    },
                                    {
                                      "columnId": "Rows_Series",
                                      "label": "Row Count "
                                    },
                                    {
                                      "columnId": "Rows_Status",
                                      "label": "Row Size Limit Status"
                                    }
                                  ]
                                }
                              },
                              "showPin": true,
                              "name": "Biggest Tables"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let table_HANA_Disks=SapHana_Disks_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n;\r\nlet table_HANA_Disks_Utilisation=table_HANA_Disks\r\n| summarize UsedSize = avg(USED_SIZE_d)/1024/1024/1024, UsedSizeMax = max(USED_SIZE_d)/1024/1024/1024, TotalSize = max(TOTAL_SIZE_d)/1024/1024/1024 by HOST_s,PATH_s, USAGE_TYPE_s\r\n| extend PercUsed = UsedSize*100/TotalSize\r\n| project HOST_s, USAGE_TYPE_s, PATH_s, UsedSize = round(UsedSize,2), UsedSizeMax = round(UsedSizeMax,2), TotalSize = round(TotalSize,2), PercUsed\r\n;\r\nlet table_HANA_Disks_Series=table_HANA_Disks\r\n| make-series HANA_Disks_Series = max(USED_SIZE_d) default=double(null) on TimeGenerated from {param_timeframe:start} to {param_timeframe:end} step {param_timeframe:grain} by HOST_s, PATH_s\r\n| extend Trend = series_fill_linear(HANA_Disks_Series)\r\n;\r\ntable_HANA_Disks_Utilisation\r\n| join table_HANA_Disks_Series on $left.HOST_s==$right.HOST_s, $left.PATH_s==$right.PATH_s\r\n| extend HostName=HOST_s, FullPath=PATH_s\r\n| project HostName, USAGE_TYPE_s, FullPath, PercUsed, UsedSize, UsedSizeMax, TotalSize, Trend\r\n| order by PercUsed\r\n;",
                                "size": 0,
                                "title": "Hana File Systems",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "PercUsed",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "UsedSize",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "UsedSizeMax",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "TotalSize",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "",
                                          "columnSettings": [
                                            {
                                              "columnName": "UsedSize",
                                              "color": "redBright"
                                            },
                                            {
                                              "columnName": "TotalSize",
                                              "color": "green"
                                            },
                                            {
                                              "columnName": "UsedSizeMax",
                                              "color": "yellow"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "redBright"
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "HostName",
                                      "label": "Host"
                                    },
                                    {
                                      "columnId": "USAGE_TYPE_s",
                                      "label": "Usage"
                                    },
                                    {
                                      "columnId": "FullPath",
                                      "label": "Path"
                                    },
                                    {
                                      "columnId": "PercUsed",
                                      "label": "Average Utilization"
                                    },
                                    {
                                      "columnId": "UsedSize",
                                      "label": "Used Size"
                                    },
                                    {
                                      "columnId": "UsedSizeMax",
                                      "label": "Maximum Used"
                                    },
                                    {
                                      "columnId": "TotalSize",
                                      "label": "Statistics"
                                    },
                                    {
                                      "columnId": "Trend",
                                      "label": "Used Size Trendline"
                                    }
                                  ]
                                }
                              },
                              "showPin": true,
                              "name": "query - 6"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 6 hours.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "DataSize"
                        },
                        "name": "Datasize"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_InternodeSendThroughput_CL \r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, SENDER_s, RECEIVER_s, SIZE_MB_d, DURATION_SECONDS_d, THROUGHPUT_MBPS_d \r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "SIZE_MB_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "DURATION_SECONDS_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 24,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "THROUGHPUT_MBPS_d",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 13,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "SENDER_s",
                                      "label": "Sender"
                                    },
                                    {
                                      "columnId": "RECEIVER_s",
                                      "label": "Receiver"
                                    },
                                    {
                                      "columnId": "SIZE_MB_d",
                                      "label": "Size"
                                    },
                                    {
                                      "columnId": "DURATION_SECONDS_d",
                                      "label": "Duration"
                                    },
                                    {
                                      "columnId": "THROUGHPUT_MBPS_d",
                                      "label": "Throughput"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_networkthroughput",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": true,
                              "name": "Network Throughput Query"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data for network throughput to display.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_networkthroughput",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Network Throughput Text Element"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 2 hours.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "NetworkThroughput"
                        },
                        "name": "Network Throughput tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_ConfigurationParameters_CL \r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| extend Priority_Name = case(P_s == 1, \"VERY HIGH\", \r\n                        P_s == 2, \"HIGH\", \r\n                        P_s == 3, \"MEDIUM\",\r\n                        \"LOW\")\r\n| summarize  arg_max(TimeGenerated, *) by PARAMETER_NAME_s, Priority_Name, P_s, CONFIGURED_VALUE_s, RECOMMENDED_VALUE_s, SAP_NOTE_s, FILE_NAME_s\r\n| project PARAMETER_NAME_s, TimeGenerated, Priority_Name, P_s, CONFIGURED_VALUE_s, RECOMMENDED_VALUE_s, SAP_NOTE_s, FILE_NAME_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Priority_Name",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "colors",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "LOW",
                                            "representation": "gray"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "MEDIUM",
                                            "representation": "yellow"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "HIGH",
                                            "representation": "orange"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "VERY HIGH",
                                            "representation": "redBright",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "blue",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "CONFIGURED_VALUE_s",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "TimeGenerated",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "PARAMETER_NAME_s",
                                      "label": "Parameter Name"
                                    },
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "Priority_Name",
                                      "label": "Priority Name"
                                    },
                                    {
                                      "columnId": "P_s",
                                      "label": "Priority"
                                    },
                                    {
                                      "columnId": "CONFIGURED_VALUE_s",
                                      "label": "Configured Value"
                                    },
                                    {
                                      "columnId": "RECOMMENDED_VALUE_s",
                                      "label": "Recommended Value"
                                    },
                                    {
                                      "columnId": "SAP_NOTE_s",
                                      "label": "SAP Note"
                                    },
                                    {
                                      "columnId": "FILE_NAME_s",
                                      "label": "File Name"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "TimeGenerated",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_configurationparameters",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": true,
                              "name": "query - 1"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "No data available for configuration parameters.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_configurationparameters",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Param Config Info"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every hour.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SystemCheckMenu",
                          "comparison": "isEqualTo",
                          "value": "ParameterValuesCheck"
                        },
                        "name": "ParameterValuesCheck "
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "SystemCheck"
                  },
                  "name": "System Check"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "71c52b0e-4ea0-43b8-a694-761942fa0e7b",
                              "cellValue": "TransactionsMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Long Idling Cursors ",
                              "subTarget": "LongIdlingCursors",
                              "style": "link"
                            },
                            {
                              "id": "5685b027-5b37-4e47-93dc-95e9c6cc9854",
                              "cellValue": "TransactionsMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Uncommitted Write Transactions",
                              "subTarget": "UncommittedWriteTransactions",
                              "style": "link"
                            },
                            {
                              "id": "8b5387e1-ca9f-4384-9dd8-4ae2d42f5c49",
                              "cellValue": "TransactionsMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Long Running Statements",
                              "subTarget": "LongRunningStatements",
                              "style": "link"
                            },
                            {
                              "id": "8b5387e1-ca9f-4384-9dd8-4ae2d42f5c50",
                              "cellValue": "TransactionsMenu",
                              "linkTarget": "parameter",
                              "linkLabel": "Blocked Transactions",
                              "subTarget": "BlockedTransactions",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "links - 0"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let timerange_from=toscalar(todatetime(format_datetime({param_timeframe:start},'yyyy-MM-dd')));\r\nSapHana_LongIdlingCursors_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| make-series count() default=0 on TimeGenerated in range(timerange_from, {param_timeframe:end}, 1h) by CONN_STATUS_s",
                                      "size": 0,
                                      "timeBrushParameterName": "param_timeframe",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "linechart",
                                      "chartSettings": {
                                        "seriesLabelSettings": [
                                          {
                                            "seriesName": "CONN_STATUS",
                                            "label": "# of Long Idling Cursors"
                                          }
                                        ]
                                      }
                                    },
                                    "showPin": true,
                                    "name": "Long Idling Cursors - graph"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "SapHana_LongIdlingCursors_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, CONN_ID_s, CONN_STATUS_s, STATEMENT_STATUS_s, TIME_S_t, MVCC_TIMESTAMP_t, CLIENT_PID_s, APP_USER_s\r\n| order by TimeGenerated desc",
                                      "size": 0,
                                      "showRefreshButton": true,
                                      "showExportToExcel": true,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "gridSettings": {
                                        "filter": true,
                                        "labelSettings": [
                                          {
                                            "columnId": "TimeGenerated",
                                            "label": "Time Generated"
                                          },
                                          {
                                            "columnId": "CONN_ID_s",
                                            "label": "Connection ID"
                                          },
                                          {
                                            "columnId": "CONN_STATUS_s",
                                            "label": "Connection Status"
                                          },
                                          {
                                            "columnId": "STATEMENT_STATUS_s",
                                            "label": "Statement Status"
                                          },
                                          {
                                            "columnId": "TIME_S_t",
                                            "label": "Idle Time (Sec)"
                                          },
                                          {
                                            "columnId": "MVCC_TIMESTAMP_t",
                                            "label": "MVCC Time"
                                          },
                                          {
                                            "columnId": "CLIENT_PID_s",
                                            "label": "Process ID"
                                          },
                                          {
                                            "columnId": "APP_USER_s",
                                            "label": "Application User"
                                          }
                                        ]
                                      }
                                    },
                                    "showPin": true,
                                    "name": "Long Idling Cursors  - table"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_longidlingcursor",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "name": "Long Idling Cursors  - has data"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "There is no data available for Long Idling Cursors.",
                                      "style": "info"
                                    },
                                    "name": "Long Idling Cursors - table message - no data"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_longidlingcursor",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Long Idling Cursors  - no data"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TransactionsMenu",
                          "comparison": "isEqualTo",
                          "value": "LongIdlingCursors"
                        },
                        "name": "Long Idling Cursors "
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 1,
                                    "content": {
                                      "json": "There is no data available for Uncommitted Write Transactions​.",
                                      "style": "info"
                                    },
                                    "name": "  Uncommitted Write Transactions​ - no data text"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_uncommittedwritetransactions",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Uncommitted Write Transactions​ - no data"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let timerange_from=toscalar(todatetime(format_datetime({param_timeframe:start},'yyyy-MM-dd')));\r\nSapHana_UncommittedWriteTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| make-series count() default=0 on TimeGenerated in range(timerange_from, {param_timeframe:end}, 1h)",
                                      "size": 0,
                                      "timeBrushParameterName": "param_timeframe",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "linechart",
                                      "chartSettings": {
                                        "showLegend": true,
                                        "seriesLabelSettings": [
                                          {
                                            "seriesName": "count_",
                                            "label": "Uncommitted write transaction ​"
                                          }
                                        ]
                                      }
                                    },
                                    "showPin": true,
                                    "name": "Uncommitted Write Transactions​ - graph"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "SapHana_UncommittedWriteTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, CONN_ID_d, STATUS_DETAILS_s, TID_d, UTID_d, MVCC_TIMESTAMP_d, TIME_S_d, START_TIME_t, CLIENT_PID_d\r\n| order by TimeGenerated desc",
                                      "size": 0,
                                      "showRefreshButton": true,
                                      "showExportToExcel": true,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "gridSettings": {
                                        "filter": true,
                                        "labelSettings": [
                                          {
                                            "columnId": "TimeGenerated",
                                            "label": "Time Generated"
                                          },
                                          {
                                            "columnId": "CONN_ID_d",
                                            "label": "Connection ID"
                                          },
                                          {
                                            "columnId": "STATUS_DETAILS_s",
                                            "label": "Status"
                                          },
                                          {
                                            "columnId": "TID_d",
                                            "label": "Transaction Object ID"
                                          },
                                          {
                                            "columnId": "UTID_d",
                                            "label": "Write Transaction ID"
                                          },
                                          {
                                            "columnId": "MVCC_TIMESTAMP_d",
                                            "label": "Logical Time Stamp"
                                          },
                                          {
                                            "columnId": "TIME_S_d",
                                            "label": "Duration"
                                          },
                                          {
                                            "columnId": "START_TIME_t",
                                            "label": "Start Time"
                                          },
                                          {
                                            "columnId": "CLIENT_PID_d",
                                            "label": "Process ID"
                                          }
                                        ]
                                      }
                                    },
                                    "showPin": true,
                                    "name": "Uncommitted Write Transactions​ - table"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_uncommittedwritetransactions",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "name": "Uncommitted Write Transactions​ - has data"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\nUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TransactionsMenu",
                          "comparison": "isEqualTo",
                          "value": "UncommittedWriteTransactions"
                        },
                        "name": "Uncommitted Write Transactions​"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "SapHana_LongRunningTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, APPLICATION_USER_NAME_s, DURATION_d, THREAD_ID_s, USER_NAME_s, AUTO_COMMIT_s, TRANSACTION_ID_s, UPDATE_TRANSACTION_ID_s\r\n| order by TimeGenerated desc",
                                "size": 0,
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "TimeGenerated",
                                      "label": "Time Generated"
                                    },
                                    {
                                      "columnId": "APPLICATION_USER_NAME_s",
                                      "label": "Application User Name"
                                    },
                                    {
                                      "columnId": "DURATION_d",
                                      "label": "Duration"
                                    },
                                    {
                                      "columnId": "THREAD_ID_s",
                                      "label": "Thread ID"
                                    },
                                    {
                                      "columnId": "USER_NAME_s",
                                      "label": "User Name"
                                    },
                                    {
                                      "columnId": "AUTO_COMMIT_s",
                                      "label": "Commit Mode"
                                    },
                                    {
                                      "columnId": "TRANSACTION_ID_s",
                                      "label": "Transaction ID"
                                    },
                                    {
                                      "columnId": "UPDATE_TRANSACTION_ID_s",
                                      "label": "Write Transaction ID"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_longrunningtransactions",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "showPin": true,
                              "name": "Long Running Statement  - table"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data available for Long Running Statement.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_longrunningtransactions",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": " Long Running Statement - no data text "
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TransactionsMenu",
                          "comparison": "isEqualTo",
                          "value": "LongRunningStatements"
                        },
                        "name": "Long Running Statements"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "let timerange_from=toscalar(todatetime(format_datetime({param_timeframe:start},'yyyy-MM-dd')));\r\nSapHana_BlockedTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| make-series count() default=0 on TimeGenerated in range(timerange_from, {param_timeframe:end}, 1h)",
                                      "size": 0,
                                      "timeBrushParameterName": "param_timeframe",
                                      "showRefreshButton": true,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "visualization": "linechart"
                                    },
                                    "showPin": true,
                                    "name": "Blocked transactions - graph"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "SapHana_BlockedTransactions_CL\r\n| where PROVIDER_INSTANCE_s == '{param_provider}'\r\n| where TimeGenerated {param_timeframe}\r\n| project TimeGenerated, HOST_d, BLOCKED_TRANSACTION_ID_d, BLOCKED_TIME_s, LOCK_TYPE_s, LOCK_MODE_s, WAITING_RECORD_ID_s, WAITING_SCHEMA_NAME_s, WAITING_OBJECT_NAME_s\r\n| order by TimeGenerated desc",
                                      "size": 0,
                                      "showRefreshButton": true,
                                      "showExportToExcel": true,
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "gridSettings": {
                                        "filter": true,
                                        "labelSettings": [
                                          {
                                            "columnId": "TimeGenerated",
                                            "label": "Time Generated"
                                          },
                                          {
                                            "columnId": "BLOCKED_TRANSACTION_ID_d",
                                            "label": "Blocked Transaction ID"
                                          },
                                          {
                                            "columnId": "LOCK_TYPE_s",
                                            "label": "Lock Type"
                                          },
                                          {
                                            "columnId": "LOCK_MODE_s",
                                            "label": "Lock Mode"
                                          },
                                          {
                                            "columnId": "WAITING_RECORD_ID_s",
                                            "label": "Waiting Record ID"
                                          },
                                          {
                                            "columnId": "WAITING_SCHEMA_NAME_s",
                                            "label": "Waiting Schema"
                                          },
                                          {
                                            "columnId": "WAITING_OBJECT_NAME_s",
                                            "label": "Waiting Object Name"
                                          }
                                        ]
                                      }
                                    },
                                    "showPin": true,
                                    "name": "Blocked Transactions  - table"
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_blockedtransactions",
                                "comparison": "isEqualTo",
                                "value": "0"
                              },
                              "name": "Block transactions group - has data"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "There is no data available for Blocked Transactions.",
                                "style": "info"
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_check_blockedtransactions",
                                "comparison": "isNotEqualTo",
                                "value": "0"
                              },
                              "name": "Blocked Transactions - no data text "
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"float: right\">\r\n\tUpdated every 15 minutes.\r\n</div>"
                              },
                              "name": "text - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TransactionsMenu",
                          "comparison": "isEqualTo",
                          "value": "BlockedTransactions"
                        },
                        "name": "Blocked Transactions"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "Transactions"
                  },
                  "name": "Group Transactions"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "b697dfff-fd3a-45c5-81c4-e0b01146a53d",
                              "version": "KqlParameterItem/1.0",
                              "name": "parambag_tabledata",
                              "type": 1,
                              "description": "Data derived from log analytics used across the workbook",
                              "query": "//---------------------------------------------------------\r\n// Data derived from log analytics used across the workbook\r\n//---------------------------------------------------------\r\n// inputs\r\n// Input\r\n// •\tSapHana_size01_CL\r\n// •\tSapHana_LoadHistory_CL\r\n// Output\r\n// •\tData size series, gaps linear filled\r\n// •\tmeasured data growth\r\n// •\tInterception\r\n// •\tGAL\r\n// •\tIn-mem series\r\n// •\tUsed-mem series\r\n\r\n\r\n/////////////////////// Common components////////////////////////////////////////////////\r\n// Find the first and last date for the timeframe\r\nlet startdate=todatetime(format_datetime({param_timeframe:start},'yyyy-MM-dd'));\r\nlet enddate=todatetime(format_datetime({param_timeframe:end},'yyyy-MM-dd'));\r\n// Create an array of all of the days in the timeframe\r\nlet array_allthedays=range(startdate, enddate, 1d);\r\n\r\n///////////////Total Memory Usage and Global Allocation Unit////////////////////////////////////////////////\r\n// Create a table for the GAL and total memory usage that only has data for the selected provider and timeframe\r\nlet table_loadsource=materialize(SapHana_LoadHistory_CL\r\n| where PROVIDER_INSTANCE_s ==\"{param_provider}\"\r\n| where TimeGenerated {param_timeframe}\r\n);\r\n// Get the global Allocation limit \"GAL\" for the cluster (sum of participating node GAL's)\r\nlet GAL=toscalar(table_loadsource\r\n| summarize arg_max(TimeGenerated, *) by HOST_s\r\n| summarize GAL=sum(MEMORY_ALLOCATION_LIMIT_d)/1024\r\n);\r\n/// Create a table with the total memory used sizes over time padded with nulls for missing history and a slope/intercept for bestfit line\r\nlet table_memused=table_loadsource\r\n| summarize MEMORY_USED_GiB_d=avg(MEMORY_USED_d/1024)\r\n  by PROVIDER_INSTANCE_s, HOST_s , bin(TimeGenerated, 1d)\r\n| make-series  series_memused=sum(MEMORY_USED_GiB_d) default=double(null) on TimeGenerated  step 1d\r\n| extend memsize_firstdate=TimeGenerated[0]\r\n| extend series_memused=series_fill_linear(series_memused)\r\n| extend (rsquare,memsize_slope,variance,rvariance,memsize_interception,bestline)=series_fit_line(series_memused)\r\n| extend lgap=datetime_diff('day',todatetime(TimeGenerated[0]),startdate)\r\n| extend leadingnulls=repeat(long(null),lgap )\r\n| project id=0, series_memused=array_concat(leadingnulls,series_memused), memsize_slope, memsize_interception, memsize_firstdate, memsize_firstpos=lgap\r\n;\r\n///////////END-Total Memory Usage and Global Allocation Unit-END ////////////////////////////////////\r\n\r\n\r\n/////////////////////// Column Store Values /////////////////////////////////////////////////\r\n// Create a table to the total column store size for the selected time period, instance and tenant(s)\r\nlet table_cs_tables=materialize(SapHana_size01_CL\r\n| where TABLE_NAME_s == \"ALL_TABLES\"\r\n| where TimeGenerated {param_timeframe}\r\n);\r\n// Check for db name may have to return currently removing\r\n//| where DATABASE_NAME_s in param_tenants\r\n\r\n// Create a table for the Get the sizes of column data held in memory, with a straight line trend over time padded with nulls for missing history\r\nlet series_csinmemsize=toscalar(table_cs_tables\r\n| summarize MEMORY_SIZE_IN_TOTAL_GIB_d=avg(MEMORY_SIZE_IN_TOTAL_GIB_d)\r\n  by DATABASE_NAME_s, bin(TimeGenerated, 1d) \r\n| make-series  series_csinmemsize=sum(MEMORY_SIZE_IN_TOTAL_GIB_d) default=double(null) on TimeGenerated  step 1d\r\n| project TimeGenerated, series_csinmemsize=series_fill_linear(series_csinmemsize)\r\n| extend lgap=datetime_diff('day',todatetime(TimeGenerated[0]),startdate)\r\n| extend leadingnulls=repeat(long(null),lgap )\r\n| extend series_csinmemsize=array_concat(leadingnulls,series_csinmemsize)\r\n| project series_csinmemsize\r\n);\r\n\r\n// Get the total size of cs tables and project all of the above metrics as a single object for use across the workbook\r\ntable_cs_tables\r\n| summarize ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d=avg(ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d)\r\n    by DATABASE_NAME_s, bin(TimeGenerated, 1d) \r\n| make-series  series_datasize=sum(ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL_GIB_d) default=double(null) on TimeGenerated  step 1d\r\n| extend series_datasize=series_fill_linear(series_datasize)\r\n| extend (rsquare,datasize_slope,variance,rvariance,datasize_interception,bestline)=series_fit_line(series_datasize)\r\n| extend datasize_firstdate=TimeGenerated[0]\r\n| extend lgap=datetime_diff('day',todatetime(TimeGenerated[0]),startdate)\r\n| extend leadingnulls=repeat(long(null),lgap )\r\n| extend series_datasize=array_concat(leadingnulls,series_datasize)\r\n| project id=0, array_allthedays, series_datasize, series_csinmemsize, datasize_slope, datasize_interception, datasize_firstdate, datasize_firstpos=lgap, GAL\r\n| join table_memused on id\r\n| extend series_memused, memsize_slope, memsize_interception, datasize_firstdate, datasize_firstpos\r\n| project-away id1, id\r\n| project packed=pack_all()",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "f09d6c38-dfd3-42c8-8166-9d1c20d977c6",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_datapredoffset",
                              "label": "Prediction offset GiB",
                              "type": 1,
                              "description": "Adjust this value to change the prediction to adjust the prediction to take account for a planned reduction or increase in size e.g. house-keeping activity",
                              "query": "print myvalue=\"0\"\r\n",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "value": "3"
                            },
                            {
                              "id": "12fb0a54-b982-4df6-bc88-5e8815202b4c",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_datapredgrowth",
                              "label": "Data growth rate GiB/day",
                              "type": 1,
                              "description": "The growth rate calculated from the best-fit straight line. Adjust this value to change the prediction to allow for a different growth rate e.g. one that takes into account a new data lifecycle policy or planned increase in workload",
                              "query": "let myparambag=parse_json('{parambag_tabledata:escapejson}');\r\nprint Slope=round(todouble(myparambag.datasize_slope),4)",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "ed81536f-5bd1-4b25-aa9b-3c491ddb0c6a",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_gal",
                              "label": "Global Allocation Limit GiB",
                              "type": 1,
                              "description": "The Global Allocation is the maximum memory available to HANA, which is normall ~97% of the VM size.  Adjust this value to see projections based on different VM sizes",
                              "query": "// bring in the calculated values from parambag_tabledata\r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\n\r\nprint GAL=round(todouble(myparambag.GAL),3)",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "5d7d3bbc-6442-4e08-b4a8-4bedf9e127ff",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_percentofgal",
                              "label": "Projected Limit line %",
                              "type": 1,
                              "description": "Sets the limit line on th graph for the growth line to plot to, typically between 50 and 75% of GAL depending on workload",
                              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"50\\\"]\",\"transformers\":null}",
                              "queryType": 8,
                              "value": "2"
                            },
                            {
                              "id": "7b65508a-0b0a-4fa2-be05-450c0858e2b8",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_csdaysfromnow",
                              "type": 1,
                              "query": "//param_daysfromnow:\r\n// Handle null values\r\nlet arr_param_datapredgrowth = dynamic([{param_datapredgrowth}]);\r\nlet temp_isempty=isempty(tostring(arr_param_datapredgrowth));\r\nlet slope = todouble(iff(temp_isempty,0.0,arr_param_datapredgrowth[0]));\r\n\r\nlet arr_param_datapredoffset = dynamic([{param_datapredoffset}]);\r\nlet param_datapredoffset_isempty=isempty(tostring(arr_param_datapredoffset));\r\nlet offset = todouble(iff(param_datapredoffset_isempty,0.0,arr_param_datapredoffset[0]));\r\n\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n\r\nlet arr_param_percentofgal = dynamic([{param_percentofgal}]);\r\nlet param_percentofgal_isempty=isempty(tostring(arr_param_percentofgal));\r\nlet param_percentofgal_handled = todouble(iff(param_percentofgal_isempty,0.0,arr_param_percentofgal[0]));\r\n\r\n// bring in the calculated values \r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\nlet predfirstdate=todatetime(myparambag.datasize_firstdate);\r\n\r\n// bring in user entered values\r\nlet chosendatalimit=todouble(param_percentofgal_handled)*todouble(param_gal_handled)/100;\r\n\r\nlet intercept=todouble(myparambag.datasize_interception)+offset;\r\nlet gap=chosendatalimit - intercept;\r\nlet daystofull=toint(bin(gap/slope,1));\r\nlet systemfulldate=datetime_add('day',daystofull,predfirstdate);\r\nlet daysfromnow=datetime_diff('day',systemfulldate,now());\r\nprint daysfromnow",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "4edef144-99db-45ea-b505-11ada9a8d56a",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_chosendatalimit",
                              "type": 1,
                              "query": "//handle null value\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n\r\nlet arr_param_percentofgal = dynamic([{param_percentofgal}]);\r\nlet param_percentofgal_isempty=isempty(tostring(arr_param_percentofgal));\r\nlet param_percentofgal_handled = todouble(iff(param_percentofgal_isempty,0.0,arr_param_percentofgal[0]));\r\n\r\n//Parameter for chosen limit\r\nlet chosendatalimit=todouble(param_percentofgal_handled)*todouble(param_gal_handled)/100;\r\nprint round(chosendatalimit,3)",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "9fe7a7d7-e990-482e-ab5b-a9a177833e46",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_csfulldate",
                              "type": 1,
                              "query": "//param_datasystemfull\r\n\r\n// handle null values\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n\r\nlet arr_param_datapredgrowth = dynamic([{param_datapredgrowth}]);\r\nlet temp_isempty=isempty(tostring(arr_param_datapredgrowth[0]));\r\nlet slope = todouble(iff(temp_isempty,0.0,arr_param_datapredgrowth[0]));\r\n\r\nlet arr_param_datapredoffset = dynamic([{param_datapredoffset}]);\r\nlet param_datapredoffset_isempty=isempty(tostring(arr_param_datapredoffset));\r\nlet offset = todouble(iff(param_datapredoffset_isempty,0.0,arr_param_datapredoffset[0]));\r\n\r\nlet arr_param_percentofgal = dynamic([{param_percentofgal}]);\r\nlet param_percentofgal_isempty=isempty(tostring(arr_param_percentofgal));\r\nlet param_percentofgal_handled = todouble(iff(param_percentofgal_isempty,0.0,arr_param_percentofgal[0]));\r\n\r\n// bring in the calculated values \r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\nlet predfirstdate=todatetime(myparambag.datasize_firstdate);\r\n// bring in user entered values\r\nlet chosendatalimit=todouble(param_percentofgal_handled)*todouble(param_gal_handled)/100;\r\n\r\nlet intercept=todouble(myparambag.datasize_interception)+offset;\r\nlet gap=chosendatalimit - intercept;\r\nlet daystofull=toint(bin(gap/slope,1));\r\nlet systemfulldate=format_datetime(datetime_add('day',daystofull,predfirstdate),'MM-yyyy');\r\nprint systemfulldate",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "29241abb-67dc-49a9-839d-a250ba6f53d7",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_memdaysfromnow",
                              "type": 1,
                              "query": "//handle null value\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n// bring in the calculated values from parambag_tabledata\r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\nlet daysintimegrame={param_timeframe:seconds}/60/60/24;\r\nlet gal=todouble(param_gal_handled);\r\nlet slope=todouble(myparambag.memsize_slope);\r\nlet intercept=todouble(myparambag.memsize_interception);\r\nlet firstpos=toint(myparambag.memsize_firstpos);\r\nlet leadingnulls=repeat(long(null),firstpos );\r\n// Make the bestfit line based on the slope and intercept\r\nlet predfirstdate=todatetime(myparambag.memsize_firstdate);\r\nlet gap=gal - intercept;\r\nlet daystofullfromorigin=toint(bin(gap/slope,1));\r\nlet systemfulldate=datetime_add('day',daystofullfromorigin,predfirstdate);\r\nlet daysfromnow=datetime_diff('day',systemfulldate,now());\r\nprint daysfromnow",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "71e4876b-9d75-46a1-a95d-e98d0a9d8bc6",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_memfulldate",
                              "type": 1,
                              "query": "//handle null value\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n// bring in the calculated values from parambag_tabledata\r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\nlet daysintimegrame={param_timeframe:seconds}/60/60/24;\r\nlet gal=todouble(param_gal_handled);\r\nlet slope=todouble(myparambag.memsize_slope);\r\nlet intercept=todouble(myparambag.memsize_interception);\r\nlet firstpos=toint(myparambag.memsize_firstpos);\r\nlet leadingnulls=repeat(long(null),firstpos );\r\n// Make the bestfit line based on the slope and intercept\r\nlet predfirstdate=todatetime(myparambag.memsize_firstdate);\r\nlet gap=gal - intercept;\r\nlet daystofullfromorigin=toint(bin(gap/slope,1));\r\nlet systemfulldate=datetime_add('day',daystofullfromorigin,predfirstdate);\r\nlet daysfromnow=datetime_diff('day',systemfulldate,now());\r\nprint format_datetime(systemfulldate,'MM-yyyy')",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "8ea7d1f9-2750-4a2f-a704-0ce28cb7062d",
                              "version": "KqlParameterItem/1.0",
                              "name": "param_capacity_prediction_empty_inputs",
                              "type": 1,
                              "query": "let arr_param_datapredoffset = dynamic([{param_datapredoffset}]);\r\nlet param_datapredoffset_gal_isempty=tostring(arr_param_datapredoffset) == \"[]\";\r\n\r\nlet arr_param_datapredgrowth = dynamic([{param_datapredgrowth}]);\r\nlet param_datapredgrowth_isempty=tostring(arr_param_datapredgrowth) == \"[]\";\r\n\r\nlet arr_param_percentofgal = dynamic([{param_percentofgal}]);\r\nlet param_percentofgal_isempty=tostring(arr_param_percentofgal) == \"[]\";\r\n\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=tostring(arr_param_gal) == \"[]\";\r\n\r\nlet capacity_prediction_filled_inpts = param_datapredoffset_gal_isempty or param_gal_isempty or param_datapredgrowth_isempty or param_percentofgal_isempty;\r\n\r\nprint tostring(capacity_prediction_filled_inpts);",
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "formHorizontal",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "70",
                        "name": "UserParams",
                        "styleSettings": {
                          "margin": "0px",
                          "padding": "0px",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "\r\n## <b style=\"color:DodgerBlue;\"> Columnar data will reach chosen limit in </b> {param_csdaysfromnow} days, on {param_csfulldate} </b>",
                                "style": "info"
                              },
                              "customWidth": "50",
                              "name": "CSdataPreditcionText",
                              "styleSettings": {
                                "padding": "0px"
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "## <b style=\"color:DodgerBlue;\"> Total Memory consumption will reach global allocation limit in </b>{param_memdaysfromnow} days, on ({param_memfulldate})",
                                "style": "info"
                              },
                              "customWidth": "50",
                              "name": "MemoryPredictionText"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "// bring in the calculated values from parambag_tabledata\r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\n\r\n// fix the problem when there is empty input from user side\r\nlet arr_param_datapredgrowth = dynamic([{param_datapredgrowth}]);\r\nlet temp_isempty=isempty(tostring(arr_param_datapredgrowth));\r\nlet slope = todouble(iff(temp_isempty,0.0,arr_param_datapredgrowth[0]));\r\n\r\nlet arr_param_datapredoffset = dynamic([{param_datapredoffset}]);\r\nlet param_datapredoffset_isempty=isempty(tostring(arr_param_datapredoffset));\r\nlet offset = todouble(iff(param_datapredoffset_isempty,0.0,arr_param_datapredoffset[0]));\r\n\r\nlet arr_param_percentofgal = dynamic([{param_percentofgal}]);\r\nlet param_percentofgal_isempty=isempty(tostring(arr_param_percentofgal));\r\nlet param_percentofgal_handled = todouble(iff(param_percentofgal_isempty,0.0,arr_param_percentofgal[0]));\r\n\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n\r\nlet daysintimeframe={param_timeframe:seconds}/60/60/24;\r\nlet chosendatalimit=todouble(param_percentofgal_handled)*todouble(param_gal_handled)/100;\r\nlet series_csdatasize_nopad=myparambag.series_datasize;\r\nlet intercept=todouble(myparambag.datasize_interception)+offset;\r\nlet timestamps=myparambag.array_allthedays ;\r\nlet firstpos=toint(myparambag.datasize_firstpos);\r\nlet lastpos=daysintimeframe-firstpos;\r\nlet leadingnulls=repeat(long(null),daysintimeframe );\r\n// Make the bestfit line based on the slope and intercept\r\nlet predfirstdate=todatetime(myparambag.datasize_firstdate);\r\nlet gap=chosendatalimit - intercept;\r\nlet daystofull_uncapped=toint(bin(gap/slope,1));\r\nlet daystofull=min_of(daystofull_uncapped,toint(datetime_diff('day',now(183d),predfirstdate)));\r\nlet systemfulldate=datetime_add('day',daystofull,predfirstdate);\r\nlet lastdatetoplot=todatetime(timestamps[array_length(timestamps) -1]);\r\nlet datestoaddd=range(datetime_add('day',1,lastdatetoplot), systemfulldate, 1d);\r\nlet sampledates=array_concat(timestamps,datestoaddd);\r\n// Create lists as long as the prediction\r\nlet series_gal=repeat(todouble(param_gal_handled),array_length(sampledates));\r\nlet series_chosendatalimit=repeat(chosendatalimit,array_length(sampledates));\r\nlet rpadding=repeat(long(null), array_length(datestoaddd));\r\nlet series_csdatasize=array_concat(series_csdatasize_nopad,rpadding);\r\nlet plotfrom=daysintimeframe-firstpos;\r\n\r\n//print firstpos, daystofull, plotfrom, daysintimeframe\r\n//create prediction line and plot others against it\r\nrange x from lastpos to daystofull step 1\r\n| project bestfit=slope*x+intercept\r\n| summarize make_list(bestfit)\r\n| project \r\n    sampledates,\r\n    ColumnDataSize=series_csdatasize, \r\n    ColumnDataPrediction=array_concat(leadingnulls,list_bestfit),\r\n    GlobalAllocationLimit=series_gal, \r\n    PredictionLimitLine=series_chosendatalimit",
                                "size": 0,
                                "aggregation": 2,
                                "title": "Column Data Size",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "timechart",
                                "chartSettings": {
                                  "xAxis": "sampledates",
                                  "showLegend": true,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 5,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "query - 9"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "// bring in the calculated values from parambag_tabledata\r\nlet myparambag=parse_json('{parambag_tabledata:escapejson}');\r\n\r\nlet arr_param_datapredoffset = dynamic([{param_datapredoffset}]);\r\nlet param_datapredoffset_isempty=isempty(tostring(arr_param_datapredoffset));\r\nlet offset = todouble(iff(param_datapredoffset_isempty,0.0,arr_param_datapredoffset[0]));\r\n\r\nlet arr_param_gal = dynamic([{param_gal}]);\r\nlet param_gal_isempty=isempty(tostring(arr_param_gal));\r\nlet param_gal_handled = todouble(iff(param_gal_isempty,0.0,arr_param_gal[0]));\r\n\r\nlet daysintimeframe={param_timeframe:seconds}/60/60/24;\r\nlet gal=todouble(param_gal_handled);\r\n\r\nlet arr_param_datapredgrowth = dynamic([{param_datapredgrowth}]);\r\nlet temp_isempty=isempty(tostring(arr_param_datapredgrowth));\r\nlet slope = todouble(iff(temp_isempty,0,arr_param_datapredgrowth[0]));\r\n\r\nlet series_memsize_nopad=myparambag.series_memsize;\r\nlet intercept=todouble(myparambag.memsize_interception);\r\nlet timestamps=myparambag.array_allthedays ;\r\nlet firstpos=toint(myparambag.memsize_firstpos);\r\nlet lastpos=daysintimeframe-firstpos;\r\nlet leadingnulls=repeat(long(null),daysintimeframe );\r\n// Make the bestfit line based on the slope and intercept\r\nlet predfirstdate=todatetime(myparambag.memsize_firstdate);\r\nlet gap=gal - intercept;\r\nlet daystofull_uncapped=toint(bin(gap/slope,1));\r\nlet daystofull=min_of(daystofull_uncapped,toint(datetime_diff('day',now(183d),predfirstdate)));\r\nlet systemfulldate=datetime_add('day',daystofull,predfirstdate);\r\nlet lastdatetoplot=todatetime(timestamps[array_length(timestamps) -1]);\r\nlet datestoaddd=range(datetime_add('day',1,lastdatetoplot), systemfulldate, 1d);\r\nlet sampledates=array_concat(timestamps,datestoaddd);\r\n// Create lists as long as the prediction\r\nlet series_gal=repeat(gal,array_length(sampledates));\r\nlet rpadding=repeat(long(null), array_length(datestoaddd));\r\nlet plotfrom=daysintimeframe-firstpos;\r\n\r\n//create prediction line and plot others against it\r\nrange x from lastpos to daystofull step 1\r\n| project bestfit=slope*x+intercept\r\n| summarize make_list(bestfit)\r\n| project sampledates,\r\n          GlobalAllocationLimitForInstance=series_gal,\r\n          ColumnDataSizeForTenantSelection=array_concat(myparambag.series_datasize,rpadding),\r\n          ColumnsLoadedForTenantSelection=array_concat(myparambag.series_csinmemsize,rpadding),\r\n          TotalMemoryUsedByInstance=array_concat(myparambag.series_memused,rpadding),\r\n          PredictedMemoryUseByInstance=array_concat(leadingnulls,list_bestfit)",
                                "size": 0,
                                "aggregation": 2,
                                "title": "Memory statistics (Sum of all nodes in system)",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "linechart",
                                "chartSettings": {
                                  "showLegend": true,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 5,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "query - 5"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_capacity_prediction_empty_inputs",
                          "comparison": "isEqualTo",
                          "value": "False"
                        },
                        "name": "Group capacity prediction - graphs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "Please fill all inputs to get valid graphs.",
                                "style": "info"
                              },
                              "name": "Group capacity prediction - no input message"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_capacity_prediction_empty_inputs",
                          "comparison": "isEqualTo",
                          "value": "True"
                        },
                        "name": "Group capacity prediction - no input"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<div style=\"float: right\">\r\n\tUpdated every 24 hours.\r\n</div>"
                        },
                        "name": "text - 5"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedMenu",
                    "comparison": "isEqualTo",
                    "value": "CapacityPrediction"
                  },
                  "name": "Group capacity prediction"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "provider_table_exists",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Metrics Group"
          }
        ]
      },
      "name": "main group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}