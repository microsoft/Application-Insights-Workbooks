{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "937d9357-dd2c-4dfa-b9d3-9fc72e2bb8dd",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "value": {
              "durationMs": 172800000
            }
          },
          {
            "id": "dacc479e-f79c-4fba-91e0-3ec2d1da7023",
            "version": "KqlParameterItem/1.0",
            "name": "AmsResource",
            "type": 5,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "57071f1a-d4cd-4c11-aeed-7f561216d939",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1"
          },
          {
            "id": "02302b6e-3f02-4dda-99fd-278e0fe4ef06",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "query": "Resources\r\n| summarize by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = subscriptionId == '{AmsResource:subscription}'",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "001d5a8b-af43-46c8-8859-4fe460fc5bc8",
            "version": "KqlParameterItem/1.0",
            "name": "ProvidersList",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{AmsResource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "5933ca08-61e2-4abf-a629-2c19d5ed7308",
            "version": "KqlParameterItem/1.0",
            "name": "Config",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{AmsResource}/sapLandscapeMonitor/default\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2023-04-01\"}],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "9476ba84-56fd-413c-b8fd-54c00ba48a3e",
            "version": "KqlParameterItem/1.0",
            "name": "Alerts",
            "type": 1,
            "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime {TimeRange}\r\n| extend AlertCondition=tostring(properties.essentials.monitorCondition)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n    | extend ProviderName=parse_json(tags)[\"profile-id\"]\r\n    | where isempty(tags.['alert-template-id']) == false\r\n    | where workspace =~ '{Workspace}'\r\n    | project AlertRule=tolower(id), ProviderName) on AlertRule\r\n| where not(isnull(ProviderName))\r\n| where AlertCondition == \"Fired\"\r\n| project Output = strcat(ProviderName, \"@\", Severity)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "450d72fc-4b79-4e04-a6c7-5d633cd8e2e1",
            "version": "KqlParameterItem/1.0",
            "name": "DoAlertsExist",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "Alerts",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "0"
                }
              }
            ]
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "BasicParameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "print providersList = parse_json(\"{ProvidersList:escapejson}\")\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| project ProviderName=tostring(Name), SID=tostring(SID), GroupName=tostring(group.name)\r\n| join kind = inner (\r\n    print alerts = '{Alerts}'\r\n    | project alert = extract_all(@\"([a-zA-Z0-9-]+@Sev[0-4])\", alerts)\r\n    | mv-expand alert\r\n    | extend items = split(alert, \"@\")\r\n    | project ProviderName = tostring(items[0]), Severity = tostring(items[1])\r\n) on ProviderName\r\n| project-away ProviderName1\r\n| summarize\r\n    AlertsCount = count(),\r\n    Sev0Count = countif(Severity == \"Sev0\"),\r\n    Sev1Count = countif(Severity == \"Sev1\"),\r\n    Sev2Count = countif(Severity == \"Sev2\"),\r\n    Sev3Count = countif(Severity == \"Sev3\"),\r\n    Sev4Count = countif(Severity == \"Sev4\")\r\n    by GroupName\r\n| join kind = rightouter (\r\n    print config = parse_json('{Config}')\r\n    | mv-expand group = config.properties.grouping.landscape\r\n    | project GroupName=tostring(group.name)\r\n) on GroupName\r\n| extend Sev0 = iff(isnotnull(Sev0Count), Sev0Count, 0)\r\n| extend Sev1 = iff(isnotnull(Sev1Count), Sev1Count, 0)\r\n| extend Sev2 = iff(isnotnull(Sev2Count), Sev2Count, 0)\r\n| extend Sev3 = iff(isnotnull(Sev3Count), Sev3Count, 0)\r\n| extend Sev4 = iff(isnotnull(Sev4Count), Sev4Count, 0)\r\n| project\r\n    Group = GroupName1,\r\n    AlertsCount = iff(isnotnull(AlertsCount), AlertsCount, 0),\r\n    NoAlerts = iff(isnotnull(AlertsCount), 0, 1),\r\n    Sev0,\r\n    Sev1,\r\n    Sev2,\r\n    Sev3,\r\n    Sev4,\r\n    HighSevCount = Sev0 + Sev1 + Sev2\r\n",
        "size": 3,
        "title": "Groups",
        "exportFieldName": "Group",
        "exportParameterName": "SelectedGroup",
        "exportDefaultValue": "*",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Group",
            "formatter": 1
          },
          "subtitleContent": {
            "columnMatch": "AlertsCount",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": ">",
                  "thresholdValue": "0",
                  "representation": "warning",
                  "text": "{0} alerts"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": "{0} alerts"
                }
              ]
            }
          },
          "secondaryContent": {
            "columnMatch": "AlertsCount",
            "formatter": 22,
            "formatOptions": {
              "compositeBarSettings": {
                "labelText": " [\"HighSevCount\"] with high severity",
                "columnSettings": [
                  {
                    "columnName": "Sev0",
                    "color": "redBright"
                  },
                  {
                    "columnName": "Sev1",
                    "color": "red"
                  },
                  {
                    "columnName": "Sev2",
                    "color": "yellow"
                  },
                  {
                    "columnName": "Sev3",
                    "color": "blue"
                  },
                  {
                    "columnName": "Sev4",
                    "color": "blueDark"
                  },
                  {
                    "columnName": "NoAlerts",
                    "color": "green"
                  }
                ],
                "noRowsScaling": true
              }
            },
            "tooltipFormat": {
              "tooltip": "High severity alerts include Sev0, Sev1 and Sev2"
            }
          },
          "showBorder": true,
          "sortCriteriaField": "HighSevCount",
          "sortOrderField": 2,
          "size": "auto"
        }
      },
      "customWidth": "80",
      "name": "GroupTiles"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "ca3bb28d-4aa4-4861-bca9-4ef5ce3ab2ed",
            "linkTarget": "OpenBlade",
            "linkLabel": "Create or edit groups",
            "style": "link",
            "linkIsContextBlade": true,
            "bladeOpenContext": {
              "bladeName": "SidGroups.ReactView",
              "extensionName": "Microsoft_Azure_WorkloadMonitor",
              "bladeParameters": [
                {
                  "name": "resourceId",
                  "source": "parameter",
                  "value": "AmsResource"
                }
              ]
            }
          }
        ]
      },
      "name": "CreateEditGroupsLink",
      "styleSettings": {
        "padding": "0px 0px 0px 4px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "print providersList = parse_json(\"{ProvidersList:escapejson}\")\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| extend ProviderCategory = iff(ProviderType in (\"SapHana\", \"Db2\", \"MsSqlServer\"), \"Database\", iff(ProviderType == \"SapNetWeaver\", \"SAP NetWeaver\",\r\niff(ProviderType == \"PrometheusHaCluster\", \"High-availability cluster (Pacemaker)\", \"OS (Linux)\")))\r\n| project ProviderID=id, ProviderName=tostring(Name), ProviderCategory, SID=tostring(SID), GroupName=tostring(group.name)\r\n| join kind = inner (\r\n    print alerts = '{Alerts}'\r\n    | project alert = extract_all(@\"([a-zA-Z0-9-]+@Sev[0-4])\", alerts)\r\n    | mv-expand alert\r\n    | extend items = split(alert, \"@\")\r\n    | project ProviderName = tostring(items[0]), Severity = tostring(items[1])\r\n) on ProviderName\r\n| project-away ProviderName1\r\n| summarize \r\n    AlertsCount = count(),\r\n    Sev0Count = countif(Severity == \"Sev0\"),\r\n    Sev1Count = countif(Severity == \"Sev1\"),\r\n    Sev2Count = countif(Severity == \"Sev2\"),\r\n    Sev3Count = countif(Severity == \"Sev3\"),\r\n    Sev4Count = countif(Severity == \"Sev4\")\r\n    by GroupName, SID, ProviderCategory\r\n| extend NetweaverSev0 = iff(ProviderCategory == \"SAP NetWeaver\", Sev0Count, 0)\r\n| extend NetweaverSev1 = iff(ProviderCategory == \"SAP NetWeaver\", Sev1Count, 0)\r\n| extend NetweaverSev2 = iff(ProviderCategory == \"SAP NetWeaver\", Sev2Count, 0)\r\n| extend NetweaverSev3 = iff(ProviderCategory == \"SAP NetWeaver\", Sev3Count, 0)\r\n| extend NetweaverSev4 = iff(ProviderCategory == \"SAP NetWeaver\", Sev4Count, 0)\r\n| extend NetweaverAlertsCount = iff(ProviderCategory == \"SAP NetWeaver\", AlertsCount, 0)\r\n| extend DatabaseSev0 = iff(ProviderCategory == \"Database\", Sev0Count, 0)\r\n| extend DatabaseSev1 = iff(ProviderCategory == \"Database\", Sev1Count, 0)\r\n| extend DatabaseSev2 = iff(ProviderCategory == \"Database\", Sev2Count, 0)\r\n| extend DatabaseSev3 = iff(ProviderCategory == \"Database\", Sev3Count, 0)\r\n| extend DatabaseSev4 = iff(ProviderCategory == \"Database\", Sev4Count, 0)\r\n| extend DatabaseAlertsCount = iff(ProviderCategory == \"Database\", AlertsCount, 0)\r\n| extend HaSev0 = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", Sev0Count, 0)\r\n| extend HaSev1 = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", Sev1Count, 0)\r\n| extend HaSev2 = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", Sev2Count, 0)\r\n| extend HaSev3 = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", Sev3Count, 0)\r\n| extend HaSev4 = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", Sev4Count, 0)\r\n| extend HaAlertsCount = iff(ProviderCategory == \"High-availability cluster (Pacemaker)\", AlertsCount, 0)\r\n| extend OsSev0 = iff(ProviderCategory == \"OS (Linux)\", Sev0Count, 0)\r\n| extend OsSev1 = iff(ProviderCategory == \"OS (Linux)\", Sev1Count, 0)\r\n| extend OsSev2 = iff(ProviderCategory == \"OS (Linux)\", Sev2Count, 0)\r\n| extend OsSev3 = iff(ProviderCategory == \"OS (Linux)\", Sev3Count, 0)\r\n| extend OsSev4 = iff(ProviderCategory == \"OS (Linux)\", Sev4Count, 0)\r\n| extend OsAlertsCount = iff(ProviderCategory == \"OS (Linux)\", AlertsCount, 0)\r\n| project-away AlertsCount, Sev0Count, Sev1Count, Sev2Count, Sev3Count, Sev4Count, ProviderCategory, GroupName\r\n| join kind = rightouter (\r\n    print config = parse_json('{Config}')\r\n    | mv-expand group = config.properties.grouping.landscape\r\n    | mv-apply SID = group.topSid on\r\n    (\r\n        extend Group = tostring(group.name)\r\n    )\r\n    | project Group, SID = tostring(SID)\r\n) on SID\r\n| project-away SID\r\n| where '*' in ('{SelectedGroup}') or Group in ('{SelectedGroup}')\r\n| summarize\r\n    NetweaverSev0=sum(NetweaverSev0),\r\n    NetweaverSev1=sum(NetweaverSev1),\r\n    NetweaverSev2=sum(NetweaverSev2),\r\n    NetweaverSev3=sum(NetweaverSev3),\r\n    NetweaverSev4=sum(NetweaverSev4),\r\n    NetweaverAlertsCount=sum(NetweaverAlertsCount),\r\n    DatabaseSev0=sum(DatabaseSev0),\r\n    DatabaseSev1=sum(DatabaseSev1),\r\n    DatabaseSev2=sum(DatabaseSev2),\r\n    DatabaseSev3=sum(DatabaseSev3),\r\n    DatabaseSev4=sum(DatabaseSev4),\r\n    DatabaseAlertsCount=sum(DatabaseAlertsCount),\r\n    HaSev0=sum(HaSev0),\r\n    HaSev1=sum(HaSev1),\r\n    HaSev2=sum(HaSev2),\r\n    HaSev3=sum(HaSev3),\r\n    HaSev4=sum(HaSev4),\r\n    HaAlertsCount=sum(HaAlertsCount),\r\n    OsSev0=sum(OsSev0),\r\n    OsSev1=sum(OsSev1),\r\n    OsSev2=sum(OsSev2),\r\n    OsSev3=sum(OsSev3),\r\n    OsSev4=sum(OsSev4),\r\n    OsAlertsCount=sum(OsAlertsCount)\r\nby SID1, Group\r\n| project Group, SID = SID1,\r\n    NetweaverSev0, NetweaverSev1, NetweaverSev2, NetweaverSev3, NetweaverSev4, NetweaverAlertsCount=iff(NetweaverAlertsCount != \"\", NetweaverAlertsCount, 0), NetweaverNoAlerts=iff(isnull(NetweaverAlertsCount) or NetweaverAlertsCount == 0, 1, 0),\r\n    DatabaseSev0, DatabaseSev1, DatabaseSev2, DatabaseSev3, DatabaseSev4, DatabaseAlertsCount=iff(DatabaseAlertsCount != \"\", DatabaseAlertsCount, 0), DatabaseNoAlerts=iff(isnull(DatabaseAlertsCount) or DatabaseAlertsCount == 0, 1, 0),\r\n    HaSev0, HaSev1, HaSev2, HaSev3, HaSev4, HaAlertsCount=iff(HaAlertsCount != \"\", HaAlertsCount, 0), HaNoAlerts=iff(isnull(HaAlertsCount) or HaAlertsCount == 0, 1, 0),\r\n    OsSev0, OsSev1, OsSev2, OsSev3, OsSev4, OsAlertsCount=iff(OsAlertsCount != \"\", OsAlertsCount, 0), OsNoAlerts=iff(isnull(OsAlertsCount) or OsAlertsCount == 0, 1, 0)\r\n",
        "size": 3,
        "exportFieldName": "SID",
        "exportParameterName": "SelectedSID",
        "exportDefaultValue": "*",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 5
            },
            {
              "columnMatch": "SID",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverSev0",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverSev1",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverSev2",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverSev3",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverSev4",
              "formatter": 5
            },
            {
              "columnMatch": "NetweaverAlertsCount",
              "formatter": 22,
              "formatOptions": {
                "aggregation": "Inherit",
                "compositeBarSettings": {
                  "labelText": "[\"NetweaverAlertsCount\"] alerts",
                  "columnSettings": [
                    {
                      "columnName": "NetweaverSev0",
                      "color": "redBright"
                    },
                    {
                      "columnName": "NetweaverSev1",
                      "color": "red"
                    },
                    {
                      "columnName": "NetweaverSev2",
                      "color": "yellow"
                    },
                    {
                      "columnName": "NetweaverSev3",
                      "color": "blue"
                    },
                    {
                      "columnName": "NetweaverSev4",
                      "color": "blueDark"
                    },
                    {
                      "columnName": "NetweaverNoAlerts",
                      "color": "green"
                    }
                  ],
                  "noRowsScaling": true
                }
              }
            },
            {
              "columnMatch": "NetweaverNoAlerts",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseSev0",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseSev1",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseSev2",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseSev3",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseSev4",
              "formatter": 5
            },
            {
              "columnMatch": "DatabaseAlertsCount",
              "formatter": 22,
              "formatOptions": {
                "aggregation": "Inherit",
                "compositeBarSettings": {
                  "labelText": "[\"DatabaseAlertsCount\"] alerts",
                  "columnSettings": [
                    {
                      "columnName": "DatabaseSev0",
                      "color": "redBright"
                    },
                    {
                      "columnName": "DatabaseSev1",
                      "color": "red"
                    },
                    {
                      "columnName": "DatabaseSev2",
                      "color": "yellow"
                    },
                    {
                      "columnName": "DatabaseSev3",
                      "color": "blue"
                    },
                    {
                      "columnName": "DatabaseSev4",
                      "color": "blueDark"
                    },
                    {
                      "columnName": "DatabaseNoAlerts",
                      "color": "green"
                    }
                  ],
                  "noRowsScaling": true
                }
              }
            },
            {
              "columnMatch": "DatabaseNoAlerts",
              "formatter": 5
            },
            {
              "columnMatch": "HaSev0",
              "formatter": 5
            },
            {
              "columnMatch": "HaSev1",
              "formatter": 5
            },
            {
              "columnMatch": "HaSev2",
              "formatter": 5
            },
            {
              "columnMatch": "HaSev3",
              "formatter": 5
            },
            {
              "columnMatch": "HaSev4",
              "formatter": 5
            },
            {
              "columnMatch": "HaAlertsCount",
              "formatter": 22,
              "formatOptions": {
                "aggregation": "Inherit",
                "compositeBarSettings": {
                  "labelText": "[\"HaAlertsCount\"] alerts",
                  "columnSettings": [
                    {
                      "columnName": "HaSev0",
                      "color": "redBright"
                    },
                    {
                      "columnName": "HaSev1",
                      "color": "red"
                    },
                    {
                      "columnName": "HaSev2",
                      "color": "yellow"
                    },
                    {
                      "columnName": "HaSev3",
                      "color": "blue"
                    },
                    {
                      "columnName": "HaSev4",
                      "color": "blueDark"
                    },
                    {
                      "columnName": "HaNoAlerts",
                      "color": "green"
                    }
                  ],
                  "noRowsScaling": true
                }
              }
            },
            {
              "columnMatch": "HaNoAlerts",
              "formatter": 5
            },
            {
              "columnMatch": "OsSev0",
              "formatter": 5
            },
            {
              "columnMatch": "OsSev1",
              "formatter": 5
            },
            {
              "columnMatch": "OsSev2",
              "formatter": 5
            },
            {
              "columnMatch": "OsSev3",
              "formatter": 5
            },
            {
              "columnMatch": "OsSev4",
              "formatter": 5
            },
            {
              "columnMatch": "OsAlertsCount",
              "formatter": 22,
              "formatOptions": {
                "aggregation": "Inherit",
                "compositeBarSettings": {
                  "labelText": "[\"OsAlertsCount\"] alerts",
                  "columnSettings": [
                    {
                      "columnName": "OsSev0",
                      "color": "redBright"
                    },
                    {
                      "columnName": "OsSev1",
                      "color": "red"
                    },
                    {
                      "columnName": "OsSev2",
                      "color": "yellow"
                    },
                    {
                      "columnName": "OsSev3",
                      "color": "blue"
                    },
                    {
                      "columnName": "OsSev4",
                      "color": "blueDark"
                    },
                    {
                      "columnName": "OsNoAlerts",
                      "color": "green"
                    }
                  ],
                  "noRowsScaling": true
                }
              }
            },
            {
              "columnMatch": "OsNoAlerts",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Group"
            ],
            "expandTopLevel": false,
            "finalBy": "SID"
          },
          "labelSettings": [
            {
              "columnId": "NetweaverAlertsCount",
              "label": "SAP NetWeaver"
            },
            {
              "columnId": "DatabaseAlertsCount",
              "label": "Database"
            },
            {
              "columnId": "HaAlertsCount",
              "label": "High-availability cluster (Pacemaker)"
            },
            {
              "columnId": "OsAlertsCount",
              "label": "OS (Linux)"
            }
          ]
        }
      },
      "customWidth": "80",
      "name": "AlertTree",
      "styleSettings": {
        "margin": "0px 0px 0px 13px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Alerts",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "0197fa16-088d-4f74-a241-e409887054dd",
                  "version": "KqlParameterItem/1.0",
                  "name": "GroupFilter",
                  "label": "Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{Config}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.grouping.landscape[*].name\",\"columns\":[]}}]}",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 8,
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "SelectedGroup",
              "comparison": "isEqualTo",
              "value": "*"
            },
            "name": "GroupFilter"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "ed3238ae-5232-4e22-8ba0-9ee3dfa8b5e2",
                  "version": "KqlParameterItem/1.0",
                  "name": "SIDFilter",
                  "label": "SID",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "print config = parse_json('{Config}')\r\n| mv-expand group = config.properties.grouping.landscape\r\n| mv-expand SID = group.topSid\r\n| project tostring(SID)\r\n| distinct SID\r\n| sort by SID asc\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "SelectedSID",
              "comparison": "isEqualTo",
              "value": "*"
            },
            "name": "SidFilter"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "d763a10a-b419-4053-a2a1-6f6c362770d1",
                  "version": "KqlParameterItem/1.0",
                  "name": "CategoryFilter",
                  "label": "Category",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\"Database\", \"High-availability cluster (Pacemaker)\", \"OS (Linux)\", \"SAP NetWeaver\"]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "customWidth": "25",
            "name": "CategoryFilter"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "74ab0709-0653-4519-a141-e9c87a8da95a",
                  "version": "KqlParameterItem/1.0",
                  "name": "SeverityFilter",
                  "label": "Severity",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\"Sev0\", \"Sev1\", \"Sev2\", \"Sev3\", \"Sev4\"]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "customWidth": "25",
            "name": "SeverityFilter"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime {TimeRange}\r\n| extend AlertCondition=tostring(properties.essentials.monitorCondition)\r\n| extend UserResponse=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend Description=tostring(properties.essentials.description)\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n    | extend ProviderName=parse_json(tags)[\"profile-id\"]\r\n    | where isempty(tags.['alert-template-id']) == false\r\n    | where workspace =~ '{Workspace}'\r\n    | project AlertRule=tolower(id), ProviderName) on AlertRule\r\n| extend FiredTime=format_datetime(StartTime, 'MM/dd/yy, hh:mm tt')\r\n| where not(isnull(ProviderName))\r\n| where AlertCondition == \"Fired\"\r\n| where '*' in ({SeverityFilter}) or Severity in ({SeverityFilter})\r\n| order by StartTime\r\n| project Name=name, Severity, AlertCondition, UserResponse, Description, FiredTime, id, ProviderName",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "85px"
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Alerts"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print providersList = parse_json(\"{ProvidersList:escapejson}\")\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| extend ProviderCategory = iff(ProviderType in (\"SapHana\", \"Db2\", \"MsSqlServer\"), \"Database\", iff(ProviderType == \"SapNetWeaver\", \"SAP NetWeaver\",\r\niff(ProviderType == \"PrometheusHaCluster\", \"High-availability cluster (Pacemaker)\", \"OS (Linux)\")))\r\n| project ProviderID=id, ProviderName=Name, ProviderCategory, SID, GroupName=group.name\r\n| extend GroupFilterText = iff('{SelectedGroup}' != '*', '{SelectedGroup}', {GroupFilter})\r\n| extend SIDFilterText = iff('{SelectedSID}' != '*', '{SelectedSID}', {SIDFilter})\r\n| where GroupFilterText == '*' or GroupName == GroupFilterText\r\n| where SIDFilterText == '*' or SID == SIDFilterText\r\n| where '*' in ({CategoryFilter}) or ProviderCategory in ({CategoryFilter})\r\n| project-away GroupFilterText, SIDFilterText\r\n",
              "size": 0,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Providers"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\",\"mergeType\":\"inner\",\"leftTable\":\"Alerts\",\"rightTable\":\"Providers\",\"leftColumn\":\"ProviderName\",\"rightColumn\":\"ProviderName\"}],\"projectRename\":[{\"originalName\":\"[Alerts].Name\",\"mergedName\":\"Alert\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].SID\",\"mergedName\":\"SID\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].Severity\",\"mergedName\":\"Severity\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].AlertCondition\",\"mergedName\":\"AlertCondition\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].UserResponse\",\"mergedName\":\"UserResponse\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].Description\",\"mergedName\":\"Description\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].ProviderCategory\",\"mergedName\":\"Category\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].FiredTime\",\"mergedName\":\"FiredTime\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].id\",\"mergedName\":\"id\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].ProviderName\",\"mergedName\":\"ProviderName\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].ProviderID\",\"mergedName\":\"AffectedResource\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].ProviderName\",\"mergedName\":\"ProviderName1\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].GroupName\",\"mergedName\":\"GroupName\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].tags\",\"mergedName\":\"tags\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].test\",\"mergedName\":\"test\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].GroupFilterText\",\"mergedName\":\"GroupFilterText\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].SIDFilterText\",\"mergedName\":\"SIDFilterText\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].id\"},{\"originalName\":\"[Providers].Provider\"},{\"originalName\":\"[Providers].ProviderType\"},{\"originalName\":\"[Alerts].State\"}]}",
              "size": 0,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Alert",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11,
                    "formatOptions": {
                      "customColumnWidthSetting": "85px"
                    }
                  },
                  {
                    "columnMatch": "AlertCondition",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Fired",
                          "representation": "Fired",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Resolved",
                          "representation": "Resolved",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "125px"
                    }
                  },
                  {
                    "columnMatch": "UserResponse",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "120px"
                    }
                  },
                  {
                    "columnMatch": "FiredTime",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "130px"
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AffectedResource",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "Resource"
                    }
                  },
                  {
                    "columnMatch": "GroupName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderCategory",
                    "formatter": 5
                  }
                ],
                "rowLimit": 500,
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "AlertCondition",
                    "label": "Alert condition"
                  },
                  {
                    "columnId": "UserResponse",
                    "label": "User response"
                  },
                  {
                    "columnId": "FiredTime",
                    "label": "Fire time"
                  }
                ]
              }
            },
            "showPin": false,
            "name": "AlertsList",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "DoAlertsExist",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "AlertsListGroup",
      "styleSettings": {
        "margin": "30px 0px 0px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Alerts",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "You have no fired alerts.",
              "style": "success"
            },
            "customWidth": "30",
            "name": "NoAlertsText"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "DoAlertsExist",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "NoAlertsGroup",
      "styleSettings": {
        "margin": "30px 0px 0px 0px"
      }
    }
  ],
  "styleSettings": {
    "paddingStyle": "narrow",
    "spacingStyle": "narrow"
  },
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}