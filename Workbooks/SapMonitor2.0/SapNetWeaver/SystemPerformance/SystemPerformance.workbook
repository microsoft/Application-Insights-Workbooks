{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, SID_s, hostname_s, instanceNr_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend TOTAL_CPU = (100 - IDLE_TOTAL_d)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval),USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, TOTAL_CPU, serverTimestamp_t",
                      "size": 0,
                      "aggregation": 3,
                      "title": "CPU Utilization % - User and System (SMON)",
                      "timeBrushParameterName": "timebrush_performance",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "areachart",
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "yAxis": [
                          "USR_TOTAL_d",
                          "SYS_TOTAL_d"
                        ],
                        "group": null,
                        "createOtherGroup": 0,
                        "seriesLabelSettings": [
                          {
                            "seriesName": "USR_TOTAL_d",
                            "label": "CPU User Utilization"
                          },
                          {
                            "seriesName": "SYS_TOTAL_d",
                            "label": "CPU System Utilization"
                          }
                        ]
                      }
                    },
                    "customWidth": "50",
                    "name": "CPU Utilization - User / System",
                    "styleSettings": {
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s, FREE_MEM_PERC_d\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend threshold_memory = ( FREE_MEM_MB_d * 100 ) / FREE_MEM_PERC_d \r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t, threshold_memory",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Free Memory (SMON)",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "linechart",
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "yAxis": [
                          "FREE_MEM_MB_d",
                          "FREE_MEM_MB_INC_FS_d",
                          "threshold_memory"
                        ],
                        "group": null,
                        "createOtherGroup": 0,
                        "seriesLabelSettings": [
                          {
                            "seriesName": "FREE_MEM_MB_d",
                            "label": "Free Memory (MB)",
                            "color": "blue"
                          },
                          {
                            "seriesName": "FREE_MEM_MB_INC_FS_d",
                            "label": "Free Memory Including Cache (MB)",
                            "color": "blueDark"
                          },
                          {
                            "seriesName": "threshold_memory",
                            "label": "Total Memory",
                            "color": "orange"
                          }
                        ],
                        "customThresholdLine": "{threshold_memory}",
                        "customThresholdLineStyle": 0
                      }
                    },
                    "customWidth": "50",
                    "name": "SMON Memory Utilization",
                    "styleSettings": {
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project PAGE_IN_PERC_d, PAGE_OUT_PERC_d, serverTimestamp_t, hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PAGE_IN_PERC_d, PAGE_OUT_PERC_d, serverTimestamp_t, hostname_s",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Memory - Paging In/Out % Of RAM/Hour (SMON)",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart",
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "seriesLabelSettings": [
                          {
                            "seriesName": "PAGE_IN_PERC_d",
                            "label": "Paging In (% of RAM per hour) "
                          },
                          {
                            "seriesName": "PAGE_OUT_PERC_d",
                            "label": "Paging Out (% of RAM per hour) "
                          }
                        ]
                      }
                    },
                    "customWidth": "50",
                    "name": "Paging In Out",
                    "styleSettings": {
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project PRIVWPNO_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PRIVWPNO_d, serverTimestamp_t",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Number Of Work Processes in Priv Modes (SMON)",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart",
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "yAxis": [
                          "PRIVWPNO_d"
                        ],
                        "seriesLabelSettings": [
                          {
                            "seriesName": "PRIVWPNO_d",
                            "label": "Number Of Process In Private Mode"
                          }
                        ]
                      }
                    },
                    "customWidth": "50",
                    "name": "SMON Privatemode",
                    "styleSettings": {
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  }
                ]
              },
              "conditionalVisibilities": [
                {
                  "parameterName": "selectedPerformanceTab",
                  "comparison": "isEqualTo",
                  "value": "CPUMemory"
                },
                {
                  "parameterName": "param_check_smon",
                  "comparison": "isEqualTo",
                  "value": "0"
                },
                {
                  "parameterName": "param_check_rfc_metrics",
                  "comparison": "isEqualTo",
                  "value": "0"
                }
              ],
              "name": "Memorygroup",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "c3787ab9-7fbe-4f52-9adc-47ef495bdab4",
                          "version": "KqlParameterItem/1.0",
                          "name": "CPUWorkProcessType",
                          "label": "Work Process Type",
                          "type": 2,
                          "query": "SapNetweaver_ABAPGetWPTable_CL\r\n| distinct Typ_s",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1"
                            ],
                            "showDefault": false
                          },
                          "defaultValue": "value::1",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "name": "Utilization Parameters"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet workProcessType = '{CPUWorkProcessType}';\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, 1m), Typ_s\r\n| extend activeWP = totalWP - freeWP",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Workprocess Utilization​",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "areachart",
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "yAxis": [
                          "activeWP",
                          "freeWP"
                        ],
                        "seriesLabelSettings": [
                          {
                            "seriesName": "activeWP",
                            "label": "Active Work Process",
                            "color": "red"
                          },
                          {
                            "seriesName": "freeWP",
                            "label": "Free Work Process",
                            "color": "blue"
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_abapwp",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "PerformanceWorkprocessUtilization​"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "let workProcessType = '{CPUWorkProcessType}';\r\nlet appServerList = dynamic([{ApplicationServer}]);\r\nlet maxTimestamp = SapNetweaver_ABAPGetWPTable_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| where Status_s == 'Run' or Status_s == 'On Hold'\r\n| summarize max(serverTimestamp_t);\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t == toscalar(maxTimestamp)\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| where Status_s == 'Run' or Status_s == 'On-Hold'\r\n| extend ApplicationServerInstance = strcat(hostname_s, \"_\", SID_s,\"_\", instanceNr_s), ProcessNumber = No_d, ProcessType = Typ_s, ProcessId = Pid_d, Status = Status_s, Reason = Reason_s, Error = Err_s, CPU = Cpu_s, Time = Time_s, Program = Program_s, User = User_s, Client = Client_s\r\n| project ApplicationServerInstance, ProcessNumber, ProcessType, ProcessId, Status, Reason, Error , CPU,Time, Program, User, Client\r\n",
                      "size": 3,
                      "title": "Active Work Process (SM66)",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "ApplicationServerInstance",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "ProcessNumber",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "ProcessType",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "ProcessId",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Status",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Reason",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Error",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "CPU",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Time",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Program",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "User",
                            "formatter": 1
                          },
                          {
                            "columnMatch": "Client",
                            "formatter": 1
                          }
                        ],
                        "sortBy": [
                          {
                            "itemKey": "ApplicationServerInstance",
                            "sortOrder": 1
                          }
                        ],
                        "labelSettings": [
                          {
                            "columnId": "ApplicationServerInstance",
                            "label": "Application Server Instance"
                          },
                          {
                            "columnId": "ProcessNumber",
                            "label": "Process Number"
                          },
                          {
                            "columnId": "ProcessType",
                            "label": "Process Type"
                          },
                          {
                            "columnId": "ProcessId",
                            "label": "Process Id"
                          },
                          {
                            "columnId": "CPU",
                            "label": "CPU Time"
                          },
                          {
                            "columnId": "Time",
                            "label": "Time Priority"
                          },
                          {
                            "columnId": "Program",
                            "label": "Program Name"
                          },
                          {
                            "columnId": "User",
                            "label": "User Id"
                          }
                        ]
                      },
                      "sortBy": [
                        {
                          "itemKey": "ApplicationServerInstance",
                          "sortOrder": 1
                        }
                      ],
                      "chartSettings": {
                        "xAxis": "serverTimestamp_t",
                        "yAxis": [
                          "FREE_MEM_MB_d",
                          "ACT_WPS_d"
                        ],
                        "seriesLabelSettings": [
                          {
                            "seriesName": "ACT_DIA_d",
                            "label": "Active Dialog  WPs"
                          },
                          {
                            "seriesName": "ACT_WPS_d",
                            "label": "Active WPs​"
                          },
                          {
                            "seriesName": "TRFC_FREE_d",
                            "label": "Available RFC WPs"
                          },
                          {
                            "seriesName": "FREE_MEM_MB_d",
                            "label": "Free WPs"
                          },
                          {
                            "seriesName": "FREE_MEM_MB_INC_FS_d",
                            "label": "Free Memory including File System Cache (MB)"
                          }
                        ]
                      }
                    },
                    "name": "ActiveWorkprocess (SM66)",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project USERS_d, SESSIONS_d, SID_s, hostname_s, instanceNr_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project USERS_d, SESSIONS_d, serverTimestamp_t\r\n",
                            "size": 0,
                            "title": "User Logons and Sessions",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "SESSIONS_d",
                                "USERS_d"
                              ],
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "SESSIONS_d",
                                  "label": "Sessions"
                                },
                                {
                                  "seriesName": "USERS_d",
                                  "label": "User Logons"
                                }
                              ]
                            }
                          },
                          "customWidth": "50",
                          "name": "User Logons and Sessions",
                          "styleSettings": {
                            "maxWidth": "50",
                            "showBorder": true
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d, SID_s, hostname_s, instanceNr_s, SERVER_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d, serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval),UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d\r\n| project-away Count\r\n",
                            "size": 0,
                            "title": "Queue Lengths Performance",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "UPDQ_d",
                                  "label": "Update"
                                },
                                {
                                  "seriesName": "ENQQ_d",
                                  "label": "Enqueue"
                                },
                                {
                                  "seriesName": "DIAQ_d",
                                  "label": "Dialog"
                                },
                                {
                                  "seriesName": "QINLENGTH_d",
                                  "label": "Incoming RFC"
                                },
                                {
                                  "seriesName": "QOUTLENGTH_d",
                                  "label": "Outgoing RFC"
                                }
                              ]
                            }
                          },
                          "customWidth": "50",
                          "name": "Queue Lengths Performance",
                          "styleSettings": {
                            "maxWidth": "50",
                            "showBorder": true
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project DIAAVG20_d, DIAAVG60_d, SID_s, hostname_s, instanceNr_s, SERVER_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project DIAAVG20_d, DIAAVG60_d, serverTimestamp_t\r\n",
                            "size": 0,
                            "aggregation": 3,
                            "title": "Dialog Queue Length Performance",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "DIAAVG20_d",
                                "DIAAVG60_d"
                              ],
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "DIAAVG20_d",
                                  "label": "Dialog Queue Length (20s)"
                                },
                                {
                                  "seriesName": "DIAAVG60_d",
                                  "label": "Dialog Queue Length (60s)"
                                }
                              ]
                            }
                          },
                          "name": "Dialog Queue Length Performance"
                        }
                      ]
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "param_check_smon",
                        "comparison": "isEqualTo",
                        "value": "0"
                      },
                      {
                        "parameterName": "param_check_rfc_metrics",
                        "comparison": "isEqualTo",
                        "value": "0"
                      }
                    ],
                    "name": "SMONUtilizationGroup"
                  }
                ],
                "exportParameters": true
              },
              "conditionalVisibilities": [
                {
                  "parameterName": "selectedPerformanceTab",
                  "comparison": "isEqualTo",
                  "value": "ProcessUtilization"
                },
                {
                  "parameterName": "param_check_abapwp",
                  "comparison": "isEqualTo",
                  "value": "0"
                }
              ],
              "name": "UtilizationGroup"
            },
            {
              "type": 1,
              "content": {
                "json": "<div style=\"float: right\">\r\nUpdated every 2 minutes.\r\n</div>"
              },
              "conditionalVisibility": {
                "parameterName": "selectedPerfRFCTab",
                "comparison": "isEqualTo",
                "value": "CPUMemory"
              },
              "name": "SMONFreq"
            },
            {
              "type": 1,
              "content": {
                "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
              },
              "conditionalVisibility": {
                "parameterName": "selectedPerfRFCTab",
                "comparison": "isEqualTo",
                "value": "ProcessUtilization"
              },
              "name": "ProcessUtilFreq"
            }
          ],
          "exportParameters": true
        },
        "name": "group - 0"
      }
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }