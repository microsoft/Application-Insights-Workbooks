{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2c886879-e271-4da3-801c-c932bc075074",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_table_exists",
            "type": 1,
            "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"SID_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL');\r\nlet enqueue = checktable('SapNetweaver_EnqGetStatistic_CL');\r\nlet queue = checktable('SapNetweaver_GetQueueStatistic_CL');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL');\r\nlet abap = checktable('SapNetweaver_ABAPGetWPTable_CL');\r\nlet swnc = checktable('SapNetweaver_SWNC_CL');\r\nlet sdump = checktable('SapNetweaver_ShortDumps_CL');\r\nlet smon = checktable('SapNetweaver_SMON_CL');\r\n//rfc v1.3 tables\r\nlet enqread = checktable('SapNetweaver_EnqueueRead_CL');\r\nlet inboundq = checktable('SapNetweaver_InboundQueues_CL');\r\nlet outboundq = checktable('SapNetweaver_OutboundQueues_CL');\r\nlet batchjob = checktable('SapNetweaver_BatchJobs_CL');\r\nlet failedupdate = checktable('SapNetweaver_FailedUpdates_CL');\r\nlet syslog = checktable('SapNetweaver_SysLogs_CL');\r\n//aiops tables\r\nlet hostmapping = checktable('SapNetweaver_SAP_Host_AzRId_Mapping_CL');\r\nlet rhevents = checktable('AIOps_GetRHEvents_CL');\r\n//rfc v1.5 tables\r\nlet swncuser = checktable('SapNetweaver_SWNC_User_CL');\r\nlet swncmemory = checktable('SapNetweaver_SWNC_Memory_CL');\r\nlet swncrfc = checktable('SapNetweaver_SWNC_RFC_Usage_CL');\r\nlet swnctransaction = checktable('SapNetweaver_SWNC_Transaction_CL');\r\nlet stms = checktable('SapNetweaver_STMS_CL');\r\nlet trfc = checktable('SapNetweaver_TransactionalRfc_CL');\r\n\r\nlet T = datatable(tablename:string, id:string)\r\n[\r\n'SapNetweaver_SMON_CL', '',\r\n];\r\nT\r\n|project tablename\r\n| extend new_col = strcat('SapNetweaver_SMON_CL:',smon,\r\n',SapNetweaver_ShortDumps_CL:',sdump,\r\n',SapNetweaver_SWNC_CL:',swnc,\r\n',SapNetweaver_GetSystemInstanceList_CL:',system,',SapNetweaver_GetQueueStatistic_CL:',queue,\r\n',SapNetweaver_EnqGetStatistic_CL:',enqueue,\r\n',SapNetweaver_GetProcessList_CL:',process,\r\n',SapNetweaver_ABAPGetWPTable_CL:',abap,\r\n',SapNetweaver_EnqueueRead_CL:',enqread,\r\n',SapNetweaver_InboundQueues_CL:',inboundq,\r\n',SapNetweaver_OutboundQueues_CL:',outboundq,\r\n',SapNetweaver_BatchJobs_CL:',batchjob,\r\n',SapNetweaver_FailedUpdates_CL:',failedupdate,\r\n',SapNetweaver_SysLogs_CL:',syslog,\r\n',SapNetweaver_SAP_Host_AzRId_Mapping_CL:',hostmapping,\r\n',AIOps_GetRHEvents_CL:',rhevents,\r\n',SapNetweaver_SWNC_User_CL:',swncuser,\r\n',SapNetweaver_SWNC_Memory_CL:',swncmemory,\r\n',SapNetweaver_SWNC_RFC_Usage_CL:',swncrfc,\r\n',SapNetweaver_SWNC_Transaction_CL:',swnctransaction,\r\n',SapNetweaver_STMS_CL:',stms,\r\n'SapNetweaver_TransactionalRfc_CL:',trfc)\r\n|project-away tablename",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "aa8ab18f-5d36-4f34-8a54-f0f2e25ecbb8",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_error",
            "type": 1,
            "query": "// 0 = no error\n// 1 = table does not exist (need to add provider)\n// 2 = table exists, but column v1 does not (need to wait)\nlet t = \"SapNetweaver_GetSystemInstanceList_CL\";\nlet tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "225baab0-e4ce-4a45-92de-ddda00795a2d",
            "version": "KqlParameterItem/1.0",
            "name": "param_ams_resource",
            "type": 5,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "92bd4772-a480-4a10-a48d-fecfd54bb22f",
            "version": "KqlParameterItem/1.0",
            "name": "param_providers_list",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{param_ams_resource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-12-01-preview\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
            "queryType": 12
          },
          {
            "id": "a00ff9e0-9235-4aa2-b617-933d7977bdb6",
            "version": "KqlParameterItem/1.0",
            "name": "param_provider_type",
            "type": 1,
            "value": "SapNetWeaver",
            "isHiddenWhenLocked": true
          },
          {
            "id": "979c1ab9-90e4-4b19-9c58-7c1f96c38754",
            "version": "KqlParameterItem/1.0",
            "name": "param_alert_templates",
            "type": 1,
            "value": "[\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver System Availability\",\r\n        \"description\": \"Fired when SAP NetWeaver Message Server is not available or all servers are not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-system-availability\",\r\n        \"severity\": \"1\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"let TotalInstanceAvailability = SapNetweaver_GetSystemInstanceList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | summarize available=countif(Status == 1), total=count() by PROVIDER_INSTANCE_s, serverTimestamp_t;TotalInstanceAvailability | join kind = leftouter SapNetweaver_GetSystemInstanceList_CL on $left.PROVIDER_INSTANCE_s == $right.PROVIDER_INSTANCE_s and $left.serverTimestamp_t == $right.serverTimestamp_t | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | extend ServiceStatus = iff(available == 0, 0, iff(features_s contains 'MESSAGESERVER' and Status == 0, 0, 1)), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(ServiceStatus) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, serverTimestamp_t, features_s | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Availability\",\r\n        \"description\": \"Fired when SAP Netweaver ABAP, J2EE, JEE instances are not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-availability\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"let TotalInstanceAvailability = SapNetweaver_GetSystemInstanceList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | summarize available=countif(Status == 1), total=count() by PROVIDER_INSTANCE_s, serverTimestamp_t; TotalInstanceAvailability | join kind = leftouter SapNetweaver_GetSystemInstanceList_CL on $left.PROVIDER_INSTANCE_s == $right.PROVIDER_INSTANCE_s and $left.serverTimestamp_t == $right.serverTimestamp_t | where features_s contains 'J2EE' or features_s contains 'JEE' or features_s contains 'ABAP' | extend InstanceStatus = iff(available != 0 and dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(InstanceStatus) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, serverTimestamp_t, features_s | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver EnqueueServer Availability\",\r\n        \"description\": \"Fired when SAP Netweaver EnqueueServer is not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-server\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetProcessList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and description_s contains 'EnqueueServer' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(Status) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, description_s, serverTimestamp_t | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver EnqueueReplicationServer Availability\",\r\n        \"description\": \"Fired when SAP Netweaver EnqueueReplicationServer is not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-replicator-server\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetProcessList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and description_s contains 'EnqueueReplicator' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(Status) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, description_s, serverTimestamp_t | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Work Process Utilization\",\r\n        \"description\": \"Fired when SAP Netweaver Instance with DIA or BTC Usage breaches specified threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-work-process-utilization\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_ABAPGetWPTable_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Typ_s has '{Aggregate}' | summarize totalWP = count(), freeWP = countif(Status_s == 'Wait') by TimeGenerated, Typ_s, serverTimestamp_t, AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | extend UtilizationPctWP = round(toreal(totalWP - freeWP) / toreal(totalWP) * 100, 3) | summarize AggregatedValue = max(UtilizationPctWP) by bin(TimeGenerated, 1m), AppServer, Typ_s, serverTimestamp_t | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"WorkType\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_ABAPGetWPTable_CL | where Typ_s has 'DIA' or Typ_s has 'BTC' | distinct Typ_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"70\",\r\n            \"alertUnit\": \"percent\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"AppServer\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Queue Wait\",\r\n        \"description\": \"Fired when SAP Netweaver Instance with DIA or BTC Queue Wait breaches specified threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-queue-wait\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetQueueStatistic_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Typ_s has '{Aggregate}' | summarize QueueLimit=max(Max_d)/7 by hostname_s, instanceNr_d, Typ_s, serverTimestamp_t, Now_d, TimeGenerated | extend QueueWaitPct = iff(QueueLimit != 0, (toreal(Now_d) / toreal(QueueLimit)) * 100, 0.0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = max(QueueWaitPct) by bin(TimeGenerated, 1m), AppServer, Typ_s, serverTimestamp_t | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"WorkType\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_GetQueueStatistic_CL | where Typ_s has 'DIA' or Typ_s has 'BTC' | distinct Typ_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"5\",\r\n            \"alertUnit\": \"percent\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"AppServer\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SMON] SAP Netweaver Memory Utilization\",\r\n        \"description\": \"Fired when the memory utilization reaches a threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-memory-utilization\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_SMON_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = avg(FREE_MEM_PERC_d) by hostname_s, bin(TimeGenerated, 1m) | where AggregatedValue < {AlertThreshold}\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"20\",\r\n            \"alertUnit\": \"percent\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"hostname_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SMON] SAP Netweaver CPU System Utilization\",\r\n        \"description\": \"Fired when CPU system utilization reaches a threshold value.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-cpu-system-utilization\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_SMON_CL| where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend TOTAL_CPU = (100 - IDLE_TOTAL_d)| summarize AggregatedValue = avg(TOTAL_CPU) by bin(serverTimestamp_t, 30m),SYS_TOTAL_d, hostname_s | where AggregatedValue > {AlertThreshold} \",\r\n            \"aggregateName\": \"SystemCPUUtilization\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_SMON_CL| where isnotempty(hostname_s)| distinct hostname_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"0\",\r\n            \"alertUnit\": \"severity\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"hostname_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SMON] SAP Netweaver CPU User Utilization\",\r\n        \"description\": \"Fired when CPU user utilization reaches a threshold value.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-cpu-user-utilization\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_SMON_CL| where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend TOTAL_CPU = (100 - IDLE_TOTAL_d)| summarize AggregatedValue = avg(TOTAL_CPU) by bin(serverTimestamp_t, 30m),USR_TOTAL_d, hostname_s | where AggregatedValue > {AlertThreshold} \",\r\n            \"aggregateName\": \"UserCPUUtilization\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_SMON_CL| where isnotempty(hostname_s)| distinct hostname_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"0\",\r\n            \"alertUnit\": \"severity\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"hostname_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SMQ1] SAP Netweaver Outbound Queue length more than threshold\",\r\n        \"description\": \"Fired when a desired outbound queue is active and length is greater than equal to the threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-outbound-queue-length\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_OutboundQueues_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where QNAME_s has '{Aggregate}' | summarize AggregatedValue  = max(QDEEP_d) by QNAME_s, bin(TimeGenerated, 1m) | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"QNAME\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_OutboundQueues_CL | distinct QNAME_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"5\",\r\n            \"alertUnit\": \"count\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"QDEEP_d\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SMQ2] SAP Netweaver Inbound Queue length more than threshold\",\r\n        \"description\": \"Fired when a desired inbound queue is active and length is greater than equal to the threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-inbound-queue-length\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_InboundQueues_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where QNAME_s has '{Aggregate}' | summarize AggregatedValue  = max(QDEEP_d) by QNAME_s, bin(TimeGenerated, 1m) | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"QNAME\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_InboundQueues_CL | distinct QNAME_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"5\",\r\n            \"alertUnit\": \"count\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"QDEEP_d\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM12] SAP Netweaver Enqueue Entry Volume\",\r\n        \"description\": \"Fired when count of enqueue entries are more than the threshold value.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-read-volume\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_EnqueueRead_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = dcount(GARG_s) by GNAME_s, bin(TimeGenerated, 1m) | where AggregatedValue > {AlertThreshold}\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"5\",\r\n            \"alertUnit\": \"count\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"GNAME_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"30\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM12] SAP Netweaver Aging Enqueue Entries\",\r\n        \"description\": \"Fired when a to enqueue entries are active for more than 1 day.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-read-aging\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"let base = SapNetweaver_EnqueueRead_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where bin(now() - 1d, 1d) == bin(serverTimestamp_t, 1d) | summarize by GNAME_s, GARG_s, GTWP_s, bin(TimeGenerated, 1d); SapNetweaver_EnqueueRead_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where bin(now() - 60min, 1h) == bin(serverTimestamp_t, 1h) | join kind = inner base on GNAME_s | summarize by GNAME_s, GARG_s, GTWP_s, bin(TimeGenerated, 1d) | summarize AggregatedValue = count() by GNAME_s, bin(TimeGenerated, 1d) | where AggregatedValue > {AlertThreshold}\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"GNAME_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"2880\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM13] SAP Netweaver Failed Updates\",\r\n        \"description\": \"Fired when SAP Netweaver Instance has any type of failed updates.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-failed-update-any\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_FailedUpdates_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = count() by VBKEY_g, VBTCODE_s, VBREPORT_s, bin(TimeGenerated, 5m) | where AggregatedValue > {AlertThreshold}\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"VBKEY_g\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[ST22] SAP Netweaver Short Dump\",\r\n        \"description\": \"Fired when SAP Netweaver Instance raises any type of short dump\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-short-dump_any\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_ShortDumps_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | summarize AggregatedValue = count() by Runtime_Error_s, bin(TimeGenerated, 5m) | where AggregatedValue > {AlertThreshold}\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"2\",\r\n            \"alertUnit\": \"count\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"Runtime_Error_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM21] SAP Netweaver Alert for a Specific Message ID And Severity Error\",\r\n        \"description\": \"Fired when a desired inbound queue is active and length is greater than equal to the threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-system-log-by-message-id\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_SysLogs_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Msg_area_Msd_Id_s has '{Aggregate}' | where toint(E2E_SEVERITY_s) > {AlertThreshold} | extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy') | extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss') | summarize AggregatedValue = count() by Msg_area_Msd_Id_s, instanceNr_s, Problem_Class_s, Application_Comp_s, Program_s, bin(TimeGenerated, 1h) | where AggregatedValue  > 0\",\r\n            \"aggregateName\": \"MessageID\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_SysLogs_CL | distinct Msg_area_Msd_Id_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"0\",\r\n            \"alertUnit\": \"severity\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"Msg_area_Msd_Id_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"1440\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM21] SAP Netweaver Alert for a Specific User And Severity Error\",\r\n        \"description\": \"Fired when a system log with severity is raised for a specific user.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-system-log-by-user\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_SysLogs_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where E2E_USER_s has '{Aggregate}' | where toint(E2E_SEVERITY_s) > {AlertThreshold} | extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy') | extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss') | summarize AggregatedValue = count() by E2E_USER_s, instanceNr_s, Problem_Class_s, Application_Comp_s, Program_s, bin(TimeGenerated, 1h) | where AggregatedValue  > 0\",\r\n            \"aggregateName\": \"UserID\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_SysLogs_CL | distinct E2E_USER_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"0\",\r\n            \"alertUnit\": \"severity\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"E2E_USER_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"1440\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SM37] SAP Netweaver Long Running Job\",\r\n        \"description\": \"Fired when a job takes more than the threshold value.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-batch-job-jobname\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_BatchJobs_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend startdatetime = todatetime(strcat(STRTDATE_s,STRTTIME_s))| extend enddatetime = todatetime(strcat(ENDDATE_s,ENDTIME_s))| extend runtime = enddatetime - startdatetime| extend min = runtime / 1s | summarize AggregatedValue = countif(min > 600 ) by JOBNAME_s| where AggregatedValue > {AlertThreshold} \",\r\n            \"aggregateName\": \"JobName\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_BatchJobs_CL | where isnotempty(JOBNAME_s )| distinct JOBNAME_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"0\",\r\n            \"alertUnit\": \"severity\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"0\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"JOBNAME_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"5\"\r\n            }\r\n        }\r\n    }\r\n]",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "text",
              "multiLineHeight": 10
            }
          },
          {
            "id": "e856ad78-557b-4ba1-898e-81ad94d86abb",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_aiops",
            "type": 1,
            "description": "Parameter to check if AIOps is enabled",
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = iff (((tableList) contains 'AIOps_GetRHEvents_CL:0') or \r\n                           ((tableList) contains 'SapNetweaver_SAP_Host_AzRId_Mapping_CL:0'), \"0\", \"1\");\r\nprint toscalar(tableListValue)",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "750a19d9-5cf6-49bc-902f-c40e3d8411d1",
            "version": "KqlParameterItem/1.0",
            "name": "param_availability_timerange",
            "type": 4,
            "value": {
              "durationMs": 1800000
            },
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                }
              ],
              "allowCustom": false
            }
          },
          {
            "id": "90bcea9a-3fcb-4f45-b88c-98782c711569",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_rfc_metrics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = iff (((tableList) contains 'SapNetweaver_Short_Dumps_CL:0') or \n                           ((tableList) contains 'SapNetweaver_SMON_CL:0') or \n                           ((tableList) contains 'SapNetweaver_SWNC_CL:0') or\n                           ((tableList) contains 'SapNetweaver_EnqueueRead_CL:0') or\n                           ((tableList) contains 'SapNetweaver_BatchJobs_CL:0') or\n                           ((tableList) contains 'SapNetweaver_FailedUpdates_CL:0') or\n                           ((tableList) contains 'SapNetweaver_SysLogs_CL:0') or\n                           ((tableList) contains 'SapNetweaver_InboundQueues_CL:0') or\n                           ((tableList) contains 'SapNetweaver_OutboundQueues_CL:0'), \"0\", \"1\");\nprint toscalar(tableListValue)",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "overview_section_params"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Please add the SAP NetWeaver provider to view this workbook.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "NoProviderError"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "09b7cbce-8782-46bf-b1af-02ebf80071b1",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_provider_error",
                  "type": 1,
                  "query": "print allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n| mv-expand allProviders\r\n| extend type = parse_json(allProviders.properties).providerSettings.providerType\r\n| extend state = parse_json(allProviders.properties).provisioningState\r\n| where type == \"SapNetWeaver\"\r\n| where state != \"Failed\"\r\n| summarize iff(count() > 0,count(), -1)",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.workloads/monitors"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.workloads/monitors"
            },
            "name": "ProviderParameter"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "IngestionError"
          },
          {
            "type": 1,
            "content": {
              "json": "There was an error while adding the SAP NetWeaver provider. Please reach out to support for further assistance.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_error",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_provider_error",
                "comparison": "isEqualTo",
                "value": "-1"
              }
            ],
            "name": "ProviderFailure"
          }
        ]
      },
      "name": "overview_group_error"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1f9002cb-36a6-4dff-8ade-a86b9394a3ff",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_queuestatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:2'),\"2\",\"3\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "2b9aff63-5047-4c0f-bd8b-612790daf309",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_enqgetstatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a134306b-a79f-4df5-ba11-940c1f56d836",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_abapwp",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "87833d8d-b023-4ccc-95af-8ab1d11223f7",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_systeminstancelist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "c5b1e8a0-0321-4058-9f9f-73c24177e5d4",
            "version": "KqlParameterItem/1.0",
            "name": "pram_check_processlist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetProcessList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetProcessList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetProcessList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a4281d63-4bdb-48f3-8b91-8bffc69c2701",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SWNC_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SWNC_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "cc0d1c26-c8c2-4d38-aa91-aac907ce4d4e",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_smon",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SMON_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SMON_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SMON_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "50d932ae-0a86-4e9b-b183-b14fcf6e401c",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_sdump",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_ShortDumps_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_ShortDumps_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_ShortDumps_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a31e2711-8cb7-4408-9606-8b40429b528f",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_enqread",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_EnqueueRead_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_EnqueueRead_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_EnqueueRead_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "42c423f1-c67b-402f-a8ef-68c5d1f7467a",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_inbound_queue",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_InboundQueues_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_InboundQueues_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_InboundQueues_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "d4209b99-84cf-4175-a368-42e44397f961",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_outbound_queue",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_OutboundQueues_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_OutboundQueues_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_OutboundQueues_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "6765c648-3fa9-46d8-8d1f-8f74859e35fb",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_batchjobs",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_BatchJobs_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_BatchJobs_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_BatchJobs_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "92513bbc-5343-4c22-8036-e3fa3fe674d1",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_failedupdates",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_FailedUpdates_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_FailedUpdates_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_FailedUpdates_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "44dec127-8ff2-434e-a75d-e609fc562d50",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_syslogs",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SysLogs_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SysLogs_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SysLogs_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "dcc370fd-8366-4fbd-859c-0170ca1b8687",
            "version": "KqlParameterItem/1.0",
            "name": "time_stamp_status_update",
            "type": 1,
            "query": "let extractColumn = dynamic('UTC Timestamp');\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| summarize ['UTC Timestamp'] = max(serverTimestamp_t)\r\n| project properties = pack_all()\r\n| mv-apply name = extractColumn to typeof(string) on \r\n(\r\n    project name, value=properties[name]\r\n)\r\n| extend time_stamp = format_datetime(todatetime(value), \"dd-MM-yyyy HH:mm:ss\")\r\n| project time_stamp",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "20163d5e-cab0-4d77-a266-32a965c6bfaf",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc_user",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_User_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_SWNC_User_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_SWNC_User_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fb16b504-f857-4585-b079-2e788ee332dd",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc_memory",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_Memory_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_SWNC_Memory_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_SWNC_Memory_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fa23bd20-c7de-4c3e-b5b8-0a28afee099d",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc_transaction",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_Transaction_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_SWNC_Transaction_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_SWNC_Transaction_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "23e33206-bbce-4d9b-a7ab-647d4b064599",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc_rfc_usage",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_RFC_Usage_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_SWNC_RFC_Usage_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_SWNC_RFC_Usage_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "bc159dae-b81d-4d5f-8062-122c3f72cfa0",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_stms",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_STMS_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_STMS_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_STMS_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "param_check_transactionalRfc",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = case(((tableList) contains 'SapNetweaver_TransactionalRfc_CL:0'), \"0\",\r\n                            ((tableList) contains 'SapNetweaver_TransactionalRfc_CL:1'),\"1\",\r\n                             ((tableList) contains 'SapNetweaver_TransactionalRfc_CL:2'),\"2\",\"2\");\r\nprint toscalar(tableListValue);",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "87fd1a81-50ee-44eb-bbe9-57d3c1c19102"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "GlobalParameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "810c5c3b-c12c-4ecc-a875-a7135a34af90",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "2fcffdc4-ba32-4d94-82c9-69b0e90a3f04",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Availability",
            "subTarget": "Availability",
            "style": "link"
          },
          {
            "id": "e844d4f7-2017-4360-824f-4ac26e8a941d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Enqueue Statistics",
            "subTarget": "EnqueueStatistics",
            "style": "link"
          },
          {
            "id": "718a2865-1736-41f9-91fe-b0084ecd795d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Queue Statistics",
            "subTarget": "QueueStatistics",
            "style": "link"
          },
          {
            "id": "bd309ce8-c389-493f-961f-6fc4cfd718dd",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "System Performance",
            "subTarget": "Performance",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "param_check_rfc_metrics",
          "comparison": "isNotEqualTo",
          "value": "0"
        }
      ],
      "customWidth": "90",
      "name": "Main Navigation Links"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c69bbaf6-d2a9-4ebf-8985-a14e22643035",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "3d052c5d-65d8-4462-83ae-375b5c7f65c6",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Availability",
            "subTarget": "Availability",
            "style": "link"
          },
          {
            "id": "0e04320b-60b3-463a-afc2-ff6546e574c7",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Application Performance",
            "subTarget": "Application",
            "style": "link"
          },
          {
            "id": "6a312e51-76b6-4afc-a948-1f22094c392e",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Enqueue Statistics",
            "subTarget": "EnqueueStatistics",
            "style": "link"
          },
          {
            "id": "0155da79-79b5-4e35-91d3-3aeb2ac640e8",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Queue Statistics",
            "subTarget": "QueueStatistics",
            "style": "link"
          },
          {
            "id": "8e505b33-7bc1-427b-9d1c-4998942e885e",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "System Performance",
            "subTarget": "Performance",
            "style": "link"
          },
          {
            "id": "7c7d7b69-c644-4744-a3b4-6027d942036c",
            "cellValue": "selectedMenuRFC",
            "linkTarget": "parameter",
            "linkLabel": "Workload Statistics",
            "subTarget": "WorkloadStatistics",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "param_check_rfc_metrics",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "customWidth": "90",
      "name": "Main Navigation Links - RFC"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "2d20d63e-d352-46e8-bcb0-9ca9ce897996",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alerts",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/SapMonitor2.0/Alerts/Alerts",
              "typeSource": "workbook",
              "gallerySource": "workbook",
              "locationSource": "default",
              "passSpecificParams": true,
              "templateParameters": [
                {
                  "name": "ProviderType",
                  "source": "parameter",
                  "value": "param_provider_type"
                },
                {
                  "name": "AlertTemplates",
                  "source": "parameter",
                  "value": "param_alert_templates"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        }
      ],
      "customWidth": "10",
      "name": "Alert Button Step",
      "styleSettings": {
        "margin": "10px 0px 0px 0px",
        "padding": "10px 0px 0px 0px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "aa8ab18f-5d36-4f34-8a54-f0f2e25ecbb8",
            "version": "KqlParameterItem/1.0",
            "name": "SelectedTab",
            "type": 1,
            "query": "let selMenu = '{selectedMenu}';\nlet selMenuRFC = '{selectedMenuRFC}';\nlet rfcCheckParam = '{param_check_rfc_metrics}';\nlet selTabValue = case(selMenu == \"Overview\", \"Overview\", \n                        selMenu == \"Availability\", \"Availability\" ,\n                        selMenu == \"Performance\", \"Performance\" , \n                        selMenu == \"WorkloadStatistics\", \"WorkloadStatistics\" , \n                        selMenu == \"EnqueueStatistics\", \"EnqueueStatistics\" ,\n                        selMenu == \"QueueStatistics\", \"QueueStatistics\",    \n                        \"\");\nlet selTabRFCValue = case(selMenuRFC == \"Overview\", \"Overview\", \n                          selMenuRFC == \"Availability\", \"Availability\" ,\n                          selMenuRFC == \"Utilization\", \"Utilization\" , \n                          selMenuRFC == \"EnqueueStatistics\", \"EnqueueStatistics\" ,\n                          selMenuRFC == \"QueueStatistics\", \"QueueStatistics\" ,\n                          selMenuRFC == \"Application\", \"Application\" ,\n                          selMenuRFC == \"WorkloadStatistics\", \"WorkloadStatistics\" ,\n                          selMenuRFC == \"Performance\", \"Performance\" ,\n                            \"\");    \n\nlet chooseTab = iff((rfcCheckParam == 0),selTabRFCValue, selTabValue);\nprint toscalar(chooseTab);\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "SelectedTabParameter"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ccee9c3e-3680-4f30-91f7-b53705ab19cf",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 1800000
            }
          },
          {
            "id": "c3a0f233-017a-4db7-accf-771525491be4",
            "version": "KqlParameterItem/1.0",
            "name": "SID",
            "type": 2,
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where isnotempty(SID_s)\r\n| distinct SID_s",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "71edfc3a-35c4-4aa0-ae7b-1756cee46705",
            "version": "KqlParameterItem/1.0",
            "name": "ApplicationServer",
            "label": "Application Server",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where SID_s == '{SID}'\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "WorkloadStatistics"
        }
      ],
      "name": "MasterParameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8a4e9bf3-dee6-48d5-9fc2-32f5381fc940",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "value": {
                    "durationMs": 604800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.workloads/monitors"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "OverviewTimeRangeParam"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//base query to set the status\r\nlet baseQuery = SapNetweaver_GetSystemInstanceList_CL    \r\n    | where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n    | extend instanceNr_s = tostring(toint(instanceNr_d))\r\n    | extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat(\"0\", instanceNr_s))    \r\n    | project instanceNr_d, hostname_s, serverTimestamp_t, features_s, dispstatus_s, SID_s\r\n    | extend Status = case(dispstatus_s == 'SAPControl-GREEN', \"Available\", \r\n        dispstatus_s == 'SAPControl-RED', \"Error\", \r\n        dispstatus_s == 'SAPControl-GRAY', \"Offline\",\r\n        dispstatus_s == 'SAPControl-YELLOW', \"Not Functional\",\r\n        \"\")\r\n    | extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\");\r\n//get the status from the ASCS = MESSAGESERVER + ENQUE\r\nlet ascsStatusRank = baseQuery\r\n    | where features_s contains \"MESSAGESERVER|ENQUE\"\r\n    | extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 3, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 1,\r\n        dispstatus_s == 'SAPControl-YELLOW', 2, 0);   \r\nlet ascsStatus = ascsStatusRank\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n//variable to check if ASCS is Offline\r\nlet checkASCSStatus = toscalar(ascsStatus | project Status);\r\n// If ASCS is offline, do not check the app servers and return Offline as status\r\n// Otherwise check return offline if all the app server are offline otherwise return Green if any one of them is available\r\nlet appserverRank = baseQuery\r\n    | where features_s contains \"ICMAN\"\r\n    | where checkASCSStatus != \"Offline\"\r\n    | extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 2, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 3,\r\n        dispstatus_s == 'SAPControl-YELLOW', 1, 0);    \r\nlet appserverStatus = appserverRank\r\n| where checkASCSStatus != \"Offline\"\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n// Check the status of ASCS and application server to show the final result\r\nlet finalRank = ascsStatus \r\n| union appserverStatus\r\n| extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 3, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 1,\r\n        dispstatus_s == 'SAPControl-YELLOW', 2, 0)\r\n| sort by Rank asc\r\n| serialize;\r\nfinalRank\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n\r\n",
                    "size": 0,
                    "title": "Availability Status by SID",
                    "exportFieldName": "SID_s",
                    "exportParameterName": "selectedSID",
                    "exportDefaultValue": "*",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "nodeIdField": "SID_s",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 70,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Available",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Functional",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Error",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Offline",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "name": "Availability Status by SID",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n<table>\r\n  <tr>\r\n    <td style=\"background-color:rgb(127, 186, 0)\"> <div style= \"color:white\">Available</div></td>\r\n    <td style=\"background-color:rgb(252, 209, 22)\"><div style= \"color:white\">Not Functional</div></td>\r\n    <td style=\"background-color:rgb(174, 13, 26)\"><div style= \"color:white\"> Error</div></td>\r\n    <td style=\"background-color:rgb(163, 166, 186)\"><div style= \"color:white\">Offline</div></td>\r\n    <td style=\"background-color:rgb(99, 137, 157)\"><div style= \"color:white\">Status Updated 5 minutes earlier</div></td>\r\n</tr>\r\n</table>\r\n</div>"
                  },
                  "name": "Legend"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(30m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| project-away hostname_s, instanceNr_d\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize availability=countif(Status == 0), total=count() by SID_s, timestamp_t\r\n| extend availabilityPct = round(toreal(availability) / toreal(total) * 100, 3)\r\n| summarize availability=sum(availability), total=sum(total), availabilityTrend=make_list(availabilityPct) by SID_s\r\n| extend availability = round(toreal(availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 3,
                    "title": "Availability Trend (Last 30 Minutes)",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "aggregation": "Unique",
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"availability\"]"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SID_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "availability",
                          "label": "Availability Over 30 Minutes"
                        },
                        {
                          "columnId": "availabilityTrend",
                          "label": "Trend"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SID_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_aiops",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Availability Percentage by SID - 30 minutes"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| project-away hostname_s, instanceNr_d\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize availability=countif(Status == 0), total=count() by SID_s, timestamp_t\r\n| extend availabilityPct = round(toreal(availability) / toreal(total) * 100, 3)\r\n| summarize availability=sum(availability), total=sum(total), availabilityTrend=make_list(availabilityPct) by SID_s\r\n| extend availability = round(toreal(availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 3,
                    "title": "Availability Trend (Last 15 Minutes)",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "aggregation": "Unique",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SID_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "availability",
                          "label": "Availability Over 15 Minutes"
                        },
                        {
                          "columnId": "availabilityTrend",
                          "label": "Trend"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SID_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_aiops",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Availability Percentage by SID - 15 minutes - AIOps"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize Availability=countif(Status == 0), total=count() , failureCount=countif(Status != 0), appServerList=make_list(appServer) by Instance_Process, serverTimestamp_t, SID_s\r\n| extend availabilityPct = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 3)\r\n| summarize Availability=sum(Availability), total=sum(total), AvailabilityTrend=make_list(availabilityPct), appServerList=any(tostring(appServerList)) by Instance_Process, SID_s\r\n| extend Availability = round(toreal(Availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 0,
                    "title": "Process Availability by SID",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Instance_Process",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "Availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                },
                                {
                                  "name": "ApplicationServer",
                                  "source": "column",
                                  "value": "appServerList"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 3
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                },
                                {
                                  "name": "ApplicationServer",
                                  "source": "column",
                                  "value": "appServerList"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "appServerList",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Process",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "aggregation": "Unique",
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"availability\"]"
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SID_s"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Instance_Process",
                          "label": "Process"
                        },
                        {
                          "columnId": "SID_s",
                          "label": "SID"
                        },
                        {
                          "columnId": "Availability",
                          "label": "Availability by SID"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "pram_check_processlist",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    {
                      "parameterName": "param_check_aiops",
                      "comparison": "isEqualTo",
                      "value": "0"
                    }
                  ],
                  "name": "Process Availability Status by SID - AIOps"
                }
              ]
            },
            "name": "sidCurrentStatus"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "1665c0a1-800a-4d7a-baf7-1e6057d1813a",
                        "version": "KqlParameterItem/1.0",
                        "name": "selectedSID",
                        "label": "SID",
                        "type": 2,
                        "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| project SID_s\r\n| distinct SID_s",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::1",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "SID parameters - Availability Status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ranked = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| where SID_s == '{selectedSID}'\r\n| project instanceNr_d, hostname_s, serverTimestamp_t, features_s, dispstatus_s, SID_s\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend feature_label = iff(features_s has \"ABAP\", \"ABAP\", \"\")\r\n| extend feature_label = iff(features_s has \"J2EE\", \"J2EE\", feature_label)\r\n| extend feature_label = iff(features_s has \"ENQUE\", \"Enqueue Server\", feature_label)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', \"Available\", \r\n                       dispstatus_s == 'SAPControl-RED', \"Error\", \r\n                       dispstatus_s == 'SAPControl-GRAY', \"Offline\",\r\n                       dispstatus_s == 'SAPControl-YELLOW', \"Not Functional\",\r\n                       \"\")\r\n| extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\")\r\n| extend appServer = strcat( hostname_s, \"_\", instanceNr_s)\r\n| extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 2, \r\n                       dispstatus_s == 'SAPControl-RED', 0, \r\n                       dispstatus_s == 'SAPControl-GRAY', 3,\r\n                       dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                       0)                       \r\n| sort by SID_s, Rank asc\r\n| serialize ;\r\nranked\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status, appServer,feature_label,instanceNr_d,hostname_s\r\n| summarize arg_max(serverTimestamp_t, * ) by appServer, SID_s",
                    "size": 0,
                    "title": "SAP NetWeaver Availability Status by Application Server.",
                    "noDataMessage": "Please select a SID to view status.",
                    "exportedParameters": [
                      {
                        "fieldName": "hostname_s",
                        "parameterName": "selectedHostname",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "instanceNr_d",
                        "parameterName": "selectedInstanceNr",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "SID_s",
                        "parameterName": "selectedSID",
                        "parameterType": 1,
                        "defaultValue": "*"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "appServer",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "feature_label"
                      },
                      "nodeIdField": "appServer",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Available",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Functional",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Error",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Offline",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "name": "Current Status By AppServer",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}'\r\n| where hostname_s == '{selectedHostname}'\r\n| where instanceNr_d == '{selectedInstanceNr}'\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = avg(Availability), AvailabilityTrend = make_list(Availability) by Instance_Process",
                    "size": 1,
                    "title": "Process Availability (Last 15 mins)",
                    "noDataMessage": "No processes available for selected App Server.",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blue",
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"Availability\"]"
                          }
                        },
                        {
                          "columnMatch": "total",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "failureCount",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Overall Availability %",
                          "formatter": 5,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"failureCount\"] of [\"total\"] mins unhealthy",
                              "columnSettings": [
                                {
                                  "columnName": "AvailableProcess",
                                  "color": "green"
                                },
                                {
                                  "columnName": "failureCount",
                                  "color": "redDark"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailableProcess",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Instance_Process",
                          "label": "Instance Label"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "selectedSID",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    },
                    {
                      "parameterName": "selectedHostname",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    }
                  ],
                  "name": "Process Availability Status"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "valueSubTab",
              "comparison": "isEqualTo",
              "value": "ByApplicationServer"
            },
            "name": "applicationServerOverview"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nLast Status Updated at {time_stamp_status_update} (UTC)\r\n</div>"
            },
            "name": "OverviewTimeStampStatusUpdate"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "pram_check_processlist",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 );\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(serverTimestamp_t, timespanInterval), appServer\r\n| extend availability = (availability / total) * 100\r\n| project-away total",
              "size": 0,
              "aggregation": 3,
              "title": "Availability Status Trend",
              "color": "green",
              "timeBrushParameterName": "timebrush_availability",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "availability"
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  },
                  "min": 0,
                  "max": 100
                }
              }
            },
            "name": "AvailabilityTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n//| where serverTimestamp_t {timebrush_availability}\r\n//commented as part of incoporating timebrush\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 3), AvailabilityTrend = make_list(Availability) by Instance_Process, SID_s,hostname_s,instanceNr_d,appServer",
              "size": 0,
              "showAnalytics": true,
              "title": "Instance Process Availability Status",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance_Process",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10%"
                    }
                  },
                  {
                    "columnMatch": "hostname_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appServer",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "ApplicationServer",
                            "source": "cell",
                            "value": "ApplicationServer"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "SID",
                            "source": "parameter",
                            "value": "SID"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Availability",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "customColumnWidthSetting": "15%"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 3
                      }
                    }
                  },
                  {
                    "columnMatch": "AvailabilityTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "customColumnWidthSetting": "100%"
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"Availability\"]"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "hostname_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "Instance_Process",
                    "label": "Instance Process"
                  },
                  {
                    "columnId": "SID_s",
                    "label": "SID"
                  },
                  {
                    "columnId": "hostname_s",
                    "label": "Instance Hostname"
                  },
                  {
                    "columnId": "instanceNr_d",
                    "label": "Instance Number"
                  },
                  {
                    "columnId": "appServer",
                    "label": "Application Server"
                  },
                  {
                    "columnId": "Availability",
                    "label": "Availability %"
                  },
                  {
                    "columnId": "AvailabilityTrend",
                    "label": "Availability Trend"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "param_check_aiops",
              "comparison": "isNotEqualTo",
              "value": "0"
            },
            "showPin": true,
            "name": "Instance Process Availability By SID"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t {timebrush_availability}\r\n//commented as part of incoporating timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 3), AvailabilityTrend = make_list(Availability) by Instance_Process, SID_s,hostname_s,instanceNr_d,appServer",
              "size": 0,
              "showAnalytics": true,
              "title": "Instance Process Availability Status",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance_Process",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10%"
                    }
                  },
                  {
                    "columnMatch": "hostname_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appServer",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "ApplicationServer",
                            "source": "cell",
                            "value": "ApplicationServer"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "SID",
                            "source": "parameter",
                            "value": "SID"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Availability",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "SID",
                            "source": "column",
                            "value": "SID_s"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "ApplicationServer",
                            "source": "column",
                            "value": "appServer"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "15%"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 3
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to view Insights - Auto RCA"
                    }
                  },
                  {
                    "columnMatch": "AvailabilityTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "SID",
                            "source": "column",
                            "value": "SID_s"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "ApplicationServer",
                            "source": "column",
                            "value": "appServer"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "100%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to view Insights - Auto RCA"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "hostname_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "Instance_Process",
                    "label": "Instance Process"
                  },
                  {
                    "columnId": "SID_s",
                    "label": "SID"
                  },
                  {
                    "columnId": "hostname_s",
                    "label": "Instance Hostname"
                  },
                  {
                    "columnId": "instanceNr_d",
                    "label": "Instance Number"
                  },
                  {
                    "columnId": "appServer",
                    "label": "Application Server"
                  },
                  {
                    "columnId": "Availability",
                    "label": "Availability %"
                  },
                  {
                    "columnId": "AvailabilityTrend",
                    "label": "Availability Trend"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "param_check_aiops",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "showPin": true,
            "name": "Instance Process Availability By SID - AIOps"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
            },
            "name": "AvailabilityFreq"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Availability"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "pram_check_processlist",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Availability Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (ABAPGetWPTable) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_abapwp",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "AbapTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_abapwp",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "AbapIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "param_check_abapwp",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "performance_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "f6abaf17-46a5-4849-9d72-d4a262bb2965",
                  "cellValue": "selectedPerfRFCTab",
                  "linkTarget": "parameter",
                  "linkLabel": "CPU and Memory (/SDF/SMON)",
                  "subTarget": "CPUMemory",
                  "style": "link"
                },
                {
                  "id": "ee23bc56-4d33-4a4b-8d68-54a1f8173a04",
                  "cellValue": "selectedPerfRFCTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Process Utilization",
                  "subTarget": "ProcessUtilization",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "Performance"
              },
              {
                "parameterName": "param_check_smon",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_abapwp",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_rfc_metrics",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_provider_error",
                "comparison": "isNotEqualTo",
                "value": "-1"
              }
            ],
            "name": "RFCPerformaceTab"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "9c13180c-e1fe-4d7d-ac8c-68e6fce92bcd",
                  "cellValue": "selectedPerfTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Process Utilization",
                  "subTarget": "ProcessUtilization",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "Performance"
              },
              {
                "parameterName": "param_check_provider_error",
                "comparison": "isNotEqualTo",
                "value": "-1"
              },
              {
                "parameterName": "param_check_rfc_metrics",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_abapwp",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "NonRFCPerformaceTab"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "2a6540cb-5072-4185-8a3c-bece3c4b1ed0",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedPerformanceTab",
                  "type": 1,
                  "query": "let selMenu = dynamic(\"{selectedPerfRFCTab}\");\nlet selMenuRFC = dynamic(\"{selectedPerfTab}\");\nlet rfcCheckParam = dynamic(\"{param_check_rfc_metrics}\");\nlet selTabValue = case(selMenu == \"CPUMemory\", \"CPUMemory\", \n                        selMenu == \"ProcessUtilization\", \"ProcessUtilization\" ,  \n                        \"\");\nlet selTabRFCValue = case(\n                          selMenuRFC == \"ProcessUtilization\", \"ProcessUtilization\" ,\n                            \"\");    \n\nlet chooseTab = iff((rfcCheckParam == 0),selTabValue,selTabRFCValue);\nprint toscalar(chooseTab);\n",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "SelectedPerfTabParameter"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "param_check_abapwp",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "PerformanceTabGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, SID_s, hostname_s, instanceNr_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend TOTAL_CPU = (100 - IDLE_TOTAL_d)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval),USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, TOTAL_CPU, serverTimestamp_t",
                    "size": 0,
                    "aggregation": 3,
                    "title": "CPU Utilization % - User and System (SMON)",
                    "timeBrushParameterName": "timebrush_performance",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "areachart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "USR_TOTAL_d",
                        "SYS_TOTAL_d"
                      ],
                      "group": null,
                      "createOtherGroup": 0,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "USR_TOTAL_d",
                          "label": "CPU User Utilization"
                        },
                        {
                          "seriesName": "SYS_TOTAL_d",
                          "label": "CPU System Utilization"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "CPU Utilization - User / System",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s, FREE_MEM_PERC_d\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend threshold_memory = ( FREE_MEM_MB_d * 100 ) / FREE_MEM_PERC_d \r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, serverTimestamp_t, threshold_memory",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Free Memory (SMON)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "FREE_MEM_MB_d",
                        "FREE_MEM_MB_INC_FS_d",
                        "threshold_memory"
                      ],
                      "group": null,
                      "createOtherGroup": 0,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "FREE_MEM_MB_d",
                          "label": "Free Memory (MB)",
                          "color": "blue"
                        },
                        {
                          "seriesName": "FREE_MEM_MB_INC_FS_d",
                          "label": "Free Memory Including Cache (MB)",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "threshold_memory",
                          "label": "Total Memory",
                          "color": "orange"
                        }
                      ],
                      "customThresholdLine": "{threshold_memory}",
                      "customThresholdLineStyle": 0
                    }
                  },
                  "customWidth": "50",
                  "name": "SMON Memory Utilization",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project PAGE_IN_PERC_d, PAGE_OUT_PERC_d, serverTimestamp_t, hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PAGE_IN_PERC_d, PAGE_OUT_PERC_d, serverTimestamp_t, hostname_s",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Memory - Paging In/Out % Of RAM/Hour (SMON)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "PAGE_IN_PERC_d",
                          "label": "Paging In (% of RAM per hour) "
                        },
                        {
                          "seriesName": "PAGE_OUT_PERC_d",
                          "label": "Paging Out (% of RAM per hour) "
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Paging In Out",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t {timebrush_performance}\r\n//commented to include timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project PRIVWPNO_d, serverTimestamp_t,  hostname_s,instanceNr_s,SID_s\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project PRIVWPNO_d, serverTimestamp_t",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Number Of Work Processes in Priv Modes (SMON)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "PRIVWPNO_d"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "PRIVWPNO_d",
                          "label": "Number Of Process In Private Mode"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "SMON Privatemode",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedPerformanceTab",
                "comparison": "isEqualTo",
                "value": "CPUMemory"
              },
              {
                "parameterName": "param_check_smon",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_rfc_metrics",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "Memorygroup",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "c3787ab9-7fbe-4f52-9adc-47ef495bdab4",
                        "version": "KqlParameterItem/1.0",
                        "name": "CPUWorkProcessType",
                        "label": "Work Process Type",
                        "type": 2,
                        "query": "SapNetweaver_ABAPGetWPTable_CL\r\n| distinct Typ_s",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::1",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "Utilization Parameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet workProcessType = '{CPUWorkProcessType}';\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, 1m), Typ_s\r\n| extend activeWP = totalWP - freeWP",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Workprocess Utilization​",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "areachart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "activeWP",
                        "freeWP"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "activeWP",
                          "label": "Active Work Process",
                          "color": "red"
                        },
                        {
                          "seriesName": "freeWP",
                          "label": "Free Work Process",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_abapwp",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "PerformanceWorkprocessUtilization​"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let workProcessType = '{CPUWorkProcessType}';\r\nlet appServerList = dynamic([{ApplicationServer}]);\r\nlet maxTimestamp = SapNetweaver_ABAPGetWPTable_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| where Status_s == 'Run' or Status_s == 'On Hold'\r\n| summarize max(serverTimestamp_t);\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t == toscalar(maxTimestamp)\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| where Status_s == 'Run' or Status_s == 'On-Hold'\r\n| extend ApplicationServerInstance = strcat(hostname_s, \"_\", SID_s,\"_\", instanceNr_s), ProcessNumber = No_d, ProcessType = Typ_s, ProcessId = Pid_d, Status = Status_s, Reason = Reason_s, Error = Err_s, CPU = Cpu_s, Time = Time_s, Program = Program_s, User = User_s, Client = Client_s\r\n| project ApplicationServerInstance, ProcessNumber, ProcessType, ProcessId, Status, Reason, Error , CPU,Time, Program, User, Client\r\n",
                    "size": 3,
                    "title": "Active Work Process (SM66)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ApplicationServerInstance",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessNumber",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessType",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessId",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Reason",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Error",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "CPU",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Time",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Program",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "User",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Client",
                          "formatter": 1
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "ApplicationServerInstance",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "ApplicationServerInstance",
                          "label": "Application Server Instance"
                        },
                        {
                          "columnId": "ProcessNumber",
                          "label": "Process Number"
                        },
                        {
                          "columnId": "ProcessType",
                          "label": "Process Type"
                        },
                        {
                          "columnId": "ProcessId",
                          "label": "Process Id"
                        },
                        {
                          "columnId": "CPU",
                          "label": "CPU Time"
                        },
                        {
                          "columnId": "Time",
                          "label": "Time Priority"
                        },
                        {
                          "columnId": "Program",
                          "label": "Program Name"
                        },
                        {
                          "columnId": "User",
                          "label": "User Id"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ApplicationServerInstance",
                        "sortOrder": 1
                      }
                    ],
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "FREE_MEM_MB_d",
                        "ACT_WPS_d"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "ACT_DIA_d",
                          "label": "Active Dialog  WPs"
                        },
                        {
                          "seriesName": "ACT_WPS_d",
                          "label": "Active WPs​"
                        },
                        {
                          "seriesName": "TRFC_FREE_d",
                          "label": "Available RFC WPs"
                        },
                        {
                          "seriesName": "FREE_MEM_MB_d",
                          "label": "Free WPs"
                        },
                        {
                          "seriesName": "FREE_MEM_MB_INC_FS_d",
                          "label": "Free Memory including File System Cache (MB)"
                        }
                      ]
                    }
                  },
                  "name": "ActiveWorkprocess (SM66)",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project USERS_d, SESSIONS_d, SID_s, hostname_s, instanceNr_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project USERS_d, SESSIONS_d, serverTimestamp_t\r\n",
                          "size": 0,
                          "title": "User Logons and Sessions",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "SESSIONS_d",
                              "USERS_d"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "SESSIONS_d",
                                "label": "Sessions"
                              },
                              {
                                "seriesName": "USERS_d",
                                "label": "User Logons"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "User Logons and Sessions",
                        "styleSettings": {
                          "maxWidth": "50",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d, SID_s, hostname_s, instanceNr_s, SERVER_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d, serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval),UPDQ_d, ENQQ_d, DIAQ_d, QINLENGTH_d, QOUTLENGTH_d\r\n| project-away Count\r\n",
                          "size": 0,
                          "title": "Queue Lengths Performance",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "seriesLabelSettings": [
                              {
                                "seriesName": "UPDQ_d",
                                "label": "Update"
                              },
                              {
                                "seriesName": "ENQQ_d",
                                "label": "Enqueue"
                              },
                              {
                                "seriesName": "DIAQ_d",
                                "label": "Dialog"
                              },
                              {
                                "seriesName": "QINLENGTH_d",
                                "label": "Incoming RFC"
                              },
                              {
                                "seriesName": "QOUTLENGTH_d",
                                "label": "Outgoing RFC"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "Queue Lengths Performance",
                        "styleSettings": {
                          "maxWidth": "50",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SMON_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project DIAAVG20_d, DIAAVG60_d, SID_s, hostname_s, instanceNr_s, SERVER_s, serverTimestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| project DIAAVG20_d, DIAAVG60_d, serverTimestamp_t\r\n",
                          "size": 0,
                          "aggregation": 3,
                          "title": "Dialog Queue Length Performance",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "DIAAVG20_d",
                              "DIAAVG60_d"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "DIAAVG20_d",
                                "label": "Dialog Queue Length (20s)"
                              },
                              {
                                "seriesName": "DIAAVG60_d",
                                "label": "Dialog Queue Length (60s)"
                              }
                            ]
                          }
                        },
                        "name": "Dialog Queue Length Performance"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "param_check_smon",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    {
                      "parameterName": "param_check_rfc_metrics",
                      "comparison": "isEqualTo",
                      "value": "0"
                    }
                  ],
                  "name": "SMONUtilizationGroup"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedPerformanceTab",
                "comparison": "isEqualTo",
                "value": "ProcessUtilization"
              },
              {
                "parameterName": "param_check_abapwp",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "UtilizationGroup"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 2 minutes.\r\n</div>"
            },
            "conditionalVisibility": {
              "parameterName": "selectedPerfRFCTab",
              "comparison": "isEqualTo",
              "value": "CPUMemory"
            },
            "name": "SMONFreq"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
            },
            "conditionalVisibility": {
              "parameterName": "selectedPerfRFCTab",
              "comparison": "isEqualTo",
              "value": "ProcessUtilization"
            },
            "name": "ProcessUtilFreq"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "param_check_abapwp",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "performanceprocessutilizationgroup"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1dc67097-34d6-4ef1-b0c1-2b3b7b16a148",
            "version": "KqlParameterItem/1.0",
            "name": "WorkloadTimeRange",
            "label": "Time Range",
            "type": 4,
            "value": {
              "durationMs": 172800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "6f7246d7-6be3-463b-9a60-0e80f7e21644",
            "version": "KqlParameterItem/1.0",
            "name": "WorkloadSID",
            "type": 2,
            "quote": "'",
            "delimiter": ",",
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where isnotempty(SID_s)\r\n| distinct SID_s",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "SID"
          },
          {
            "id": "fc6e4d15-16f3-4ab0-99de-cc5e28322caa",
            "version": "KqlParameterItem/1.0",
            "name": "WorkloadTaskType",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "SapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'\r\n| summarize count() by Task_Type_Name_s\r\n| order by count_\r\n| project Task_Type_Name_s",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "label": "Workload Task Type",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "WorkloadStatistics"
        },
        {
          "parameterName": "param_check_swnc",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Workload Parameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "0bae7899-0eab-4333-ac0b-5e58f045c81e",
                  "cellValue": "selectedWorkloadTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Application Response Time (ST03N)",
                  "subTarget": "ResponseTimeTrends",
                  "preText": "Response Time Trends (ST03N)",
                  "style": "link"
                },
                {
                  "id": "298c34ef-1543-4790-b6be-a31f059e3349",
                  "cellValue": "selectedWorkloadTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Database Latency (ST03N)",
                  "subTarget": "DatabaseLatencyTrends",
                  "style": "link"
                },
                {
                  "id": "0e6e2fda-0029-4342-ab76-2713a34d5861",
                  "cellValue": "selectedWorkloadTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Memory Usage",
                  "subTarget": "MemoryUsage",
                  "style": "link"
                },
                {
                  "id": "1d01383a-4dd4-4f1f-8bbb-c7792e658ad0",
                  "cellValue": "selectedWorkloadTab",
                  "linkTarget": "parameter",
                  "linkLabel": "User Statistics",
                  "subTarget": "UserStatistics",
                  "style": "link"
                }
              ]
            },
            "name": "rfcv1.5WorkloadTab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n|where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n| extend Avg_CPU_Time=Total_CPU_Time_d / Total_Steps_d\r\n| sort by strlen(Task_Type_Name_s) desc\r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_CPU_Time\r\n\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average CPU Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "Average CPU time",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n| extend Avg_Response_Time=Total_Response_Time_d / Total_Steps_d         \r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_Response_Time\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average Response Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Avg_Response_Time"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "Average Response time",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n|where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n|extend Avg_Response_Time=Total_Response_Time_d / Total_Steps_d,\r\n         Avg_CPU_Time=Total_CPU_Time_d / Total_Steps_d,\r\n         Avg_Queue_Time=Total_Queue_Time_d / Total_Steps_d,\r\n         Avg_GUI_Time=Total_GUI_Time_d / Total_Steps_d,\r\n         Avg_DB_Time=Total_DB_Time_d / Total_Steps_d,\r\n         Avg_DB_Proc_Time=Total_DB_Proc_Time_d / Total_Steps_d,\r\n         Avg_RollWait_Time=Total_Roll_Wait_Time_d / Total_Steps_d,\r\n         Avg_Processing_Time=Total_Processing_Time_d / Total_Steps_d\r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_Queue_Time\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average Wait Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Avg_Queue_Time"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        }
                      ],
                      "showDataPoints": true,
                      "xSettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      },
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "AverageWaitTime",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n|where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n| extend Avg_Processing_Time=Total_Processing_Time_d / Total_Steps_d   \r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_Processing_Time\r\n            \r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average Load  Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Avg_Processing_Time"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "AverageLoadTime",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n|where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n|extend Avg_Response_Time=Total_Response_Time_d / Total_Steps_d,\r\n         Avg_CPU_Time=Total_CPU_Time_d / Total_Steps_d,\r\n         Avg_Queue_Time=Total_Queue_Time_d / Total_Steps_d,\r\n         Avg_GUI_Time=Total_GUI_Time_d / Total_Steps_d,\r\n         Avg_DB_Time=Total_DB_Time_d / Total_Steps_d,\r\n         Avg_DB_Proc_Time=Total_DB_Proc_Time_d / Total_Steps_d,\r\n         Avg_RollWait_Time=Total_Roll_Wait_Time_d / Total_Steps_d,\r\n         Avg_Processing_Time=Total_Processing_Time_d / Total_Steps_d\r\n|extend  Avg_GUI_Time_In_MS = bin(totimespan(Avg_GUI_Time)/ time(1ms), 0.001)    \r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_Response_Time, Avg_GUI_Time_In_MS, Avg_GUI_Time\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average GUI Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Avg_GUI_Time_In_MS"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "AverageGUITime",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n|where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n| extend Avg_RollWait_Time=Total_Roll_Wait_Time_d / Total_Steps_d\r\n| project serverTimestamp_t, Task_Type_Name_s, Avg_RollWait_Time\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average Roll Wait Time (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Avg_RollWait_Time"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "AverageRollWaitTime",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_swnc",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedWorkloadTab",
                "comparison": "isEqualTo",
                "value": "ResponseTimeTrends"
              }
            ],
            "name": "ResponeTimeGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'\r\n| where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)\r\n| extend DatabaseCalls =  ST03_Avg_DB_Dir_Time_d + ST03_Avg_DB_Seq_Time_d + ST03_Avg_DB_Change_Time_d   \r\n| project serverTimestamp_t, Task_Type_Name_s, DatabaseCalls",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Database Calls",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "DatabaseCalls"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "DatabaseCalls",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let taskTypeList = dynamic([{WorkloadTaskType}]);\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'|where array_length(taskTypeList) == 0 or Task_Type_Name_s in (taskTypeList)   \r\n| project serverTimestamp_t, Task_Type_Name_s, Total_DB_Time_d",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Average Time/DB Call (in milliseconds)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "tileSettings": {
                      "titleContent": {},
                      "leftContent": {
                        "columnMatch": "Total_DB_Chg_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total_DB_Seq_Read_Time_d",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "orange"
                        }
                      },
                      "showBorder": true
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Total_DB_Time_d"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Total_DB_Chg_Time_d",
                          "label": "Change Time",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Total_DB_Seq_Read_Time_d",
                          "label": "Sequence Read Time",
                          "color": "brown"
                        },
                        {
                          "seriesName": "RFC",
                          "color": "blue"
                        },
                        {
                          "seriesName": "BCKGRD",
                          "color": "lightBlue"
                        },
                        {
                          "seriesName": "DIALOG",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "DINOGUI",
                          "color": "green"
                        },
                        {
                          "seriesName": "AUTOABA",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "0xF9",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "HTTP",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "AUTOTH",
                          "color": "pink"
                        },
                        {
                          "seriesName": "DEL. THCALL",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "SPOOL",
                          "color": "red"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        },
                        {
                          "seriesName": "BUF.SYN",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "DDLOG CLEANUP",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "AUTOCCMS",
                          "color": "purpleDark"
                        },
                        {
                          "seriesName": "BGRFC SCHEDULER",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "UPDATE",
                          "color": "orange"
                        },
                        {
                          "seriesName": "OTHER",
                          "color": "brown"
                        }
                      ],
                      "showDataPoints": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 3
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "Average time per DB call",
                  "styleSettings": {
                    "margin": "1",
                    "padding": "1",
                    "showBorder": true
                  }
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_swnc",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedWorkloadTab",
                "comparison": "isEqualTo",
                "value": "DatabaseLatencyTrends"
              }
            ],
            "name": "DatabaseLatencyGroup "
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_SWNC_Memory_CL\r\n| where serverTimestamp_t  between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'\r\n| extend background_job = split(ENTRY_ID_s, \" \")[-1]\r\n| summarize toint(avg(COUNTER_d)), toint(avg(MEMSUM_d)), toint(max(MAXBYTES_d)), toint(avg(USEDBYTES_d)), toint(avg(PRIVCOUNT_d)), toint(avg(PRIVSUM_d)) by  ENTRY_ID_s, tostring(background_job), RESTCOUNT_d\r\n| project substring(ENTRY_ID_s, 0, strlen(ENTRY_ID_s)-1), background_job, avg_COUNTER_d, avg_MEMSUM_d, avg_USEDBYTES_d, max_MAXBYTES_d, avg_PRIVCOUNT_d, avg_PRIVSUM_d, RESTCOUNT_d\r\n| take 100",
                    "size": 0,
                    "title": "Memory Usage by Transaction (Top 100)",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "avg_COUNTER_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_MEMSUM_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_USEDBYTES_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "max_MAXBYTES_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_PRIVCOUNT_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_PRIVSUM_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "RESTCOUNT_d",
                          "formatter": 1
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "RESTCOUNT_d",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Column1",
                          "label": "Report or Transaction Name"
                        },
                        {
                          "columnId": "background_job",
                          "label": "Background Job"
                        },
                        {
                          "columnId": "avg_COUNTER_d",
                          "label": "Dialog Steps"
                        },
                        {
                          "columnId": "avg_MEMSUM_d",
                          "label": "Avg Memory (KB) "
                        },
                        {
                          "columnId": "avg_USEDBYTES_d",
                          "label": "Avg Extended Memory (KB)"
                        },
                        {
                          "columnId": "max_MAXBYTES_d",
                          "label": "Max Extended Memory (KB)"
                        },
                        {
                          "columnId": "avg_PRIVCOUNT_d",
                          "label": "Work Process Reservations"
                        },
                        {
                          "columnId": "avg_PRIVSUM_d",
                          "label": "Avg Private Memory (KB)"
                        },
                        {
                          "columnId": "RESTCOUNT_d",
                          "label": "Work Process Restarts"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "RESTCOUNT_d",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "showPin": true,
                  "name": "Memory Usage by Transaction"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_SWNC_Memory_CL\r\n| where serverTimestamp_t  between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'\r\n| extend background_job = split(ENTRY_ID_s, \" \")[-1]\r\n| summarize toint(avg(COUNTER_d)), toint(avg(MEMSUM_d)), toint(max(MAXBYTES_d)), toint(avg(USEDBYTES_d)), toint(avg(PRIVCOUNT_d)), toint(avg(PRIVSUM_d)) by  ACCOUNT_s, RESTCOUNT_d\r\n| project ACCOUNT_s, avg_COUNTER_d, avg_MEMSUM_d, avg_USEDBYTES_d, max_MAXBYTES_d, avg_PRIVCOUNT_d, avg_PRIVSUM_d, RESTCOUNT_d\r\n| take 100\r\n",
                    "size": 0,
                    "title": "Memory Usage by User (Top 100)",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "avg_COUNTER_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_MEMSUM_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_USEDBYTES_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "max_MAXBYTES_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_PRIVCOUNT_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_PRIVSUM_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "RESTCOUNT_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "background_job",
                          "formatter": 1
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "ACCOUNT_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "ACCOUNT_s",
                          "label": "Username"
                        },
                        {
                          "columnId": "avg_COUNTER_d",
                          "label": "Dialog Steps"
                        },
                        {
                          "columnId": "avg_MEMSUM_d",
                          "label": "Avg Memory (KB)"
                        },
                        {
                          "columnId": "avg_USEDBYTES_d",
                          "label": "Avg Extended Memory (KB)"
                        },
                        {
                          "columnId": "max_MAXBYTES_d",
                          "label": "Max Extended Memory (KB)"
                        },
                        {
                          "columnId": "avg_PRIVCOUNT_d",
                          "label": "Work Process Reservations"
                        },
                        {
                          "columnId": "avg_PRIVSUM_d",
                          "label": "Avg Private Memory (KB)"
                        },
                        {
                          "columnId": "RESTCOUNT_d",
                          "label": "Work Process Restarts"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ACCOUNT_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "showPin": true,
                  "name": "Memory Usage by User"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedWorkloadTab",
                "comparison": "isEqualTo",
                "value": "MemoryUsage"
              },
              {
                "parameterName": "param_check_swnc_memory",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "MemoryUsageGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_SWNC_User_CL \r\n| where serverTimestamp_t between (todatetime({WorkloadTimeRange:start}) .. todatetime({WorkloadTimeRange:end}))\r\n| where SID_s == '{WorkloadSID}'\r\n| extend response_time = RESPTI_d / COUNT_d\r\n| extend cpu_time = CPUTI_d / COUNT_d\r\n| summarize toint(avg(COUNT_d)), toint(avg(RESPTI_d)), toint(avg(response_time)), toint(avg(CPUTI_d)), toint(avg(cpu_time)) by USERNAME_s",
                    "size": 0,
                    "title": "User Statistics",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "avg_COUNT_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_RESPTI_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_response_time",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_CPUTI_d",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_cpu_time",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "avg_avg_response_time",
                          "formatter": 1
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "USERNAME_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "USERNAME_s",
                          "label": "User in ABAP System"
                        },
                        {
                          "columnId": "avg_COUNT_d",
                          "label": "Number of Dialog Steps"
                        },
                        {
                          "columnId": "avg_RESPTI_d",
                          "label": "Total Response Time (s)"
                        },
                        {
                          "columnId": "avg_response_time",
                          "label": "Avg Response Time by Dialog Steps (ms)"
                        },
                        {
                          "columnId": "avg_CPUTI_d",
                          "label": "Total CPU Time (s)"
                        },
                        {
                          "columnId": "avg_cpu_time",
                          "label": "Avg CPU Time by Dialog Steps (ms)"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "USERNAME_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "UserStatisticsTable"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedWorkloadTab",
                "comparison": "isEqualTo",
                "value": "UserStatistics"
              },
              {
                "parameterName": "param_check_swnc_user",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "UserStatisticsGroup"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 10 minutes.\r\n</div>"
            },
            "name": "SWNCFrequency"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "WorkloadStatistics"
      },
      "name": "WorkloadStatisticsGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.hanaonazure/sapmonitors"
            },
            "conditionalVisibility": {
              "parameterName": "dummy_neverset",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "ApplicationCriteriaParam"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "f7397e19-ab90-4d77-9b60-73310cdbaea1",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Lock Entries (SM12)",
                  "subTarget": "LockEntries",
                  "preText": "Lock Entries",
                  "style": "link"
                },
                {
                  "id": "2d8c4653-be36-4cc0-9cdc-7abe3856b3a5",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Failed Updates (SM13)",
                  "subTarget": "FailedUpdate",
                  "preText": "Failed Updates",
                  "style": "link"
                },
                {
                  "id": "668e9d86-9810-4000-9c17-cc1b44dfaba5",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "System Logs (SM21)",
                  "subTarget": "SysLogs",
                  "preText": "System Logs",
                  "style": "link"
                },
                {
                  "id": "fa15a467-9880-4acf-ad8e-5388907e8834",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Short Dumps (ST22)",
                  "subTarget": "ShortDump",
                  "preText": "Short Dump",
                  "style": "link"
                },
                {
                  "id": "469a981b-8caf-471b-8b04-77a9a89bbb85",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Batch Jobs (SM37)",
                  "subTarget": "BatchJob",
                  "preText": "Batch Job",
                  "style": "link"
                },
                {
                  "id": "d5efd2a8-242b-4c33-9abe-22fd870b7166",
                  "cellValue": "selectedApplicationTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Change And Transport (STMS)",
                  "subTarget": "ChangeAndTransport",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "Application"
            },
            "name": "ApplicationTabSubMenu"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_enqread",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "NoDataWarning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize GTNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize total_locks = count()\r\n| extend Title = \"Total Number Of Lock Entries\"",
                          "size": 4,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "formatter": 2,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "leftContent": {
                              "columnMatch": "total_locks",
                              "formatter": 12,
                              "formatOptions": {
                                "min": 0,
                                "max": 8,
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "size": "full"
                          }
                        },
                        "customWidth": "20",
                        "name": "Lock Requests Count"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize GTNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize object_locks = count() by serverTimestamp_t",
                          "size": 0,
                          "aggregation": 3,
                          "timeBrushParameterName": "time_sm12",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "object_locks"
                            ],
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "object_locks",
                                "label": "Number of Locks",
                                "color": "orange"
                              }
                            ]
                          }
                        },
                        "customWidth": "80",
                        "conditionalVisibility": {
                          "parameterName": "param_check_enqread",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "Lock Entries in SAP"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t {time_sm12}\r\n// This is commented to include the timebrush functionality\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| distinct GTCODE, GNAME_s, GMODE_s, GOBJ_s, GTWP_s, hostname_s, GBCKTYPE, datevalue, timevalue, GUNAME_s",
                          "size": 1,
                          "noDataMessage": "The query returned no result",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Lock Object Type",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "OK",
                                      "representation": "success",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Critical",
                                      "representation": "4",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "2",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Unknown",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "Max",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "ObjectLimit",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                },
                                "tooltipFormat": {
                                  "tooltip": "[\"ObjectLimit\"]"
                                }
                              }
                            ],
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "GTCODE",
                                "label": "T-CODE",
                                "comment": ""
                              },
                              {
                                "columnId": "GNAME_s",
                                "label": "Table Name"
                              },
                              {
                                "columnId": "GMODE_s",
                                "label": "Lock Mode"
                              },
                              {
                                "columnId": "GOBJ_s",
                                "label": "Object Name"
                              },
                              {
                                "columnId": "GTWP_s",
                                "label": "Work  Process Number"
                              },
                              {
                                "columnId": "hostname_s",
                                "label": "Instance Name"
                              },
                              {
                                "columnId": "GBCKTYPE",
                                "label": "Backup Flag"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Time"
                              },
                              {
                                "columnId": "GUNAME_s",
                                "label": "Username"
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "customWidth": "100",
                        "conditionalVisibility": {
                          "parameterName": "param_check_enqread",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "showPin": true,
                        "name": "Lock Entries Table"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_enqread",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubLockedEntriesGroup"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 2 mins.\r\n</div>"
                  },
                  "name": "SM12freq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "LockEntries"
            },
            "name": "lockentriesgroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_failedupdates",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "NoDataWarning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, datevalue, timevalue\r\n| count\r\n| extend Title = \"Number Of Update Request\"",
                          "size": 4,
                          "title": "Administrate Update Records​",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "min": 0,
                                "palette": "greenRed"
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "sortOrderField": 1,
                            "size": "full"
                          }
                        },
                        "customWidth": "20",
                        "name": "FailedUpdateTile"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize total_failed_update  = count() by bin(serverTimestamp_t, timespanInterval)",
                          "size": 0,
                          "aggregation": 5,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "object_locks",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "total_failed_update"
                            ],
                            "group": null,
                            "createOtherGroup": 0,
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "total_failed_update",
                                "label": "Number Of Objects Locked",
                                "color": "orange"
                              },
                              {
                                "color": "red"
                              }
                            ],
                            "showDataPoints": true,
                            "xSettings": {
                              "numberFormatSettings": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            },
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "customWidth": "80",
                        "name": "FailedUpdateChart"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBCLINAME_s, datevalue, timevalue, VBUSR_s, VBKEY_g",
                          "size": 1,
                          "noDataMessage": "The query returned no result",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Lock Object Type",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "OK",
                                      "representation": "success",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Critical",
                                      "representation": "4",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "2",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Unknown",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "Max",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "ObjectLimit",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                },
                                "tooltipFormat": {
                                  "tooltip": "[\"ObjectLimit\"]"
                                }
                              }
                            ],
                            "rowLimit": 200,
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "VBTCODE_s",
                                "label": "T-CODE"
                              },
                              {
                                "columnId": "VBCONTEXT_s",
                                "label": "Update Context"
                              },
                              {
                                "columnId": "VBREPORT_s",
                                "label": "Report"
                              },
                              {
                                "columnId": "VBSTATE_s",
                                "label": "State of Request"
                              },
                              {
                                "columnId": "VBRC_s",
                                "label": "Update Return"
                              },
                              {
                                "columnId": "VBCLIINFO_s",
                                "label": "Info"
                              },
                              {
                                "columnId": "VBCLINAME_s",
                                "label": "Instance Name"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Time"
                              },
                              {
                                "columnId": "VBUSR_s",
                                "label": "Username"
                              },
                              {
                                "columnId": "VBKEY_g",
                                "label": "Key"
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "customWidth": "100",
                        "showPin": true,
                        "name": "FailedUpdateTable"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_failedupdates",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubFailedUpdateGroup"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 2 mins.\r\n</div>"
                  },
                  "name": "SM13freq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "FailedUpdate"
            },
            "name": "failedupdategroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_sdump",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "showPin": false,
                  "name": "NoDataWarning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, Development_Class_s, Application_Componen_s, serverTimestamp_t\r\n| count\r\n| extend Title = \"Total Number Of Short Dumps\"",
                          "size": 4,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {},
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "min": 0,
                                "palette": "greenRed"
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "sortOrderField": 1,
                            "size": "full"
                          }
                        },
                        "customWidth": "20",
                        "conditionalVisibility": {
                          "parameterName": "param_check_sdump",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "Short Dump Count"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n",
                          "size": 0,
                          "aggregation": 5,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "object_locks",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "error_count"
                            ],
                            "group": null,
                            "createOtherGroup": 0,
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "error_count",
                                "label": "Number Of Short Dumps",
                                "color": "orange"
                              },
                              {
                                "color": "red"
                              }
                            ],
                            "showDataPoints": true,
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "customWidth": "80",
                        "conditionalVisibility": {
                          "parameterName": "param_check_sdump",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "Error Logs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Short Dump By Error",
                          "expandable": true,
                          "expanded": true,
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Runtime_Error_s\r\n| extend Runtime_Error_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), Runtime_Error_s",
                                "size": 0,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "barchart",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Runtime_Error_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Error_Short_Text_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Exception_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "SID_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Count",
                                      "formatter": 1
                                    }
                                  ],
                                  "sortBy": [
                                    {
                                      "itemKey": "Runtime_Error_s",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Runtime_Error_s",
                                      "label": "Runtime Exceptions"
                                    },
                                    {
                                      "columnId": "Error_Short_Text_s",
                                      "label": "Exception Text"
                                    },
                                    {
                                      "columnId": "Exception_s",
                                      "label": "Exceptions"
                                    },
                                    {
                                      "columnId": "SID_s",
                                      "label": "Source System"
                                    },
                                    {
                                      "columnId": "Count",
                                      "label": "Exception Count"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Runtime_Error_s",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "name": "shortdumpexceptions"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Runtime_Error_s, Error_Short_Text_s, Exception_s, SID_s\r\n| summarize Count=count() by Runtime_Error_s, Error_Short_Text_s, Exception_s, SID_s\r\n| order by Count",
                                "size": 3,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Runtime_Error_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Error_Short_Text_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Exception_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "SID_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Count",
                                      "formatter": 1
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "Runtime_Error_s",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Runtime_Error_s",
                                      "label": "Runtime Exceptions"
                                    },
                                    {
                                      "columnId": "Error_Short_Text_s",
                                      "label": "Exception Text"
                                    },
                                    {
                                      "columnId": "Exception_s",
                                      "label": "Exceptions"
                                    },
                                    {
                                      "columnId": "SID_s",
                                      "label": "Source System"
                                    },
                                    {
                                      "columnId": "Count",
                                      "label": "Exception Count"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Runtime_Error_s",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "customWidth": "0",
                              "name": "shortdumpexceptionsingrid",
                              "styleSettings": {
                                "maxWidth": "100%"
                              }
                            }
                          ]
                        },
                        "name": "Shortdumpbyerrorgroup"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Short Dump By Program",
                          "expandable": true,
                          "expanded": true,
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s\r\n| extend Program_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), Program_s",
                                "size": 0,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "unstackedbar",
                                "chartSettings": {
                                  "xAxis": "Program_s",
                                  "yAxis": [
                                    "Count"
                                  ],
                                  "showMetrics": false
                                }
                              },
                              "name": "shortdumpbyprogram"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s\r\n| summarize Count=count() by Program_s, SID_s\r\n| order by Count",
                                "size": 3,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Program_s",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "30ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "SID_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Count",
                                      "formatter": 1
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "Count",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Program_s",
                                      "label": "Top Cancelled Programs"
                                    },
                                    {
                                      "columnId": "SID_s",
                                      "label": "Source System"
                                    },
                                    {
                                      "columnId": "Count",
                                      "label": "Cancellation Count​"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Count",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "customWidth": "0",
                              "name": "CancelledProgramQuery",
                              "styleSettings": {
                                "maxWidth": "100%"
                              }
                            }
                          ]
                        },
                        "name": "shortdumpybyproggroup"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Short Dump By User",
                          "expandable": true,
                          "expanded": true,
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s, E2E_USER_s\r\n| extend E2E_USER_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), E2E_USER_s",
                                "size": 0,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "barchart",
                                "chartSettings": {
                                  "xAxis": "E2E_USER_s",
                                  "yAxis": [
                                    "Count"
                                  ],
                                  "showMetrics": false
                                }
                              },
                              "name": "shortdumpbyuser"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s, E2E_USER_s\r\n| summarize Count=count() by E2E_USER_s, SID_s\r\n| sort by Count",
                                "size": 3,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "E2E_USER_s",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Count",
                                      "formatter": 1
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "Count",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "E2E_USER_s",
                                      "label": "User "
                                    },
                                    {
                                      "columnId": "SID_s",
                                      "label": "Source System"
                                    },
                                    {
                                      "columnId": "Count",
                                      "label": "Short Dumps Count"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Count",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "customWidth": "0",
                              "name": "shortdumpbyusers",
                              "styleSettings": {
                                "maxWidth": "100%"
                              }
                            }
                          ]
                        },
                        "name": "shortdumpbyuser"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_sdump",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubShortDumpGroup"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                  },
                  "name": "ST22Freq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "ShortDump"
            },
            "name": "ShortDumpGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_batchjobs",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "No Data Warning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s,STRTDATE_s,STRTTIME_s, JOBNAME_s\r\n| where STATUS_s == 'F' or STATUS_s == 'A' or STATUS_s == 'Z'\r\n| count as TotalCount\r\n| extend Title = \"Number Of Jobs Executed\"",
                          "size": 1,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "TotalCount",
                              "formatter": 12,
                              "formatOptions": {
                                "min": 0,
                                "palette": "green"
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "sortOrderField": 1,
                            "size": "full"
                          }
                        },
                        "customWidth": "20",
                        "name": "batchjobcount"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s,STRTDATE_s,STRTTIME_s, JOBNAME_s,serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize batchjobcount  = count() by bin(serverTimestamp_t, timespanInterval)\r\n\r\n",
                          "size": 0,
                          "aggregation": 5,
                          "title": "Total Number Of Batch Jobs",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "object_locks",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "batchjobcount"
                            ],
                            "group": null,
                            "createOtherGroup": 0,
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "batchjobcount",
                                "label": "Number Of Batch Job",
                                "color": "orange"
                              }
                            ],
                            "showDataPoints": true,
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "customWidth": "80",
                        "name": "BatchJobChart"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| extend startdatetime = todatetime(strcat(STRTDATE_s,STRTTIME_s))\r\n| extend enddatetime = todatetime(strcat(ENDDATE_s,ENDTIME_s))\r\n| extend runtime = enddatetime - startdatetime\r\n| extend min =  runtime / 1s \r\n| summarize totaljob = countif(min > 30)\r\n| extend Title = \"Runtime > 30 Minutes\"",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "leftContent": {
                                    "columnMatch": "totaljob",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "orange"
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Title",
                                    "formatter": 1
                                  },
                                  "showBorder": true,
                                  "sortOrderField": 1,
                                  "size": "full"
                                }
                              },
                              "customWidth": "33",
                              "name": "runtimeofjob",
                              "styleSettings": {
                                "maxWidth": "100"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s,SDLSTRTTM_s))\r\n| extend startdatetime = todatetime(strcat(STRTDATE_s,STRTTIME_s))\r\n| where STATUS_s != 'P' or STATUS_s != 'S' or STATUS_s != 'Y'\r\n| summarize totaljob = countif(startdatetime > planneddatetime)\r\n| extend Title = \"Jobs With Delayed Start\"",
                                "size": 1,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "leftContent": {
                                    "columnMatch": "totaljob",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "orange"
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Title",
                                    "formatter": 1
                                  },
                                  "showBorder": true,
                                  "sortOrderField": 1,
                                  "size": "full"
                                }
                              },
                              "customWidth": "33",
                              "name": "delayedstartjob",
                              "styleSettings": {
                                "maxWidth": "100"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| summarize totaljob = countif(STATUS_s == 'A' or STATUS_s == 'X')\r\n| extend Title = \"Number Of Cancelled Jobs\"",
                                "size": 1,
                                "exportParameterName": "param_status",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "leftContent": {
                                    "columnMatch": "totaljob",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "greenRed"
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Title",
                                    "formatter": 1
                                  },
                                  "showBorder": true,
                                  "sortOrderField": 1,
                                  "size": "full"
                                }
                              },
                              "customWidth": "33",
                              "name": "cancelledjob",
                              "styleSettings": {
                                "margin": "-36px 0px 0px 0px"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend planneddate = format_datetime(planneddatetime,'dd-MM-yy')\r\n| extend plannedtime = format_datetime(planneddatetime,'HH:mm:ss')\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend startdate = format_datetime(planneddatetime,'dd-MM-yy')\r\n| extend starttime = format_datetime(planneddatetime,'HH:mm:ss')\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend enddate = format_datetime(enddatetime,'dd-MM-yy')\r\n| extend endtime = format_datetime(enddatetime,'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')\r\n| extend selValue = case( '{param_status}' contains 'Cancelled', 'A', '')  \r\n| where  STATUS_s == selValue           \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddate, plannedtime, startdate, starttime, enddate, endtime, LASTCHNAME_s",
                                "size": 1,
                                "noDataMessage": "The query returned no result",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Status",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Finished",
                                            "representation": "success",
                                            "text": "{0}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Cancelled",
                                            "representation": "4",
                                            "text": "{0}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "1",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "Lock Object Type",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "Average",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 3
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Max",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "ObjectLimit",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      },
                                      "tooltipFormat": {
                                        "tooltip": "[\"ObjectLimit\"]"
                                      }
                                    }
                                  ],
                                  "rowLimit": 200,
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_thresholds_Status_0",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "JOBNAME_s",
                                      "label": "Job Name"
                                    },
                                    {
                                      "columnId": "JOBCLASS_s",
                                      "label": "Job Class"
                                    },
                                    {
                                      "columnId": "PERIODIC_s",
                                      "label": "Periodic"
                                    },
                                    {
                                      "columnId": "planneddate",
                                      "label": "Planned Date"
                                    },
                                    {
                                      "columnId": "plannedtime",
                                      "label": "Planned Time"
                                    },
                                    {
                                      "columnId": "startdate",
                                      "label": "Start Date"
                                    },
                                    {
                                      "columnId": "starttime",
                                      "label": "Start Time"
                                    },
                                    {
                                      "columnId": "enddate",
                                      "label": "End Date"
                                    },
                                    {
                                      "columnId": "endtime",
                                      "label": "End Time"
                                    },
                                    {
                                      "columnId": "LASTCHNAME_s",
                                      "label": "User Name "
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_thresholds_Status_0",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "param_status",
                                "comparison": "isNotEqualTo"
                              },
                              "showPin": true,
                              "name": "BatchJobTable",
                              "styleSettings": {
                                "margin": "-150px 0px 0px 0px"
                              }
                            }
                          ]
                        },
                        "name": "batchjobtilegroup"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Click on \"Cancelled Job\" tile to see further details.",
                          "style": "info"
                        },
                        "name": "text_clickcancelledjob"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_batchjobs",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubBatchJobGroup"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                  },
                  "name": "SM37Freq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "BatchJob"
            },
            "name": "BatchJobGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_syslogs",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "NoDataWarning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "5f7ce5da-c2d2-4f2b-8144-4c4d55689f0e",
                              "version": "KqlParameterItem/1.0",
                              "name": "SeverityType",
                              "label": "Severity Type",
                              "type": 10,
                              "description": "Select the Serverity of the Error Message",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "jsonData": "[\r\n    { \"value\":\"Error\", \"label\":\"Error\", \"selected\":true },\r\n    { \"value\":\"Warning\", \"label\":\"Warning\" },\r\n    { \"value\":\"Info \", \"label\":\"Info\" }\r\n]"
                            }
                          ],
                          "style": "formHorizontal",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "Sys Log Parameters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, serverTimestamp_t, E2E_USER_s\r\n| count\r\n| extend Title = strcat(\"Total Number Of \",'{SeverityType}',\" Messages\")",
                          "size": 4,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "min": 0,
                                "palette": "greenRed"
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "sortOrderField": 1,
                            "size": "full"
                          }
                        },
                        "customWidth": "20",
                        "name": "SysLogTile"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, serverTimestamp_t, E2E_USER_s\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n\r\n",
                          "size": 0,
                          "aggregation": 5,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "GNAME_s",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "object_locks",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "error_count"
                            ],
                            "group": null,
                            "createOtherGroup": 0,
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "error_count",
                                "label": "Number Of System Error/Warnings",
                                "color": "orange"
                              },
                              {
                                "color": "red"
                              }
                            ],
                            "showDataPoints": true,
                            "ySettings": {
                              "min": 0
                            }
                          }
                        },
                        "customWidth": "75",
                        "name": "SysLogsChart"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| distinct E2E_SEVERITY_s,Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, E2E_HOST_s, datevalue, timevalue, E2E_USER_s",
                          "size": 1,
                          "noDataMessage": "The query returned no result",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Lock Object Type",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "OK",
                                      "representation": "success",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Critical",
                                      "representation": "4",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "2",
                                      "text": "{0}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Unknown",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Average",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "Max",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "ObjectLimit",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                },
                                "tooltipFormat": {
                                  "tooltip": "[\"ObjectLimit\"]"
                                }
                              }
                            ],
                            "rowLimit": 200,
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "E2E_SEVERITY_s",
                                "label": "Severity"
                              },
                              {
                                "columnId": "Problem_Class_s",
                                "label": "Problem Class"
                              },
                              {
                                "columnId": "Application_Comp_s",
                                "label": "Application Component"
                              },
                              {
                                "columnId": "Program_s",
                                "label": "Program Name"
                              },
                              {
                                "columnId": "Msg_area_Msd_Id_s",
                                "label": "Message ID"
                              },
                              {
                                "columnId": "Description_s",
                                "label": "Description"
                              },
                              {
                                "columnId": "E2E_HOST_s",
                                "label": "Instance Name "
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Time"
                              },
                              {
                                "columnId": "E2E_USER_s",
                                "label": "User"
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "customWidth": "100",
                        "showPin": true,
                        "name": "SysLogTable"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_syslogs",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubSysLogsGroup"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                  },
                  "name": "SysLogsFreq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "SysLogs"
            },
            "name": "SysLogsGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_stms",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "No Data Warning"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transports\"",
                          "size": 4,
                          "exportParameterName": "param_status_transport",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "size": "full"
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "param_check_stms",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "NumberOfTransport",
                        "styleSettings": {
                          "margin": "-36px 0px 0px 0px",
                          "padding": "-36px 0px 0px 0px"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where TRFUNCTION_s  == \"K\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Workbench Request\"",
                          "size": 4,
                          "exportParameterName": "param_status_workbench",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "size": "full"
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "param_check_stms",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "NumberOfWorkbenchRequest",
                        "styleSettings": {
                          "margin": "-36px 0px 0px 0px",
                          "padding": "-36px 0px 0px 0px"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where TRFUNCTION_s  == \"W\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Customizing Request\"",
                          "size": 4,
                          "timeContext": {
                            "durationMs": 2592000000
                          },
                          "exportParameterName": "param_status_customize",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "size": "full"
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "param_check_stms",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "NumberOfCustomizingRequest",
                        "styleSettings": {
                          "margin": "-36px 0px 0px 0px",
                          "padding": "-36px 0px 0px 0px"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where TRSTATUS_s  == \"O\" or TRSTATUS_s  == \"R\" or TRSTATUS_s  == \"N\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transport Released\"",
                          "size": 4,
                          "exportParameterName": "param_status_release",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Title",
                              "formatter": 1
                            },
                            "showBorder": true,
                            "size": "full"
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "param_check_stms",
                          "comparison": "isEqualTo",
                          "value": "0"
                        },
                        "name": "NumberOfTransportsReleased",
                        "styleSettings": {
                          "margin": "-36px 0px 0px 0px",
                          "padding": "-36px 0px 0px 0px"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Click on any tile to see further details.",
                          "style": "info"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                          "size": 0,
                          "title": "Transport Requests",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TRKORR_s",
                                "label": "Request Number"
                              },
                              {
                                "columnId": "TARSYSTEM_s",
                                "label": "Target System"
                              },
                              {
                                "columnId": "AS4USER_s",
                                "label": "Request Owner"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Modified Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Modified Time"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_status_transport",
                          "comparison": "isNotEqualTo"
                        },
                        "showPin": true,
                        "name": "Transport Requests"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)'\r\n| where TRFUNCTION_s == \"K\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                          "size": 0,
                          "title": "Workbench Requests",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TRKORR_s",
                                "label": "Request Number"
                              },
                              {
                                "columnId": "TARSYSTEM_s",
                                "label": "Target System"
                              },
                              {
                                "columnId": "AS4USER_s",
                                "label": "Request Owner"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Modified Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Modified Time"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_status_workbench",
                          "comparison": "isNotEqualTo"
                        },
                        "showPin": true,
                        "name": "Workbench Requests"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where TRFUNCTION_s == \"W\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                          "size": 0,
                          "title": "Customizing Requests",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TRKORR_s",
                                "label": "Request Number"
                              },
                              {
                                "columnId": "TARSYSTEM_s",
                                "label": "Target System"
                              },
                              {
                                "columnId": "AS4USER_s",
                                "label": "Request Owner"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Modified Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Modified Time"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_status_customize",
                          "comparison": "isNotEqualTo"
                        },
                        "showPin": true,
                        "name": "Customizing Requests"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n//| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n//| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n//| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n//| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where TRSTATUS_s == \"O\" or TRSTATUS_s == \"R\" or TRSTATUS_s == \"N\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "title": "Transport Released",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "TRKORR_s",
                                "label": "Request Number"
                              },
                              {
                                "columnId": "TARSYSTEM_s",
                                "label": "Target System"
                              },
                              {
                                "columnId": "AS4USER_s",
                                "label": "Request Owner"
                              },
                              {
                                "columnId": "datevalue",
                                "label": "Modified Date"
                              },
                              {
                                "columnId": "timevalue",
                                "label": "Modified Time"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "param_status_release",
                          "comparison": "isNotEqualTo"
                        },
                        "showPin": true,
                        "name": "Transport Released"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_stms",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "SubChangeAndTransport"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 24 hours.\r\n</div>"
                  },
                  "name": "STMSFreq"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedApplicationTab",
              "comparison": "isEqualTo",
              "value": "ChangeAndTransport"
            },
            "name": "ChangeAndTransport"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Application"
      },
      "name": "applicationgroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (EnqGetStatistic) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_enqgetstatistics",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "EnqTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_enqgetstatistics",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "EnqIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "EnqueueStatistics"
        },
        {
          "parameterName": "param_check_enqgetstatistics",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "enqStat_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Enqueue Lock Statistics"
            },
            "name": "enqueuelocktext"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project enqueue_requests_d\r\n| summarize threshold = percentile(enqueue_requests_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project enqueue_requests_d, serverTimestamp_t\r\n| summarize sum(enqueue_requests_d), arg_max(serverTimestamp_t, enqueue_requests_d)\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), (toreal(enqueue_requests_d - threshold) / toreal(threshold) * 100))\r\n| project sum_enqueue_requests_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Number Of Lock Requests\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "sum_enqueue_requests_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Number Of Lock Requests"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project enqueue_rejects_d\r\n| summarize threshold = percentile(enqueue_rejects_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project enqueue_rejects_d, serverTimestamp_t\r\n| summarize sum(enqueue_rejects_d), arg_max(serverTimestamp_t, enqueue_rejects_d)\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(enqueue_rejects_d - threshold) / toreal(threshold) * 100)\r\n| project sum_enqueue_rejects_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Rejected Lock Requests\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "sum_enqueue_rejects_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Rejected Lock Requests"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| summarize TotalErrors = sum(enqueue_errors_d)\r\n| extend Title = \"Enqueue Errors\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "TotalErrors",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Enqueue Errors"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project lock_time_d\r\n| summarize threshold = percentile(lock_time_d, 95)\r\n| project threshold = iff(isnull(threshold), toreal(0), threshold);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project lock_time_d, serverTimestamp_t\r\n| summarize avg(lock_time_d), arg_max(serverTimestamp_t, lock_time_d)\r\n| where isnan(avg_lock_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), (toreal(lock_time_d - threshold) / toreal(threshold) * 100))\r\n| project avg_lock_time_d , percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Time For Lock Operations\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_lock_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Time Taken For Lock Operations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project lock_wait_time_d\r\n| summarize threshold = percentile(lock_wait_time_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project lock_wait_time_d, serverTimestamp_t\r\n| summarize avg(lock_wait_time_d), arg_max(serverTimestamp_t, lock_wait_time_d)\r\n| where isnan(avg_lock_wait_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(lock_wait_time_d - threshold) / toreal(threshold) * 100)\r\n| project avg_lock_wait_time_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Waiting Time Taken For Lock Operations\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_lock_wait_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 24,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Waiting Time Taken For Lock Operations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project server_time_d\r\n| summarize threshold = percentile(server_time_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project server_time_d, serverTimestamp_t\r\n| summarize avg(server_time_d), arg_max(serverTimestamp_t, server_time_d)\r\n| where isnan(avg_server_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(server_time_d - threshold) / toreal(threshold) * 100)\r\n| project avg_server_time_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Time Taken In Enqueue Server\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_server_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Time Taken In Enqueue Server"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet lockQuery = baseQuery\r\n| project locks_now_d, locks_max_d, serverTimestamp_t, arguments_state_s\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(locks_now_d), Max=max(locks_now_d), ObjectLimit=max(locks_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Locks\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet ownerQuery = baseQuery\r\n| project owner_now_d, owner_max_d, arguments_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(owner_now_d), Max=max(owner_now_d), ObjectLimit=max(owner_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Owner\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet argumentQuery = baseQuery\r\n| project owner_now_d, owner_max_d, arguments_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(owner_now_d), Max=max(owner_now_d), ObjectLimit=max(owner_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Arguments\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet replicationStateQuery = baseQuery\r\n| project replication_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, replication_state_s)\r\n| project arguments_state_s = replication_state_s\r\n| where isempty(arguments_state_s) != 1\r\n| extend ['Lock Object Type'] = 'Replication State';\r\nlockQuery\r\n| union ownerQuery\r\n| union argumentQuery\r\n| union replicationStateQuery\r\n| extend Status = iff(arguments_state_s == 'SAPControl-GREEN', \"OK\", \"\")\r\n| extend Status = iff(arguments_state_s == 'SAPControl-RED', \"Critical\", Status)\r\n| extend Status = iff(isempty(Status), \"Warning\", Status)\r\n| project ['Lock Object Type'], Status, Average, Max, ObjectLimit\r\n| project-reorder ['Lock Object Type'], Status, Average, Max, ObjectLimit",
              "size": 1,
              "noDataMessage": "The query returned no result",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Lock Object Type",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "OK",
                          "representation": "success",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "4",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Average",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 3
                      }
                    }
                  },
                  {
                    "columnMatch": "Max",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ObjectLimit",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"ObjectLimit\"]"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "Lock Object Type",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Average",
                    "label": "Average Number Of Objects"
                  },
                  {
                    "columnId": "Max",
                    "label": "Max Number Of Objects"
                  },
                  {
                    "columnId": "ObjectLimit",
                    "label": "Object Limit"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Lock Object Type",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "100",
            "name": "Enqueue Lock Statistics Status"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project locks_now_d\r\n| summarize Threshold=percentile(locks_now_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| extend dummy=1\r\n| join kind=inner (thresholdQuery | extend dummy=1) on dummy\r\n| project locks_now_d, Threshold,serverTimestamp_t",
              "size": 0,
              "aggregation": 3,
              "title": "Enqueue Locks",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "locks_now_d",
                  "Threshold"
                ],
                "seriesLabelSettings": [
                  {
                    "seriesName": "locks_now_d",
                    "label": "Number of Locks"
                  },
                  {
                    "seriesName": "locks_high_d",
                    "label": "Max Locks"
                  }
                ]
              }
            },
            "name": "Enqueue Locks Trend"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
            },
            "name": "EnqueueLockFreq"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "EnqueueStatistics"
        },
        {
          "parameterName": "param_check_enqgetstatistics",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "enqueueStatistics"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (GetQueueStatistics) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_queuestatistics",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "QueueStatTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_queuestatistics",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "QueueStatIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "QueueStatistics"
        },
        {
          "parameterName": "param_check_queuestatistics",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "queuestat_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "c2ba4b07-8261-470b-9465-95475f448439",
                  "cellValue": "selectedQueueTab",
                  "linkTarget": "parameter",
                  "linkLabel": "WorkProcess Queue",
                  "subTarget": "WorkProcess Queue",
                  "preText": "Lock Entries",
                  "style": "link"
                },
                {
                  "id": "c5c426d2-384c-4db4-b072-1c3ce739b950",
                  "cellValue": "selectedQueueTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Inbound/Outbound(SMQ1/SMQ2)",
                  "subTarget": "Inbound/Outbound(SMQ1/SMQ2)",
                  "preText": "Failed Updates",
                  "style": "link"
                },
                {
                  "id": "17c854e4-34fd-4b4e-a1f2-ed994f201962",
                  "cellValue": "selectedQueueTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Transactional RFC (SM58)",
                  "subTarget": "Transactional RFC (SM58)",
                  "preText": "System Logs",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "QueueStatistics"
              },
              {
                "parameterName": "param_check_rfc_metrics",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "queueStatisticsTab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet MaxQuery = baseQuery\r\n| summarize QueueLimit=max(Max_d) by Typ_s;\r\nlet CurrentStatusQuery = baseQuery\r\n| summarize CurrentStatus = arg_max(serverTimestamp_t, Now_d) by Typ_s;\r\nlet PerQueueTypeQuery = baseQuery\r\n| summarize  PerQueueLimit = max(Max_d) / 7  by Typ_s;\r\nbaseQuery\r\n| summarize AvgRequests = avg(Now_d), MaxRequests = max(Now_d), ReadRequest = sum(Reads_d), WriteRequest = sum(Writes_d) by Typ_s\r\n| join kind=inner MaxQuery on Typ_s\r\n| join kind=inner CurrentStatusQuery on Typ_s\r\n| join kind=inner PerQueueTypeQuery on Typ_s\r\n| extend QueueUtilization = iff(QueueLimit != 0, (toreal(Now_d) / toreal(QueueLimit/7)) * 100, 0.0)\r\n| extend Status = iff(QueueUtilization <= 5, \"OK\", \"\")\r\n| extend Status = iff(QueueUtilization > 5 and QueueUtilization <= 15 , \"Warning\", Status)\r\n| extend Status = iff(QueueUtilization > 15, \"Critical\", Status)\r\n| extend FreeQueuePercent = round(((PerQueueLimit - AvgRequests)/PerQueueLimit) * 100,3)\r\n| project Typ_s, Status, FreeQueuePercent, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest\r\n| project-reorder Typ_s, Status, FreeQueuePercent, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest",
                    "size": 0,
                    "title": "Queue Statistics Summary",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "OK",
                                "representation": "success",
                                "text": "{0}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{0}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FreeQueuePercent",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "AvgRequests",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxRequests",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "QueueLimit",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "WriteRequest",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"WriteRequest\"]"
                          }
                        },
                        {
                          "columnMatch": "ReadRequest",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"ReadRequest\"]"
                          }
                        },
                        {
                          "columnMatch": "MaxQueue",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "percent",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Typ_s",
                          "label": "Queue"
                        },
                        {
                          "columnId": "FreeQueuePercent",
                          "label": "Free Queue Percentage"
                        },
                        {
                          "columnId": "AvgRequests",
                          "label": "Average Number Of Requests In Queue"
                        },
                        {
                          "columnId": "MaxRequests",
                          "label": "Max Number Of Requests In Queue"
                        },
                        {
                          "columnId": "QueueLimit",
                          "label": "Dispatcher Max Queue"
                        },
                        {
                          "columnId": "WriteRequest",
                          "label": "Number Of Requests Written"
                        },
                        {
                          "columnId": "ReadRequest",
                          "label": "Number Of Requests Read"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "100",
                  "name": "DetailedQueueSummary",
                  "styleSettings": {
                    "maxWidth": "100%"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "ebeb7d85-8c21-4534-8135-b05732fab7b5",
                        "version": "KqlParameterItem/1.0",
                        "name": "QueueType",
                        "label": "Queue Type",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Typ_s;",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "QueueType"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet queueList = dynamic([{QueueType}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where array_length(queueList) == 0 or Typ_s in (queueList)\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Now_d;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Request=sum(Now_d) by bin(serverTimestamp_t, timespanInterval), Typ_s",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Queue Length Trend Graph",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Request"
                      ],
                      "xSettings": {
                        "numberFormatSettings": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false
                          }
                        }
                      },
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "name": "QueueLengthTrend"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
                  },
                  "name": "QueueStatFreq"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "WorkProcess Queue"
              },
              {
                "parameterName": "param_check_queuestatistics",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "queuestatisticsgroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Queued Remote Function (SMQ1/SMQ2)",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_InboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| distinct QNAME_s\r\n| summarize inbound_queues = count()\r\n| extend Title = \"Total Inbound Queue\"",
                    "size": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 2,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "inbound_queues",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 8,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "param_check_inbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Total Inbound Queue "
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_InboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend DEST = columnifexists(\"DEST_s\",\"\") \r\n| summarize QD = max(QDEEP_d) by QNAME_s, DEST\r\n| summarize inbound_items = sum(QD)\r\n| extend Title = \"Total Inbound Queue Items\"",
                    "size": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 2,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "inbound_items",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 8,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "param_check_inbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Total Inbound Queue Items"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_OutboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| distinct QNAME_s\r\n| summarize outbound_queues = count()\r\n| extend Title = \"Total Outbound Queue\"",
                    "size": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 2,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "outbound_queues",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 8,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "param_check_outbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Total Inbound Queue Items - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_OutboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| summarize QD = max(QDEEP_d) by QNAME_s, DEST_s\r\n| summarize outbound_items = sum(QD)\r\n| extend Title = \"Total Outbound Queue Items\"",
                    "size": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 2,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "outbound_items",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 8,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "param_check_outbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Total Inbound Queue Items - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_InboundQueues_CL\r\n| union SapNetweaver_OutboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| distinct  QNAME_s, Type, serverTimestamp_t\r\n| summarize total_queue  = count() by QNAME_s, Type, serverTimestamp_t\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "total_queue"
                      ],
                      "group": "Type",
                      "createOtherGroup": null,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "SapNetweaver_OutboundQueues_CL",
                          "label": "Outbound Queues"
                        },
                        {
                          "seriesName": "SapNetweaver_InboundQueues_CL",
                          "label": "Inbound Queues"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_inbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Queued Remote Function"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_OutboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| summarize QD = max(QDEEP_d) by QNAME_s, DEST_s\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Outbound Queues",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "QNAME_s",
                          "label": "Queue Name"
                        },
                        {
                          "columnId": "DEST_s",
                          "label": "Destination"
                        },
                        {
                          "columnId": "QD",
                          "label": "Number of Items"
                        }
                      ]
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "queue_items"
                      ],
                      "group": "Type",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "SapNetweaver_OutboundQueues_CL",
                          "label": "Outbound Queues"
                        },
                        {
                          "seriesName": "SapNetweaver_InboundQueues_CL",
                          "label": "Inbound Queues"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "param_check_inbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Outbound Queues"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_InboundQueues_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend DEST = columnifexists(\"DEST_s\",\"\") \r\n| summarize QD = max(QDEEP_d) by QNAME_s, DEST\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Inbound Queues",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "QNAME_s",
                          "label": "Queue Name"
                        },
                        {
                          "columnId": "DEST",
                          "label": "Destination"
                        },
                        {
                          "columnId": "QD",
                          "label": "Number of Items"
                        }
                      ]
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "queue_items"
                      ],
                      "group": "Type",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "SapNetweaver_OutboundQueues_CL",
                          "label": "Outbound Queues"
                        },
                        {
                          "seriesName": "SapNetweaver_InboundQueues_CL",
                          "label": "Inbound Queues"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "param_check_inbound_queue",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Inbound Queues"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\nUpdated every 2 minutes.\r\n</div>"
                  },
                  "name": "SMQ1Freq"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "Inbound/Outbound(SMQ1/SMQ2)"
              },
              {
                "parameterName": "param_check_inbound_queue",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_outbound_queue",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "QueuedRemoteFunctionGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Average queue length",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_TransactionalRfc_CL\r\n| where serverTimestamp_t  between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| distinct ARFCDEST_s \r\n| summarize averge_Queue = count()\r\n| extend Title = \"Average Queue Items\"\r\n",
                    "size": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 2,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "averge_Queue",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 8,
                          "palette": "greenRed"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "20",
                  "name": "Average Queue "
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_TransactionalRfc_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct ARFCDEST_s, serverTimestamp_t\r\n| summarize total_queue  = count() by ARFCDEST_s, serverTimestamp_t\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "total_queue"
                      ],
                      "group": null,
                      "createOtherGroup": 0,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "total_queue",
                          "label": "# of Queue Item",
                          "color": "blue"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "75",
                  "conditionalVisibility": {
                    "parameterName": "param_check_transactionalRfc",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Transaction RFC"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_TransactionalRfc_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend datetimecol = todatetime(strcat(ARFCDATUM_s, ARFCUZEIT_s))\r\n| extend AS4date = format_datetime(datetimecol,'dd-MM-yy')\r\n| extend AS4time = format_datetime(datetimecol,'HH:mm:ss')\r\n| distinct ARFCUSER_s,ARFCFNAM_s,ARFCDEST_s,AS4date,AS4time,ARFCSTATE_s,ARFCPID_s,ARFCTCODE_s,ARFCMSG_s\r\n\r\n",
                    "size": 0,
                    "aggregation": 5,
                    "title": "Target System",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ARFCUSER_s",
                          "formatter": 1
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "ARFCUSER_s",
                          "label": "Caller"
                        },
                        {
                          "columnId": "ARFCFNAM_s",
                          "label": "Function Module"
                        },
                        {
                          "columnId": "ARFCDEST_s",
                          "label": "Target System"
                        },
                        {
                          "columnId": "AS4date",
                          "label": "Date"
                        },
                        {
                          "columnId": "AS4time",
                          "label": "Time"
                        },
                        {
                          "columnId": "ARFCSTATE_s",
                          "label": "Status"
                        },
                        {
                          "columnId": "ARFCPID_s",
                          "label": "Transaction ID"
                        },
                        {
                          "columnId": "ARFCTCODE_s",
                          "label": "Transaction Code"
                        },
                        {
                          "columnId": "ARFCMSG_s",
                          "label": "Message"
                        }
                      ]
                    },
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "queue_items"
                      ],
                      "group": "Type",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "SapNetweaver_OutboundQueues_CL",
                          "label": "Outbound Queues"
                        },
                        {
                          "seriesName": "SapNetweaver_InboundQueues_CL",
                          "label": "Inbound Queues"
                        }
                      ],
                      "ySettings": {
                        "min": 0
                      }
                    }
                  },
                  "customWidth": "100",
                  "name": "TransactionRFCGRid"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_transactionalRfc",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "Transactional RFC (SM58)"
              }
            ],
            "name": "transactionalrfc"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_queuestatistics",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "WorkProcess Queue"
              }
            ],
            "name": "queuestatistics_error"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "Inbound/Outbound(SMQ1/SMQ2)"
              },
              {
                "parameterName": "param_check_inbound_queue",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_outbound_queue",
                "comparison": "isNotEqualTo",
                "value": "0"
              }
            ],
            "name": "inboundoutbound_error_group"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_transactionalRfc",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedQueueTab",
                "comparison": "isEqualTo",
                "value": "Transactional RFC (SM58)"
              }
            ],
            "name": "trfc_error_group"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nUpdated every 24 hours.\r\n</div>"
            },
            "conditionalVisibility": {
              "parameterName": "selectedQueueTab",
              "comparison": "isEqualTo",
              "value": "Transactional RFC (SM58)"
            },
            "name": "TRFCFreq"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "QueueStatistics"
        },
        {
          "parameterName": "param_check_queuestatistics",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Queue Statistics Group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}