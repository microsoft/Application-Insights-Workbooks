{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2c886879-e271-4da3-801c-c932bc075074",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_table_exists",
            "type": 1,
            "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"SID_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL');\r\nlet enqueue = checktable('SapNetweaver_EnqGetStatistic_CL');\r\nlet queue = checktable('SapNetweaver_GetQueueStatistic_CL');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL');\r\nlet abap = checktable('SapNetweaver_ABAPGetWPTable_CL');\r\n//aiops tables\r\nlet hostmapping = checktable('SapNetweaver_SAP_Host_AzRId_Mapping_CL');\r\nlet rhevents = checktable('AIOps_GetRHEvents_CL');\r\n\r\nlet T = datatable(tablename:string, id:string)\r\n[\r\n'SapNetweaver_GetSystemInstanceList_CL', '',\r\n];\r\nT\r\n|project tablename\r\n| extend new_col = strcat('SapNetweaver_GetSystemInstanceList_CL:',system,', SapNetweaver_GetQueueStatistic_CL:',queue,\r\n',SapNetweaver_EnqGetStatistic_CL:',enqueue,\r\n',SapNetweaver_GetProcessList_CL:',process,\r\n',SapNetweaver_ABAPGetWPTable_CL:',abap,\r\n',SapNetweaver_SAP_Host_AzRId_Mapping_CL:',hostmapping,\r\n',AIOps_GetRHEvents_CL:',rhevents)\r\n|project-away tablename",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "aa8ab18f-5d36-4f34-8a54-f0f2e25ecbb8",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_error",
            "type": 1,
            "query": "// 0 = no error\n// 1 = table does not exist (need to add provider)\n// 2 = table exists, but column v1 does not (need to wait)\nlet t = \"SapNetweaver_GetSystemInstanceList_CL\";\nlet tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "225baab0-e4ce-4a45-92de-ddda00795a2d",
            "version": "KqlParameterItem/1.0",
            "name": "param_ams_resource",
            "type": 5,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "92bd4772-a480-4a10-a48d-fecfd54bb22f",
            "version": "KqlParameterItem/1.0",
            "name": "param_providers_list",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{param_ams_resource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-12-01-preview\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
            "queryType": 12
          },
          {
            "id": "a00ff9e0-9235-4aa2-b617-933d7977bdb6",
            "version": "KqlParameterItem/1.0",
            "name": "param_provider_type",
            "type": 1,
            "value": "SapNetWeaver",
            "isHiddenWhenLocked": true
          },
          {
            "id": "979c1ab9-90e4-4b19-9c58-7c1f96c38754",
            "version": "KqlParameterItem/1.0",
            "name": "param_alert_templates",
            "type": 1,
            "value": "[\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver System Availability\",\r\n        \"description\": \"Fired when SAP NetWeaver Message Server is not available or all servers are not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-system-availability\",\r\n        \"severity\": \"1\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"let TotalInstanceAvailability = SapNetweaver_GetSystemInstanceList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | summarize available=countif(Status == 1), total=count() by PROVIDER_INSTANCE_s, serverTimestamp_t;TotalInstanceAvailability | join kind = leftouter SapNetweaver_GetSystemInstanceList_CL on $left.PROVIDER_INSTANCE_s == $right.PROVIDER_INSTANCE_s and $left.serverTimestamp_t == $right.serverTimestamp_t | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | extend ServiceStatus = iff(available == 0, 0, iff(features_s contains 'MESSAGESERVER' and Status == 0, 0, 1)), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(ServiceStatus) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, serverTimestamp_t, features_s | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Availability\",\r\n        \"description\": \"Fired when SAP Netweaver ABAP, J2EE, JEE instances are not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-availability\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"let TotalInstanceAvailability = SapNetweaver_GetSystemInstanceList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0) | summarize available=countif(Status == 1), total=count() by PROVIDER_INSTANCE_s, serverTimestamp_t; TotalInstanceAvailability | join kind = leftouter SapNetweaver_GetSystemInstanceList_CL on $left.PROVIDER_INSTANCE_s == $right.PROVIDER_INSTANCE_s and $left.serverTimestamp_t == $right.serverTimestamp_t | where features_s contains 'J2EE' or features_s contains 'JEE' or features_s contains 'ABAP' | extend InstanceStatus = iff(available != 0 and dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(InstanceStatus) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, serverTimestamp_t, features_s | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver EnqueueServer Availability\",\r\n        \"description\": \"Fired when SAP Netweaver EnqueueServer is not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-server\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetProcessList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and description_s contains 'EnqueueServer' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(Status) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, description_s, serverTimestamp_t | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver EnqueueReplicationServer Availability\",\r\n        \"description\": \"Fired when SAP Netweaver EnqueueReplicationServer is not available.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-enqueue-replicator-server\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetProcessList_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' and description_s contains 'EnqueueReplicator' | extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 1, 0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = min(Status) by bin(TimeGenerated, 1m), PROVIDER_INSTANCE_s, AppServer, dispstatus_s, description_s, serverTimestamp_t | where AggregatedValue == 0\",\r\n            \"thresholdOperator\": \"LessThan\",\r\n            \"defaultThreshold\": \"1\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"1\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"PROVIDER_INSTANCE_s\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Work Process Utilization\",\r\n        \"description\": \"Fired when SAP Netweaver Instance with DIA or BTC Usage breaches specified threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-work-process-utilization\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_ABAPGetWPTable_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Typ_s has '{Aggregate}' | summarize totalWP = count(), freeWP = countif(Status_s == 'Wait') by TimeGenerated, Typ_s, serverTimestamp_t, AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | extend UtilizationPctWP = round(toreal(totalWP - freeWP) / toreal(totalWP) * 100, 3) | summarize AggregatedValue = max(UtilizationPctWP) by bin(TimeGenerated, 1m), AppServer, Typ_s, serverTimestamp_t | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"WorkType\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_ABAPGetWPTable_CL | where Typ_s has 'DIA' or Typ_s has 'BTC' | distinct Typ_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"70\",\r\n            \"alertUnit\": \"percent\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"AppServer\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"[SOAP] SAP Netweaver Instance Queue Wait\",\r\n        \"description\": \"Fired when SAP Netweaver Instance with DIA or BTC Queue Wait breaches specified threshold.\",\r\n        \"author\": \"Microsoft\",\r\n        \"templateId\": \"sapnetweaver-instance-queue-wait\",\r\n        \"severity\": \"2\",\r\n        \"alertTemplate\": {\r\n            \"query\": \"SapNetweaver_GetQueueStatistic_CL | where PROVIDER_INSTANCE_s == '{ProviderInstance}' | where Typ_s has '{Aggregate}' | summarize QueueLimit=max(Max_d)/7 by hostname_s, instanceNr_d, Typ_s, serverTimestamp_t, Now_d, TimeGenerated | extend QueueWaitPct = iff(QueueLimit != 0, (toreal(Now_d) / toreal(QueueLimit)) * 100, 0.0), AppServer = strcat(hostname_s, '_', tostring(toint(instanceNr_d))) | summarize AggregatedValue = max(QueueWaitPct) by bin(TimeGenerated, 1m), AppServer, Typ_s, serverTimestamp_t | where AggregatedValue > {AlertThreshold}\",\r\n            \"aggregateName\": \"WorkType\",\r\n            \"aggregateDropDownQuery\": \"SapNetweaver_GetQueueStatistic_CL | where Typ_s has 'DIA' or Typ_s has 'BTC' | distinct Typ_s\",\r\n            \"thresholdOperator\": \"GreaterThan\",\r\n            \"defaultThreshold\": \"5\",\r\n            \"alertUnit\": \"percent\",\r\n            \"metricMeasurement\": {\r\n                \"thresholdOperator\": \"GreaterThan\",\r\n                \"threshold\": \"2\",\r\n                \"metricTriggerType\": \"Consecutive\",\r\n                \"metricColumn\": \"AppServer\",\r\n                \"frequencyInMinutes\": \"5\",\r\n                \"timeWindowInMinutes\": \"10\"\r\n            }\r\n        }\r\n    }\r\n]",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "text",
              "multiLineHeight": 10
            }
          },
          {
            "id": "e856ad78-557b-4ba1-898e-81ad94d86abb",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_aiops",
            "type": 1,
            "description": "Parameter to check if AIOps is enabled",
            "query": "let tableList = '{param_check_table_exists}';\r\nlet tableListValue = iff (((tableList) contains 'AIOps_GetRHEvents_CL:0') or \r\n                           ((tableList) contains 'SapNetweaver_SAP_Host_AzRId_Mapping_CL:0'), \"0\", \"1\");\r\nprint toscalar(tableListValue)",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "750a19d9-5cf6-49bc-902f-c40e3d8411d1",
            "version": "KqlParameterItem/1.0",
            "name": "param_availability_timerange",
            "type": 4,
            "value": {
              "durationMs": 1800000
            },
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                }
              ],
              "allowCustom": false
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "overview_section_params"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Please add the SAP NetWeaver provider to view this workbook.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "NoProviderError"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "09b7cbce-8782-46bf-b1af-02ebf80071b1",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_check_provider_error",
                  "type": 1,
                  "query": "print allProviders=parse_json(tostring(\"{param_providers_list:escapejson}\")).value\r\n| mv-expand allProviders\r\n| extend type = parse_json(allProviders.properties).providerSettings.providerType\r\n| extend state = parse_json(allProviders.properties).provisioningState\r\n| where type == \"SapNetWeaver\"\r\n| where state != \"Failed\"\r\n| summarize iff(count() > 0,count(), -1)",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.workloads/monitors"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.workloads/monitors"
            },
            "name": "ProviderParameter"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "IngestionError"
          },
          {
            "type": 1,
            "content": {
              "json": "There was an error while adding the SAP NetWeaver provider. Please reach out to support for further assistance.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_error",
                "comparison": "isEqualTo",
                "value": "0"
              },
              {
                "parameterName": "param_check_provider_error",
                "comparison": "isEqualTo",
                "value": "-1"
              }
            ],
            "name": "ProviderFailure"
          }
        ]
      },
      "name": "overview_group_error"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1f9002cb-36a6-4dff-8ade-a86b9394a3ff",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_queuestatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:2'),\"2\",\"3\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "2b9aff63-5047-4c0f-bd8b-612790daf309",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_enqgetstatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a134306b-a79f-4df5-ba11-940c1f56d836",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_abapwp",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "87833d8d-b023-4ccc-95af-8ab1d11223f7",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_systeminstancelist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "c5b1e8a0-0321-4058-9f9f-73c24177e5d4",
            "version": "KqlParameterItem/1.0",
            "name": "pram_check_processlist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetProcessList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetProcessList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetProcessList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "dcc370fd-8366-4fbd-859c-0170ca1b8687",
            "version": "KqlParameterItem/1.0",
            "name": "time_stamp_status_update",
            "type": 1,
            "query": "let extractColumn = dynamic('UTC Timestamp');\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| summarize ['UTC Timestamp'] = max(timestamp_t)\r\n| project properties = pack_all()\r\n| mv-apply name = extractColumn to typeof(string) on \r\n(\r\n    project name, value=properties[name]\r\n)\r\n| extend time_stamp = format_datetime(todatetime(value), \"dd-MM-yyyy HH:mm:ss\")\r\n| project time_stamp",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "GlobalParameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "810c5c3b-c12c-4ecc-a875-a7135a34af90",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "2fcffdc4-ba32-4d94-82c9-69b0e90a3f04",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Availability",
            "subTarget": "Availability",
            "style": "link"
          },
          {
            "id": "bd309ce8-c389-493f-961f-6fc4cfd718dd",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Performance",
            "subTarget": "Performance",
            "style": "link"
          },
          {
            "id": "e844d4f7-2017-4360-824f-4ac26e8a941d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Enqueue Statistics",
            "subTarget": "EnqueueStatistics",
            "style": "link"
          },
          {
            "id": "718a2865-1736-41f9-91fe-b0084ecd795d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Queue Statistics",
            "subTarget": "QueueStatistics",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        }
      ],
      "customWidth": "90",
      "name": "Main Navigation Links"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "2d20d63e-d352-46e8-bcb0-9ca9ce897996",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Alerts",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/SapMonitor2.0/Alerts/Alerts",
              "typeSource": "workbook",
              "gallerySource": "workbook",
              "locationSource": "default",
              "passSpecificParams": true,
              "templateParameters": [
                {
                  "name": "ProviderType",
                  "source": "parameter",
                  "value": "param_provider_type"
                },
                {
                  "name": "AlertTemplates",
                  "source": "parameter",
                  "value": "param_alert_templates"
                }
              ]
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        }
      ],
      "customWidth": "10",
      "name": "Alert Button Step",
      "styleSettings": {
        "margin": "10px 0px 0px 0px",
        "padding": "10px 0px 0px 0px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ccee9c3e-3680-4f30-91f7-b53705ab19cf",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 1800000
            }
          },
          {
            "id": "c3a0f233-017a-4db7-accf-771525491be4",
            "version": "KqlParameterItem/1.0",
            "name": "SID",
            "type": 2,
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where isnotempty(SID_s)\r\n| distinct SID_s",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "71edfc3a-35c4-4aa0-ae7b-1756cee46705",
            "version": "KqlParameterItem/1.0",
            "name": "ApplicationServer",
            "label": "Application Server",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where SID_s == '{SID}'\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "conditionalVisibility": {
        "parameterName": "selectedMenu",
        "comparison": "isNotEqualTo",
        "value": "Overview"
      },
      "name": "MasterParameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8a4e9bf3-dee6-48d5-9fc2-32f5381fc940",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "value": {
                    "durationMs": 604800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.workloads/monitors"
            },
            "conditionalVisibility": {
              "parameterName": "selectedMenu",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "OverviewTimeRangeParam"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//base query to set the status\r\nlet baseQuery = SapNetweaver_GetSystemInstanceList_CL    \r\n    | where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n    | extend instanceNr_s = tostring(toint(instanceNr_d))\r\n    | extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat(\"0\", instanceNr_s))    \r\n    | project instanceNr_d, hostname_s, serverTimestamp_t, features_s, dispstatus_s, SID_s\r\n    | extend Status = case(dispstatus_s == 'SAPControl-GREEN', \"Available\", \r\n        dispstatus_s == 'SAPControl-RED', \"Error\", \r\n        dispstatus_s == 'SAPControl-GRAY', \"Offline\",\r\n        dispstatus_s == 'SAPControl-YELLOW', \"Not Functional\",\r\n        \"\")\r\n    | extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\");\r\n//get the status from the ASCS = MESSAGESERVER + ENQUE\r\nlet ascsStatusRank = baseQuery\r\n    | where features_s == \"MESSAGESERVER|ENQUE\"\r\n    | extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 3, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 1,\r\n        dispstatus_s == 'SAPControl-YELLOW', 2, 0);   \r\nlet ascsStatus = ascsStatusRank\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n//variable to check if ASCS is Offline\r\nlet checkASCSStatus = toscalar(ascsStatus | project Status);\r\n// If ASCS is offline, do not check the app servers and return Offline as status\r\n// Otherwise check return offline if all the app server are offline otherwise return Green if any one of them is available\r\nlet appserverRank = baseQuery\r\n    | where features_s != \"MESSAGESERVER|ENQUE\"\r\n    | where checkASCSStatus != \"Offline\"\r\n    | extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 2, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 3,\r\n        dispstatus_s == 'SAPControl-YELLOW', 1, 0);    \r\nlet appserverStatus = appserverRank\r\n| where checkASCSStatus != \"Offline\"\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n// Check the status of ASCS and application server to show the final result\r\nlet finalRank = ascsStatus \r\n| union appserverStatus\r\n| extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 3, \r\n        dispstatus_s == 'SAPControl-RED', 0, \r\n        dispstatus_s == 'SAPControl-GRAY', 1,\r\n        dispstatus_s == 'SAPControl-YELLOW', 2, 0)\r\n| sort by Rank asc\r\n| serialize;\r\nfinalRank\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status \r\n| summarize arg_max(serverTimestamp_t, *) by SID_s;\r\n\r\n",
                    "size": 0,
                    "title": "Availability Status by SID",
                    "exportFieldName": "SID_s",
                    "exportParameterName": "selectedSID",
                    "exportDefaultValue": "*",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "nodeIdField": "SID_s",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 70,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Available",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Functional",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Error",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Offline",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "name": "Availability Status by SID",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"float: right\">\r\n<table>\r\n  <tr>\r\n    <td style=\"background-color:rgb(127, 186, 0)\"> <div style= \"color:white\">Available</div></td>\r\n    <td style=\"background-color:rgb(252, 209, 22)\"><div style= \"color:white\">Not Functional</div></td>\r\n    <td style=\"background-color:rgb(174, 13, 26)\"><div style= \"color:white\"> Error</div></td>\r\n    <td style=\"background-color:rgb(163, 166, 186)\"><div style= \"color:white\">Offline</div></td>\r\n    <td style=\"background-color:rgb(99, 137, 157)\"><div style= \"color:white\">Status Updated 5 minutes earlier</div></td>\r\n</tr>\r\n</table>\r\n</div>"
                  },
                  "name": "Legend"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(30m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| project-away hostname_s, instanceNr_d\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize availability=countif(Status == 0), total=count() by SID_s, timestamp_t\r\n| extend availabilityPct = round(toreal(availability) / toreal(total) * 100, 3)\r\n| summarize availability=sum(availability), total=sum(total), availabilityTrend=make_list(availabilityPct) by SID_s\r\n| extend availability = round(toreal(availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 3,
                    "title": "Availability Trend (Last 30 Minutes)",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "aggregation": "Unique",
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"availability\"]"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SID_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "availability",
                          "label": "Availability Over 30 Minutes"
                        },
                        {
                          "columnId": "availabilityTrend",
                          "label": "Trend"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SID_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_aiops",
                    "comparison": "isNotEqualTo",
                    "value": "0"
                  },
                  "name": "Availability Percentage by SID - 30 minutes"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| project-away hostname_s, instanceNr_d\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize availability=countif(Status == 0), total=count() by SID_s, timestamp_t\r\n| extend availabilityPct = round(toreal(availability) / toreal(total) * 100, 3)\r\n| summarize availability=sum(availability), total=sum(total), availabilityTrend=make_list(availabilityPct) by SID_s\r\n| extend availability = round(toreal(availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 3,
                    "title": "Availability Trend (Last 15 Minutes)",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "aggregation": "Unique",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "SID_s",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "availability",
                          "label": "Availability Over 15 Minutes"
                        },
                        {
                          "columnId": "availabilityTrend",
                          "label": "Trend"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "SID_s",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_aiops",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "Availability Percentage by SID - 15 minutes - AIOps"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 )\r\n| summarize Availability=countif(Status == 0), total=count() , failureCount=countif(Status != 0), appServerList=make_list(appServer) by Instance_Process, serverTimestamp_t, SID_s\r\n| extend availabilityPct = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 3)\r\n| summarize Availability=sum(Availability), total=sum(total), AvailabilityTrend=make_list(availabilityPct), appServerList=any(tostring(appServerList)) by Instance_Process, SID_s\r\n| extend Availability = round(toreal(Availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 0,
                    "title": "Process Availability by SID",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Instance_Process",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "Availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                },
                                {
                                  "name": "ApplicationServer",
                                  "source": "column",
                                  "value": "appServerList"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 3
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "param_availability_timerange"
                                },
                                {
                                  "name": "ApplicationServer",
                                  "source": "column",
                                  "value": "appServerList"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to view Insights - Auto RCA"
                          }
                        },
                        {
                          "columnMatch": "appServerList",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Process",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "aggregation": "Unique",
                            "customColumnWidthSetting": "20%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"availability\"]"
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SID_s"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Instance_Process",
                          "label": "Process"
                        },
                        {
                          "columnId": "SID_s",
                          "label": "SID"
                        },
                        {
                          "columnId": "Availability",
                          "label": "Availability by SID"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "pram_check_processlist",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    {
                      "parameterName": "param_check_aiops",
                      "comparison": "isEqualTo",
                      "value": "0"
                    }
                  ],
                  "name": "Process Availability Status by SID - AIOps"
                }
              ]
            },
            "name": "sidCurrentStatus"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "1665c0a1-800a-4d7a-baf7-1e6057d1813a",
                        "version": "KqlParameterItem/1.0",
                        "name": "selectedSID",
                        "label": "SID",
                        "type": 2,
                        "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| project SID_s\r\n| distinct SID_s",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::1"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::1",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "SID parameters - Availability Status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let ranked = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| where SID_s == '{selectedSID}'\r\n| project instanceNr_d, hostname_s, serverTimestamp_t, features_s, dispstatus_s, SID_s\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend feature_label = iff(features_s has \"ABAP\", \"ABAP\", \"\")\r\n| extend feature_label = iff(features_s has \"J2EE\", \"J2EE\", feature_label)\r\n| extend feature_label = iff(features_s has \"ENQUE\", \"Enqueue Server\", feature_label)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', \"Available\", \r\n                       dispstatus_s == 'SAPControl-RED', \"Error\", \r\n                       dispstatus_s == 'SAPControl-GRAY', \"Offline\",\r\n                       dispstatus_s == 'SAPControl-YELLOW', \"Not Functional\",\r\n                       \"\")\r\n| extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\")\r\n| extend appServer = strcat( hostname_s, \"_\", instanceNr_s)\r\n| extend Rank = case(dispstatus_s == 'SAPControl-GREEN', 2, \r\n                       dispstatus_s == 'SAPControl-RED', 0, \r\n                       dispstatus_s == 'SAPControl-GRAY', 3,\r\n                       dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                       0)                       \r\n| sort by SID_s, Rank asc\r\n| serialize ;\r\nranked\r\n| project dispstatus_s, SID_s, serverTimestamp_t, Status, appServer,feature_label,instanceNr_d,hostname_s\r\n| summarize arg_max(serverTimestamp_t, * ) by appServer, SID_s",
                    "size": 0,
                    "title": "SAP NetWeaver Availability Status by Application Server.",
                    "noDataMessage": "Please select a SID to view status.",
                    "exportedParameters": [
                      {
                        "fieldName": "hostname_s",
                        "parameterName": "selectedHostname",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "instanceNr_d",
                        "parameterName": "selectedInstanceNr",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "SID_s",
                        "parameterName": "selectedSID",
                        "parameterType": 1,
                        "defaultValue": "*"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "appServer",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "feature_label"
                      },
                      "nodeIdField": "appServer",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Available",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Functional",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Error",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Offline",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "name": "Current Status By AppServer",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}'\r\n| where hostname_s == '{selectedHostname}'\r\n| where instanceNr_d == '{selectedInstanceNr}'\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = avg(Availability), AvailabilityTrend = make_list(Availability) by Instance_Process",
                    "size": 1,
                    "title": "Process Availability (Last 15 mins)",
                    "noDataMessage": "No processes available for selected App Server.",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blue",
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green",
                            "customColumnWidthSetting": "75ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"Availability\"]"
                          }
                        },
                        {
                          "columnMatch": "total",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "failureCount",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Overall Availability %",
                          "formatter": 5,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"failureCount\"] of [\"total\"] mins unhealthy",
                              "columnSettings": [
                                {
                                  "columnName": "AvailableProcess",
                                  "color": "green"
                                },
                                {
                                  "columnName": "failureCount",
                                  "color": "redDark"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailableProcess",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Instance_Process",
                          "label": "Instance Label"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "selectedSID",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    },
                    {
                      "parameterName": "selectedHostname",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    }
                  ],
                  "name": "Process Availability Status"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "valueSubTab",
              "comparison": "isEqualTo",
              "value": "ByApplicationServer"
            },
            "name": "applicationServerOverview"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"float: right\">\r\nLast Status Updated at {time_stamp_status_update} (UTC)\r\n</div>"
            },
            "name": "OverviewTimeStampStatusUpdate"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "pram_check_processlist",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 );\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(serverTimestamp_t, timespanInterval), appServer\r\n| extend availability = (availability / total) * 100\r\n| project-away total",
              "size": 0,
              "aggregation": 3,
              "title": "Availability Status Trend",
              "color": "green",
              "timeBrushParameterName": "timebrush_availability",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "availability"
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  },
                  "min": 0,
                  "max": 100
                }
              }
            },
            "name": "AvailabilityTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n//| where serverTimestamp_t {timebrush_availability}\r\n//commented as part of incoporating timebrush\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 3), AvailabilityTrend = make_list(Availability) by Instance_Process, SID_s,hostname_s,instanceNr_d,appServer",
              "size": 0,
              "showAnalytics": true,
              "title": "Instance Process Availability Status",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance_Process",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10%"
                    }
                  },
                  {
                    "columnMatch": "hostname_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appServer",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "ApplicationServer",
                            "source": "cell",
                            "value": "ApplicationServer"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "SID",
                            "source": "parameter",
                            "value": "SID"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Availability",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "customColumnWidthSetting": "15%"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 3
                      }
                    }
                  },
                  {
                    "columnMatch": "AvailabilityTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "customColumnWidthSetting": "100%"
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"Availability\"]"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "hostname_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "Instance_Process",
                    "label": "Instance Process"
                  },
                  {
                    "columnId": "SID_s",
                    "label": "SID"
                  },
                  {
                    "columnId": "hostname_s",
                    "label": "Instance Hostname"
                  },
                  {
                    "columnId": "instanceNr_d",
                    "label": "Instance Number"
                  },
                  {
                    "columnId": "appServer",
                    "label": "Application Server"
                  },
                  {
                    "columnId": "Availability",
                    "label": "Availability %"
                  },
                  {
                    "columnId": "AvailabilityTrend",
                    "label": "Availability Trend"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "param_check_aiops",
              "comparison": "isNotEqualTo",
              "value": "0"
            },
            "showPin": true,
            "name": "Instance Process Availability By SID"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t {timebrush_availability}\r\n//commented as part of incoporating timebrush\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = round(avg(Availability), 3), AvailabilityTrend = make_list(Availability) by Instance_Process, SID_s,hostname_s,instanceNr_d,appServer",
              "size": 0,
              "showAnalytics": true,
              "title": "Instance Process Availability Status",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "showExpandCollapseGrid": true,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance_Process",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10%"
                    }
                  },
                  {
                    "columnMatch": "hostname_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appServer",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/ApplicationServerInsights",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "ApplicationServer",
                            "source": "cell",
                            "value": "ApplicationServer"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "SID",
                            "source": "parameter",
                            "value": "SID"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Availability",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "SID",
                            "source": "column",
                            "value": "SID_s"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "ApplicationServer",
                            "source": "column",
                            "value": "appServer"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "15%"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 3
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to view Insights - Auto RCA"
                    }
                  },
                  {
                    "columnMatch": "AvailabilityTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/SapMonitor2.0/SapNetWeaver/Insights - Auto RCA",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "SID",
                            "source": "column",
                            "value": "SID_s"
                          },
                          {
                            "name": "TimeRange",
                            "source": "parameter",
                            "value": "TimeRange"
                          },
                          {
                            "name": "ApplicationServer",
                            "source": "column",
                            "value": "appServer"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "100%"
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to view Insights - Auto RCA"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "hostname_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "Instance_Process",
                    "label": "Instance Process"
                  },
                  {
                    "columnId": "SID_s",
                    "label": "SID"
                  },
                  {
                    "columnId": "hostname_s",
                    "label": "Instance Hostname"
                  },
                  {
                    "columnId": "instanceNr_d",
                    "label": "Instance Number"
                  },
                  {
                    "columnId": "appServer",
                    "label": "Application Server"
                  },
                  {
                    "columnId": "Availability",
                    "label": "Availability %"
                  },
                  {
                    "columnId": "AvailabilityTrend",
                    "label": "Availability Trend"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "param_check_aiops",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "showPin": true,
            "name": "Instance Process Availability By SID - AIOps"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "Availability"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_provider_error",
          "comparison": "isNotEqualTo",
          "value": "-1"
        },
        {
          "parameterName": "pram_check_processlist",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Availability Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (ABAPGetWPTable) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_abapwp",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "AbapTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_abapwp",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "AbapIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "param_check_abapwp",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "performance_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "c3787ab9-7fbe-4f52-9adc-47ef495bdab4",
                        "version": "KqlParameterItem/1.0",
                        "name": "CPUWorkProcessType",
                        "label": "Work Process Type",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SapNetweaver_ABAPGetWPTable_CL\r\n| distinct Typ_s",
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "Utilization Parameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet workProcessType = dynamic([{CPUWorkProcessType}]);\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where array_length(workProcessType) == 0 or Typ_s in (workProcessType)\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, 1m), Typ_s\r\n| extend activeWP = totalWP - freeWP\r\n| summarize sum(activeWP) by bin(serverTimestamp_t, 1m), Typ_s",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Workprocess Utilization​",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "areachart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "sum_activeWP"
                      ],
                      "group": "Typ_s",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "activeWP",
                          "label": "Active Work Process",
                          "color": "red"
                        },
                        {
                          "seriesName": "freeWP",
                          "label": "Free Work Process",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_check_abapwp",
                    "comparison": "isEqualTo",
                    "value": "0"
                  },
                  "name": "PerformanceWorkprocessUtilization​"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let workProcessType = dynamic([{CPUWorkProcessType}]);\r\nlet appServerList = dynamic([{ApplicationServer}]);\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where array_length(workProcessType) == 0 or Typ_s in (workProcessType)\r\n| where Status_s != \"Wait\"\r\n| extend\r\n    ApplicationServerInstance = strcat(hostname_s, \"_\", SID_s, \"_\", instanceNr_s),\r\n    ProcessNumber = No_d,\r\n    ProcessType = Typ_s,\r\n    ProcessId = Pid_d,\r\n    Status = Status_s,\r\n    Reason = Reason_s,\r\n    Error = Err_s,\r\n    CPU = Cpu_s,\r\n    Time = Time_s,\r\n    Program = Program_s,\r\n    User = User_s,\r\n    Client = Client_s\r\n| summarize arg_max(serverTimestamp_t, *) by ProcessType, ApplicationServerInstance\r\n| project ApplicationServerInstance, ProcessNumber, ProcessType, ProcessId, Status, Reason, Error , CPU,Time, Program, User, Client\r\n",
                    "size": 3,
                    "title": "Active Work Process (SM66)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ApplicationServerInstance",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessNumber",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessType",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ProcessId",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Reason",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Error",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "CPU",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Time",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Program",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "User",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Client",
                          "formatter": 1
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "ApplicationServerInstance",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "ApplicationServerInstance",
                          "label": "Application Server Instance"
                        },
                        {
                          "columnId": "ProcessNumber",
                          "label": "Process Number"
                        },
                        {
                          "columnId": "ProcessType",
                          "label": "Process Type"
                        },
                        {
                          "columnId": "ProcessId",
                          "label": "Process Id"
                        },
                        {
                          "columnId": "CPU",
                          "label": "CPU Time"
                        },
                        {
                          "columnId": "Time",
                          "label": "Time Priority"
                        },
                        {
                          "columnId": "Program",
                          "label": "Program Name"
                        },
                        {
                          "columnId": "User",
                          "label": "User Id"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ApplicationServerInstance",
                        "sortOrder": 1
                      }
                    ],
                    "chartSettings": {
                      "xAxis": "timestamp_t",
                      "yAxis": [
                        "FREE_MEM_MB_d",
                        "ACT_WPS_d"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "ACT_DIA_d",
                          "label": "Active Dialog  WPs"
                        },
                        {
                          "seriesName": "ACT_WPS_d",
                          "label": "Active WPs​"
                        },
                        {
                          "seriesName": "TRFC_FREE_d",
                          "label": "Available RFC WPs"
                        },
                        {
                          "seriesName": "FREE_MEM_MB_d",
                          "label": "Free WPs"
                        },
                        {
                          "seriesName": "FREE_MEM_MB_INC_FS_d",
                          "label": "Free Memory including File System Cache (MB)"
                        }
                      ]
                    }
                  },
                  "name": "ActiveWorkprocess (SM66)",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "group - 0"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "param_check_abapwp",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Performance Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (EnqGetStatistic) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_enqgetstatistics",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "EnqTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_enqgetstatistics",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "EnqIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "EnqueueStatistics"
        },
        {
          "parameterName": "param_check_enqgetstatistics",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "enqStat_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Enqueue Lock Statistics"
            },
            "name": "enqueuelocktext"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project enqueue_requests_d\r\n| summarize threshold = percentile(enqueue_requests_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project enqueue_requests_d, serverTimestamp_t\r\n| summarize sum(enqueue_requests_d), arg_max(serverTimestamp_t, enqueue_requests_d)\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), (toreal(enqueue_requests_d - threshold) / toreal(threshold) * 100))\r\n| project sum_enqueue_requests_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Number Of Lock Requests\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "sum_enqueue_requests_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Number Of Lock Requests"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project enqueue_rejects_d\r\n| summarize threshold = percentile(enqueue_rejects_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project enqueue_rejects_d, serverTimestamp_t\r\n| summarize sum(enqueue_rejects_d), arg_max(serverTimestamp_t, enqueue_rejects_d)\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(enqueue_rejects_d - threshold) / toreal(threshold) * 100)\r\n| project sum_enqueue_rejects_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Rejected Lock Requests\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "sum_enqueue_rejects_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Rejected Lock Requests"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| summarize TotalErrors = sum(enqueue_errors_d)\r\n| extend Title = \"Enqueue Errors\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "TotalErrors",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Enqueue Errors"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project lock_time_d\r\n| summarize threshold = percentile(lock_time_d, 95)\r\n| project threshold = iff(isnull(threshold), toreal(0), threshold);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project lock_time_d, serverTimestamp_t\r\n| summarize avg(lock_time_d), arg_max(serverTimestamp_t, lock_time_d)\r\n| where isnan(avg_lock_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), (toreal(lock_time_d - threshold) / toreal(threshold) * 100))\r\n| project avg_lock_time_d , percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Time For Lock Operations\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_lock_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Time Taken For Lock Operations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project lock_wait_time_d\r\n| summarize threshold = percentile(lock_wait_time_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project lock_wait_time_d, serverTimestamp_t\r\n| summarize avg(lock_wait_time_d), arg_max(serverTimestamp_t, lock_wait_time_d)\r\n| where isnan(avg_lock_wait_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(lock_wait_time_d - threshold) / toreal(threshold) * 100)\r\n| project avg_lock_wait_time_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Waiting Time Taken For Lock Operations\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_lock_wait_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 24,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Waiting Time Taken For Lock Operations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project server_time_d\r\n| summarize threshold = percentile(server_time_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| project server_time_d, serverTimestamp_t\r\n| summarize avg(server_time_d), arg_max(serverTimestamp_t, server_time_d)\r\n| where isnan(avg_server_time_d) != 1\r\n| extend dummy=1\r\n| join kind=inner ( thresholdQuery | extend dummy=1) on dummy\r\n| extend percentageChange = iff(threshold == 0, toreal(0), toreal(server_time_d - threshold) / toreal(threshold) * 100)\r\n| project avg_server_time_d, percentageChange, displayPercentChange = round(abs(percentageChange), 3)\r\n| extend Title = \"Average Time Taken In Enqueue Server\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "formatter": 2,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "avg_server_time_d",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "percentageChange",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">",
                        "thresholdValue": "0",
                        "representation": "up",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "0",
                        "text": ""
                      },
                      {
                        "operator": "<",
                        "thresholdValue": "0",
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "down",
                        "text": "[\"displayPercentChange\"]%"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "33",
            "name": "Average Time Taken In Enqueue Server"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet lockQuery = baseQuery\r\n| project locks_now_d, locks_max_d, serverTimestamp_t, arguments_state_s\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(locks_now_d), Max=max(locks_now_d), ObjectLimit=max(locks_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Locks\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet ownerQuery = baseQuery\r\n| project owner_now_d, owner_max_d, arguments_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(owner_now_d), Max=max(owner_now_d), ObjectLimit=max(owner_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Owner\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet argumentQuery = baseQuery\r\n| project owner_now_d, owner_max_d, arguments_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, arguments_state_s), Average=avg(owner_now_d), Max=max(owner_now_d), ObjectLimit=max(owner_max_d)\r\n| where isnan(Average) != 1\r\n| extend ['Lock Object Type'] = \"Arguments\"\r\n| project ['Lock Object Type'], arguments_state_s, Average, Max, ObjectLimit;\r\nlet replicationStateQuery = baseQuery\r\n| project replication_state_s, serverTimestamp_t\r\n| summarize arg_max(serverTimestamp_t, replication_state_s)\r\n| project arguments_state_s = replication_state_s\r\n| where isempty(arguments_state_s) != 1\r\n| extend ['Lock Object Type'] = 'Replication State';\r\nlockQuery\r\n| union ownerQuery\r\n| union argumentQuery\r\n| union replicationStateQuery\r\n| extend Status = iff(arguments_state_s == 'SAPControl-GREEN', \"OK\", \"\")\r\n| extend Status = iff(arguments_state_s == 'SAPControl-RED', \"Critical\", Status)\r\n| extend Status = iff(isempty(Status), \"Warning\", Status)\r\n| project ['Lock Object Type'], Status, Average, Max, ObjectLimit\r\n| project-reorder ['Lock Object Type'], Status, Average, Max, ObjectLimit",
              "size": 1,
              "noDataMessage": "The query returned no result",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Lock Object Type",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "OK",
                          "representation": "success",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "4",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Average",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 3
                      }
                    }
                  },
                  {
                    "columnMatch": "Max",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "ObjectLimit",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"ObjectLimit\"]"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "Lock Object Type",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Average",
                    "label": "Average Number Of Objects"
                  },
                  {
                    "columnId": "Max",
                    "label": "Max Number Of Objects"
                  },
                  {
                    "columnId": "ObjectLimit",
                    "label": "Object Limit"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Lock Object Type",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "100",
            "name": "Enqueue Lock Statistics Status"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s));\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project locks_now_d\r\n| summarize Threshold=percentile(locks_now_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| extend dummy=1\r\n| join kind=inner (thresholdQuery | extend dummy=1) on dummy\r\n| project locks_now_d, Threshold,serverTimestamp_t",
              "size": 0,
              "aggregation": 3,
              "title": "Enqueue Locks",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "locks_now_d",
                  "Threshold"
                ],
                "seriesLabelSettings": [
                  {
                    "seriesName": "locks_now_d",
                    "label": "Number of Locks"
                  },
                  {
                    "seriesName": "locks_high_d",
                    "label": "Max Locks"
                  }
                ]
              }
            },
            "name": "Enqueue Locks Trend"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "EnqueueStatistics"
        },
        {
          "parameterName": "param_check_enqgetstatistics",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "enqueueStatistics"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Unable to create the required table (GetQueueStatistics) to capture telemetry information. Please try after some time. If the issue persists, please contact support.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_queuestatistics",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "QueueStatTableCreationError"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_queuestatistics",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "QueueStatIngestionError"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "QueueStatistics"
        },
        {
          "parameterName": "param_check_queuestatistics",
          "comparison": "isNotEqualTo",
          "value": "0"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "queuestat_group_error"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet MaxQuery = baseQuery\r\n| summarize QueueLimit=max(Max_d) by Typ_s;\r\nlet CurrentStatusQuery = baseQuery\r\n| summarize CurrentStatus = arg_max(timestamp_t, Now_d) by Typ_s;\r\nlet PerQueueTypeQuery = baseQuery\r\n| summarize  PerQueueLimit = max(Max_d) / 7  by Typ_s;\r\nbaseQuery\r\n| summarize AvgRequests = avg(Now_d), MaxRequests = max(Now_d), ReadRequest = sum(Reads_d), WriteRequest = sum(Writes_d) by Typ_s\r\n| join kind=inner MaxQuery on Typ_s\r\n| join kind=inner CurrentStatusQuery on Typ_s\r\n| join kind=inner PerQueueTypeQuery on Typ_s\r\n| extend QueueUtilization = iff(QueueLimit != 0, (toreal(Now_d) / toreal(QueueLimit/7)) * 100, 0.0)\r\n| extend Status = iff(QueueUtilization <= 5, \"OK\", \"\")\r\n| extend Status = iff(QueueUtilization > 5 and QueueUtilization <= 15 , \"Warning\", Status)\r\n| extend Status = iff(QueueUtilization > 15, \"Critical\", Status)\r\n| extend FreeQueuePercent = round(((PerQueueLimit - AvgRequests)/PerQueueLimit) * 100,3)\r\n| project Typ_s, Status, FreeQueuePercent, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest\r\n| project-reorder Typ_s, Status, FreeQueuePercent, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest",
                    "size": 0,
                    "title": "Queue Statistics Summary",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "OK",
                                "representation": "success",
                                "text": "{0}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{0}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FreeQueuePercent",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "AvgRequests",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxRequests",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "QueueLimit",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "WriteRequest",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"WriteRequest\"]"
                          }
                        },
                        {
                          "columnMatch": "ReadRequest",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"ReadRequest\"]"
                          }
                        },
                        {
                          "columnMatch": "MaxQueue",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "percent",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ],
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "Typ_s",
                          "label": "Queue"
                        },
                        {
                          "columnId": "FreeQueuePercent",
                          "label": "Free Queue Percentage"
                        },
                        {
                          "columnId": "AvgRequests",
                          "label": "Average Number Of Requests In Queue"
                        },
                        {
                          "columnId": "MaxRequests",
                          "label": "Max Number Of Requests In Queue"
                        },
                        {
                          "columnId": "QueueLimit",
                          "label": "Dispatcher Max Queue"
                        },
                        {
                          "columnId": "WriteRequest",
                          "label": "Number Of Requests Written"
                        },
                        {
                          "columnId": "ReadRequest",
                          "label": "Number Of Requests Read"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "100",
                  "name": "DetailedQueueSummary",
                  "styleSettings": {
                    "maxWidth": "100%"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "ebeb7d85-8c21-4534-8135-b05732fab7b5",
                        "version": "KqlParameterItem/1.0",
                        "name": "QueueType",
                        "label": "Queue Type",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Typ_s;",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "QueueType"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet queueList = dynamic([{QueueType}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where array_length(queueList) == 0 or Typ_s in (queueList)\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Now_d;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Request=sum(Now_d) by bin(serverTimestamp_t, timespanInterval), Typ_s",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Queue Length Trend Graph",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "linechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Request"
                      ],
                      "xSettings": {
                        "numberFormatSettings": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false
                          }
                        }
                      },
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "name": "QueueLengthTrend"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedMenu",
                "comparison": "isEqualTo",
                "value": "QueueStatistics"
              },
              {
                "parameterName": "param_check_queuestatistics",
                "comparison": "isEqualTo",
                "value": "0"
              }
            ],
            "name": "queuestatisticsgroup"
          },
          {
            "type": 1,
            "content": {
              "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_check_queuestatistics",
                "comparison": "isNotEqualTo",
                "value": "0"
              },
              {
                "parameterName": "selectedMenu",
                "comparison": "isEqualTo",
                "value": "QueueStatistics"
              }
            ],
            "name": "queuestatistics_error"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedMenu",
          "comparison": "isEqualTo",
          "value": "QueueStatistics"
        },
        {
          "parameterName": "param_check_queuestatistics",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "Queue Statistics Group"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"float: right\">\r\nUpdated every 60 seconds.\r\n</div>"
      },
      "name": "CheckFrequency"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}