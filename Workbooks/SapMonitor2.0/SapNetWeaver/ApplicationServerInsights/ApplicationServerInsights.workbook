{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "df708bf0-533f-4baf-a2c1-cf9fdba8f3ce",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_table_exists",
            "type": 1,
            "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"SID_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL');\r\nlet enqueue = checktable('SapNetweaver_EnqGetStatistic_CL');\r\nlet queue = checktable('SapNetweaver_GetQueueStatistic_CL');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL');\r\nlet abap = checktable('SapNetweaver_ABAPGetWPTable_CL');\r\nlet swnc = checktable('SapNetweaver_SWNC_CL');\r\nlet sdump = checktable('SapNetweaver_ShortDumps_CL');\r\nlet smon = checktable('SapNetweaver_SMON_CL');\r\n//rfc v1.3 tables\r\nlet enqread = checktable('SapNetweaver_EnqueueRead_CL');\r\nlet inboundq = checktable('SapNetweaver_InboundQueues_CL');\r\nlet outboundq = checktable('SapNetweaver_OutboundQueues_CL');\r\nlet batchjob = checktable('SapNetweaver_BatchJobs_CL');\r\nlet failedupdate = checktable('SapNetweaver_FailedUpdates_CL');\r\nlet syslog = checktable('SapNetweaver_SysLogs_CL');\r\nlet T = datatable(tablename:string, id:string)\r\n[\r\n'SapNetweaver_SMON_CL', '',\r\n];\r\nT\r\n|project tablename\r\n| extend new_col = strcat('SapNetweaver_SMON_CL:',smon,\r\n',SapNetweaver_ShortDumps_CL:',sdump,\r\n',SapNetweaver_SWNC_CL:',swnc,\r\n',SapNetweaver_GetSystemInstanceList_CL:',system,',SapNetweaver_GetQueueStatistic_CL:',queue,\r\n',SapNetweaver_EnqGetStatistic_CL:',enqueue,\r\n',SapNetweaver_GetProcessList_CL:',process,\r\n',SapNetweaver_ABAPGetWPTable_CL:',abap,\r\n',SapNetweaver_EnqueueRead_CL:',enqread,\r\n',SapNetweaver_InboundQueues_CL:',inboundq,\r\n',SapNetweaver_OutboundQueues_CL:',outboundq,\r\n',SapNetweaver_BatchJobs_CL:',batchjob,\r\n',SapNetweaver_FailedUpdates_CL:',failedupdate,\r\n',SapNetweaver_SysLogs_CL:',syslog)\r\n|project-away tablename",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "TableCheck_params"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "26294bd5-e71a-4263-b409-4b1febef3553",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_queuestatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_GetQueueStatistic_CL:2'),\"2\",\"3\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5f9ee865-d753-4857-b86e-12284ccc3a3a",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_enqgetstatistics",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_EnqGetStatistic_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "d55f6e4c-b9e3-4f74-aa2d-5fcfe791af63",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_abapwp",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:1'), \"1\",\n                             ((tableList) contains 'SapNetweaver_ABAPGetWPTable_CL:2'),\"2\",\"2\");print toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "40d3c185-d197-4372-abfe-ece5164252cb",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_systeminstancelist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetSystemInstanceList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "759c9a8f-343f-489a-b804-80ad387affa4",
            "version": "KqlParameterItem/1.0",
            "name": "pram_check_processlist",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_GetProcessList_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_GetProcessList_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_GetProcessList_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "bfd115b7-b572-4c46-8263-a8c216e5aa3b",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_swnc",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SWNC_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SWNC_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SWNC_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "eeceb30c-d00c-459d-a48d-bebc0c9ee167",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_smon",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SMON_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SMON_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SMON_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "71bffbd1-7139-4550-8df1-e60541c7321a",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_sdump",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_ShortDumps_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_ShortDumps_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_ShortDumps_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "4358e020-cdd8-4aeb-8e61-691678976521",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_enqread",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_EnqueueRead_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_EnqueueRead_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_EnqueueRead_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5a442889-21df-453c-959a-e7d1abc55365",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_inbound_queue",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_InboundQueues_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_InboundQueues_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_InboundQueues_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fd2e6259-3437-4054-86ea-53b358a6ef13",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_outbound_queue",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_OutboundQueues_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_OutboundQueues_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_OutboundQueues_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "97ffed3f-27fb-45f7-8a0c-b085cd5cbeb5",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_batchjobs",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_BatchJobs_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_BatchJobs_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_BatchJobs_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "cfeddd03-5d57-45e8-8b82-52d5f42b5225",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_failedupdates",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_FailedUpdates_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_FailedUpdates_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_FailedUpdates_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "78b297c8-3540-4c42-a361-8e2f42c8881c",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_syslogs",
            "type": 1,
            "query": "let tableList = '{param_check_table_exists}';\nlet tableListValue = case(((tableList) contains 'SapNetweaver_SysLogs_CL:0'), \"0\",\n                            ((tableList) contains 'SapNetweaver_SysLogs_CL:1'),\"1\",\n                             ((tableList) contains 'SapNetweaver_SysLogs_CL:2'),\"2\",\"2\");\nprint toscalar(tableListValue);",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "GlobalParameters",
      "styleSettings": {
        "padding": "-150px 0px 0px 0px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "25d0dd9b-7d58-421c-970a-e62d082ef23e",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 1800000
            }
          },
          {
            "id": "0253a890-24e9-4374-ac65-77e7aaf94c9b",
            "version": "KqlParameterItem/1.0",
            "name": "SID",
            "type": 2,
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where isnotempty(SID_s)\r\n| distinct SID_s",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "3850d8b6-7cae-472a-82c1-2cc1714bdc00",
            "version": "KqlParameterItem/1.0",
            "name": "ApplicationServer",
            "label": "Application Server",
            "type": 2,
            "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where SID_s == '{SID}'\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "App Insight Parameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let baseQuery = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 );\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10000, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10000 and RecordCount < 50000, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50000 and RecordCount < 100000, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100000 and RecordCount < 150000, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150000, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize availability=countif(Status == 0), total=count() by bin(serverTimestamp_t, timespanInterval), appServer\r\n| extend availability = (availability / total) * 100\r\n| summarize avg(availability) by appServer \r\n| extend Title = \"Availability\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "avg_availability",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 4,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_systeminstancelist",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Availability Tile"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_SMON_CL\r\n| where timestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project FREE_MEM_MB_d, FREE_MEM_MB_INC_FS_d, timestamp_t,  hostname_s,instanceNr_s,SID_s, FREE_MEM_PERC_d\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| summarize memory_available = avg(FREE_MEM_PERC_d) by appServer\r\n| extend Title = \"Memory Available\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "memory_available",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_smon",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Memory Available Tile"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_SMON_CL\r\n| where timestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| project USR_TOTAL_d, SYS_TOTAL_d, IDLE_TOTAL_d, SID_s, hostname_s, instanceNr_s, timestamp_t\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend TOTAL_CPU = (100 - IDLE_TOTAL_d)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| summarize cpu_util = avg(TOTAL_CPU) by appServer\r\n| extend Title = \"CPU Utilization\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "cpu_util",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_smon",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "CPU Utilization Tile"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_SysLogs_CL\r\n| where timestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| where E2E_SEVERITY_s == 1\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, timestamp_t, E2E_USER_s\r\n| count\r\n| extend Title = strcat(\"Error Messages SM21\")",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_syslogs",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "System Log Tile"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| summarize GTNAME = dcount(GNAME_s) by GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize total_locks = count()\r\n| extend Title = \"Lock Entries SM12\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "total_locks",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_enqread",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Lock Entries Tile",
            "styleSettings": {
              "margin": "-40px 0px 0px 0px",
              "padding": "-40px 0px 0px 0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_ShortDumps_CL\r\n| where timestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| distinct Component_s, Development_Class_s, Application_Componen_s, timestamp_t\r\n| count\r\n| extend Title = \"Short Dumps ST22\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_sdump",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Short Dumps Tile",
            "styleSettings": {
              "margin": "-40px 0px 0px 0px",
              "padding": "-40px 0px 0px 0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| summarize totaljob = countif(STATUS_s == 'A' or STATUS_s == 'X')\r\n| extend Title = \"Cancelled Jobs SM37\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "totaljob",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_batchjobs",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Cancelled Jobs Tile",
            "styleSettings": {
              "margin": "-40px 0px 0px 0px",
              "padding": "-40px 0px 0px 0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where appServer == '{ApplicationServer}'\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, datevalue, timevalue\r\n| count\r\n| extend Title = \"Failed Updates SM13\"",
              "size": 4,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title"
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "full"
              }
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "param_check_failedupdates",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "Failed Updates Tile",
            "styleSettings": {
              "margin": "-40px 0px 0px 0px",
              "padding": "-40px 0px 0px 0px"
            }
          }
        ]
      },
      "name": "AppServer Insights ",
      "styleSettings": {
        "margin": "25px 0px 0px 0px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "884b635e-20e1-4fca-82a2-42fdeb96be7f",
            "version": "KqlParameterItem/1.0",
            "name": "unavailabilityValue",
            "type": 1,
            "query": "let baseQuery = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 );\r\nlet unavailableCount = toscalar(baseQuery\r\n| summarize availability=countif(Status == 0), total=count() by serverTimestamp_t, appServer\r\n| extend availability = (availability / total) * 100\r\n| summarize avg(availability)); \r\n\r\nlet x = iif((unavailableCount >= 100), false, true);\r\nprint(x);\r\n\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "0f394c71-e9d3-4c9b-8552-a2007db66082",
            "version": "KqlParameterItem/1.0",
            "name": "availabilityValue",
            "type": 1,
            "query": "let baseQuery = SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| extend Status = case(dispstatus_s == 'SAPControl-GREEN', 0,\r\n                        dispstatus_s == 'SAPControl-YELLOW', 1,\r\n                        dispstatus_s == 'SAPControl-RED', 2,3 );\r\nlet availableCount  = toscalar(baseQuery\r\n| summarize availability=countif(Status == 0), total=count() by serverTimestamp_t, appServer\r\n| extend availability = (availability / total) * 100\r\n| summarize avg(availability)); \r\n\r\nlet x = iif((availableCount >= 100), true, false);\r\nprint(x);\r\n\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "22ee9c51-ce73-4ce0-ba09-e0fc46a45f52",
            "version": "KqlParameterItem/1.0",
            "name": "AvailabilityStatus",
            "label": "       ",
            "type": 10,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[{ \\\"value\\\": \\\"All\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\":\\\"{availabilityValue}\\\"}, { \\\"value\\\": \\\"Unavailability\\\", \\\"label\\\": \\\"Service Unavailability\\\", \\\"selected\\\":\\\"{unavailabilityValue}\\\"}]\",\"transformers\":null}",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "formHorizontal",
        "queryType": 8
      },
      "customWidth": "50",
      "name": "AvailabilityToggle",
      "styleSettings": {
        "margin": "-45px 0px 0px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| extend Status = iff(dispstatus_s != 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Unavailability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)",
              "size": 0,
              "aggregation": 3,
              "title": "Unavailability Status Trend",
              "color": "green",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "timechart",
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Instance_Process",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "instanceNr_d",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "Unavailability"
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  },
                  "min": 0,
                  "max": 100
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "pram_check_processlist",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "UnavailabilityTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// base query\r\nlet baseQuery =  SapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}';\r\n//Get the time when the server was stopped\r\nlet laststoppedtime = baseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where textstatus_s == 'Stopped'\r\n| summarize  max(serverTimestamp_t);\r\n//Get the time when the status changed to Running after it was Stopped\r\nlet lastrunningtime = baseQuery\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where textstatus_s == 'Running'\r\n| where serverTimestamp_t > todatetime(toscalar(laststoppedtime))\r\n| summarize  min(serverTimestamp_t);\r\n//check if the last time the server was running successfully is empty use current datetime to calculate outtage duration\r\nlet updatedlastrunningtime = iff(isempty(toscalar(lastrunningtime)) == true, toscalar(now()), toscalar(lastrunningtime));\r\n//Find the difference between when the server was Stopped and when it started Running again\r\nlet outageduration = datetime_diff('second', todatetime(toscalar(updatedlastrunningtime)), todatetime(toscalar(laststoppedtime)));\r\n\r\nbaseQuery\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t, textstatus_s, elapsedtime_s, starttime_s, description_s\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where textstatus_s == \"Stopped\"\r\n| extend outage_date = todatetime(toscalar(laststoppedtime))\r\n| extend outage_duration = toscalar(outageduration) * 1s\r\n| distinct description_s, outage_date, textstatus_s, outage_duration;\r\n",
              "size": 0,
              "title": "Most Recent Service Unavailability Time Snapshot",
              "exportedParameters": [
                {
                  "fieldName": "title_s",
                  "parameterName": "param_rca_title"
                },
                {
                  "fieldName": "summary_s",
                  "parameterName": "param_rca_desc",
                  "parameterType": 1
                },
                {
                  "fieldName": "SID_s",
                  "parameterName": "param_rca_sid",
                  "parameterType": 1
                },
                {
                  "fieldName": "AzResourceID",
                  "parameterName": "param_rca_host",
                  "parameterType": 1
                },
                {
                  "fieldName": "availabilityState_s",
                  "parameterName": "param_rca_availabilitystate",
                  "parameterType": 1
                },
                {
                  "parameterType": 1
                },
                {
                  "fieldName": "recommendedActions_s",
                  "parameterName": "param_rca_recommendedactions",
                  "parameterType": 1
                },
                {
                  "fieldName": "instance",
                  "parameterType": 1
                },
                {
                  "fieldName": "instanceName",
                  "parameterName": "param_rca_instancename",
                  "parameterType": 1
                },
                {
                  "fieldName": "occuredTime_t",
                  "parameterName": "param_rca_occuredtime",
                  "parameterType": 1
                },
                {
                  "fieldName": "dateFormatted",
                  "parameterName": "param_rca_dateformatted",
                  "parameterType": 1
                },
                {
                  "fieldName": "timeFormatted",
                  "parameterName": "param_rca_timeformatted",
                  "parameterType": 1
                },
                {
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "description_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "appServer",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "instanceNr_d",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "starttime_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "temp_date",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "dateFormatted",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeFormatted",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AzResourceID",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "summary_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "recommendedActions_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SID_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "name_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Description",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "1",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "description_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "description_s",
                    "label": "Instance Process Name"
                  },
                  {
                    "columnId": "outage_date",
                    "label": "Outage Start Date"
                  },
                  {
                    "columnId": "textstatus_s",
                    "label": "Status"
                  },
                  {
                    "columnId": "outage_duration",
                    "label": "Outage Duration"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "pram_check_processlist",
              "comparison": "isEqualTo",
              "value": "0"
            },
            "name": "RCA List"
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"font-size:0.8rem;\">**{param_rca_availabilitystate}**: Root Cause Analysis (RCA) - {param_rca_title}</span>\r\n\r\n<span style=\"font-size:0.8rem;\">**Root Cause**</span><br>\r\n<span style=\"font-size:0.8rem;\">{param_rca_desc}</span><br><br>\r\n<span style=\"font-size:0.8rem;\">** {param_rca_dateformatted} - {param_rca_timeformatted} **</span><br>\r\n<span style=\"font-size:0.8rem;\">**SID:** {param_rca_sid}</span><br>\r\n<span style=\"font-size:0.8rem;\">**InstanceName:** {param_rca_instancename}</span><br>\r\n<span style=\"font-size:0.8rem;\">**Host:** {param_rca_host}</span><br>\r\n\r\n<span style=\"font-size:0.8rem;\">{param_rca_recommendedactions}</span><br>",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "param_rca_title",
              "comparison": "isNotEqualTo",
              "value": ""
            },
            "name": "RCA Configuration"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "AvailabilityStatus",
        "comparison": "isEqualTo",
        "value": "Unavailability"
      },
      "name": "Unavailability Group"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where appServer == '{ApplicationServer}'\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s, appServer, instanceNr_d, hostname_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)",
        "size": 0,
        "aggregation": 3,
        "title": "Availability Status Trend",
        "color": "green",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart",
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Instance_Process",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "instanceNr_d",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "xAxis": "serverTimestamp_t",
          "yAxis": [
            "Availability"
          ],
          "ySettings": {
            "numberFormatSettings": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            },
            "min": 0,
            "max": 100
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "AvailabilityStatus",
          "comparison": "isNotEqualTo",
          "value": "Unavailability"
        },
        {
          "parameterName": "pram_check_processlist",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "AvailabilityTrend"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}