{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.hanaonazure/sapmonitors"
              },
              "conditionalVisibility": {
                "parameterName": "dummy_neverset",
                "comparison": "isEqualTo",
                "value": "0"
              },
              "name": "ApplicationCriteriaParam"
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "tabs",
                "links": [
                  {
                    "id": "f7397e19-ab90-4d77-9b60-73310cdbaea1",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "Lock Entries (SM12)",
                    "subTarget": "LockEntries",
                    "preText": "Lock Entries",
                    "style": "link"
                  },
                  {
                    "id": "2d8c4653-be36-4cc0-9cdc-7abe3856b3a5",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "Failed Updates (SM13)",
                    "subTarget": "FailedUpdate",
                    "preText": "Failed Updates",
                    "style": "link"
                  },
                  {
                    "id": "668e9d86-9810-4000-9c17-cc1b44dfaba5",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "System Logs (SM21)",
                    "subTarget": "SysLogs",
                    "preText": "System Logs",
                    "style": "link"
                  },
                  {
                    "id": "fa15a467-9880-4acf-ad8e-5388907e8834",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "Short Dumps (ST22)",
                    "subTarget": "ShortDump",
                    "preText": "Short Dump",
                    "style": "link"
                  },
                  {
                    "id": "469a981b-8caf-471b-8b04-77a9a89bbb85",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "Batch Jobs (SM37)",
                    "subTarget": "BatchJob",
                    "preText": "Batch Job",
                    "style": "link"
                  },
                  {
                    "id": "d5efd2a8-242b-4c33-9abe-22fd870b7166",
                    "cellValue": "selectedApplicationTab",
                    "linkTarget": "parameter",
                    "linkLabel": "Change And Transport (STMS)",
                    "subTarget": "ChangeAndTransport",
                    "style": "link"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "SelectedTab",
                "comparison": "isEqualTo",
                "value": "Application"
              },
              "name": "ApplicationTabSubMenu"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_enqread",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "name": "NoDataWarning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize GTNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize total_locks = count()\r\n| extend Title = \"Total Number Of Lock Entries\"",
                            "size": 4,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 2,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              "leftContent": {
                                "columnMatch": "total_locks",
                                "formatter": 12,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 8,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "20",
                          "name": "Lock Requests Count"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| summarize GTNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize object_locks = count() by serverTimestamp_t",
                            "size": 0,
                            "aggregation": 3,
                            "timeBrushParameterName": "time_sm12",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart",
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "object_locks"
                              ],
                              "showMetrics": false,
                              "showLegend": true,
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "object_locks",
                                  "label": "Number of Locks",
                                  "color": "orange"
                                }
                              ]
                            }
                          },
                          "customWidth": "80",
                          "conditionalVisibility": {
                            "parameterName": "param_check_enqread",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "Lock Entries in SAP"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t {time_sm12}\r\n// This is commented to include the timebrush functionality\r\n//| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n// This is a temporary fix included for v1.3. The Hostname field will be updated in future\r\n// For SAPHANA the EnqueueRead table contains SID in the GTHOST column\r\n| extend appServerWithHostInstance = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend appServerRemoveSid = strcat(replace_string(hostname_s, strcat(\"_\", SID_s, \"_\",instanceNr_s), ''), \"_\", instanceNr_s)\r\n| extend appServer = case(hostname_s has SID_s, appServerRemoveSid, \r\n                       appServerWithHostInstance\r\n                       )\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| distinct GTCODE, GNAME_s, GMODE_s, GOBJ_s, GTWP_s, hostname_s, GBCKTYPE, datevalue, timevalue, GUNAME_s",
                            "size": 1,
                            "noDataMessage": "The query returned no result",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Lock Object Type",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "Status",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "OK",
                                        "representation": "success",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Critical",
                                        "representation": "4",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Warning",
                                        "representation": "2",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "Unknown",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "Average",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 0,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 3
                                    }
                                  }
                                },
                                {
                                  "columnMatch": "Max",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "ObjectLimit",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal"
                                    }
                                  },
                                  "tooltipFormat": {
                                    "tooltip": "[\"ObjectLimit\"]"
                                  }
                                }
                              ],
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "GTCODE",
                                  "label": "T-CODE",
                                  "comment": ""
                                },
                                {
                                  "columnId": "GNAME_s",
                                  "label": "Table Name"
                                },
                                {
                                  "columnId": "GMODE_s",
                                  "label": "Lock Mode"
                                },
                                {
                                  "columnId": "GOBJ_s",
                                  "label": "Object Name"
                                },
                                {
                                  "columnId": "GTWP_s",
                                  "label": "Work  Process Number"
                                },
                                {
                                  "columnId": "hostname_s",
                                  "label": "Instance Name"
                                },
                                {
                                  "columnId": "GBCKTYPE",
                                  "label": "Backup Flag"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Time"
                                },
                                {
                                  "columnId": "GUNAME_s",
                                  "label": "Username"
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "customWidth": "100",
                          "conditionalVisibility": {
                            "parameterName": "param_check_enqread",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "showPin": true,
                          "name": "Lock Entries Table"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_enqread",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubLockedEntriesGroup"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 2 mins.\r\n</div>"
                    },
                    "name": "SM12freq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "LockEntries"
              },
              "name": "lockentriesgroup"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_failedupdates",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "name": "NoDataWarning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, datevalue, timevalue\r\n| count\r\n| extend Title = \"Number Of Update Request\"",
                            "size": 4,
                            "title": "Administrate Update Records​",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "leftContent": {
                                "columnMatch": "Count",
                                "formatter": 12,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "greenRed"
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "sortOrderField": 1,
                              "size": "full"
                            }
                          },
                          "customWidth": "20",
                          "name": "FailedUpdateTile"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBUSR_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBMANDT_s, serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize total_failed_update  = count() by bin(serverTimestamp_t, timespanInterval)",
                            "size": 0,
                            "aggregation": 5,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "graphSettings": {
                              "type": 0,
                              "topContent": {
                                "columnMatch": "GNAME_s",
                                "formatter": 1
                              },
                              "centerContent": {
                                "columnMatch": "object_locks",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            },
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "total_failed_update"
                              ],
                              "group": null,
                              "createOtherGroup": 0,
                              "showMetrics": false,
                              "showLegend": true,
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "total_failed_update",
                                  "label": "Number Of Objects Locked",
                                  "color": "orange"
                                },
                                {
                                  "color": "red"
                                }
                              ],
                              "showDataPoints": true,
                              "xSettings": {
                                "numberFormatSettings": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              },
                              "ySettings": {
                                "min": 0
                              }
                            }
                          },
                          "customWidth": "80",
                          "name": "FailedUpdateChart"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_FailedUpdates_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct VBTCODE_s, VBCONTEXT_s, VBREPORT_s, VBSTATE_s, VBRC_s, VBCLIINFO_s, VBCLINAME_s, datevalue, timevalue, VBUSR_s, VBKEY_g",
                            "size": 1,
                            "noDataMessage": "The query returned no result",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Lock Object Type",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "Status",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "OK",
                                        "representation": "success",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Critical",
                                        "representation": "4",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Warning",
                                        "representation": "2",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "Unknown",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "Average",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 0,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 3
                                    }
                                  }
                                },
                                {
                                  "columnMatch": "Max",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "ObjectLimit",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal"
                                    }
                                  },
                                  "tooltipFormat": {
                                    "tooltip": "[\"ObjectLimit\"]"
                                  }
                                }
                              ],
                              "rowLimit": 200,
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "VBTCODE_s",
                                  "label": "T-CODE"
                                },
                                {
                                  "columnId": "VBCONTEXT_s",
                                  "label": "Update Context"
                                },
                                {
                                  "columnId": "VBREPORT_s",
                                  "label": "Report"
                                },
                                {
                                  "columnId": "VBSTATE_s",
                                  "label": "State of Request"
                                },
                                {
                                  "columnId": "VBRC_s",
                                  "label": "Update Return"
                                },
                                {
                                  "columnId": "VBCLIINFO_s",
                                  "label": "Info"
                                },
                                {
                                  "columnId": "VBCLINAME_s",
                                  "label": "Instance Name"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Time"
                                },
                                {
                                  "columnId": "VBUSR_s",
                                  "label": "Username"
                                },
                                {
                                  "columnId": "VBKEY_g",
                                  "label": "Key"
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "customWidth": "100",
                          "showPin": true,
                          "name": "FailedUpdateTable"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_failedupdates",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubFailedUpdateGroup"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 60 sec.\r\n</div>"
                    },
                    "name": "SM13freq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "FailedUpdate"
              },
              "name": "failedupdategroup"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_sdump",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "showPin": false,
                    "name": "NoDataWarning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, Development_Class_s, Application_Componen_s, serverTimestamp_t\r\n| count\r\n| extend Title = \"Total Number Of Short Dumps\"",
                            "size": 4,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {},
                              "leftContent": {
                                "columnMatch": "Count",
                                "formatter": 12,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "greenRed"
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "sortOrderField": 1,
                              "size": "full"
                            }
                          },
                          "customWidth": "20",
                          "conditionalVisibility": {
                            "parameterName": "param_check_sdump",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "Short Dump Count"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n",
                            "size": 0,
                            "aggregation": 5,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart",
                            "graphSettings": {
                              "type": 0,
                              "topContent": {
                                "columnMatch": "GNAME_s",
                                "formatter": 1
                              },
                              "centerContent": {
                                "columnMatch": "object_locks",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            },
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "error_count"
                              ],
                              "group": null,
                              "createOtherGroup": 0,
                              "showMetrics": false,
                              "showLegend": true,
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "error_count",
                                  "label": "Number Of Short Dumps",
                                  "color": "orange"
                                },
                                {
                                  "color": "red"
                                }
                              ],
                              "showDataPoints": true,
                              "ySettings": {
                                "min": 0
                              }
                            }
                          },
                          "customWidth": "80",
                          "conditionalVisibility": {
                            "parameterName": "param_check_sdump",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "Error Logs"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Short Dump By Error",
                            "expandable": true,
                            "expanded": true,
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Runtime_Error_s\r\n| extend Runtime_Error_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), Runtime_Error_s",
                                  "size": 0,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "barchart",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Runtime_Error_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Error_Short_Text_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Exception_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "SID_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Count",
                                        "formatter": 1
                                      }
                                    ],
                                    "sortBy": [
                                      {
                                        "itemKey": "Runtime_Error_s",
                                        "sortOrder": 1
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "Runtime_Error_s",
                                        "label": "Runtime Exceptions"
                                      },
                                      {
                                        "columnId": "Error_Short_Text_s",
                                        "label": "Exception Text"
                                      },
                                      {
                                        "columnId": "Exception_s",
                                        "label": "Exceptions"
                                      },
                                      {
                                        "columnId": "SID_s",
                                        "label": "Source System"
                                      },
                                      {
                                        "columnId": "Count",
                                        "label": "Exception Count"
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Runtime_Error_s",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "name": "shortdumpexceptions"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend exceptiondata = column_ifexists(\"Exception_s\", \"\")\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Runtime_Error_s, Error_Short_Text_s, exceptiondata, SID_s\r\n| summarize Count=count() by Runtime_Error_s, Error_Short_Text_s, exceptiondata, SID_s\r\n| order by Count",
                                  "size": 3,
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Runtime_Error_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Error_Short_Text_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Exception_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "SID_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Count",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "Runtime_Error_s",
                                        "sortOrder": 1
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "Runtime_Error_s",
                                        "label": "Runtime Exceptions"
                                      },
                                      {
                                        "columnId": "Error_Short_Text_s",
                                        "label": "Exception Text"
                                      },
                                      {
                                        "columnId": "Exception_s",
                                        "label": "Exceptions"
                                      },
                                      {
                                        "columnId": "SID_s",
                                        "label": "Source System"
                                      },
                                      {
                                        "columnId": "Count",
                                        "label": "Exception Count"
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Runtime_Error_s",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "0",
                                "name": "shortdumpexceptionsingrid",
                                "styleSettings": {
                                  "maxWidth": "100%"
                                }
                              }
                            ]
                          },
                          "name": "Shortdumpbyerrorgroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Short Dump By Program",
                            "expandable": true,
                            "expanded": true,
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s\r\n| extend Program_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), Program_s",
                                  "size": 0,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "unstackedbar",
                                  "chartSettings": {
                                    "xAxis": "Program_s",
                                    "yAxis": [
                                      "Count"
                                    ],
                                    "showMetrics": false
                                  }
                                },
                                "name": "shortdumpbyprogram"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s\r\n| summarize Count=count() by Program_s, SID_s\r\n| order by Count",
                                  "size": 3,
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Program_s",
                                        "formatter": 1,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "30ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "SID_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Count",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "Count",
                                        "sortOrder": 2
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "Program_s",
                                        "label": "Top Cancelled Programs"
                                      },
                                      {
                                        "columnId": "SID_s",
                                        "label": "Source System"
                                      },
                                      {
                                        "columnId": "Count",
                                        "label": "Cancellation Count​"
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Count",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "customWidth": "0",
                                "name": "CancelledProgramQuery",
                                "styleSettings": {
                                  "maxWidth": "100%"
                                }
                              }
                            ]
                          },
                          "name": "shortdumpybyproggroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Short Dump By User",
                            "expandable": true,
                            "expanded": true,
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s, E2E_USER_s\r\n| extend E2E_USER_s;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize Count = count() by bin(serverTimestamp_t, timespanInterval), E2E_USER_s",
                                  "size": 0,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "barchart",
                                  "chartSettings": {
                                    "xAxis": "E2E_USER_s",
                                    "yAxis": [
                                      "Count"
                                    ],
                                    "showMetrics": false
                                  }
                                },
                                "name": "shortdumpbyuser"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_ShortDumps_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct Component_s, serverTimestamp_t, Development_Class_s, Application_Componen_s, Program_s, SID_s, E2E_USER_s\r\n| summarize Count=count() by E2E_USER_s, SID_s\r\n| sort by Count",
                                  "size": 3,
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "E2E_USER_s",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Count",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "Count",
                                        "sortOrder": 2
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "E2E_USER_s",
                                        "label": "User "
                                      },
                                      {
                                        "columnId": "SID_s",
                                        "label": "Source System"
                                      },
                                      {
                                        "columnId": "Count",
                                        "label": "Short Dumps Count"
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Count",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "customWidth": "0",
                                "name": "shortdumpbyusers",
                                "styleSettings": {
                                  "maxWidth": "100%"
                                }
                              }
                            ]
                          },
                          "name": "shortdumpbyuser"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_sdump",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubShortDumpGroup"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                    },
                    "name": "ST22Freq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "ShortDump"
              },
              "name": "ShortDumpGroup"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_batchjobs",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "name": "No Data Warning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s,STRTDATE_s,STRTTIME_s, JOBNAME_s\r\n| where STATUS_s == 'F' or STATUS_s == 'A' or STATUS_s == 'Z'\r\n| count as TotalCount\r\n| extend Title = \"Number Of Jobs Executed\"",
                            "size": 1,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "leftContent": {
                                "columnMatch": "TotalCount",
                                "formatter": 12,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "green"
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "sortOrderField": 1,
                              "size": "full"
                            }
                          },
                          "customWidth": "20",
                          "name": "batchjobcount"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s,STRTDATE_s,STRTTIME_s, JOBNAME_s,serverTimestamp_t\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize batchjobcount  = count() by bin(serverTimestamp_t, timespanInterval)\r\n\r\n",
                            "size": 0,
                            "aggregation": 5,
                            "title": "Total Number Of Batch Jobs",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "graphSettings": {
                              "type": 0,
                              "topContent": {
                                "columnMatch": "GNAME_s",
                                "formatter": 1
                              },
                              "centerContent": {
                                "columnMatch": "object_locks",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            },
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "batchjobcount"
                              ],
                              "group": null,
                              "createOtherGroup": 0,
                              "showMetrics": false,
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "batchjobcount",
                                  "label": "Number Of Batch Job",
                                  "color": "orange"
                                }
                              ],
                              "showDataPoints": true,
                              "ySettings": {
                                "min": 0
                              }
                            }
                          },
                          "customWidth": "80",
                          "name": "BatchJobChart"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| extend startdatetime = todatetime(strcat(STRTDATE_s,STRTTIME_s))\r\n| extend enddatetime = todatetime(strcat(ENDDATE_s,ENDTIME_s))\r\n| extend runtime = enddatetime - startdatetime\r\n| extend min =  runtime / 1s \r\n| summarize totaljob = countif(min > 30)\r\n| extend Title = \"Runtime > 30 Minutes\"",
                                  "size": 1,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "leftContent": {
                                      "columnMatch": "totaljob",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "orange"
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Title",
                                      "formatter": 1
                                    },
                                    "showBorder": true,
                                    "sortOrderField": 1,
                                    "size": "full"
                                  }
                                },
                                "customWidth": "33",
                                "name": "runtimeofjob",
                                "styleSettings": {
                                  "maxWidth": "100"
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s,SDLSTRTTM_s))\r\n| extend startdatetime = todatetime(strcat(STRTDATE_s,STRTTIME_s))\r\n| where STATUS_s != 'P' or STATUS_s != 'S' or STATUS_s != 'Y'\r\n| summarize totaljob = countif(startdatetime > planneddatetime)\r\n| extend Title = \"Jobs With Delayed Start\"",
                                  "size": 1,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "leftContent": {
                                      "columnMatch": "totaljob",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "orange"
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Title",
                                      "formatter": 1
                                    },
                                    "showBorder": true,
                                    "sortOrderField": 1,
                                    "size": "full"
                                  }
                                },
                                "customWidth": "33",
                                "name": "delayedstartjob",
                                "styleSettings": {
                                  "maxWidth": "100"
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct STATUS_s, STRTDATE_s, STRTTIME_s, SDLSTRTDT_s, SDLSTRTTM_s, JOBNAME_s, ENDDATE_s, ENDTIME_s \r\n| summarize totaljob = countif(STATUS_s == 'A' or STATUS_s == 'X')\r\n| extend Title = \"Number Of Cancelled Jobs\"",
                                  "size": 1,
                                  "exportParameterName": "param_status",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "leftContent": {
                                      "columnMatch": "totaljob",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "greenRed"
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Title",
                                      "formatter": 1
                                    },
                                    "showBorder": true,
                                    "sortOrderField": 1,
                                    "size": "full"
                                  }
                                },
                                "customWidth": "33",
                                "name": "cancelledjob",
                                "styleSettings": {
                                  "margin": "-36px 0px 0px 0px"
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend planneddate = format_datetime(planneddatetime,'dd-MM-yy')\r\n| extend plannedtime = format_datetime(planneddatetime,'HH:mm:ss')\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend startdate = format_datetime(planneddatetime,'dd-MM-yy')\r\n| extend starttime = format_datetime(planneddatetime,'HH:mm:ss')\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend enddate = format_datetime(enddatetime,'dd-MM-yy')\r\n| extend endtime = format_datetime(enddatetime,'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')\r\n| extend selValue = case( '{param_status}' contains 'Cancelled', 'A', '')  \r\n| where  STATUS_s == selValue           \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddate, plannedtime, startdate, starttime, enddate, endtime, LASTCHNAME_s",
                                  "size": 1,
                                  "noDataMessage": "The query returned no result",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Status",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Finished",
                                              "representation": "success",
                                              "text": "{0}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Cancelled",
                                              "representation": "4",
                                              "text": "{0}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "1",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Lock Object Type",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Average",
                                        "formatter": 1,
                                        "numberFormat": {
                                          "unit": 0,
                                          "options": {
                                            "style": "decimal",
                                            "maximumFractionDigits": 3
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Max",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "ObjectLimit",
                                        "formatter": 1,
                                        "numberFormat": {
                                          "unit": 17,
                                          "options": {
                                            "style": "decimal"
                                          }
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "[\"ObjectLimit\"]"
                                        }
                                      }
                                    ],
                                    "rowLimit": 200,
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "$gen_thresholds_Status_0",
                                        "sortOrder": 1
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "JOBNAME_s",
                                        "label": "Job Name"
                                      },
                                      {
                                        "columnId": "JOBCLASS_s",
                                        "label": "Job Class"
                                      },
                                      {
                                        "columnId": "PERIODIC_s",
                                        "label": "Periodic"
                                      },
                                      {
                                        "columnId": "planneddate",
                                        "label": "Planned Date"
                                      },
                                      {
                                        "columnId": "plannedtime",
                                        "label": "Planned Time"
                                      },
                                      {
                                        "columnId": "startdate",
                                        "label": "Start Date"
                                      },
                                      {
                                        "columnId": "starttime",
                                        "label": "Start Time"
                                      },
                                      {
                                        "columnId": "enddate",
                                        "label": "End Date"
                                      },
                                      {
                                        "columnId": "endtime",
                                        "label": "End Time"
                                      },
                                      {
                                        "columnId": "LASTCHNAME_s",
                                        "label": "User Name "
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_thresholds_Status_0",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "param_status",
                                  "comparison": "isNotEqualTo"
                                },
                                "showPin": true,
                                "name": "BatchJobTable",
                                "styleSettings": {
                                  "margin": "-150px 0px 0px 0px"
                                }
                              }
                            ]
                          },
                          "name": "batchjobtilegroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "Click on \"Cancelled Job\" tile to see further details.",
                            "style": "info"
                          },
                          "name": "text_clickcancelledjob"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_batchjobs",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubBatchJobGroup"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                    },
                    "name": "SM37Freq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "BatchJob"
              },
              "name": "BatchJobGroup"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_syslogs",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "name": "NoDataWarning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "5f7ce5da-c2d2-4f2b-8144-4c4d55689f0e",
                                "version": "KqlParameterItem/1.0",
                                "name": "SeverityType",
                                "label": "Severity Type",
                                "type": 10,
                                "description": "Select the Serverity of the Error Message",
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[\r\n    { \"value\":\"Error\", \"label\":\"Error\", \"selected\":true },\r\n    { \"value\":\"Warning\", \"label\":\"Warning\" },\r\n    { \"value\":\"Info \", \"label\":\"Info\" }\r\n]"
                              }
                            ],
                            "style": "formHorizontal",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "name": "Sys Log Parameters"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, serverTimestamp_t, E2E_USER_s\r\n| count\r\n| extend Title = strcat(\"Total Number Of \",'{SeverityType}',\" Messages\")",
                            "size": 4,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "leftContent": {
                                "columnMatch": "Count",
                                "formatter": 12,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "greenRed"
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "sortOrderField": 1,
                              "size": "full"
                            }
                          },
                          "customWidth": "20",
                          "name": "SysLogTile"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nlet baseQuery = SapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 1, strcat(\"0\", instanceNr_s), instanceNr_s)\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| distinct E2E_SEVERITY_s, E2E_HOST_s, Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, serverTimestamp_t, E2E_USER_s\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| project serverTimestamp_t;\r\nlet timespanCount = baseQuery \r\n| summarize RecordCount=count()\r\n| extend Interval = iff(RecordCount <= 10, timespan(1m), timespan(1m))\r\n| extend Interval = iff(RecordCount > 10 and RecordCount < 50, timespan(5m), Interval)\r\n| extend Interval = iff(RecordCount >= 50 and RecordCount < 100, timespan(10m), Interval)\r\n| extend Interval = iff(RecordCount >= 100 and RecordCount < 150, timespan(15m), Interval)\r\n| extend Interval = iff(RecordCount >= 150, timespan(30m), Interval)\r\n| project Interval;\r\nlet timespanInterval = toscalar(timespanCount);\r\nbaseQuery\r\n| summarize error_count  = count() by bin(serverTimestamp_t, timespanInterval)\r\n\r\n",
                            "size": 0,
                            "aggregation": 5,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "linechart",
                            "graphSettings": {
                              "type": 0,
                              "topContent": {
                                "columnMatch": "GNAME_s",
                                "formatter": 1
                              },
                              "centerContent": {
                                "columnMatch": "object_locks",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            },
                            "chartSettings": {
                              "xAxis": "serverTimestamp_t",
                              "yAxis": [
                                "error_count"
                              ],
                              "group": null,
                              "createOtherGroup": 0,
                              "showMetrics": false,
                              "showLegend": true,
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "error_count",
                                  "label": "Number Of System Error/Warnings",
                                  "color": "orange"
                                },
                                {
                                  "color": "red"
                                }
                              ],
                              "showDataPoints": true,
                              "ySettings": {
                                "min": 0
                              }
                            }
                          },
                          "customWidth": "75",
                          "name": "SysLogsChart"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let appServerList = dynamic([{ApplicationServer}]);\r\nSapNetweaver_SysLogs_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_s))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| extend datevalue = format_datetime(serverTimestamp_t, 'dd-MM-yy')\r\n| extend timevalue = format_datetime(serverTimestamp_t, 'HH:mm:ss')\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Severity = case( '{SeverityType}' == 'Error','1',\r\n                          '{SeverityType}' == 'Warning','2',\r\n                          '{SeverityType}' == 'Info','3','')\r\n| where E2E_SEVERITY_s == Severity\r\n| distinct E2E_SEVERITY_s,Problem_Class_s, Application_Comp_s, Program_s, Msg_area_Msd_Id_s, Description_s, E2E_HOST_s, datevalue, timevalue, E2E_USER_s",
                            "size": 1,
                            "noDataMessage": "The query returned no result",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Lock Object Type",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "Status",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "OK",
                                        "representation": "success",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Critical",
                                        "representation": "4",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Warning",
                                        "representation": "2",
                                        "text": "{0}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "Unknown",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "Average",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 0,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 3
                                    }
                                  }
                                },
                                {
                                  "columnMatch": "Max",
                                  "formatter": 1
                                },
                                {
                                  "columnMatch": "ObjectLimit",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal"
                                    }
                                  },
                                  "tooltipFormat": {
                                    "tooltip": "[\"ObjectLimit\"]"
                                  }
                                }
                              ],
                              "rowLimit": 200,
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "E2E_SEVERITY_s",
                                  "label": "Severity"
                                },
                                {
                                  "columnId": "Problem_Class_s",
                                  "label": "Problem Class"
                                },
                                {
                                  "columnId": "Application_Comp_s",
                                  "label": "Application Component"
                                },
                                {
                                  "columnId": "Program_s",
                                  "label": "Program Name"
                                },
                                {
                                  "columnId": "Msg_area_Msd_Id_s",
                                  "label": "Message ID"
                                },
                                {
                                  "columnId": "Description_s",
                                  "label": "Description"
                                },
                                {
                                  "columnId": "E2E_HOST_s",
                                  "label": "Instance Name "
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Time"
                                },
                                {
                                  "columnId": "E2E_USER_s",
                                  "label": "User"
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "customWidth": "100",
                          "showPin": true,
                          "name": "SysLogTable"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_syslogs",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubSysLogsGroup"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 5 mins.\r\n</div>"
                    },
                    "name": "SysLogsFreq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "SysLogs"
              },
              "name": "SysLogsGroup"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 1,
                    "content": {
                      "json": "It may take up to 15 minutes for the initial telemetry information to be available for review. Please check again later.",
                      "style": "warning"
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_stms",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "name": "No Data Warning"
                  },
                  {
                    "type": 12,
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transports\"",
                            "size": 4,
                            "exportParameterName": "param_status_transport",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "NumberOfTransport",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s  == \"K\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Workbench Request\"",
                            "size": 4,
                            "exportParameterName": "param_status_workbench",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "NumberOfWorkbenchRequest",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s  == \"W\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Customizing Request\"",
                            "size": 4,
                            "timeContext": {
                              "durationMs": 2592000000
                            },
                            "exportParameterName": "param_status_customize",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "NumberOfCustomizingRequest",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRSTATUS_s  == \"O\" or TRSTATUS_s  == \"R\" or TRSTATUS_s  == \"N\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transport Released\"",
                            "size": 4,
                            "exportParameterName": "param_status_release",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "NumberOfTransportsReleased",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| summarize by TRKORR_s, TRSTATUS_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transports\"",
                            "size": 4,
                            "exportParameterName": "param_status_transport",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isNotEqualTo",
                              "value": ""
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "NumberOfObjectTransport",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL \r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s  == \"K\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Workbench Request\"",
                            "size": 4,
                            "exportParameterName": "param_status_workbench",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibility": {
                            "parameterName": "param_check_stms_objectentries",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "NumberOfObjectWorkbenchRequest",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL \r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s  == \"W\"\r\n| summarize by TRKORR_s, TRFUNCTION_s, TRSTATUS_s, TARSYSTEM_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Customizing Request\"",
                            "size": 4,
                            "timeContext": {
                              "durationMs": 2592000000
                            },
                            "exportParameterName": "param_status_customize",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibility": {
                            "parameterName": "param_check_stms_objectentries",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "NumberOfObjectCustomizingRequest",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL\r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRSTATUS_s  == \"O\" or TRSTATUS_s  == \"R\" or TRSTATUS_s  == \"N\"\r\n| summarize by TRKORR_s, TRSTATUS_s, AS4USER_s\r\n| summarize count()\r\n| extend Title = \"Number of Transport Released\"",
                            "size": 4,
                            "exportParameterName": "param_status_release",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                              "titleContent": {
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "count_",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              "secondaryContent": {
                                "columnMatch": "Title",
                                "formatter": 1
                              },
                              "showBorder": true,
                              "size": "full"
                            }
                          },
                          "customWidth": "25",
                          "conditionalVisibility": {
                            "parameterName": "param_check_stms_objectentries",
                            "comparison": "isEqualTo",
                            "value": "0"
                          },
                          "name": "NumberOfObjectTransportsReleased",
                          "styleSettings": {
                            "margin": "-36px 0px 0px 0px",
                            "padding": "-36px 0px 0px 0px"
                          }
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "Click on any tile to see further details.",
                            "style": "info"
                          },
                          "name": "TileInfoText"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "title": "Transport Requests",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_transport",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Transport Requests"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL \r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')\r\n| summarize by TRKORR_s, Type, OBJECT_s, OBJ_NAME_s, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Group",
                                  "formatter": 1
                                }
                              ],
                              "hierarchySettings": {
                                "treeType": 1,
                                "groupBy": [
                                  "TRKORR_s"
                                ],
                                "expandTopLevel": true
                              },
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "OBJECT_s",
                                  "label": "Object Type"
                                },
                                {
                                  "columnId": "OBJ_NAME_s",
                                  "label": "Object Name"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_transport",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "name": "TransportRequestWithObjectEntries"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s == \"K\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "title": "Workbench Requests",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_workbench",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Workbench Requests"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL \r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s == \"K\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')    \r\n| summarize by TRKORR_s, Type, OBJECT_s, OBJ_NAME_s, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "title": "Workbench Requests",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Group",
                                  "formatter": 1
                                }
                              ],
                              "filter": true,
                              "hierarchySettings": {
                                "treeType": 1,
                                "groupBy": [
                                  "TRKORR_s"
                                ],
                                "expandTopLevel": true
                              },
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "OBJECT_s",
                                  "label": "Object Type"
                                },
                                {
                                  "columnId": "OBJ_NAME_s",
                                  "label": "Object Name"
                                },
                                {
                                  "columnId": "LockFlag",
                                  "label": "Lock or Import Status"
                                },
                                {
                                  "columnId": "PGMID_s",
                                  "label": "Program Id"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_workbench",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Workbench Requests with object entries"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s == \"W\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "title": "Customizing Requests",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_customize",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Customizing Requests"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL\r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRFUNCTION_s == \"W\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','') \r\n| summarize by TRKORR_s, Type, OBJECT_s, OBJ_NAME_s, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n",
                            "size": 0,
                            "title": "Customizing Requests",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Group",
                                  "formatter": 1
                                }
                              ],
                              "filter": true,
                              "hierarchySettings": {
                                "treeType": 1,
                                "groupBy": [
                                  "TRKORR_s"
                                ],
                                "expandTopLevel": true
                              },
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "OBJECT_s",
                                  "label": "Object Type"
                                },
                                {
                                  "columnId": "OBJ_NAME_s",
                                  "label": "Object Name"
                                },
                                {
                                  "columnId": "LockFlag",
                                  "label": "Lock or Import Status"
                                },
                                {
                                  "columnId": "PGMID_s",
                                  "label": "Program Id"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_customize",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Customizing Requests with object entries"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_CL \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRSTATUS_s == \"O\" or TRSTATUS_s == \"R\" or TRSTATUS_s == \"N\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','')            \r\n| summarize by TRKORR_s, Type, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n\r\n\r\n\r\n",
                            "size": 0,
                            "title": "Transport Released",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "filter": true,
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_release",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            },
                            {
                              "parameterName": "param_check_stms",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Transport Released"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SapNetweaver_STMS_ObjectEntries_CL\r\n| join kind=inner (SapNetweaver_STMS_CL) on $left.TRKORR_s == $right.TRKORR_s \r\n| where serverTimestamp_t between (todatetime({TimeRange:start}) .. todatetime({TimeRange:end}))\r\n| where SID_s == '{SID}'\r\n| where TRSTATUS_s == \"O\" or TRSTATUS_s == \"R\" or TRSTATUS_s == \"N\"\r\n| extend datetimeval = todatetime(strcat(AS4DATE_s, AS4TIME_s))\r\n| extend datevalue = format_datetime(datetimeval,'dd-MM-yy')\r\n| extend timevalue = format_datetime(datetimeval,'HH:mm:ss')     \r\n| extend Status = case( TRSTATUS_s == 'D', 'Modifiable',\r\n                        TRSTATUS_s == 'L', 'Modifiable, Protected',\r\n                        TRSTATUS_s == 'O', 'Release Started',\r\n                        TRSTATUS_s == 'R', 'Released',\r\n                        TRSTATUS_s == 'N', 'Released (with Import Protection for Repaired Objects)', '')\r\n| extend Type = case( TRFUNCTION_s == 'K', 'Workbench Request',TRFUNCTION_s == 'W', 'Customizing Request', TRFUNCTION_s == 'C', 'Relocation of Objects Without Package Change',\r\n                      TRFUNCTION_s == 'O', 'Relocation of Objects with Package Change', TRFUNCTION_s == 'E', 'Reelocation of complete package', TRFUNCTION_s == 'T', 'Transport of Copies',\r\n                      TRFUNCTION_s == 'S', 'Development/Correction', TRFUNCTION_s == 'R', 'Repair', TRFUNCTION_s == 'X', 'Unclassified Task', TRFUNCTION_s == 'Q', 'Customizing Task', \r\n                      TRFUNCTION_s == 'G', 'Piece List for CTS Project', TRFUNCTION_s == 'M', 'Client Transport Request', TRFUNCTION_s == 'P', 'Piece List for Upgrade',\r\n                      TRFUNCTION_s == 'D', 'Piece List for Support Package', TRFUNCTION_s == 'F', 'Piece List', TRFUNCTION_s == 'L', 'Deletion transport','') \r\n| summarize by TRKORR_s, Type, OBJECT_s, OBJ_NAME_s, Status, TARSYSTEM_s, AS4USER_s, datevalue, timevalue\r\n\r\n\r\n\r\n",
                            "size": 0,
                            "title": "Transport Released",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Group",
                                  "formatter": 1
                                }
                              ],
                              "filter": true,
                              "hierarchySettings": {
                                "treeType": 1,
                                "groupBy": [
                                  "TRKORR_s"
                                ],
                                "expandTopLevel": true
                              },
                              "labelSettings": [
                                {
                                  "columnId": "TRKORR_s",
                                  "label": "Request Number"
                                },
                                {
                                  "columnId": "OBJECT_s",
                                  "label": "Object Type"
                                },
                                {
                                  "columnId": "OBJ_NAME_s",
                                  "label": "Object Name"
                                },
                                {
                                  "columnId": "TARSYSTEM_s",
                                  "label": "Target System"
                                },
                                {
                                  "columnId": "AS4USER_s",
                                  "label": "Request Owner"
                                },
                                {
                                  "columnId": "datevalue",
                                  "label": "Modified Date"
                                },
                                {
                                  "columnId": "timevalue",
                                  "label": "Modified Time"
                                }
                              ]
                            }
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "param_status_release",
                              "comparison": "isNotEqualTo"
                            },
                            {
                              "parameterName": "param_check_stms_objectentries",
                              "comparison": "isEqualTo",
                              "value": "0"
                            }
                          ],
                          "showPin": true,
                          "name": "Transport Released with object entries"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "param_check_stms",
                      "comparison": "isEqualTo",
                      "value": "0"
                    },
                    "name": "SubChangeAndTransport"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "<div style=\"float: right\">\r\nUpdated every 24 hours.\r\n</div>"
                    },
                    "name": "STMSFreq"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "selectedApplicationTab",
                "comparison": "isEqualTo",
                "value": "ChangeAndTransport"
              },
              "name": "ChangeAndTransport"
            }
          ]
        },
        "name": "group - 0"
      }
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }