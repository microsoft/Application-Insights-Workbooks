{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "4a01715a-c549-4740-a78c-53667c5dea39",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "By ",
            "type": 2,
            "description": "Choose a time range and split for this report.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": " [{ \"value\": \"7d\", \"label\": \"days (over the last week)\" }, \r\n { \"value\": \"28d\", \"label\": \"weeks (over the last month)\", \"selected\":true },\r\n { \"value\": \"84d\", \"label\": \"weeks (over the last 12 weeks)\" }]"
          },
          {
            "id": "6cc2217b-09aa-4fa1-881c-512c0a89be56",
            "version": "KqlParameterItem/1.0",
            "name": "WhoUsed",
            "label": "Show users who used",
            "type": 2,
            "description": "Choose which custom events and page views the users should have initially used to be included in this report.",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{ \"value\": \"pageViews,customEvents\", \"label\": \"Any Custom Events or Page View\", \"selected\":true }, { \"value\": \"customEvents\", \"label\": \"Any Custom Event\"}, { \"value\": \"pageViews\", \"label\": \"Any Page View\"}]"
          },
          {
            "id": "f0a3a598-1263-44dc-8042-1bbc2b55254a",
            "version": "KqlParameterItem/1.0",
            "name": "UserEvents",
            "label": "User Events",
            "type": 2,
            "description": "Choose multiple events and page views, the report will show users who did at least one of the events or page views, not necessarily all of the selected events and page views.",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union {WhoUsed}\r\n    | where timestamp > ago({TimeRange})\r\n    | top-nested 2 of itemType by Ignore = max(1), top-nested 500 of name by Count = count() desc\r\n    | project name, label=name, group = case(itemType == 'pageView', 'Page Views', 'Custom Events'), selected=''\r\n    | extend name = replace(\"\\n\", \"\",name)\r\n    | order by group, label asc",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.insights/components",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "e1219085-f8ec-4999-a59a-982cb7809166",
            "version": "KqlParameterItem/1.0",
            "name": "ReturnWhoUsed",
            "label": "And then returned to use",
            "type": 2,
            "description": "Choose which custom events and page views the users should have returned to use to be included in this report.",
            "isRequired": true,
            "query": "datatable(value:string, text:string, selected: string)[\r\n'pageViews,customEvents', 'Any Custom Events or Page View', 'true',\r\n'customEvents','Any Custom Event', '',\r\n'pageViews','Any Page View', ''\r\n]",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "2788ca23-b078-4cf9-951e-82b6c15d7317",
            "version": "KqlParameterItem/1.0",
            "name": "ReturnUserEvents",
            "label": "Return User Events",
            "type": 2,
            "description": "Choose multiple events and page views, the report will show users who did at least one of the events or page views, not necessarily all of the selected events and page views.",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union {ReturnWhoUsed}\r\n    | where timestamp > ago({TimeRange})\r\n    | top-nested 2 of itemType by Ignore = max(1), top-nested 500 of name by Count = count() desc\r\n    | project name, label=name, group = case(itemType == 'pageView', 'Page Views', 'Custom Events'), selected=''\r\n  | extend name = replace(\"\\n\", \"\",name)\r\n  | order by group, name asc",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.insights/components",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "5437a677-1342-4ce5-8267-7ff4ddedb550",
            "version": "KqlParameterItem/1.0",
            "name": "ExtendColumn",
            "type": 1,
            "description": "Extend column based on time range",
            "isRequired": true,
            "value": "| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TimeRange == '7d'), result = '| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0), f = column_ifexists('5', 0), g = column_ifexists('6', 0), h = column_ifexists('7', 0)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0), f = column_ifexists('5', 0), g = column_ifexists('6', 0), h = column_ifexists('7', 0)"
                }
              },
              {
                "condition": "if (TimeRange == '28d'), result = '| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0)"
                }
              },
              {
                "condition": "else result = '| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0), f = column_ifexists('5', 0), g = column_ifexists('6', 0), h = column_ifexists('7', 0), i = column_ifexists('8', 0), j = column_ifexists('9', 0), k = column_ifexists('10', 0), l = column_ifexists('11', 0), m = column_ifexists('12', 0)'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| project cohort, cohort_Num, total, a = column_ifexists('0', 0), b = column_ifexists('1', 0), c = column_ifexists('2', 0), d = column_ifexists('3', 0), e = column_ifexists('4', 0), f = column_ifexists('5', 0), g = column_ifexists('6', 0), h = column_ifexists('7', 0), i = column_ifexists('8', 0), j = column_ifexists('9', 0), k = column_ifexists('10', 0), l = column_ifexists('11', 0), m = column_ifexists('12', 0)"
                }
              }
            ]
          },
          {
            "id": "464ff6c8-e9a9-43c1-bd6d-071b401f42b4",
            "version": "KqlParameterItem/1.0",
            "name": "TotalCalc",
            "type": 1,
            "description": "Calculate overall data based on time range",
            "isRequired": true,
            "value": "| summarize ['<1w'] = sum(a), ['+1w'] = sum(b), ['+2w'] = sum(c), ['+3w'] = sum(d), ['+4w'] = sum(e)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TimeRange == '7d'), result = '| summarize ['<1d'] = sum(a), ['1d'] = sum(b), ['2d'] = sum(c), ['3d'] = sum(d), ['4d'] = sum(e), ['5d'] = sum(f), ['6d'] = sum(g), ['7d'] = sum(h)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| summarize ['<1d'] = sum(a), ['1d'] = sum(b), ['2d'] = sum(c), ['3d'] = sum(d), ['4d'] = sum(e), ['5d'] = sum(f), ['6d'] = sum(g), ['7d'] = sum(h)"
                }
              },
              {
                "condition": "if (TimeRange == '28d'), result = '| summarize ['<1w'] = sum(a), ['+1w'] = sum(b), ['+2w'] = sum(c), ['+3w'] = sum(d), ['+4w'] = sum(e)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| summarize ['<1w'] = sum(a), ['+1w'] = sum(b), ['+2w'] = sum(c), ['+3w'] = sum(d), ['+4w'] = sum(e)"
                }
              },
              {
                "condition": "else result = '| summarize ['<1w'] = sum(a), ['+1w'] = sum(b), ['+2w'] = sum(c), ['+3w'] = sum(d), ['+4w'] = sum(e), ['+5w'] = sum(f), ['+6w'] = sum(g), ['+7w'] = sum(h), ['+8w'] = sum(i), ['+9w'] = sum(j), ['+10w'] = sum(k), ['+11w'] = sum(l), ['+12w'] = sum(m)'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| summarize ['<1w'] = sum(a), ['+1w'] = sum(b), ['+2w'] = sum(c), ['+3w'] = sum(d), ['+4w'] = sum(e), ['+5w'] = sum(f), ['+6w'] = sum(g), ['+7w'] = sum(h), ['+8w'] = sum(i), ['+9w'] = sum(j), ['+10w'] = sum(k), ['+11w'] = sum(l), ['+12w'] = sum(m)"
                }
              }
            ]
          },
          {
            "id": "eabca304-0a9d-4be6-a5ef-88bbda14b92b",
            "version": "KqlParameterItem/1.0",
            "name": "GridCellsCalc",
            "type": 1,
            "isRequired": true,
            "value": "| summarize cohort_Num=avg(cohort_Num), total =tolong(avg(total)), a = sum(a), b = sum(b), c = sum(c), d = sum(d), e = sum(e) by cohort | project cohort, total, ['<1w'] = a,  ['+1w'] = iff(cohort_Num < 4, b, long(null)), ['+2w']= iff(cohort_Num < 3, c, long(null)), ['+3w'] = iff(cohort_Num < 2, d, long(null)), ['+4w'] = iff(cohort_Num < 1, e, long(null))",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| summarize cohort_Num=avg(cohort_Num), total =tolong(avg(total)), a = sum(a), b = sum(b), c = sum(c), d = sum(d), e = sum(e), f = sum(f), g = sum(g), h = sum(h) by cohort | project cohort, total, ['<1d'] = a, ['1d'] = iff(cohort_Num < 7, b, long(null)), ['2d']= iff(cohort_Num < 6, c, long(null)), ['3d'] = iff(cohort_Num < 5, d, long(null)), ['4d'] = iff(cohort_Num < 4, e, long(null)), ['5d'] = iff(cohort_Num < 3,f, long(null)), ['6d'] = iff(cohort_Num < 2, g, long(null)), ['7d'] = iff(cohort_Num < 1, h, long(null))"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| summarize cohort_Num=avg(cohort_Num), total =tolong(avg(total)), a = sum(a), b = sum(b), c = sum(c), d = sum(d), e = sum(e) by cohort | project cohort, total, ['<1w'] = a,  ['+1w'] = iff(cohort_Num < 4, b, long(null)), ['+2w']= iff(cohort_Num < 3, c, long(null)), ['+3w'] = iff(cohort_Num < 2, d, long(null)), ['+4w'] = iff(cohort_Num < 1, e, long(null))"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| summarize cohort_Num=avg(cohort_Num), total =tolong(avg(total)), a = sum(a), b = sum(b), c = sum(c), d = sum(d), e = sum(e), f = sum(f), g = sum(g), h = sum(h), i = sum(i), j = sum(j), k = sum(k), l = sum(l), m = sum(m) by cohort | project cohort, total, ['<1w'] = a,  ['+1w'] = iff(cohort_Num < 12, b, long(null)), ['+2w']= iff(cohort_Num < 11, c, long(null)), ['+3w'] = iff(cohort_Num < 10, d, long(null)), ['+4w'] = iff(cohort_Num < 9, e, long(null)), ['+5w'] = iff(cohort_Num < 8, f, long(null)), ['+6w'] = iff(cohort_Num < 7, g, long(null)), ['+7w'] = iff(cohort_Num < 6, h, long(null)), ['+8w'] = iff(cohort_Num < 5, i, long(null)), ['+9w'] = iff(cohort_Num < 4, j, long(null)), ['+10w'] = iff(cohort_Num < 3, k, long(null)), ['+11w'] = iff(cohort_Num < 2, l, long(null)), ['+12w'] = iff(cohort_Num < 1, m, long(null))"
                }
              }
            ]
          },
          {
            "id": "3333d6f1-9862-4dac-8179-63bd68962a8d",
            "version": "KqlParameterItem/1.0",
            "name": "TotalRateCalc",
            "type": 1,
            "description": "Calculate total percentage row ",
            "isRequired": true,
            "value": "| project ['<1w'] = toreal(['<1w'])*100/column_ifexists('0',0) , ['+1w'] = toreal(['+1w'])*100/column_ifexists('1',0), ['+2w'] = toreal(['+2w'])*100/column_ifexists('2',0), ['+3w'] = toreal(['+3w'])*100/column_ifexists('3',0), ['+4w'] = toreal(['+4w'])*100/column_ifexists('4',0)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TimeRange == '28d'), result = '| project ['<1w'] = toreal(['<1w'])*100/column_ifexists('0',0) , ['+1w'] = toreal(['+1w'])*100/column_ifexists('1',0), ['+2w'] = toreal(['+2w'])*100/column_ifexists('2',0), ['+3w'] = toreal(['+3w'])*100/column_ifexists('3',0), ['+4w'] = toreal(['+4w'])*100/column_ifexists('4',0)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| project ['<1w'] = toreal(['<1w'])*100/column_ifexists('0',0) , ['+1w'] = toreal(['+1w'])*100/column_ifexists('1',0), ['+2w'] = toreal(['+2w'])*100/column_ifexists('2',0), ['+3w'] = toreal(['+3w'])*100/column_ifexists('3',0), ['+4w'] = toreal(['+4w'])*100/column_ifexists('4',0)"
                }
              },
              {
                "condition": "if (TimeRange == '7d'), result = '| project ['<1d'] = toreal(['<1d'])*100/column_ifexists('0',0) , ['1d'] = toreal(['1d'])*100/column_ifexists('1',0), ['2d'] = toreal(['2d'])*100/column_ifexists('2',0), ['3d'] = toreal(['3d'])*100/column_ifexists('3',0), ['4d'] = toreal(['4d'])*100/column_ifexists('4',0), ['5d'] = toreal(['5d'])*100/column_ifexists('5',0), ['6d'] = toreal(['6d'])*100/column_ifexists('6',0), ['7d'] = toreal(['7d'])*100/column_ifexists('7',0)'",
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| project ['<1d'] = toreal(['<1d'])*100/column_ifexists('0',0) , ['1d'] = toreal(['1d'])*100/column_ifexists('1',0), ['2d'] = toreal(['2d'])*100/column_ifexists('2',0), ['3d'] = toreal(['3d'])*100/column_ifexists('3',0), ['4d'] = toreal(['4d'])*100/column_ifexists('4',0), ['5d'] = toreal(['5d'])*100/column_ifexists('5',0), ['6d'] = toreal(['6d'])*100/column_ifexists('6',0), ['7d'] = toreal(['7d'])*100/column_ifexists('7',0)"
                }
              },
              {
                "condition": "else result = '| project ['<1w'] = toreal(['<1w'])*100/column_ifexists('0',0) , ['+1w'] = toreal(['+1w'])*100/column_ifexists('1',0), ['+2w'] = toreal(['+2w'])*100/column_ifexists('2',0), ['+3w'] = toreal(['+3w'])*100/column_ifexists('3',0), ['+4w'] = toreal(['+4w'])*100/column_ifexists('4',0), ['+5w'] = toreal(['+5w'])*100/column_ifexists('5',0), ['+6w'] = toreal(['+6w'])*100/column_ifexists('6',0), ['+7w'] = toreal(['+7w'])*100/column_ifexists('7',0), ['+8w'] = toreal(['+8w'])*100/column_ifexists('8',0), ['+9w'] = toreal(['+9w'])*100/column_ifexists('9',0), ['+10w'] = toreal(['+10w'])*100/column_ifexists('10',0), ['+11w'] = toreal(['+11w'])*100/column_ifexists('11',0), ['+12w'] = toreal(['+12w'])*100/column_ifexists('12',0)'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| project ['<1w'] = toreal(['<1w'])*100/column_ifexists('0',0) , ['+1w'] = toreal(['+1w'])*100/column_ifexists('1',0), ['+2w'] = toreal(['+2w'])*100/column_ifexists('2',0), ['+3w'] = toreal(['+3w'])*100/column_ifexists('3',0), ['+4w'] = toreal(['+4w'])*100/column_ifexists('4',0), ['+5w'] = toreal(['+5w'])*100/column_ifexists('5',0), ['+6w'] = toreal(['+6w'])*100/column_ifexists('6',0), ['+7w'] = toreal(['+7w'])*100/column_ifexists('7',0), ['+8w'] = toreal(['+8w'])*100/column_ifexists('8',0), ['+9w'] = toreal(['+9w'])*100/column_ifexists('9',0), ['+10w'] = toreal(['+10w'])*100/column_ifexists('10',0), ['+11w'] = toreal(['+11w'])*100/column_ifexists('11',0), ['+12w'] = toreal(['+12w'])*100/column_ifexists('12',0)"
                }
              }
            ]
          },
          {
            "id": "0fc4fad0-68d6-49d2-a85e-8c8c3c956f61",
            "version": "KqlParameterItem/1.0",
            "name": "CellRateCalc",
            "type": 1,
            "isRequired": true,
            "value": "| project cohort, total, ['<1w'] = toreal(['<1w'])*100/total , ['+1w'] =  iff(isnull(['+1w']), real(null), toreal(['+1w'])*100/total), ['+2w'] = iff(isnull(['+2w']), real(null), toreal(['+2w'])*100/total), ['+3w'] = iff(isnull(['+3w']), real(null), toreal(['+3w'])*100/total), ['+4w'] = iff(isnull(['+4w']), real(null), toreal(['+4w'])*100/total)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| project cohort, total, ['<1w'] = toreal(['<1w'])*100/total , ['+1w'] =  iff(isnull(['+1w']), real(null), toreal(['+1w'])*100/total), ['+2w'] = iff(isnull(['+2w']), real(null), toreal(['+2w'])*100/total), ['+3w'] = iff(isnull(['+3w']), real(null), toreal(['+3w'])*100/total), ['+4w'] = iff(isnull(['+4w']), real(null), toreal(['+4w'])*100/total)"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| project cohort, total, ['<1d'] = toreal(['<1d'])*100/total , ['1d'] = iff(isnull(['1d']), real(null), toreal(['1d'])*100/total), ['2d'] = iff(isnull(['2d']), real(null), toreal(['2d'])*100/total), ['3d'] = iff(isnull(['3d']), real(null), toreal(['3d'])*100/total), ['4d'] = iff(isnull(['4d']), real(null), toreal(['4d'])*100/total), ['5d'] = iff(isnull(['5d']), real(null), toreal(['5d'])*100/total), ['6d'] = iff(isnull(['6d']), real(null), toreal(['6d'])*100/total), ['7d'] = iff(isnull(['1d']), real(null), toreal(['7d'])*100/total)"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| project cohort, total, ['<1w'] = toreal(['<1w'])*100/total , ['+1w'] = iff(isnull(['+1w']), real(null), toreal(['+1w'])*100/total), ['+2w'] = iff(isnull(['+2w']), real(null), toreal(['+2w'])*100/total), ['+3w'] = iff(isnull(['+3w']), real(null), toreal(['+3w'])*100/total), ['+4w'] = iff(isnull(['+4w']), real(null), toreal(['+4w'])*100/total), ['+5w'] = iff(isnull(['+5w']), real(null), toreal(['+5w'])*100/total), ['+6w'] = iff(isnull(['+6w']), real(null), toreal(['+6w'])*100/total), ['+7w'] = iff(isnull(['+7w']), real(null), toreal(['+7w'])*100/total), ['+8w'] = iff(isnull(['+8w']), real(null), toreal(['+8w'])*100/total), ['+9w'] = iff(isnull(['+9w']), real(null), toreal(['+9w'])*100/total), ['+10w'] = iff(isnull(['+10w']), real(null), toreal(['+10w'])*100/total), ['+11w'] = iff(isnull(['+11w']), real(null), toreal(['+11w'])*100/total), ['+12w'] = iff(isnull(['+12w']), real(null), toreal(['+12w'])*100/total)"
                }
              }
            ]
          },
          {
            "id": "c272a27c-8efc-4e20-a08d-17b14a079499",
            "version": "KqlParameterItem/1.0",
            "name": "overallText",
            "type": 1,
            "value": "(Weeks Over Last Month)",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "(Days Over Last Week)"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "(Weeks Over Last Month)"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "(Weeks Over Last 12 weeks)"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c44521d9-6986-40b8-a7b0-07e7ac0cdf76",
            "version": "KqlParameterItem/1.0",
            "name": "EnableFilter1",
            "type": 1,
            "isRequired": true,
            "isGlobal": true,
            "value": "0",
            "isHiddenWhenLocked": true
          },
          {
            "id": "13332c49-1456-45dc-a824-a6d0c4204bcd",
            "version": "KqlParameterItem/1.0",
            "name": "ishiddenFilter",
            "type": 1,
            "isRequired": true,
            "value": "1",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "EnableFilter1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "0"
                }
              }
            ]
          },
          {
            "id": "30e74cb1-c01c-446d-8288-2e733130e84d",
            "version": "KqlParameterItem/1.0",
            "name": "usageStandardDimension",
            "type": 1,
            "isRequired": true,
            "query": "let dimensionList = datatable(ColumnName:string, label:string)[\r\n\t'application_Version', 'Application version',\r\n\t'user_AuthenticatedId', 'Authenticated user Id',\r\n\t'client_Browser', 'Browser version', \r\n\t'client_City', 'City',\r\n    'client_CountryOrRegion', 'Country or region', \r\n\t'cloud_RoleInstance', 'Cloud role instance', \r\n\t'cloud_RoleName', 'Cloud role name',\r\n\t'client_Model', 'Device model', \r\n    'client_OS', 'Operating system',\r\n\t'client_Type', 'Device type',\r\n\t'isSynthetic', 'Is real user traffic',\r\n    'name', 'Name', \r\n\t'operation_Name', 'Operation name',\r\n\t'performanceBucket', 'Performance',\r\n    'resultCode', 'Result code',\r\n    'responseCode', 'Response code',\r\n\t'tostring(parseurl(url)[\"Host\"])', 'URL host', \r\n\t'tostring(parseurl(url)[\"Path\"])', 'URL path',\r\n\t'operation_SyntheticSource', 'Source of synthetic traffic',\r\n\t'client_StateOrProvince', 'State or province', \r\n\t'success', 'Successful request',\r\n    'type','Telemetry type'\r\n\t] | order by label asc;\r\nunion {WhoUsed}\r\n    | where timestamp > ago({TimeRange})\r\n    | getschema \r\n    | where ColumnType == \"string\"\r\n    | summarize count() by ColumnName\r\n    | join kind = inner dimensionList on ColumnName\r\n    | project ColumnName, label\r\n    | order by label asc\r\n    | project data = strcat(\"'\", replace(@\"'\",@\"/:/\", ColumnName),\"','\",replace(@\"'\",@\"/:/\", label),\"','Standard Properties'\")",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "c5a6f9d2-7928-486b-800a-8d2e99837e8b",
            "version": "KqlParameterItem/1.0",
            "name": "getCustomDimensions",
            "type": 1,
            "isRequired": true,
            "query": "union {WhoUsed}\r\n    | where timestamp > ago({TimeRange})\r\n            | project  cols = column_ifexists(\"customDimensions\",dynamic(null))\r\n            | extend usage_colkeys = tostring(bag_keys(cols))\r\n            | where usage_colkeys !has '*'\r\n            | evaluate bag_unpack(cols)\r\n            | getschema \r\n            | top-nested 100 of ColumnName by Count = count() desc\r\n       | extend ColumnName = replace(@\"\\\\\", @\"\\\\\\\\\",ColumnName) \r\n            | project value =strcat(\"customDimensions[\\\"\", replace(@'\"',@'\\\\\\\\\"', ColumnName), \"\\\"]\"), label =replace(@'\"',@'\\\\\"', ColumnName), group='Custom Properties'\r\n            | order by label asc\r\n            | project data = strcat(\"'\", replace(@\"\\'\",@\"/:/\", value),\"','\",replace(@\"\\'\",@\"/:/\", label),\"','\",group,\"'\")",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "cb5950f1-1456-493d-841e-d20a5bcd1965",
            "version": "KqlParameterItem/1.0",
            "name": "formattedCustomDimensions",
            "type": 1,
            "isRequired": true,
            "query": "print iff(isempty('{getCustomDimensions:escape}'), '[]',iff('{getCustomDimensions:escape}' startswith '[', '{getCustomDimensions:escape}', strcat('[','{getCustomDimensions:escape}',']')))\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "5cb59496-3f78-417f-a79f-e0b99af5203f",
            "version": "KqlParameterItem/1.0",
            "name": "commonFilterDimensions",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "['user_AccountId', 'Account Id',  'Standard Properties', 'operation_Id', 'Operation Id', 'Standard Properties', 'session_Id', 'Session Id',  'Standard Properties', 'user_Id', 'User Id', 'Standard Properties']"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - Top"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let customDimension = datatable(value:string, label:string, group: string) \r\n{formattedCustomDimensions}\r\n| extend value = replace(@\"/:/\", @\"'\", value), label = replace(@\"/:/\", @\"'\", label)\r\n| project value = replace(@\"\\\\\", @\"\\\\\\\\\",value), label, group; \r\nlet dimensionList = datatable(value:string, label:string, group: string) {usageStandardDimension}\r\n| extend value = replace(@\"/:/\", @\"'\", value), label = replace(@\"/:/\", @\"'\", label);\r\nlet commonFilterDimensionList = datatable(value:string, label:string, group: string) \r\n{commonFilterDimensions};\r\nunion dimensionList, customDimension, commonFilterDimensionList\r\n| project value, label, selected=false, group\r\n| order by group desc, label asc",
        "size": 0,
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "query - DimensionList"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "id": "17ca7baa-a6b9-4e6f-99d0-8466047f716d",
            "cellValue": "EnableFilter1",
            "linkTarget": "parameter",
            "linkLabel": "Add filters",
            "subTarget": "1",
            "preText": "",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "ishiddenFilter",
        "comparison": "isNotEqualTo",
        "value": "0"
      },
      "name": "links - AddFilter"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "id": "916cced5-7e69-421b-bf25-37b9da4f19bf",
            "cellValue": "EnableFilter1",
            "linkTarget": "parameter",
            "linkLabel": "Hide filters",
            "subTarget": "0",
            "preText": "",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "ishiddenFilter",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "links - hidden"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "23da485d-2560-4c04-8307-c5c08e499e61",
            "version": "KqlParameterItem/1.0",
            "name": "FilterDimension1",
            "label": "Dimension",
            "type": 2,
            "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"99681656-f99c-4ffa-8a49-2e0936bed369\",\"mergeType\":\"table\",\"leftTable\":\"query - DimensionList\"}],\"projectRename\":[{\"originalName\":\"[query - DimensionList].value\",\"mergedName\":\"value\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed369\"},{\"originalName\":\"[query - DimensionList].label\",\"mergedName\":\"label\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed369\"},{\"originalName\":\"[query - DimensionList].selected\",\"mergedName\":\"selected\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed369\"},{\"originalName\":\"[query - DimensionList].group\",\"mergedName\":\"group\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed369\"}]}",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 7
          },
          {
            "id": "30a9cd77-3c20-49bf-8470-1711cabdfafb",
            "version": "KqlParameterItem/1.0",
            "name": "FilterOperator1",
            "label": "Operator",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"==\", \"label\":\"==\", \"selected\":true },\r\n    { \"value\":\"!=\", \"label\":\"!=\" },\r\n    { \"value\":\"contains\", \"label\":\"contains\" },\r\n    { \"value\":\"!contains\", \"label\":\"not contains\" },\r\n    { \"value\":\"startswith\", \"label\":\"starts with\" },\r\n    { \"value\":\"!startswith\", \"label\":\"does not start with\" },\r\n    { \"value\":\"endswith\", \"label\":\"ends with\" },\r\n    { \"value\":\"!endswith\", \"label\":\"does not end with\" },\r\n    { \"value\":\"isempty\", \"label\":\"is empty\" },\r\n    { \"value\":\"isnotempty\", \"label\":\"is not empty\" },\r\n    { \"value\":\"in\", \"label\":\"is in\" },\r\n    { \"value\":\"!in\", \"label\":\"is not in\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ef15d795-cfec-4bcf-ba31-8e4344251143",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues1text",
            "label": "Value",
            "type": 1,
            "description": "Delimiter with comma for \"is in\" and \"is not in\" operators, like \"a, b\"",
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "26daf779-8964-4640-9b3f-16ace257559f",
            "version": "KqlParameterItem/1.0",
            "name": "isFilter1Completed",
            "type": 1,
            "isRequired": true,
            "value": "2",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (FilterDimension1 is empty ), result = '2'",
                "criteriaContext": {
                  "leftOperand": "FilterDimension1",
                  "operator": "is Empty",
                  "rightValType": "static",
                  "rightVal": "",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (FilterValues1text is not empty ), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterValues1text",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator1 == 'isempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator1 == 'isnotempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "else result = '2'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "a4fc0b77-fbf1-41f4-9c81-8a3b3398bd8f",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues1",
            "type": 1,
            "isRequired": true,
            "query": "print trim_end(\"]\",substring(split(trim_end(\" \", trim_start(\" \", replace(@' ,', @',', replace(@', ', @',', '{FilterValues1text:escape}')))),\",\"),1))",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "6aaefa03-6368-423e-a797-34df9c319772",
            "version": "KqlParameterItem/1.0",
            "name": "filter1Query",
            "type": 1,
            "isRequired": true,
            "value": "true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "isFilter1Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "isempty({FilterDimension1})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "isnotempty({FilterDimension1})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension1} in ({FilterValues1})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "!in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension1} !in ({FilterValues1})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension1} {FilterOperator1} \"{FilterValues1text:escape}\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "EnableFilter1",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "parameters - filterDimension1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ed55d4b0-7ca0-4a60-afeb-95a005c87e1a",
            "version": "KqlParameterItem/1.0",
            "name": "FilterDimension2",
            "label": "Dimension",
            "type": 2,
            "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"99681656-f99c-4ffa-8a49-2e0936bed36e\",\"mergeType\":\"table\",\"leftTable\":\"query - DimensionList\"}],\"projectRename\":[{\"originalName\":\"[query - DimensionList].value\",\"mergedName\":\"value\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed36e\"},{\"originalName\":\"[query - DimensionList].label\",\"mergedName\":\"label\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed36e\"},{\"originalName\":\"[query - DimensionList].selected\",\"mergedName\":\"selected\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed36e\"},{\"originalName\":\"[query - DimensionList].group\",\"mergedName\":\"group\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed36e\"}]}",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 7
          },
          {
            "id": "d5f89cf5-6ae3-4a27-8afc-80a8112b1391",
            "version": "KqlParameterItem/1.0",
            "name": "FilterOperator2",
            "label": "Operator",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"==\", \"label\":\"==\", \"selected\":true },\r\n    { \"value\":\"!=\", \"label\":\"!=\" },\r\n    { \"value\":\"contains\", \"label\":\"contains\" },\r\n    { \"value\":\"!contains\", \"label\":\"not contains\" },\r\n    { \"value\":\"startswith\", \"label\":\"starts with\" },\r\n    { \"value\":\"!startswith\", \"label\":\"does not start with\" },\r\n    { \"value\":\"endswith\", \"label\":\"ends with\" },\r\n    { \"value\":\"!endswith\", \"label\":\"does not end with\" },\r\n    { \"value\":\"isempty\", \"label\":\"is empty\" },\r\n    { \"value\":\"isnotempty\", \"label\":\"is not empty\" },\r\n    { \"value\":\"in\", \"label\":\"is in\" },\r\n    { \"value\":\"!in\", \"label\":\"is not in\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ef15d795-cfec-4bcf-ba31-8e4344251143",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues2text",
            "label": "Value",
            "type": 1,
            "value": "",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "06f2574c-b29c-4ab3-92c4-2e837289f6b5",
            "version": "KqlParameterItem/1.0",
            "name": "isFilter2Completed",
            "type": 1,
            "isRequired": true,
            "value": "2",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isFilter1Completed == '2'), result = '2'",
                "criteriaContext": {
                  "leftOperand": "isFilter1Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (FilterDimension2 is empty ), result = '2'",
                "criteriaContext": {
                  "leftOperand": "FilterDimension2",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (FilterValues2text is not empty ), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterValues2text",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator2 == 'isempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator2 == 'isnotempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "else result = '2'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "a4fc0b77-fbf1-41f4-9c81-8a3b3398bd8f",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues2",
            "type": 1,
            "isRequired": true,
            "query": "print trim_end(\"]\",substring(split(trim_end(\" \", trim_start(\" \", replace(@' ,', @',', replace(@', ', @',', '{FilterValues2text:escape}')))),\",\"),1))",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "6aaefa03-6368-423e-a797-34df9c319772",
            "version": "KqlParameterItem/1.0",
            "name": "filter2Query",
            "type": 1,
            "isRequired": true,
            "value": "true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "isFilter2Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "isempty({FilterDimension2})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "isnotempty({FilterDimension2})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension2} in ({FilterValues2})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "!in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension2} !in ({FilterValues2})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension2} {FilterOperator2} \"{FilterValues2text:escape}\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "EnableFilter1",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "isFilter1Completed",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "parameters - filterDimension2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ed55d4b0-7ca0-4a60-afeb-95a005c87e1a",
            "version": "KqlParameterItem/1.0",
            "name": "FilterDimension3",
            "label": "Dimension",
            "type": 2,
            "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"99681656-f99c-4ffa-8a49-2e0936bed374\",\"mergeType\":\"table\",\"leftTable\":\"query - DimensionList\"}],\"projectRename\":[{\"originalName\":\"[query - DimensionList].value\",\"mergedName\":\"value\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed374\"},{\"originalName\":\"[query - DimensionList].label\",\"mergedName\":\"label\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed374\"},{\"originalName\":\"[query - DimensionList].selected\",\"mergedName\":\"selected\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed374\"},{\"originalName\":\"[query - DimensionList].group\",\"mergedName\":\"group\",\"fromId\":\"99681656-f99c-4ffa-8a49-2e0936bed374\"}]}",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 7
          },
          {
            "id": "d5f89cf5-6ae3-4a27-8afc-80a8112b1391",
            "version": "KqlParameterItem/1.0",
            "name": "FilterOperator3",
            "label": "Operator",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"==\", \"label\":\"==\", \"selected\":true },\r\n    { \"value\":\"!=\", \"label\":\"!=\" },\r\n    { \"value\":\"contains\", \"label\":\"contains\" },\r\n    { \"value\":\"!contains\", \"label\":\"not contains\" },\r\n    { \"value\":\"startswith\", \"label\":\"starts with\" },\r\n    { \"value\":\"!startswith\", \"label\":\"does not start with\" },\r\n    { \"value\":\"endswith\", \"label\":\"ends with\" },\r\n    { \"value\":\"!endswith\", \"label\":\"does not end with\" },\r\n    { \"value\":\"isempty\", \"label\":\"is empty\" },\r\n    { \"value\":\"isnotempty\", \"label\":\"is not empty\" },\r\n    { \"value\":\"in\", \"label\":\"is in\" },\r\n    { \"value\":\"!in\", \"label\":\"is not in\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "ef15d795-cfec-4bcf-ba31-8e4344251143",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues3text",
            "label": "Value",
            "type": 1,
            "timeContext": {
              "durationMs": 86400000
            },
            "timeContextFromParameter": "TimeRange",
            "value": ""
          },
          {
            "id": "06f2574c-b29c-4ab3-92c4-2e837289f6b5",
            "version": "KqlParameterItem/1.0",
            "name": "isFilter3Completed",
            "type": 1,
            "isRequired": true,
            "value": "2",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isFilter1Completed == '2'), result = '2'",
                "criteriaContext": {
                  "leftOperand": "isFilter1Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (isFilter2Completed == '2'), result = '2'",
                "criteriaContext": {
                  "leftOperand": "isFilter2Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (FilterDimension3 is empty ), result = '2'",
                "criteriaContext": {
                  "leftOperand": "FilterDimension3",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              },
              {
                "condition": "if (FilterValues3text is not empty ), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterValues3text",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator3 == 'isempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "if (FilterOperator3 == 'isnotempty'), result = '1'",
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "1"
                }
              },
              {
                "condition": "else result = '2'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "2"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "a4fc0b77-fbf1-41f4-9c81-8a3b3398bd8f",
            "version": "KqlParameterItem/1.0",
            "name": "FilterValues3",
            "type": 1,
            "isRequired": true,
            "query": "print trim_end(\"]\",substring(split(trim_end(\" \", trim_start(\" \", replace(@' ,', @',', replace(@', ', @',', '{FilterValues3text:escape}')))),\",\"),1))",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "6aaefa03-6368-423e-a797-34df9c319772",
            "version": "KqlParameterItem/1.0",
            "name": "filter3Query",
            "type": 1,
            "isRequired": true,
            "value": "true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "isFilter3Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "2",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isempty",
                  "resultValType": "static",
                  "resultVal": "isempty({FilterDimension3})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "isnotempty",
                  "resultValType": "static",
                  "resultVal": "isnotempty({FilterDimension3})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension3} in ({FilterValues3})"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "FilterOperator3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "!in",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension3} !in ({FilterValues3})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "{FilterDimension3} {FilterOperator3} \"{FilterValues3text:escape}\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isFilter2Completed",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "isFilter2Completed",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "EnableFilter1",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "parameters - filterDimension3"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "7b2d237c-3dff-4bba-89c2-fac04b4324a9",
            "version": "KqlParameterItem/1.0",
            "name": "filters",
            "type": 1,
            "isRequired": true,
            "value": "| where true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "isFilter3Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "| where {filter1Query} and {filter2Query} and {filter3Query}"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "isFilter2Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "| where {filter1Query} and {filter2Query} "
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "isFilter1Completed",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "| where {filter1Query} "
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where true"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isFilter1Completed",
          "comparison": "isEqualTo",
          "value": "1"
        },
        {
          "parameterName": "EnableFilter1",
          "comparison": "isEqualTo",
          "value": "1"
        }
      ],
      "name": "parameters - Filters string"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b53b4768-982d-4a22-97f0-0a63a6f212bc",
            "version": "KqlParameterItem/1.0",
            "name": "ChartType",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"linechart\", \"label\":\"Line\" , \"selected\":true },\r\n    { \"value\":\"barchart\", \"label\":\"Bar\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c45359ba-b19e-4e2a-b004-f2701bf5f259",
            "version": "KqlParameterItem/1.0",
            "name": "DataType",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"Percentage\", \"label\":\"%\" , \"selected\":true },\r\n    { \"value\":\"Number\", \"label\":\"#\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - DataType"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2d16c240-a270-4b91-b620-b4d82ab16646",
            "version": "KqlParameterItem/1.0",
            "name": "MetadataType",
            "type": 1,
            "isRequired": true,
            "query": "let timeRange = '{TimeRange}';\r\nlet dataType = '{DataType}';\r\nlet metadataType = case(timeRange == '7d', case(dataType == 'Number', '7dn', '7dr'), case(timeRange == '28d', case(dataType == 'Number', '28dn', '28dr'), case(dataType == 'Number', '82dn', '82dr')));\r\nprint metadataType",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "85fff998-73a2-4364-958d-8574905ada88",
            "version": "KqlParameterItem/1.0",
            "name": "PivotColumn",
            "type": 1,
            "description": "Pivot a column based on DataType",
            "isRequired": true,
            "value": "| evaluate pivot(_bucket, sum(retention))",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (DataType == 'Number'), result = '| evaluate pivot(_bucket, sum(users))'",
                "criteriaContext": {
                  "leftOperand": "DataType",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Number",
                  "resultValType": "static",
                  "resultVal": "| evaluate pivot(_bucket, sum(users))"
                }
              },
              {
                "condition": "else result = '| evaluate pivot(_bucket, sum(retention))'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| evaluate pivot(_bucket, sum(retention))"
                }
              }
            ]
          },
          {
            "id": "287344df-b464-44ed-8c7b-bf8051ea1b60",
            "version": "KqlParameterItem/1.0",
            "name": "ColumnsList",
            "type": 1,
            "isRequired": true,
            "value": "| project  Cohort = cohort, Users = total, ['<1w'], ['+1w'], ['+2w'], ['+3w'], ['+4w']",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "| project Cohort = cohort, Users = total, ['<1d'], ['1d'], ['2d'], ['3d'], ['4d'], ['5d'], ['6d'], ['7d']"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "28d",
                  "resultValType": "static",
                  "resultVal": "| project  Cohort = cohort, Users = total, ['<1w'], ['+1w'], ['+2w'], ['+3w'], ['+4w']"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| project Cohort = cohort, Users = total, ['<1w'], ['+1w'], ['+2w'], ['+3w'], ['+4w'], ['+5w'], ['+6w'], ['+7w'], ['+8w'], ['+9w'], ['+10w'], ['+11w'], ['+12w']"
                }
              }
            ]
          },
          {
            "id": "eb01c0aa-c92e-495a-939a-e3cf25ad3fb0",
            "version": "KqlParameterItem/1.0",
            "name": "timeUnit",
            "type": 1,
            "isRequired": true,
            "value": "week",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "TimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "7d",
                  "resultValType": "static",
                  "resultVal": "day"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "week"
                }
              }
            ]
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - chartQueries"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let userEvents = dynamic([{UserEvents}]); let returnUserEvents= dynamic([{ReturnUserEvents}]); let numberOfDays = {TimeRange}; \r\nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \r\nlet xaxis = iff('{TimeRange}' == '7d', 'd', 'w'); \r\nlet startTime = iff('{TimeRange}' == '7d', startofday(now() - numberOfDays) ,startofweek(now() - numberOfDays)); \r\n// find all users for the cohort satisfying first event list from dropdown and filter\r\nlet _hll_users_FirstEvent = union withsource = sourceTable customEvents, pageViews\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n | where '*' in (userEvents) or name in (userEvents)\r\n{filters}\r\n| summarize _hll =hll(user_Id,2) by cohort=bin_at(timestamp, cohortGrain,startofweek(ago(numberOfDays)))\r\n| extend cohort_Num = toint((cohort -startTime)/cohortGrain);\r\n// find all users for the cohort satisfying returning event list from dropdown and filter\r\nlet _hll_Seconddata = union withsource = sourceTable {ReturnWhoUsed}\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n | extend name =replace(\"\\n\", \"\",name)\r\n | where '*' in (returnUserEvents) or name in (returnUserEvents)\r\n{filters}\r\n| summarize _hll_returned =hll(user_Id,2) by _cohort=bin_at(timestamp, cohortGrain, iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))))\r\n| extend cohort_Num = toint((_cohort -startTime)/cohortGrain);\r\n// expand the returned users table for each cohort and bucket\r\nlet _hll_data_returned_users = materialize(\r\n_hll_Seconddata\r\n| extend bucket = range(0 ,toint(bin(((_cohort - iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)),startofweek(ago(numberOfDays))))/cohortGrain ), 1)), 1)\r\n| mvexpand bucket\r\n| extend cohort = _cohort - (toint(bucket) *cohortGrain)\r\n);\r\n// calculate retention \r\nlet retentionData = _hll_users_FirstEvent\r\n| join kind=leftouter (\r\n_hll_data_returned_users\r\n) on cohort\r\n| evaluate dcount_intersect(_hll, _hll_returned)\r\n| project cohort, xaxis =toint(bucket), cohort_Num, total = s0,  users = s1, retention = ((1.0*s1)/(1.0*s0) )* 100\r\n| sort by cohort, xaxis asc;\r\nlet maxNumber = iff('{TimeRange}' == '7d', 7, iff('{TimeRange}' == '28d', 4, 12)); \r\nlet totals = retentionData \r\n| summarize users = sum(users) by xaxis;\r\nlet t = range a from 0 to maxNumber step 1;\r\nt | project a = toint(a), b = 0\r\n  | join kind = leftouter totals on $left.a == $right.xaxis\r\n  | project xaxis = a, users = iff(isempty(users), b, b + users)\r\n  | render {ChartType}\r\n\r\n",
        "size": 0,
        "aggregation": 3,
        "title": " Overall Retention {overallText}",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "DataType",
        "comparison": "isEqualTo",
        "value": "Number"
      },
      "name": "query - numberChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let userEvents = dynamic([{UserEvents}]); let returnUserEvents= dynamic([{ReturnUserEvents}]); let numberOfDays = {TimeRange}; \r\nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \r\nlet xaxis = iff('{TimeRange}' == '7d', 'd', 'w'); \r\nlet startTime = iff('{TimeRange}' == '7d', startofday(now() - numberOfDays) ,startofweek(now() - numberOfDays)); \r\n// find all users for the cohort satisfying first event list from dropdown and filter\r\nlet _hll_users_FirstEvent = union withsource = sourceTable customEvents, pageViews\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n | where '*' in (userEvents) or name in (userEvents)\r\n{filters}\r\n| summarize _hll =hll(user_Id,2) by cohort=bin_at(timestamp, cohortGrain,startofweek(ago(numberOfDays)))\r\n| extend cohort_Num = toint((cohort -startTime)/cohortGrain);\r\n// find all users for the cohort satisfying returning event list from dropdown and filter\r\nlet _hll_Seconddata = union withsource = sourceTable {ReturnWhoUsed}\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n | where '*' in (returnUserEvents) or name in (returnUserEvents)\r\n{filters}\r\n| summarize _hll_returned =hll(user_Id,2) by _cohort=bin_at(timestamp, cohortGrain, iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))))\r\n| extend cohort_Num = toint((_cohort -startTime)/cohortGrain);\r\n// expand the returned users table for each cohort and bucket\r\nlet _hll_data_returned_users = materialize(\r\n_hll_Seconddata\r\n| extend bucket = range(0 ,toint(bin(((_cohort - iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)),startofweek(ago(numberOfDays))))/cohortGrain ), 1)), 1)\r\n| mvexpand bucket\r\n| extend cohort = _cohort - (toint(bucket) *cohortGrain)\r\n);\r\n// calculate retention \r\nlet retentionData = _hll_users_FirstEvent\r\n| join kind=leftouter (\r\n_hll_data_returned_users\r\n) on cohort\r\n| evaluate dcount_intersect(_hll, _hll_returned)\r\n| project cohort, xaxis =toint(bucket), cohort_Num, total = s0,  users = s1, retention = ((1.0*s1)/(1.0*s0) )* 100\r\n| sort by cohort, xaxis asc;\r\nlet maxNumber = iff('{TimeRange}' == '7d', 7, iff('{TimeRange}' == '28d', 4, 12)); \r\nlet usersCol = retentionData \r\n| summarize users = sum(users) by xaxis;\r\nlet t = range a from 0 to maxNumber step 1\r\n  | project a = toint(a), b = 0;\r\nretentionData \r\n| project bucket = toint(iff('{TimeRange}' == '7d', 7, iff('{TimeRange}' == '28d', 4, 12)) - cohort_Num), total\r\n| summarize  total = avg(total) by bucket\r\n| sort by bucket desc\r\n| serialize total=row_cumsum(total)\r\n| join kind = rightouter t on $left.bucket == $right.a\r\n| project bucket=a,  total= iff(isempty(total), b, toint(total))\r\n| join kind= leftouter usersCol on $left.bucket == $right.xaxis\r\n| project xaxis=bucket, users = iff(total ==0, 0.0, round(toreal(users)*100/total, 0))\r\n| render {ChartType}",
        "size": 0,
        "aggregation": 3,
        "title": " Overall Retention {overallText}",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "chartSettings": {
          "ySettings": {
            "numberFormatSettings": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "DataType",
        "comparison": "isEqualTo",
        "value": "Percentage"
      },
      "name": "query - rateChart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let userEvents = dynamic([{UserEvents}]); let returnUserEvents= dynamic([{ReturnUserEvents}]); let months = dynamic(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\r\nlet numberOfDays = {TimeRange}; \r\nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \r\nlet xaxis = iff('{TimeRange}' == '7d', 'd', 'w'); \r\nlet startTime = iff('{TimeRange}' == '7d', startofday(now() - numberOfDays) ,startofweek(now() - numberOfDays)); \r\n// find all users for the cohort satisfying first event list from dropdown and filter\r\nlet _hll_users_FirstEvent = union withsource = sourceTable customEvents, pageViews\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n  | where '*' in (userEvents) or name in (userEvents)\r\n{filters}\r\n| summarize _hll =hll(user_Id,2) by cohort=bin_at(timestamp, cohortGrain,startofweek(ago(numberOfDays)))\r\n| extend cohort_Num = toint((cohort -startTime)/cohortGrain);\r\n// find all users for the cohort satisfying returning event list from dropdown and filter\r\nlet _hll_Seconddata = union withsource = sourceTable {ReturnWhoUsed}\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n | where '*' in (returnUserEvents) or name in (returnUserEvents)\r\n{filters}\r\n| summarize _hll_returned =hll(user_Id,2) by _cohort=bin_at(timestamp, cohortGrain, iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))))\r\n| extend cohort_Num = toint((_cohort -startTime)/cohortGrain);\r\n// expand the returned users table for each cohort and bucket\r\nlet _hll_data_returned_users = materialize(\r\n_hll_Seconddata\r\n| extend bucket = range(0 ,toint(bin(((_cohort - iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)),startofweek(ago(numberOfDays))))/cohortGrain ), 1)), 1)\r\n| mvexpand bucket\r\n| extend cohort = _cohort - (toint(bucket) *cohortGrain)\r\n);\r\nlet totalUniqueUsers = _hll_users_FirstEvent\r\n| summarize hllMerged = hll_merge(_hll)\r\n| project total = dcount_hll(hllMerged), connection =0;\r\n// calculate retention \r\nlet retentionData = _hll_users_FirstEvent\r\n| join kind=leftouter (\r\n_hll_data_returned_users\r\n) on cohort\r\n| evaluate dcount_intersect(_hll, _hll_returned)\r\n| project cohort,cohort_Num, _bucket = toint(bucket), total = s0, users = s1, retention = ((1.0*s1)/(1.0*s0) )* 100\r\n| sort by cohort asc;\r\nlet gridData=retentionData\r\n{PivotColumn}\r\n{ExtendColumn};\r\nlet overallRow=gridData\r\n{TotalCalc}\r\n| extend connection=0, cohort = strcat('Overall (', months[getmonth(startTime) -1], ' ', format_datetime(startTime,'dd'), ' - now)')\r\n| join totalUniqueUsers on connection;\r\nlet rows = gridData\r\n{GridCellsCalc}\r\n| order by cohort asc\r\n| extend cohort = iff('{TimeRange}' == '7d', strcat(months[getmonth(cohort) -1], ' ', format_datetime(cohort,'dd')), strcat(months[getmonth(cohort) -1], ' ', format_datetime(cohort,'dd'), ' - ' , iff(cohort+cohortGrain-1d > now(), 'now', strcat(months[getmonth(cohort+cohortGrain-1d) -1], ' ', format_datetime(cohort+cohortGrain-1d,'dd'))))), connection = row_number();\r\nunion overallRow, rows\r\n| order by connection asc\r\n{ColumnsList}\r\n",
        "size": 3,
        "title": "User returned after # of {timeUnit} (last column is based on partial {timeUnit} data)",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Cohort",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Overall",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Users",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column."
              }
            },
            {
              "columnMatch": "<1w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the same week."
              }
            },
            {
              "columnMatch": "+1w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 1 week later."
              }
            },
            {
              "columnMatch": "+2w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 2 weeks later."
              }
            },
            {
              "columnMatch": "+3w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 3 weeks later."
              }
            },
            {
              "columnMatch": "+4w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 4 weeks later."
              }
            },
            {
              "columnMatch": "+5w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 5 weeks later."
              }
            },
            {
              "columnMatch": "+6w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 6 weeks later."
              }
            },
            {
              "columnMatch": "+7w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 7 weeks later."
              }
            },
            {
              "columnMatch": "+8w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 8 weeks later."
              }
            },
            {
              "columnMatch": "+9w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use ”Returned User Events“ on the 3 weeks later.{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 9 weeks later."
              }
            },
            {
              "columnMatch": "+10w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 10 weeks later."
              }
            },
            {
              "columnMatch": "+11w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 11 weeks later."
              }
            },
            {
              "columnMatch": "+12w",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 12 weeks later."
              }
            },
            {
              "columnMatch": "<1d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the same day."
              }
            },
            {
              "columnMatch": "1d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 1 day later."
              }
            },
            {
              "columnMatch": "2d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 2 days later."
              }
            },
            {
              "columnMatch": "3d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 3 days later."
              }
            },
            {
              "columnMatch": "4d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 4 days later."
              }
            },
            {
              "columnMatch": "5d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 5 days later."
              }
            },
            {
              "columnMatch": "6d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 6 days later."
              }
            },
            {
              "columnMatch": "7d",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "thresholdValue": null,
                    "representation": null,
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "lightBlue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 7 days later."
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Cohort",
              "label": "Used on"
            },
            {
              "columnId": "Users"
            },
            {
              "columnId": "<1w"
            },
            {
              "columnId": "+1w"
            },
            {
              "columnId": "+2w"
            },
            {
              "columnId": "+3w"
            },
            {
              "columnId": "+4w"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "DataType",
        "comparison": "isEqualTo",
        "value": "Number"
      },
      "name": "query - numberGrid"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let userEvents = dynamic([{UserEvents}]); let returnUserEvents= dynamic([{ReturnUserEvents}]); let months = dynamic(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\nlet numberOfDays = {TimeRange}; \nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \nlet xaxis = iff('{TimeRange}' == '7d', 'd', 'w'); \nlet startTime = iff('{TimeRange}' == '7d', startofday(now() - numberOfDays) ,startofweek(now() - numberOfDays)); \nlet endNumber = iff('{TimeRange}' == '7d', 7, iff('{TimeRange}' == '28d', 4, 12)); \n// find all users for the cohort satisfying first event list from dropdown and filter\nlet _hll_users_FirstEvent = union withsource = sourceTable customEvents, pageViews\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \n| extend name =replace(\"\\n\", \"\",name)\n  | where '*' in (userEvents) or name in (userEvents)\n{filters}\n| summarize _hll =hll(user_Id,2) by cohort=bin_at(timestamp, cohortGrain,startofweek(ago(numberOfDays)))\n| extend cohort_Num = toint((cohort -startTime)/cohortGrain);\n// find all users for the cohort satisfying returning event list from dropdown and filter\nlet _hll_Seconddata = union withsource = sourceTable {ReturnWhoUsed}\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \n| extend name =replace(\"\\n\", \"\",name)\n  | where '*' in (returnUserEvents) or name in (returnUserEvents) \n{filters}\n| summarize _hll_returned =hll(user_Id,2) by _cohort=bin_at(timestamp, cohortGrain, iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))))\n| extend cohort_Num = toint((_cohort -startTime)/cohortGrain);\n// expand the returned users table for each cohort and bucket\nlet _hll_data_returned_users = materialize(\n_hll_Seconddata\n| extend bucket = range(0 ,toint(bin(((_cohort - iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)),startofweek(ago(numberOfDays))))/cohortGrain ), 1)), 1)\n| mvexpand bucket\n| extend cohort = _cohort - (toint(bucket) *cohortGrain)\n);\nlet totalUniqueUsers = _hll_users_FirstEvent\n| summarize hllMerged = hll_merge(_hll)\n| project total = dcount_hll(hllMerged), connection =0;\n// calculate retention \nlet retentionData = _hll_users_FirstEvent\n| join kind=leftouter (\n_hll_data_returned_users\n) on cohort\n| evaluate dcount_intersect(_hll, _hll_returned)\n| project cohort,cohort_Num, _bucket = toint(bucket), total = s0, users = s1, retention = ((1.0*s1)/(1.0*s0) )* 100\n| sort by cohort asc;\nlet gridData=retentionData\n| evaluate pivot(_bucket, sum(users))\n{ExtendColumn};\nlet base = (range cohort_Num from 0 to endNumber step 1\n| extend cohort_Num = toint(cohort_Num))\n| join kind=leftouter (gridData) on cohort_Num\n| project cohort_Num = endNumber - cohort_Num, total= iff(isempty(total), 0, total)\n| summarize total = avg(total) by cohort_Num\n| sort by cohort_Num desc\n| serialize cs=row_cumsum(total)\n| project cohort_Num, total = cs\n| evaluate pivot(cohort_Num, sum(total))\n| extend connection=0;\nlet overallRow = gridData\n{TotalCalc}\n| extend connection=0\n| join base on connection\n{TotalRateCalc}\n| extend connection=0, cohort = strcat('Overall (', months[getmonth(startTime) -1], ' ', format_datetime(startTime,'dd'), ' - now)')\n| join totalUniqueUsers on connection;\nlet rows =gridData\n{GridCellsCalc}\n{CellRateCalc}\n| order by cohort asc\n| extend cohort = iff('{TimeRange}' == '7d', strcat(months[getmonth(cohort) -1], ' ', format_datetime(cohort,'dd')), strcat(months[getmonth(cohort) -1], ' ', format_datetime(cohort,'dd'), ' - ' , iff(cohort+cohortGrain-1d > now(), 'now', strcat(months[getmonth(cohort+cohortGrain-1d) -1], ' ', format_datetime(cohort+cohortGrain-1d,'dd'))))), connection = row_number();\nunion overallRow, rows\n| order by connection asc\n{ColumnsList}",
        "size": 3,
        "title": "User returned after # of {timeUnit} (last column is based on partial {timeUnit} data)",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Cohort",
              "formatter": 1,
              "numberFormat": {
                "unit": 27,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "Users",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 1
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column."
              }
            },
            {
              "columnMatch": "<1w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the same week."
              }
            },
            {
              "columnMatch": "+1w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 1 week later."
              }
            },
            {
              "columnMatch": "+2w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 2 weeks later."
              }
            },
            {
              "columnMatch": "+3w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 3 weeks later."
              }
            },
            {
              "columnMatch": "+4w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 4 weeks later."
              }
            },
            {
              "columnMatch": "+5w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 5 weeks later."
              }
            },
            {
              "columnMatch": "+6w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 6 weeks later."
              }
            },
            {
              "columnMatch": "+7w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 7 weeks later."
              }
            },
            {
              "columnMatch": "+8w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 8 weeks later."
              }
            },
            {
              "columnMatch": "+9w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 9 weeks later."
              }
            },
            {
              "columnMatch": "+10w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 10 weeks later."
              }
            },
            {
              "columnMatch": "+11w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 11 weeks later."
              }
            },
            {
              "columnMatch": "+12w",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” during the date in “Cohort” column and then retruned to use “Returned User Events” on the 12 weeks later."
              }
            },
            {
              "columnMatch": "<1d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the same day."
              }
            },
            {
              "columnMatch": "1d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 1 day later."
              }
            },
            {
              "columnMatch": "2d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 2 days later."
              }
            },
            {
              "columnMatch": "3d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 3 days later."
              }
            },
            {
              "columnMatch": "4d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 4 days later."
              }
            },
            {
              "columnMatch": "5d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 5 days later."
              }
            },
            {
              "columnMatch": "6d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 6 days later."
              }
            },
            {
              "columnMatch": "7d",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 0
                }
              },
              "tooltipFormat": {
                "tooltip": "{0} users used “User Events” on the date in “Cohort” column and then retruned to use “Returned User Events” on the 7 days later."
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Cohort",
              "label": "Used on"
            },
            {
              "columnId": "Users"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "DataType",
        "comparison": "isEqualTo",
        "value": "Percentage"
      },
      "name": "query - rateGrid"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let userEvents = dynamic([{UserEvents}]); let numberOfDays = {TimeRange}; \r\nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \r\nlet initializedEvents = union withsource = sourceTable customEvents, pageViews\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n  | where '*' in (userEvents) or name in (userEvents) \r\n{filters}\r\n| summarize Users = dcount(user_Id) by name \r\n| extend eventType = \"FirstEvent\"\r\n| sort by Users desc \r\n| take 5;\r\nlet top1 = initializedEvents\r\n| take 1\r\n| project eventType, topValue = Users;\r\ninitializedEvents \r\n| join kind= leftouter top1 on eventType\r\n| project Name = name, Users, Rate = Users*100/topValue\r\n| sort by Users desc\r\n",
              "size": 1,
              "title": "Initiating Event (Top 5)",
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Users",
                    "formatter": 0,
                    "formatOptions": {},
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Rate",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ]
              }
            },
            "name": "query - InitGrid"
          }
        ]
      },
      "customWidth": "50",
      "name": "group - InitCard",
      "styleSettings": {
        "margin": "5px",
        "padding": "5px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let returnUserEvents= dynamic([{ReturnUserEvents}]); let numberOfDays = {TimeRange}; \r\nlet cohortGrain = iff('{TimeRange}' == '7d', 1d, 7d); \r\nlet returnedEvents =  union withsource = sourceTable {ReturnWhoUsed}\r\n| where timestamp between(iff('{TimeRange}' == '7d', startofday(ago(numberOfDays)), startofweek(ago(numberOfDays))) .. now()) \r\n| extend name =replace(\"\\n\", \"\",name)\r\n  | where '*' in (returnUserEvents) or name in (returnUserEvents)\r\n{filters}\r\n| summarize Users=dcount(user_Id) by name \r\n| sort by Users desc \r\n| take 5\r\n| extend eventType = \"ReturnEvent\"; \r\nlet top1 = returnedEvents\r\n| take 1\r\n| project eventType, topValue = Users;\r\nreturnedEvents \r\n| join kind= leftouter top1 on eventType\r\n| project Name = name, Users, Rate = Users*100/topValue\r\n| sort by Users desc\r\n",
              "size": 1,
              "title": "Returned Event (Top 5)",
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Users",
                    "formatter": 0,
                    "formatOptions": {},
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Rate",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ]
              }
            },
            "name": "query - returnGrid"
          }
        ]
      },
      "customWidth": "50",
      "name": "group - returnCard",
      "styleSettings": {
        "margin": "5px",
        "padding": "5px",
        "showBorder": true
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}